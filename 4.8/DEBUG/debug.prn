KC-Debugger     							    SLR180 1.31 Page   1
DEBUG   Z80

    2                   ;----------------------------------------------------------------
    3                   ;		KC-Debugger 2.3					I
    4                   ;		---------------					I
    5                   ;								I
    6                   ; Entwicklung aus dem Reassembler/Testmonitor des Moduls M027	I
    7                   ; "Development" durch Michael Pfeiffer & Henrik Haftmann (???)	I
    8                   ;								I
    9                   ; Weiterentwicklung: Mario Leubner				I
   10                   ; 26.07.2013:	erste Zusammenfassung der Quelltexte		I
   11                   ; 27.07.2013:	REAS von EDAS- in CP/M-Format gewandelt		I
   12                   ; 28.07.2013:	TEMO von EDAS- in CP/M-Format gewandelt		I
   13                   ; Kommentare und Marken von CD-ROM (Frank Klemm) uebernommen	I
   14                   ; 13.11.2013:	JEDIT Aenderungen von Frank Ludwig uebernommen	I
   15                   ; 31.12.2013:	Korrekturen in JEDIT und CALC von Frank Ludwig	I
   16                   ;		uebernommen.					I
   17                   ; 04.01.2014:	Optionen REL und NEW wieder entfernt		I
   18                   ; 21.03.2017:	BSAVE integriert				I
   19                   ; 16.02.2021:	umgestellt von CAOS47.INC auf CAOS48.INC	I
   20                   ; 06.02.2023:	QMR Fehlerkorrektur und Code-Optimierung	I
   21                   ;								I
   22                   ;		(c) ML-Soft 26.07.2013 - 06.02.2023		I
   23                   ;----------------------------------------------------------------
   24                   	.Z80
   25                   
   26                   	INCLUDE	CAOS48.INC	; CAOS-Vereinbarungen
    1                   ;-----------------------------------------------;
    2                   ;	CAOS-Vereinbarungen (bis CAOS 4.8)	;
    3                   ;	---------------------------------	;
    4                   ;						;
    5                   ; als INCLUDE fuer ASM-Quelltexte		;
    6                   ;						;
    7                   ; CAOS48.INC	ML-Soft 08.01.1994-30.05.2021	;
    8                   ;-----------------------------------------------;
    9                   
   10                   ; Portadressen im Grundgeraet:
   11                   
   12         0084      PORT1	EQU	84H	; Ausgabe-Port D08A	Merkzelle ist (IX+1)
   13                   			;	Bit 0 - Anzeige Bild 0 oder 1
   14                   			;	Bit 1 - Zugriff auf 0=Pixel- oder 1=Farbebene
   15                   			;	Bit 2 - Zugriff auf Bild 0 oder 1
   16                   			;	Bit 3 - 0=hohe Farbaufloesung oder 1=niedrige
   17                   			;	Bit 4-7 Auswahl der RAM8-Ebene (256K)
   18         0086      PORT2	EQU	86H	; Ausgabe-Port D09A	Merkzelle ist (IX+4)
   19                   			;	Bit 0 - RAM4 ein/aus
   20                   			;	Bit 1 - RAM4 Schreibschutz (1=aus)
   21                   			;	Bit 2-4 Bankauswahl fuer 2MB RAM On Board
   22                   			;	Bit 5-6 Auswahl der USER-ROM-Ebene
   23                   			;	Bit 7 - CAOS-ROM C ein/aus
   24         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
   25                   			;	Bit 0 - CAOS ROM-E ein/aus
   26                   			;	Bit 1 - RAM0 ein/aus
   27                   			;	Bit 2 - IRM ein/aus
   28                   			;	Bit 3 - Schreibschutz RAM0
   29                   			;	Bit 4 - K_OUT
   30                   			;	Bit 5 - System-LED
   31                   			;	Bit 6 - Motorschaltspannung
   32                   			;	Bit 7 - USER-ROM ein/aus
   33         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
KC-Debugger     							    SLR180 1.31 Page   2
CAOS48  INC

   34                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
   35                   			;	Bit 1 \
   36                   			;	Bit 2 - Lautstaerke Tonausgabe
   37                   			;	Bit 3 - 4 Bit (Low-aktiv)
   38                   			;	Bit 4 /
   39                   			;	Bit 5 - RAM8 ein/aus
   40                   			;	Bit 6 - Schreibschutz RAM8
   41                   			;	Bit 7 - Blinken ein/aus
   42         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
   43         008B      PIOBS	EQU	8BH	; System-PIO Steuerbyte Port B
   44         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
   45         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Kassettenausgabe)
   46         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
   47         008F      CTC3	EQU	8FH	; CTC Kanal 3 (Tastatur)
   48                   
   49                   ; Portadressen des Koppel-RAM (D004):
   50                   
   51         00F1      ERRTX	EQU	000F1H	; Fehlertext			(ab DEP 2.0)
   52         80F1      STBYT2	EQU	080F1H	; 2. Steuerbyte:		(ab DEP 2.0)
   53                   			;	Bit 0 - Anforderung
   54                   			;	Bit 1 - Laufwerkswechsel
   55                   			;	Bit 2 - Userwechsel
   56                   			;	Bit 3..6 reserviert
   57                   			;	Bit 7 - Fehlerrueckmeldung
   58         81F1      LWANF	EQU	081F1H	; Laufwerk ('A', 'B', ... 'P')
   59         82F1      UANF	EQU	082F1H	; User-Bereich (00H ... 1FH)	(ab DEP 3.5 bis 31)
   60         83F1      DEPVER	EQU	083F1H	; DEP-Version BCD
   61         84F1      DATE	EQU	084F1H	; Datum BCD			(ab DEP 3.0)
   62                   			;	Jahr (00..99)
   63                   			;	Monat (1..12)
   64                   			;	Tag (1..31)
   65         87F1      TIME	EQU	087F1H	; Uhrzeit BCD			(ab DEP 3.0)
   66                   			;	Stunde (0..23)
   67                   			;	Minute (0..59)
   68                   			;	Sekunde (0..59)
   69                   
   70         80F2      FDATA	EQU	080F2H	; Daten- bzw. Sektorpuffer 128 Byte lang
   71         80F3      STBYT1	EQU	080F3H	; 1. Steuerbyte:
   72                   			;	Bit 0 - Anforderung
   73                   			;	Bit 1 - 1=schreiben/0=lesen
   74                   			;	Bit 3 - oeffnen
   75                   			;	Bit 6 - schliessen
   76                   			;	Bit 7 - Fehlerrueckmeldung
   77                   			;	Bit	5 4 2	Funktionsauswahl:
   78                   			;		0 0 0	Sektor lesen/schreiben
   79                   			;		0 0 1	DIR-Anforderung
   80                   			;		0 1 0	ERA
   81                   			;		0 1 1	STAT
   82                   			;		1 0 0	REN
   83                   			;		1 0 1	SETRO
   84                   			;		1 1 0	SETWR
   85                   			;		1 1 1	BASIC-Byte lesen/schreiben
   86         81F3      FCODE	EQU	081F3H	; Fehlercode
   87         82F3      DIRBUF	EQU	082F3H	; Puffer fuer Dateiname oder Directory
   88         8EF3      BASBYT	EQU	08EF3H	; Datenbyte fuer BASIC-Byte-Schnittstelle
   89         B3F3      UROK	EQU	0B3F3H	; Betriebsart	0 = Anfangswert
   90                   			;		1 = CP/M-System lauft
   91                   			;		2 = Not ready
KC-Debugger     							    SLR180 1.31 Page   3
CAOS48  INC

   92                   			;		3 = Can't read
   93                   			;		4 = No system
   94                   			;		5 = CAOS-Betriebsart / DEP laeuft
   95                   
   96                   ; RAM0-Arbeitszellen:
   97                   
   98         01F0      SIX	EQU	1F0H	; CAOS-Belegung IX-Register
   99                   
  100                   ; Belegung der IX - Zellen:
  101                   
  102                   ; IX+0	Zeitkonstante fuer Kassettenroutinen
  103                   ; IX+1	Merkzelle fuer Ausgabeport 84H
  104                   ; IX+2	gelesene Blocknummer (Kassette)
  105                   ; IX+3	erwartete Blocknummer (Kassette)
  106                   ; IX+4	Merkzelle fuer Ausgabeport 86H
  107                   ; IX+5	Ein- Ausgabepufferadresse (low)
  108                   ; IX+6	Ein- Ausgabepufferadresse (high)
  109                   ; IX+7	Kennbyte fuer LOAD/VERIFY
  110                   ;	 BIT 0: =1 ->LOAD  =0 ->VERIFY
  111                   ;	 BIT 1: =1 kein Selbstart bei LOAD (in BASIC Kennung fuer 1. Block)
  112                   ;	 BIT 2-4 : Anzahl Argumente (bei SAVE)/ARGN>3 (Startoffset)
  113                   ;	 BIT 5-7 : BASIC: fuer CLOAD/CSAVE 
  114                   ; IX+8	Kennbyte Tastatur
  115                   ;	 BIT 0: gueltiges Byte (ASCII) in IX+13
  116                   ;	 BIT 1: Tonausgabe laeuft
  117                   ;	 BIT 2-4: aktuelles Speichergeraet
  118                   ;		  0=Kassette, 1=Diskette, 2=USB (M052), 3=Netzwerk (M052)
  119                   ;		  4=Headersave, 5..7 frei
  120                   ;	 BIT 5: Tastenclick ein/aus
  121                   ;	 BIT 6: Code kommt von F-Taste
  122                   ;	 BIT 7: 0=Shiftlock
  123                   ; IX+9	Prologbyte (normal 7FH)
  124                   ; IX+10	Autorepeatzaehler (Tastatur)
  125                   ; IX+11	Merkzelle fuer Akku (bei BWS on/off mit Stackverlagerung)
  126                   ;	und Pruefsummenberechnung fuer MB-Eingabe
  127                   ; IX+12	7-Bit-Scancode von Tastatur
  128                   ; IX+13	ASCII-Code von Tastatur
  129                   ; IX+14	Tastaturcodetabelle low
  130                   ; IX+15	Tastaturcodetabelle high
  131                   
  132                   ; IRM-Arbeitszellen:
  133                   
  134         A800      V24PL	EQU	0A800H	; Steckplatz V.24-Modul				  1 Byte
  135                   ;INTV1		0A801H	; Initialisierungsdaten V.24-Druckausgabe	  8 Byte
  136                   ;INTV2		0A809H	; Initialisierungsdaten V.24-duplex		  9 Byte
  137                   	; bis	0A811H
  138                   ;		0A820H	; urspruenglich geplant fuer Arbeitszellen Maustreiber
  139                   	; bis	0A87FH	; frei					       (96 Byte)
  140                   
  141         A880      INITU	EQU	0A880h	; Kommandoablage von INITIAL.UUU als Tastencode
  142                   	; bis	0A8FFh	; und Assemblierpuffer von EDAS/ASM
  143                   
  144         A900      DEVTAB	EQU	0A900H	; Tabelle der 8 Geraetetreiber: 8*32=256 Byte gross
  145         AA00      SULEN	EQU	0AA00H	; letzte benutzte UP-Nr. in SUTAB
  146         AA01      SUT_IRM	EQU	0AA01H	; SUTAB per Default im IRM
  147                   	; bis	0AA94h	fuer UP 00 bis 49h				148 Byte
  148                   ;		0AA95H	reserviert fuer kuenftige CAOS-Erweiterungen
  149                   	; bis	0AABEH	z.B. CAOS-UP's 4Ah bis 5Eh			 42 Byte
KC-Debugger     							    SLR180 1.31 Page   4
CAOS48  INC

  150                   ; 1 Byte frei
  151         AAC0      JOYIRM	EQU	0AAC0H	; Joystick-Tabelle (noch nicht endgueltig)
  152                   	; bis	0AACBh							 12 Byte
  153                   
  154         AACC      JWORK	EQU	0AACCH	; Arbeitszellen vom Joystick-Editor
  155                   	; bis	0AADCH							 17 Byte
  156                   
  157         AADD      WIN2	EQU	0AADDH	; Schattenspeicher fuer WINNR bis WEND (Bildwechsel)
  158                   	; bis	0AAE7	; 30.09.2020 neu definiert			 11 Byte
  159                   
  160         AAE8      WTEMO	EQU	0AAE8H	; TEMO-Arbeitszellen zur Ablage von 2 Fenster-Daten
  161                   	; bis	0AAFFH							 24 Byte
  162                   
  163                   ;		0AB00H	; reserviert fuer anwenderspez. Systemerweiterungen
  164                   	; bis	0ACFFH	; z.B. Treiber UOUT1/2 oder UIN1/2		512 Byte
  165                   
  166         AD00      VRAM1	EQU	0AD00H	; ASCII-RAM Bild 1
  167                   	; bis	0B1FFH
  168         B200      VRAM0	EQU	0B200H	; ASCII-RAM Bild 0
  169                   	; bis	0B6FFh
  170         B700      CASS	EQU	0B700H	; 128 Byte Kassettenpuffer (bis	0B77FH)
  171         B780      ARGC	EQU	0B780H	; UP-Nummer fuer PV2 und PV6
  172         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  173         B782      ARG1	EQU	0B782H	; Argument 1
  174         B784      ARG2	EQU	0B784H	;    "	   2
  175         B786      ARG3	EQU	0B786H	;    "	   3
  176         B788      ARG4	EQU	0B788H	;    "	   4
  177         B78A      ARG5	EQU	0B78AH	;    "	   5
  178         B78C      ARG6	EQU	0B78CH	;    "	   6
  179         B78E      ARG7	EQU	0B78EH	;    "	   7
  180         B790      ARG8	EQU	0B790H	;    "	   8
  181         B792      ARG9	EQU	0B792H	;    "	   9
  182         B794      ARG10	EQU	0B794H	;    "	  10
  183         B796      NUMNX	EQU	0B796H	; Anzahl Zeichen einer Hex-Zahl
  184         B797      NUMVX	EQU	0B797H	; Wert HEX-Zahl
  185         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  186         B79B      WINNR	EQU	0B79BH	; Nr. des aktuellen Bildschirmfensters
  187         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  188         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
  189         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  190         B7A2      STBT	EQU	0B7A2H	; Bildschirm-Steuerbyte
  191                   		; Bit 0 = 1 Schreiben Pixel-IRM AUS
  192                   		; Bit 1 = 1 Schreiben Color-IRM AUS
  193                   		; Bit 2 = 1 Inversdarstellung EIN (ab CAOS 3.4)
  194                   		; Bit 3 = 1 Steuercode als Zeichen darstellen
  195                   		; Bit 4 = 1 ESC aktiv (ab CAOS 4.1)
  196                   		; Bit 5 = 1 IBM-Zeichensatz EIN (ab CAOS 4.3)
  197                   		; Bit 6 = 1 HRG-Modus EIN (ab CAOS 4.3)
  198                   		; Bit 7 = 1 2-Monitor-Modus aktiv (ab CAOS 4.8)
  199         B7A3      COLOR	EQU	0B7A3H	; Farbe
  200         B7A4      WEND	EQU	0B7A4H	; Reaktionsprogramm auf Bildschirmende
  201         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  202         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  203         B7AA      CCTL2	EQU	0B7AAH	;	"	 2 A0H...DFH
  204         B7AC      CCTL3	EQU	0B7ACH	;	"	 3 80H...9FH und E0H...FFH
  205         B7AE      SYSP	EQU	0B7AEH	; System Stackpointer
  206         B7B0      SUTAB	EQU	0B7B0H	; Adresse der Unterprogrammtabelle
  207         B7B2      CTAB	EQU	0B7B2H	; CRT-Steuerprogramm-Tabelle
KC-Debugger     							    SLR180 1.31 Page   5
CAOS48  INC

  208         B7B4      NCAOS	EQU	0B7B4H	; Sprung in neues System ueber IRM
  209         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  210         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  211         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Drucker)
  212         B7C0      UIN1	EQU	0B7C0H	; Sprung zu USER-Eingabekanal 2
  213         B7C3      UOUT2	EQU	0B7C3H	; Sprung zu USER-Ausgabekanal 3 V.24-duplex
  214         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  215         B7C9      IOERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  216         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  217         B7CD      ZOTAB	EQU	0B7CDH	; Zwischenspeicher fuer OUTAB
  218         B7CF      ZWEND	EQU	0B7CFH	; Zwischenspeicher fuer WEND
  219         B7D1      FTAST	EQU	0B7D1H	; F-Tastenpointer
  220         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  221         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  222         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  223                   		; Bit 0=1	XOR-Funktion
  224                   		; Bit 1=1	Punkt loeschen
  225                   		; Bit 2=1	Farbebene nicht veraendern
  226                   		; Bit 3-7	Vordergrundfarbe + Blinken
  227         B7D7      MIXIT	EQU	0B7D7H	; IX-Merker (H-Teil von IX und I-Tabelle)
  228         B7D8      VORTN	EQU	0B7D8H	; Vortonlaenge fuer byteweise Kassettenausgabe
  229         B7DA      DTPTR	EQU	0B7DAH	; CASS-Pointer (Zeiger in Kassettenpuffer)
  230         B7DB      CTCMD	EQU	0B7DBH	; CTC2-Modus
  231         B7DC      BLINK	EQU	0B7DCH	; Blinkfrequenz
  232         B7DD      L3TAB	EQU	0B7DDH	; Adresse der ESC-Steuerfunktionstabelle
  233         B7DF      L3SIZ	EQU	0B7DFH	; Anzahl der ESC-Steuerfunktionenn
  234         B7E0      COUNT	EQU	0B7E0H	; Zeiteinheiten fuer 1. Autorepeat (Tastatur)
  235         B7E1      HCPZ	EQU	0B7E1H	; Steuerbyte Druckerausgabe
  236                   		; Bit 0=0	Protokollfunktion
  237                   		; Bit 0=1	Hardcopyfunktion
  238                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  239                   		; Bit 2=0/1	SIO-Kanal A oder B
  240                   		; Bit 3		-
  241                   		; Bit 4..7	Druckertyp (0 bis F)
  242                   		; Bit 7=0	Matrixdrucker
  243                   		; Bit 7=1	Schreibmaschine
  244         B7E2      INTV1	EQU	0B7E2H	; Adresse V.24-Init-Tabelle fuer Druckerausgabe
  245         B7E4      INTV1L	EQU	0B7E4H	; Laenge V.24-Initialisierungtabelle
  246         B7E5      INTV2	EQU	0B7E5H	; Adresse V.24-Init-Tabelle fuer Duplexroutine
  247         B7E7      INTV2L	EQU	0B7E7H	; Laenge V.24-Initialisierungstabelle
  248         B7E8      HCPZ2	EQU	0B7E8H	; Steuerbyte Duplexroutine
  249                   		; Bit 0		-
  250                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  251                   		; Bit 2=0/1	SIO-Kanal A oder B
  252                   		; Bit 3		WR5 Bit 3: Senden ein/aus
  253                   		; Bit 4		-
  254                   		; Bit 5,6	WR5 Bit 5,6: 5-8 Bit pro Zeichen (Senden)
  255                   		; Bit 7		WR3 Bit 7: 7/8 Bit pro Zeichen (Empfang)
  256         B7E9      OFILT	EQU	0B7E9H	; Sprung zu Druckroutine (ungefiltert)
  257         B7EC      PROMPT	EQU	0B7ECH	; Systemprompt
  258         B7ED      LINTYP	EQU	0B7EDH	; Linientyp
  259         B7EE      CUMUST	EQU	0B7EEH	; Zeiger zu Cursormuster
  260         B7F0      JOYTAB	EQU	0B7F0H	; Zeiger zu Joystick-Tastencodes
  261         B800      MODST	EQU	0B800H	; Modulsteuerbytespeicher (bis B8FFH)
  262         B900      FTASTE	EQU	0B900H	; Funktionstastenspeicher (bis B99BH)
  263         B99C      WNDFN	EQU	0B99CH	; Fenstersvektorpeicher (bis B9FFH)
  264                   
  265                   ; Sprungadressen:
KC-Debugger     							    SLR180 1.31 Page   6
CAOS48  INC

  266                   
  267         E000      RESET	EQU	0E000H	; Einsprungadresse bei "RESET"
  268         EDFF      CAOSNR	EQU	0EDFFH	; Versionsnummer von CAOS
  269         F000      PWRON	EQU	0F000H	; Einsprungadresse bei "POWER ON"
  270         F003      PV1	EQU	0F003H	; Programmverteiler 1
  271         F006      PV2	EQU	0F006H	; Programmverteiler 2
  272         F008      ZEI2	EQU	0F008H	; Zeiger auf 2 = UOUT1 ab CAOS 4.7
  273         F009      PV3	EQU	0F009H	; Programmverteiler 3
  274         F00B      ZEI3	EQU	0F00BH	; Zeiger auf 3 = UOUT2 ab CAOS 4.7
  275         F00C      PV4	EQU	0F00CH	; Programmverteiler 4
  276         F00F      UREL	EQU	0F00FH	; Relativer UP-Aufruf
  277         F012      JMPADR	EQU	0F012H	; Einsprungadresse "JUMP"
  278         F015      PV5	EQU	0F015H	; Programmverteiler 5
  279         F018      IRMON	EQU	0F018H	; IRM einschalten
  280         F01B      IRMOF	EQU	0F01BH	; IRM abschalten
  281         F01E      PV6	EQU	0F01EH	; Programmverteiler 6
  282         F021      PV7	EQU	0F021H	; Programmverteiler fuer Treiberaufrufe
  283                   			; (bis CAOS 4.5 Floppy-Treiber wie SERVICE.KCC)
  284         FDF8      BITTAB	EQU	0FDF8H	; Bittabelle
  285                   
  286                   ; Bildschirm-Steuerzeichen:
  287                   
  288         0009      TAB	EQU	09H	; Tabulator
  289         000A      LF	EQU	0AH	; Zeilenvorschub
  290         000C      CLS	EQU	0CH	; Bildschirm loeschen
  291         000D      CR	EQU	0DH	; zum Zeilenanfang
  292         001B      ESC	EQU	1BH	; Steuerzeichen
  293                   
  294                   ; CAOS-Unterprogramme:
  295                   
  296         0000      CRT	EQU	00H	; Zeichenausgabe auf Bildschirm
  297         0001      MBO	EQU	01H	; Ausgabe Datenblock auf Kassette
  298         0002      UOT1	EQU	02H	; Ausgabe auf Anwenderkanal 1
  299         0003      UOT2	EQU	03H	; Ausgabe auf Anwenderkanal 2
  300         0004      KBD	EQU	04H	; Tastatureingebe mit Cursoreinblendung
  301         0005      MBI	EQU	05H	; Datenblock von Kassette einlesen
  302         0006      USIN1	EQU	06H	; Eingabe von Anwenderkanal 1
  303         0007      USIN2	EQU	07H	; Eingabe von Anwenderkanal 2
  304         0008      ISRO	EQU	08H	; Ausgabe 1. Block auf Kassette
  305         0009      CSRO	EQU	09H	; Ausgabe letzten Block auf Kassette
  306         000A      ISRI	EQU	0AH	; Einlesen 1. Block von Kassette
  307         000B      CSRI	EQU	0BH	; Abschluss Magnetbandeingabe
  308         000C      KBDS	EQU	0CH	; Tastenstatusabfrage ohne Quittung
  309         000D      BYE	EQU	0DH	; Sprung zu RESET (Warmstart)
  310         000E      KBDZ	EQU	0EH	; Tastenstatusabfrage mit Quittung
  311         000F      COLORUP	EQU	0FH	; Farbe einstellen
  312         0010      LOAD	EQU	10H	; Einlesen MC-Programm von Kassette
  313         0011      VERIF	EQU	11H	; Ueberpruefung von Kassettenaufzeichnungen
  314         0012      LOOP	EQU	12H	; Ruecksprung zu CAOS-Menueschleife
  315         0013      NORM	EQU	13H	; Rueckschalten Ein-/Ausgabe auf CRT und KBD
  316         0014      WAIT	EQU	14H	; Warteschleife
  317         0015      LARG	EQU	15H	; Register mit Argumenten laden
  318         0016      INTB	EQU	16H	; Eingabe vom aktuellen Eingabekanal
  319         0017      INLIN	EQU	17H	; Eingabe einer Zeile
  320         0018      RHEX	EQU	18H	; Erfassung HEX-Zahl aus Zeichenkette
  321         0019      ERRM	EQU	19H	; Fehlermeldung "ERROR"
  322         001A      HLHX	EQU	1AH	; Ausgabe des Wertes von HL als HEX-Zahl
  323         001B      HLDE	EQU	1BH	; Ausgabe der Werte von HL und DE als HEX-Zahlen
KC-Debugger     							    SLR180 1.31 Page   7
CAOS48  INC

  324         001C      AHEX	EQU	1CH	; Ausgabe des Wertes von A als HEX-Zahl
  325         001D      ZSUCH	EQU	1DH	; Suche nach Zeichenkette (Menuewort)
  326         001E      SOUT	EQU	1EH	; Zeiger auf Ausgabetabelle setzen
  327         001F      SIN	EQU	1FH	; Zeiger auf Eingabetabelle setzen
  328         0020      NOUT	EQU	20H	; Zeiger auf Normalausgabe (CRT) setzen
  329         0021      NIN	EQU	21H	; Zeiger auf Normaleingabe (KBD) setzen
  330         0022      GARG	EQU	22H	; Erfassen von max. 10 HEX-Zahlen
  331         0023      OSTR	EQU	23H	; Ausgabe folgender Zeichenkette
  332         0024      OCHR	EQU	24H	; Zeichenausgabe ueber Ausgabetabelle
  333         0025      CUCP	EQU	25H	; Cursor komplementieren
  334         0026      MODU	EQU	26H	; Modulsteuerung
  335         0027      JUMP	EQU	27H	; Neues Betriebssystem anspringen
  336         0028      LDMA	EQU	28H	; Speicher (IRM) schreiben
  337         0029      LDAM	EQU	29H	; Speicher (IRM) lesen
  338         002A      BRKT	EQU	2AH	; Test BRK-Taste
  339         002B      SPACE	EQU	2BH	; Ausgabe Leerzeichen
  340         002C      CRLF	EQU	2CH	; Ausgabe CR und LF
  341         002D      HOME	EQU	2DH	; Ausgabe HOME
  342         002E      MODI	EQU	2EH	; Systemkommando "MODIFY"
  343         002F      PUDE	EQU	2FH	; Punkt loeschen
  344         0030      PUSE	EQU	30H	; Punkt setzen
  345         0031      SIXD	EQU	31H	; Verlagerung IX-Arbeitsbereich von CAOS
  346         0032      DABR	EQU	32H	; Berechnung VRAM-Adresse
  347         0033      TCIF	EQU	33H	; Test, ob Cursorposition im Fenster
  348         0034      PADR	EQU	34H	; Berechnen Pixel- und Farbadresse
  349         0035      TON	EQU	35H	; Tonausgabe
  350         0036      SAVE	EQU	36H	; Ausgabe MC-Programm auf Kassette
  351         0037      MBIN	EQU	37H	; Byteweise Eingabe von Kassette
  352         0038      MBOUT	EQU	38H	; Byteweise Ausgabe auf Kassette
  353         0039      KEY	EQU	39H	; Belegen einer F-Taste
  354         003A      KEYLI	EQU	3AH	; Anzeige F-Tastenbelegung
  355         003B      DISP	EQU	3BH	; Systemkommando "DISPLAY"
  356         003C      WININ	EQU	3CH	; Fenster initialisieren
  357         003D      WINAK	EQU	3DH	; Fenster ueber Nummer aufrufen
  358         003E      LINE	EQU	3EH	; Linie zeichnen
  359         003F      CIRCLE	EQU	3FH	; Kreis zeichnen
  360         0040      SQR	EQU	40H	; Quadratwurzel berechnen
  361         0041      MULT	EQU	41H	; Multiplikation
  362         0042      CSTBT	EQU	42H	; Bildschirmanzeige Steuerzeichensymbol
  363         0043      INIEA	EQU	43H	; Initialisierung E/A-Kanal
  364         0044      INIME	EQU	44H	; Initialisierung mehrerer E/A-Kanaele
  365         0045      ZKOUT	EQU	45H	; Ausgabe Zeichenkette
  366         0046      MENU	EQU	46H	; aktuelles Menue ausschreiben
  367         0047      V24OUT	EQU	47H	; Initialisierung Druckerausgabe
  368         0048      V24DUP	EQU	48H	; Initialisierung V.24-Duplexroutine
  369         0049      DEVICE	EQU	49H	; DEVICE-Funktionen ab CAOS 4.6
  370         004A      HLDEZ	EQU	4AH	; HL dezimal anzeigen ab CAOS 4.8
  371         004B      RDEZ	EQU	4BH	; Erfassung Dezimalzahl aus Zeichenkette ab CAOS 4.8
  372         004C      GARGC	EQU	4CH	; bis zu 10 Argumente mit variabler Zahlenbasis erfassen
  373                   
  374                   ; allgemeine Macros:
  375                   
  376                   MESSAGE	MACRO	MSG1,N,MSG2
  377                   	 .PRINTX MSG1 N MSG2
  378                   	ENDM
  379                   
  380                   ; Mit FF auffuellen, bis die absolute Adresse LOC erreicht ist:
  381                   ABSFILL	MACRO	LOC,WHAT
KC-Debugger     							    SLR180 1.31 Page   8
CAOS48  INC

  382                   	 IF $ GT LOC
  383                   	  MESSAGE <Fehler! LOC:>,% $ - LOC,<Byte zu viel vor WHAT>
  384                   	 ELSE
  385                   	  IF2
  386                   	   MESSAGE <LOC:>,% LOC - $,<Byte frei vor WHAT>
  387                   	  ENDIF
  388                   	  DS	LOC - $,0FFh
  389                   	 ENDIF
  390                   	ENDM
  391                   
  392                   ; end of include
   27                   
   28                   ; CAOS-Vorblock:
   29 0100  44 45 42 55 	DB	'DEBUGGERKCC'	; Dateiname
   30 010B  00 00 00 00 	DS	5,0
   31 0110  02          	DB	2		; 2 Argumente
   32 0111  C000        	DW	ROMBEG		; Anfangsadresse
   33 0113  E000        	DW	ROMEND		; Endadresse
   34 0115  0000        	DW	0
   35 0117  00 00 00 00 	DS	95,0
   36 0176  30 36 2E 30 	DB	'06.02.2023'	; Datum
   37                   ;---------------
   38                   ; Assembler-Optionen:	zusaetzlicher Speicherbedarf in Byte
   39                   ;
   40         0001      JSAVE	EQU	1	; 183	; 0 = JEDIT ohne .SAVE
   41                   				; 1 = JEDIT mit .SAVE
   42         0001      CALC	EQU	1	; 857	; 1 = Taschenrechner CALC (Frank Ludwig)
   43                   				; 0 = Taschenrechner ARITH (TEMO, einfach)
   44         0001      STACK	EQU	1	; 39	; 0 = kein STACK-Menuewort in CAOS und TEMO
   45                   				; 1 = STACK-Menuewort in CAOS und TEMO
   46                   	.PHASE	0C000H
   47 C000              ROMBEG:
   48                   	INCLUDE	REAS.Z80	; Reassembler (DISASS, QMR)
    1                   ;_______________________________________________________;
    2                   ;							;
    3                   ;		Reassembler				;
    4                   ;	===========================			;
    5                   ;							;
    6                   ;	mit Schnittstelle zu Edas 1.7 / ASM 2.0		;
    7                   ;							;
    8                   ; Erkennt:						;
    9                   ;	- CALL 0F00FH (UREL)				;
   10                   ;	- CALL 0F003H (PV1)				;
   11                   ;	- CALL 0F021H (PV7)				;
   12                   ;	- CAOS Unterprogramm OSTR (Zeichenketten)	;
   13                   ;	- CAOS-Menuewoerter				;
   14                   ;	- Register HX, HY, LX, LY			;
   15                   ;	- SLS						;
   16                   ;	- INF						;
   17                   ;	- OTCL						;
   18                   ;	- Bitbefehle,reg				;
   19                   ;							;
   20                   ; REAS.Z80		ML-Soft 14.12.1992-06.02.2023	;
   21                   ;_______________________________________________________;
   22                   ;							;
   23                   ;							;
   24                   ; Bearbeitungsstand:			14.12.1992	;
   25                   ; letzte Aenderungen reassembliert:	20.10.2013	;
KC-Debugger     							    SLR180 1.31 Page   9
REAS    Z80

   26                   ; Prologbyte A1H (JEDIT) aufgenommen:	27.10.2013	;
   27                   ; Kommentare erweitert			31.10.2013	;
   28                   ; IRM-Arbeitszellen umverlegt		10.11.2013	;
   29                   ; (DTPTR, ...)						;
   30                   ; Kassetteninit ueberarbeitet		12.01.2014	;
   31                   ; Umstellung zu DEVICE-Schnittstelle	24.05.2016	;
   32                   ; Menuewort REAS umbenannt in DISAS	03.02.2018	;
   33                   ; Menuewort DISAS umbenannt in DISASS	25.02.2018	;
   34                   ; Codeoptimierung			22.03.2018	;
   35                   ; Abschaltung USER-ROM bei Programmende	23.03.2018	;
   36                   ; Menueworte erkannten ARG1 nicht mehr	22.06.2018	;
   37                   ; Erkennung PV7 DB n eingebaut		04.12.2018	;
   38                   ; ungenutzte Diskettenroutinen entfernt	30.10.2022	;
   39                   ; Arbeitszellen verlagert, Namenspuffer vorbelegt	;
   40                   ; QMR: Prologbytes in Zeile eingeben	05.02.2023	;
   41                   ;_______________________________________________________;
   42                   ;
   43         000C      O1	EQU	0CH
   44         0026      O2	EQU	O1+1AH
   45         008C      O3	EQU	O1+80H	; gesetztes Bit 7 = neuer Token
   46                   ;
   47                   	INCLUDE EDAS.INC	; EDAS-Arbeitszellen
    1                   ;-------------------------------------------------------;
    2                   ;	EDAS Arbeitszellen (fuer EDAS 1.7 / 2.0)	;
    3                   ;	----------------------------------------	;
    4                   ;	(und CAOS-Editor, Assembler und Reassembler)	;
    5                   ;							;
    6                   ; EDAS.INC		ML-Soft 21.01.2018-04.03.2020	;
    7                   ;-------------------------------------------------------;
    8                   
    9         0000      NAME0	EQU	0000H		; Dateiname 8 Zeichen, Typ 3 Zeichen
   10                   ;MODE	EQU	000Bh		; M052: 1 Byte fuer Interrupt-Mode USB
   11                   ;DATUM	EQU	000Ch		; M052: 4 Byte fuer Datum
   12                   
   13         B7F5      NAMP	EQU	0B7F5h		; Namenspuffer der geladenen (Quell-)Textdatei
   14                   				; 11 Zeichen bis 0B7FFh
   15                   
   16         0010      RANDL	EQU	0010h		; Position linker Rand
   17         0011      RANDR	EQU	RANDL+1		; Position rechter Rand
   18         0012      MEML	EQU	RANDR+1		; Zeilennummer von Textanfang an
   19         0014      FTXT	EQU	MEML+2		; Zeiger auf Suchtext bei REPLACE
   20         0016      RTXT	EQU	FTXT+2		; Zeiger auf Ersetz-Text bei REPLACE
   21                   
   22         0018      T1A	EQU	RTXT+2		; Beginn Text 1
   23         001A      T2E	EQU	T1A+2		; nach Ende Text 2
   24         001C      T1E	EQU	T2E+2		; nach Ende Text 1
   25         001E      T2A	EQU	T1E+2		; Beginn Text 2
   26                   
   27         0020      COL	EQU	T2A+2		; EDIT-Cursor (Spalte)
   28         0021      LIN	EQU	COL+1		; EDIT-Cursor (Zeile)
   29         0022      M4A	EQU	LIN+1		; wenn ungleich 0 -> no Memory
   30         0023      STRING	EQU	M4A+1		; String-Puffer
   31         001B      LSTR	EQU	27		; max. Laenge Stringpuffer (26 Zeichen + 00)
   32         003E      STAT	EQU	STRING+LSTR	; Merkzelle fuer verschiedene Einstellungen
   33                   		;Bit 0 = 1 - Floppy vorhanden
   34                   		;Bit 1 = 1 - DEP mit LW-Steuerung
   35                   		;Bit 2 = 1 - Fehler bei Diskette
   36                   		;	     oder MTAB-Ueberschreitung aufgetreten
KC-Debugger     							    SLR180 1.31 Page  10
EDAS    INC

   37                   		;Bit 3 = 1 - Option 'S' merken
   38                   		;Bit 4 = 1 - Ueberschreiben (0=Einfuegen)
   39                   		;Bit 5 = 1 - Zeichensatz (0=IBM, 1=deutsch)
   40                   		;Bit 6 = 1 - Zeichensatz (0=IBM, 1=CAOS)
   41                   		;Bit 7 = 1 - END-Befehl erkannt (ASM)
   42                   
   43                   ; Assembler-Arbeitszellen:
   44                   
   45         003F      OPT	EQU	STAT+1		; Assembler-Optionen
   46                   		;Bit 0	L - Listing ausgeben
   47                   		;Bit 1	P - Umschaltung Drucker
   48                   		;Bit 2	+ - Markentabelle erweitern
   49                   		;Bit 3	1 - nur PASS 1!
   50                   		;Bit 4	3 - PASS 3 laeuft (Save MC)
   51                   		;Bit 5	B - Bildschirmformat (40 Spalten)
   52                   		;Bit 6	O - MC in Speicher laden
   53                   		;Bit 7	2 - nur PASS 2
   54         0040      OFFS	EQU	OPT+1		; Assembler-Offset
   55         0042      OBJ	EQU	OFFS+2		; Beginn Maschinencode
   56         0044      MBOT	EQU	OBJ+2		; RAM-Ende+1	8000H oder C000H
   57         0046      MTOP	EQU	MBOT+2		; Marken-Tabelle (Anfang)
   58         0048      PBL	EQU	MTOP+2		; Pointer auf Byte-Liste
   59         004A      M78	EQU	PBL+2
   60         004B      M79	EQU	M78+1
   61         004C      MPC	EQU	M79+1		; Adressenzaehler fuer MC-Erzeugung
   62         004E      ERRNO	EQU	MPC+2		; Zaehler (BCD) fuer Fehler beim Assemblieren
   63         0050      MCL	EQU	ERRNO+2		; MC-Endadresse
   64         0052      NUMB	EQU	MCL+2		; + Berechneter Wert eines Ausdrucks (Operand)
   65         0054      DDFD	EQU	NUMB+2		; | DD/FD-Speicher
   66         0055      KLAM	EQU	DDFD+1		; | Klammer-Speicher
   67         0056      M84	EQU	KLAM+1		; | Merker, ob Operand gefunden wurde
   68         0057      VORZ	EQU	M84+1		; | Rechenzeichen-Speicher
   69         0058      REGNR	EQU	VORZ+1		; + Registerkennbyte
   70         0059      REGC	EQU	REGNR+1		; Registercode
   71                   	; Registerkennbyte	Registercode	DDFD
   72                   	;				Bit
   73                   	; A	00H		07H	8
   74                   	; B	01H		00H	8
   75                   	; C	02H		01H	8
   76                   	; D	03H		02H	8
   77                   	; E	04H		03H	8
   78                   	; H	07H		04H	8
   79                   	; HX	07H		04H	8	DD
   80                   	; HY	07H		04H	8	FD
   81                   	; L	0BH		05H	8
   82                   	; LX	0BH		05H	8	DD
   83                   	; LY	0BH		05H	8	FD
   84                   	; I	08H		47H	8
   85                   	; R	11H		4FH	8
   86                   	; M(HL)	3AH		06H	8
   87                   	; (IX+)	3AH		06H	8	DD	
   88                   	; (IY+)	3AH		06H	8	FD
   89                   	; BC	2BH		00H	16
   90                   	; (BC)	2BH		00H	8
   91                   	; DE	2FH		10H	16
   92                   	; (DE)	2FH		10H	8
   93                   	; HL	3AH		20H	16
   94                   	; IX	3AH		20H	16	DD
KC-Debugger     							    SLR180 1.31 Page  11
EDAS    INC

   95                   	; IY	3AH		20H	16	FD
   96                   	; SP	49H		30H	16
   97                   	; AF	2DH		31H	16
   98                   
   99                   ; Hilfsprogramme fuer Speicherzugriff hinter IRM und ROM-C bis DFFFh
  100                   
  101         005A      RAMC	EQU	REGC+1		; Hilfsprogramme fuer Speicherzugriff bis DFFFh
  102                   	; 005Ch bis 00A0h	  nur bei ext. Editor erforderlich
  103                   
  104                   ; Assemblierpuffer:	(hier steht die erzeugte Quelltextzeile)
  105                   
  106         A880      NERR	EQU	0A880h		; 1 Byte Assembler-Fehlercode
  107                   				; 1 Byte "Stern" wenn Fehlercode vorhanden ist
  108         A882      ADR	EQU	NERR+2		; 4 Byte fuer Adresse
  109                   				; 10 Byte fuer Hexcodes
  110         A890      TEXT	EQU	NERR+16		; Quelltext (max. 80 Byte bei ext. Editor)
  111                   	; A880h bis A8FFh
   48                   ;
   49                   ; Edas-Assemblierpuffer im IRM, hier verwendet als:
   50                   ;
   51         A880      MS	EQU	NERR	; Markenschalter
   52                   			; Bit 1 -
   53                   			; Bit 2 - es folgt einmal DW (nach CALL UREL)
   54                   			; Bit 3 - Menuewort erkannt
   55                   			; Bit 4 - Marken EIN/AUS
   56                   			; Bit 5 -
   57                   			; Bit 6 - TAB oder Space als Trennzeichen
   58                   
   59         A881      CMODE	EQU	NERR+1	; Ausgabemode
   60                   		; 0=Bildschirm (REAS), 1=Device, 2=Drucker, 3=Screen (QMR), 4=Asm
   61                   
   62         A882      DMODE	EQU	CMODE+1	; Special-Mode:
   63                   			; 0: normal
   64                   			; 1: DB xx
   65                   			; 2: DB '...'
   66                   			; 3: Menuewort
   67                   			; 4: DB xx..
   68                   			; 5: DW xxxx-$-2
   69                   
   70         A883      ROFFS	EQU	DMODE+1	; Anzeige-Offset Reassembler
   71                   
   72         A885      PBY	EQU	ROFFS+2	; 6 Prologbytes vordefiniert bzw. von Kommandozeile
   73                   
   74         A88B      MTE	EQU	PBY+6	; Marken Ende
   75         A88D      MTA	EQU	MTE+2	; Marken Anfang
   76         A88F      MTM	EQU	MTA+2	; Zeiger innerhalb Markentabelle
   77         A891      PZS	EQU	MTM+2
   78         A893      ZKS	EQU	PZS+2	; Stringspeicher (48 Byte)
   79                   ;
   80                   ; Arbeitszellen im IRM:
   81                   ;
   82         B791      POCU	EQU	ARG8+1	; 0B793H
   83         B792      PRLI	EQU	ARG9	; Drucker - linker Rand
   84         B793      PRZE	EQU	ARG9+1	; Drucker - Zeilenzahl
   85         B794      PRZC	EQU	ARG10	; Drucker - Zeilenpos.
   86         B795      PRCU	EQU	ARG10+1	; Drucker - Pos. Curs.
   87                   
   88                   ;DTPTR	EQU	0B7DAH	; KPUFF-Zeiger (aus CAOS.INC)
KC-Debugger     							    SLR180 1.31 Page  12
REAS    Z80

   89                   
   90                   ;---------------
   91 C000  6A 3A       BEG:	DB	6AH,Low(VED)	;ED..
   92 C002  39 06       	DB	39H,Low(NVB)	;normal
   93 C004  66 35       	DB	66H,Low(VCB)	;CB..
   94                   ;
   95 C006  FF          NVB:	DB	0FFH	;Maske1
   96 C007  00          	NOP
   97 C008  10          	DB	10H	;DJNZ
   98 C009  22          	DB	22H	;LD
   99 C00A  32          	DB	32H	;LD
  100 C00B  27          	DB	27H	;DAA
  101 C00C  37          	SCF
  102 C00D  08          	EX	AF,AF'
  103 C00E  18          	DB	18H	;JR
  104 C00F  2A          	DB	2AH	;LD
  105 C010  3A          	DB	3AH	;LD
  106 C011  2F          	CPL
  107 C012  3F          	CCF
  108 C013  76          	HALT
  109 C014  C3          	DB	0C3H	;JP
  110 C015  D3          	DB	0D3H	;OUT
  111 C016  E3          	EX	(SP),HL
  112 C017  F3          	DI
  113 C018  C9          	RET
  114 C019  D9          	EXX
  115 C01A  E9          	JP	(HL)
  116 C01B  F9          	LD	SP,HL
  117 C01C  DB          	DB	0DBH	;IN
  118 C01D  EB          	EX	DE,HL
  119 C01E  FB          	EI
  120 C01F  CD          	DB	0CDH	;CALL
  121 C020  FF          	DB	-1
  122                    
  123 C021  CF          	DB	0CFH	;Maske2 (dd)
  124 C022  01          	DB	1	;LD dd,nn
  125 C023  02          	DB	2	;LD (dd),A
  126 C024  03          	DB	3	;INC dd
  127 C025  09          	DB	9	;ADD HL,dd
  128 C026  0A          	DB	0AH	;LD A,(dd)
  129 C027  0B          	DB	0BH	;DEC dd
  130 C028  C1          	DB	0C1H	;POP dd
  131 C029  C5          	DB	0C5H	;PUSH dd
  132 C02A  FF          	DB	-1
  133                    
  134 C02B  C7          	DB	0C7H	;Maske3 (cc,r)
  135 C02C  00          	DB	0	;JR cc
  136 C02D  04          	DB	4	;INC r
  137 C02E  05          	DB	5	;DEC r
  138 C02F  06          	DB	6	;LD r,n
  139 C030  C0          	DB	0C0H	;RET cc
  140 C031  C2          	DB	0C2H	;JP cc,nn
  141 C032  C4          	DB	0C4H	;CALL cc,nn
  142 C033  C6          	DB	0C6H	;ADD n
  143 C034  FF          	DB	-1
  144                    
  145 C035  C0          VCB:	DB	0C0H	;Maske4
  146 C036  00          	DB	0	;RLCA	RLC
KC-Debugger     							    SLR180 1.31 Page  13
REAS    Z80

  147 C037  40          	DB	40H	;LD r,r	BIT
  148 C038  80          	DB	80H	;ADD r	RES
  149 C039  C0          	DB	0C0H	;RST	SET
  150                    
  151 C03A  FF          VED:	DB	-1	;Maske5
  152 C03B  70          	DB	70H	;INF
  153 C03C  71          	DB	71H	;OTCL
  154 C03D  47          	DB	47H	;LD I,A
  155 C03E  57          	DB	57H	;LD A,I
  156 C03F  67          	DB	67H	;RRD
  157 C040  4D          	DB	4DH	;RETI
  158 C041  4F          	DB	4FH	;LD R,A
  159 C042  5F          	DB	5FH	;LD A,R
  160 C043  6F          	DB	6FH	;RLD
  161 C044  FF          	DB	-1
  162                    
  163 C045  CF          	DB	0CFH	;Maske6
  164 C046  42          	DB	42H	;SBC HL,dd
  165 C047  43          	DB	43H	;LD (nn),dd
  166 C048  4A          	DB	4AH	;ADC HL,dd
  167 C049  4B          	DB	4BH	;LD dd,(nn)
  168 C04A  FF          	DB	-1
  169                    
  170 C04B  C7          	DB	0C7H	;Maske7
  171 C04C  40          	DB	40H	;IN r,(C)
  172 C04D  41          	DB	41H	;OUT (C),r
  173 C04E  44          	DB	44H	;NEG
  174 C04F  45          	DB	45H	;RETN
  175 C050  FF          	DB	-1
  176                    
  177 C051  E7          	DB	0E7H	;Maske8
  178 C052  A0          	DB	0A0H	;LD..
  179 C053  A1          	DB	0A1H	;CP..
  180 C054  A2          	DB	0A2H	;IN..
  181 C055  FF          	DB	-1
  182                    
  183 C056  F7          	DB	0F7H	;Maske9
  184 C057  B3          	DB	0B3H	;OTIR
  185 C058  A3          	DB	0A3H	;OUTI
  186 C059  FF          	DB	-1
  187                    
  188 C05A  D7          	DB	0D7H	;Maske10
  189 C05B  46          	DB	46H	;IM 0
  190 C05C  FF          	DB	-1
  191                    
  192 C05D  DF          	DB	0DFH	;Maske11
  193 C05E  56          	DB	56H	;IM 1
  194 C05F  5E          	DB	5EH	;IM 2
  195 C060  FF          	DB	-1
  196                    
  197 C061  00          	DB	0	;Maske12
  198 C062  00          BMNE:	DB	0	;Ende!
  199                   ;-------
  200 C063  D8          	DEFB	'L'+O3		;00
  201 C064  6A          	DEFB	'D'+O2	;LD-
  202                    
  203 C065  DE          	DEFB	'R'+O3		;01
  204 C066  51          	DEFB	'E'+O1
KC-Debugger     							    SLR180 1.31 Page  14
REAS    Z80

  205 C067  60          	DEFB	'T'+O1	;RET
  206                    
  207 C068  DA          	DEFB	'N'+O3		;02
  208 C069  5B          	DEFB	'O'+O1
  209 C06A  5C          	DEFB	'P'+O1	;NOP
  210                    
  211 C06B  DB          	DEFB	'O'+O3		;03
  212 C06C  61          	DEFB	'U'+O1
  213 C06D  7A          	DEFB	'T'+O2	;OUT-
  214                    
  215 C06E  D5          	DEFB	'I'+O3		;04
  216 C06F  5A          	DEFB	'N'+O1
  217 C070  69          	DEFB	'C'+O2	;INC-
  218                    
  219 C071  98          	DB	098H		;05
  220 C072  69          	DEFB	'C'+O2	;DEC-
  221                    
  222 C073  B4          	DEFB	'('+O3		;06
  223 C074  26          	DB	26H
  224 C075  35          	DEFB	')'+O1	;(nn)
  225                    
  226 C076  B4          	DEFB	'('+O3		;07
  227 C077  1F          	DB	1FH
  228 C078  35          	DEFB	')'+O1	;(dd)
  229                    
  230 C079  9F          	DB	09FH		;08
  231 C07A  38          	DEFB	','+O1	;dd,
  232                    
  233 C07B  B8          	DEFB	','+O3		;09
  234 C07C  1F          	DB	1FH	;,dd
  235                    
  236 C07D  CD          	DEFB	'A'+O3		;0A
  237 C07E  38          	DEFB	','+O1	;A,
  238                    
  239 C07F  B8          	DEFB	','+O3		;0B
  240 C080  4D          	DEFB	'A'+O1	;,A
  241                    
  242 C081  A8          	DB	0A8H		;0C
  243 C082  38          	DEFB	','+O1
  244 C083  29          	DB	29H	;b,r
  245                    
  246 C084  CD          	DEFB	'A'+O3		;0D
  247 C085  50          	DEFB	'D'+O1
  248 C086  6A          	DEFB	'D'+O2	;ADD-
  249                    
  250 C087  CD          	DEFB	'A'+O3		;0E
  251 C088  50          	DEFB	'D'+O1
  252 C089  69          	DEFB	'C'+O2	;ADC-
  253                    
  254 C08A  DF          	DEFB	'S'+O3		;0F
  255 C08B  61          	DEFB	'U'+O1
  256 C08C  68          	DEFB	'B'+O2	;SUB-
  257                    
  258 C08D  DF          	DEFB	'S'+O3		;10
  259 C08E  4E          	DEFB	'B'+O1
  260 C08F  69          	DEFB	'C'+O2	;SBC-
  261                    
  262 C090  CD          	DEFB	'A'+O3		;11
KC-Debugger     							    SLR180 1.31 Page  15
REAS    Z80

  263 C091  5A          	DEFB	'N'+O1
  264 C092  6A          	DEFB	'D'+O2	;AND-
  265                    
  266 C093  E4          	DEFB	'X'+O3		;12
  267 C094  13          	DB	13H	;XOR-
  268                    
  269 C095  DB          	DEFB	'O'+O3		;13
  270 C096  78          	DEFB	'R'+O2	;OR-
  271                    
  272 C097  CF          	DEFB	'C'+O3		;14
  273 C098  76          	DEFB	'P'+O2	;CP-
  274                    
  275                   ;Doppelregister:
  276 C099  96          	DB	096H	;BC	;15
  277                    
  278 C09A  CE          	DEFB	'B'+O3		;16
  279 C09B  4F          	DEFB	'C'+O1	;BC
  280                    
  281 C09C  98          	DB	098H	;DE	;17
  282                    
  283 C09D  D0          	DEFB	'D'+O3		;18
  284 C09E  51          	DEFB	'E'+O1	;DE
  285                    
  286 C09F  9A          	DB	09AH	;HL	;19
  287                    
  288 C0A0  D4          	DEFB	'H'+O3		;1A
  289 C0A1  58          	DEFB	'L'+O1	;HL
  290                    
  291 C0A2  CD          	DEFB	'A'+O3		;1B
  292 C0A3  52          	DEFB	'F'+O1	;AF
  293                    
  294 C0A4  DF          	DEFB	'S'+O3		;1C
  295 C0A5  5C          	DEFB	'P'+O1	;SP
  296                    
  297                   ;Bitbefehle:
  298 C0A6  DE          	DEFB	'R'+O3		;1D
  299 C0A7  58          	DEFB	'L'+O1
  300 C0A8  4F          	DEFB	'C'+O1	;RLC
  301                    
  302 C0A9  DE          	DEFB	'R'+O3		;1E
  303 C0AA  5E          	DEFB	'R'+O1
  304 C0AB  4F          	DEFB	'C'+O1	;RRC
  305                    
  306 C0AC  DE          	DEFB	'R'+O3		;1F
  307 C0AD  58          	DEFB	'L'+O1	;RL
  308                    
  309 C0AE  DE          	DEFB	'R'+O3		;20
  310 C0AF  5E          	DEFB	'R'+O1	;RR
  311                    
  312 C0B0  DF          	DEFB	'S'+O3		;21
  313 C0B1  58          	DEFB	'L'+O1
  314 C0B2  4D          	DEFB	'A'+O1	;SLA
  315                    
  316 C0B3  DF          	DEFB	'S'+O3		;22
  317 C0B4  5E          	DEFB	'R'+O1
  318 C0B5  4D          	DEFB	'A'+O1	;SRA
  319                    
  320 C0B6  DF          	DEFB	'S'+O3		;23
KC-Debugger     							    SLR180 1.31 Page  16
REAS    Z80

  321 C0B7  58          	DEFB	'L'+O1
  322 C0B8  5F          	DEFB	'S'+O1	;SLS
  323                    
  324 C0B9  DF          	DEFB	'S'+O3		;24
  325 C0BA  5E          	DEFB	'R'+O1
  326 C0BB  58          	DEFB	'L'+O1	;SRL
  327                    
  328                   ;Register:
  329 C0BC  CE          	DEFB	'B'+O3	;B	;25
  330                    
  331 C0BD  CF          	DEFB	'C'+O3	;C	;26
  332                    
  333 C0BE  D0          	DEFB	'D'+O3	;D	;27
  334                    
  335 C0BF  D1          	DEFB	'E'+O3	;E	;28
  336                    
  337 C0C0  D4          	DEFB	'H'+O3	;H	;29
  338                    
  339 C0C1  D8          	DEFB	'L'+O3	;L	;2A
  340                    
  341 C0C2  D9          	DEFB	'M'+O3	;M	;2B
  342                    
  343 C0C3  CD          	DEFB	'A'+O3	;A	;2C
  344                    
  345                   ;Flags:
  346 C0C4  DA          	DEFB	'N'+O3		;2D
  347 C0C5  66          	DEFB	'Z'+O1	;NZ
  348                    
  349 C0C6  E6          	DEFB	'Z'+O3	;Z	;2E
  350                    
  351 C0C7  DA          	DEFB	'N'+O3		;2F
  352 C0C8  4F          	DEFB	'C'+O1	;NC
  353                    
  354 C0C9  CF          	DEFB	'C'+O3	;C	;30
  355                    
  356 C0CA  DC          	DEFB	'P'+O3		;31
  357 C0CB  5B          	DEFB	'O'+O1	;PO
  358                    
  359 C0CC  DC          	DEFB	'P'+O3		;32
  360 C0CD  51          	DEFB	'E'+O1	;PE
  361                    
  362 C0CE  DC          	DEFB	'P'+O3	;P	;33
  363                    
  364 C0CF  D9          	DEFB	'M'+O3	;M	;34
  365                   ;-------
  366 C0D0  D5          	DEFB	'I'+O3	;I	;35
  367                    
  368 C0D1  D0          	DEFB	'D'+O3	;D	;36
  369                    
  370 C0D2  D5          	DEFB	'I'+O3		;37
  371 C0D3  5E          	DEFB	'R'+O1	;IR
  372                    
  373 C0D4  D0          	DEFB	'D'+O3		;38
  374 C0D5  5E          	DEFB	'R'+O1	;DR
  375                    
  376 C0D6  B4          	DEFB	'('+O3		;39
  377 C0D7  1A          	DB	1AH
  378                   ;	DEFB	'+'+O1		; ??? fehlt in ROM-Version ???
KC-Debugger     							    SLR180 1.31 Page  17
REAS    Z80

  379 C0D8  25          	DB	25H
  380 C0D9  35          	DEFB	')'+O1	;(ii+d)
  381                    
  382                   ;Befehle ohne Vorbyte:
  383                    
  384 C0DA  82          	DB	082H	;NOP	;3A
  385                    
  386 C0DB  D0          	DEFB	'D'+O3		;3B
  387 C0DC  56          	DEFB	'J'+O1
  388 C0DD  5A          	DEFB	'N'+O1
  389 C0DE  66          	DEFB	'Z'+O1
  390 C0DF  2C          	DEFB	' '+O1
  391 C0E0  27          	DB	27H	;DJNZ e
  392                    
  393 C0E1  80          	DB	80H		;3C
  394 C0E2  06          	DB	6
  395 C0E3  09          	DB	9	;LD (nn),dd
  396                    
  397 C0E4  80          	DB	80H		;3D
  398 C0E5  06          	DB	6
  399 C0E6  0B          	DB	11	;LD (nn),A
  400                    
  401 C0E7  D0          	DEFB	'D'+O3		;3E
  402 C0E8  4D          	DEFB	'A'+O1
  403 C0E9  4D          	DEFB	'A'+O1	;DAA
  404                    
  405 C0EA  DF          	DEFB	'S'+O3		;3F
  406 C0EB  4F          	DEFB	'C'+O1
  407 C0EC  52          	DEFB	'F'+O1	;SCF
  408                    
  409 C0ED  D1          	DEFB	'E'+O3		;40
  410 C0EE  7E          	DEFB	'X'+O2
  411 C0EF  1B          	DB	1BH	;EX AF
  412                    
  413 C0F0  D6          	DEFB	'J'+O3		;41
  414 C0F1  78          	DEFB	'R'+O2
  415 C0F2  27          	DB	27H	;JR e
  416                    
  417 C0F3  80          	DB	80H		;42
  418 C0F4  08          	DB	8
  419 C0F5  06          	DB	6	;LD dd,(nn)
  420                    
  421 C0F6  80          	DB	80H		;43
  422 C0F7  0A          	DB	10
  423 C0F8  06          	DB	6	;LD A,(nn)
  424                    
  425 C0F9  CF          	DEFB	'C'+O3		;44
  426 C0FA  5C          	DEFB	'P'+O1
  427 C0FB  58          	DEFB	'L'+O1	;CPL
  428                    
  429 C0FC  CF          	DEFB	'C'+O3		;45
  430 C0FD  4F          	DEFB	'C'+O1
  431 C0FE  52          	DEFB	'F'+O1	;CCF
  432                    
  433 C0FF  D4          	DEFB	'H'+O3		;46
  434 C100  4D          	DEFB	'A'+O1
  435 C101  58          	DEFB	'L'+O1
  436 C102  60          	DEFB	'T'+O1	;HALT
KC-Debugger     							    SLR180 1.31 Page  18
REAS    Z80

  437                    
  438 C103  D6          	DEFB	'J'+O3		;47
  439 C104  76          	DEFB	'P'+O2
  440 C105  26          	DB	26H	;JP nn
  441                    
  442 C106  83          	DB	83H		;48
  443 C107  25          	DB	25H	;OUT n
  444                    
  445 C108  D1          	DEFB	'E'+O3		;49
  446 C109  7E          	DEFB	'X'+O2
  447 C10A  34          	DEFB	'('+O1
  448 C10B  1C          	DB	1CH
  449 C10C  35          	DEFB	')'+O1
  450 C10D  09          	DB	9	;EX (SP),HL
  451                    
  452 C10E  D0          	DEFB	'D'+O3		;4A
  453 C10F  55          	DEFB	'I'+O1	;DI
  454                    
  455 C110  81          	DB	81H	;RET	;4B
  456                    
  457 C111  D1          	DEFB	'E'+O3		;4C
  458 C112  64          	DEFB	'X'+O1
  459 C113  64          	DEFB	'X'+O1	;EXX
  460                    
  461 C114  D6          	DEFB	'J'+O3		;4D
  462 C115  76          	DEFB	'P'+O2
  463 C116  07          	DB	7	;JP (dd)
  464                    
  465 C117  80          	DB	80H		;4E
  466 C118  08          	DB	8
  467 C119  1A          	DB	1AH	;LD SP,HL
  468                    
  469 C11A  D5          	DEFB	'I'+O3		;4F
  470 C11B  74          	DEFB	'N'+O2
  471 C11C  0A          	DB	0AH
  472 C11D  25          	DB	25H	;IN A,n
  473                    
  474 C11E  D1          	DEFB	'E'+O3		;50
  475 C11F  7E          	DEFB	'X'+O2
  476 C120  18          	DB	18H
  477 C121  38          	DEFB	','+O1
  478 C122  54          	DEFB	'H'+O1
  479 C123  58          	DEFB	'L'+O1	;EX DE,HL
  480                    
  481 C124  D1          	DEFB	'E'+O3		;51
  482 C125  55          	DEFB	'I'+O1	;EI
  483                    
  484 C126  CF          	DEFB	'C'+O3		;52
  485 C127  4D          	DEFB	'A'+O1
  486 C128  58          	DEFB	'L'+O1
  487 C129  72          	DEFB	'L'+O2
  488 C12A  26          	DB	26H	;CALL nn
  489                    
  490 C12B  80          	DB	80H		;53
  491 C12C  08          	DB	8
  492 C12D  26          	DB	26H	;LD dd,nn
  493                    
  494 C12E  80          	DB	80H		;54
KC-Debugger     							    SLR180 1.31 Page  19
REAS    Z80

  495 C12F  07          	DB	7
  496 C130  0B          	DB	11	;LD (dd),A
  497                    
  498 C131  84          	DB	84H		;55
  499 C132  1F          	DB	1FH	;INC dd
  500                    
  501 C133  8D          	DB	8DH		;56
  502 C134  1A          	DB	1AH
  503 C135  09          	DB	9	;ADD HL,dd
  504                    
  505 C136  80          	DB	80H		;57
  506 C137  0A          	DB	10
  507 C138  07          	DB	7	;LD A,(dd)
  508                    
  509 C139  85          	DB	85H		;58
  510 C13A  1F          	DB	1FH	;DEC dd
  511                    
  512 C13B  DC          	DEFB	'P'+O3		;59
  513 C13C  5B          	DEFB	'O'+O1
  514 C13D  76          	DEFB	'P'+O2
  515 C13E  1E          	DB	1EH	;POP qq
  516                    
  517 C13F  DC          	DEFB	'P'+O3		;5A
  518 C140  61          	DEFB	'U'+O1
  519 C141  5F          	DEFB	'S'+O1
  520 C142  6E          	DEFB	'H'+O2
  521 C143  1E          	DB	1EH	;PUSH qq
  522                    
  523 C144  D6          	DEFB	'J'+O3		;5B
  524 C145  78          	DEFB	'R'+O2
  525 C146  23          	DB	23H
  526 C147  38          	DEFB	','+O1
  527 C148  27          	DB	27H	;JR cc,e
  528                    
  529 C149  84          	DB	84H		;5C
  530 C14A  21          	DB	21H	;INC r
  531                    
  532 C14B  85          	DB	85H		;5D
  533 C14C  21          	DB	21H	;DEC r
  534                    
  535 C14D  80          	DB	80H		;5E
  536 C14E  21          	DB	21H
  537 C14F  38          	DEFB	','+O1
  538 C150  25          	DB	25H	;LD r,n
  539                    
  540 C151  81          	DB	081H		;5F
  541 C152  2C          	DEFB	' '+O1
  542 C153  22          	DB	22H	;RET cc
  543                    
  544 C154  D6          	DEFB	'J'+O3		;60
  545 C155  76          	DEFB	'P'+O2
  546 C156  22          	DB	22H
  547 C157  38          	DEFB	','+O1
  548 C158  26          	DB	26H	;JP cc,nn
  549                    
  550 C159  CF          	DEFB	'C'+O3		;61
  551 C15A  4D          	DEFB	'A'+O1
  552 C15B  58          	DEFB	'L'+O1
KC-Debugger     							    SLR180 1.31 Page  20
REAS    Z80

  553 C15C  72          	DEFB	'L'+O2
  554 C15D  22          	DB	22H
  555 C15E  38          	DEFB	','+O1
  556 C15F  26          	DB	26H	;CALL cc,nn
  557                    
  558 C160  9D          	DB	09DH		;62
  559 C161  25          	DB	25H	;ADD n
  560                    
  561 C162  A0          	DB	0A0H		;63
  562 C163  4D          	DEFB	'A'+O1	;Versch.-A
  563                    
  564 C164  80          	DB	80H		;64
  565 C165  21          	DB	21H
  566 C166  38          	DEFB	','+O1
  567 C167  29          	DB	29H	;LD r,r'
  568                    
  569 C168  9D          	DB	9DH		;65
  570 C169  29          	DB	29H	;ADD r
  571                    
  572 C16A  DE          	DEFB	'R'+O3		;66
  573 C16B  5F          	DEFB	'S'+O1
  574 C16C  7A          	DEFB	'T'+O2
  575 C16D  2B          	DB	2BH	;RST a
  576                    
  577                   ;Befehle mit Vorbyte CB:
  578                    
  579 C16E  A0          	DB	0A0H		;67
  580 C16F  2C          	DEFB	' '+O1
  581 C170  29          	DB	29H
  582 C171  2A          	DB	2AH	;Versch.-Bef.
  583                    
  584 C172  CE          	DEFB	'B'+O3		;68
  585 C173  55          	DEFB	'I'+O1
  586 C174  7A          	DEFB	'T'+O2
  587 C175  0C          	DB	0CH	;BIT b,r
  588                    
  589 C176  DE          	DEFB	'R'+O3		;69
  590 C177  51          	DEFB	'E'+O1
  591 C178  79          	DEFB	'S'+O2
  592 C179  0C          	DB	0CH
  593 C17A  2A          	DB	2AH	;RES b,r
  594                    
  595 C17B  DF          	DEFB	'S'+O3		;6A
  596 C17C  51          	DEFB	'E'+O1
  597 C17D  7A          	DEFB	'T'+O2
  598 C17E  0C          	DB	0CH
  599 C17F  2A          	DB	2AH	;SET b,r
  600                    
  601                   ;Befehle mit Vorbyte ED:
  602                    
  603 C180  D5          	DEFB	'I'+O3		;6B
  604 C181  5A          	DEFB	'N'+O1
  605 C182  52          	DEFB	'F'+O1	;INF
  606                    
  607 C183  DB          	DEFB	'O'+O3		;6C
  608 C184  60          	DEFB	'T'+O1
  609 C185  4F          	DEFB	'C'+O1
  610 C186  58          	DEFB	'L'+O1	;OTCL
KC-Debugger     							    SLR180 1.31 Page  21
REAS    Z80

  611                    
  612 C187  80          	DB	80H		;6D
  613 C188  55          	DEFB	'I'+O1
  614 C189  0B          	DB	0BH	;LD I,A
  615                    
  616 C18A  80          	DB	80H		;6E
  617 C18B  0A          	DB	0AH
  618 C18C  55          	DEFB	'I'+O1	;LD A,I
  619                    
  620 C18D  DE          	DEFB	'R'+O3		;6F
  621 C18E  5E          	DEFB	'R'+O1
  622 C18F  50          	DEFB	'D'+O1	;RRD
  623                    
  624 C190  81          	DB	81H		;70
  625 C191  55          	DEFB	'I'+O1	;RETI
  626                    
  627 C192  80          	DB	80H		;71
  628 C193  5E          	DEFB	'R'+O1
  629 C194  0B          	DB	0BH	;LD R,A
  630                    
  631 C195  80          	DB	80H		;72
  632 C196  0A          	DB	0AH
  633 C197  5E          	DEFB	'R'+O1	;LD A,R
  634                    
  635 C198  DE          	DEFB	'R'+O3		;73
  636 C199  00          	DB	0	;RLD
  637                    
  638 C19A  90          	DB	90H		;74
  639 C19B  1A          	DB	1AH
  640 C19C  09          	DB	9	;SBC dd,dd
  641                    
  642 C19D  80          	DB	80H		;75
  643 C19E  06          	DB	6
  644 C19F  09          	DB	9	;LD (nn),dd
  645                    
  646 C1A0  8E          	DB	8EH		;76
  647 C1A1  1A          	DB	1AH
  648 C1A2  09          	DB	9	;ADC HL,dd
  649                    
  650 C1A3  80          	DB	80H		;77
  651 C1A4  08          	DB	8
  652 C1A5  06          	DB	6	;LD dd,(nn)
  653                    
  654 C1A6  D5          	DEFB	'I'+O3		;78
  655 C1A7  74          	DEFB	'N'+O2
  656 C1A8  21          	DB	21H
  657 C1A9  38          	DEFB	','+O1
  658 C1AA  34          	DEFB	'('+O1
  659 C1AB  4F          	DEFB	'C'+O1
  660 C1AC  35          	DEFB	')'+O1	;IN r,(C)
  661                    
  662 C1AD  83          	DB	83H		;79
  663 C1AE  34          	DEFB	'('+O1
  664 C1AF  4F          	DEFB	'C'+O1
  665 C1B0  35          	DEFB	')'+O1
  666 C1B1  38          	DEFB	','+O1
  667 C1B2  21          	DB	21H	;OUT (C),r
  668                    
KC-Debugger     							    SLR180 1.31 Page  22
REAS    Z80

  669 C1B3  DA          	DEFB	'N'+O3		;7A
  670 C1B4  51          	DEFB	'E'+O1
  671 C1B5  53          	DEFB	'G'+O1	;NEG
  672                    
  673 C1B6  81          	DB	81H		;7B
  674 C1B7  5A          	DEFB	'N'+O1	;RETN
  675                    
  676 C1B8  D8          	DEFB	'L'+O3		;7C
  677 C1B9  50          	DEFB	'D'+O1
  678 C1BA  24          	DB	24H	;LDI
  679                    
  680 C1BB  CF          	DEFB	'C'+O3		;7D
  681 C1BC  5C          	DEFB	'P'+O1
  682 C1BD  24          	DB	24H	;CPI
  683                    
  684 C1BE  D5          	DEFB	'I'+O3		;7E
  685 C1BF  5A          	DEFB	'N'+O1
  686 C1C0  24          	DB	24H	;INI
  687                    
  688 C1C1  DB          	DEFB	'O'+O3		;7F
  689 C1C2  60          	DEFB	'T'+O1
  690 C1C3  24          	DB	24H	;OTI
  691                    
  692 C1C4  DB          	DEFB	'O'+O3		;80
  693 C1C5  61          	DEFB	'U'+O1
  694 C1C6  60          	DEFB	'T'+O1
  695 C1C7  24          	DB	24H	;OUTI
  696                    
  697 C1C8  D5          	DEFB	'I'+O3		;81
  698 C1C9  73          	DEFB	'M'+O2
  699 C1CA  3C          	DEFB	'0'+O1	;IM 0
  700                    
  701 C1CB  D5          	DEFB	'I'+O3		;82
  702 C1CC  73          	DEFB	'M'+O2
  703 C1CD  3D          	DEFB	'1'+O1	;IM 1
  704                    
  705 C1CE  D5          	DEFB	'I'+O3		;83
  706 C1CF  73          	DEFB	'M'+O2
  707 C1D0  3E          	DEFB	'2'+O1	;IM 2
  708                    
  709 C1D1  82          	DB	082H	;NOP	;84
  710                    
  711 C1D2  D0          	DEFB	'D'+O3		;85
  712 C1D3  68          	DEFB	'B'+O2
  713 C1D4  25          	DB	25H	;DB n
  714                    
  715 C1D5  D0          	DEFB	'D'+O3		;86
  716 C1D6  68          	DEFB	'B'+O2
  717 C1D7  33          	DB	27H+O1	;DB '
  718                    
  719 C1D8  D0          	DEFB	'D'+O3		;87
  720 C1D9  7D          	DEFB	'W'+O2	;DW
  721                   ;
  722                   ;Beginn Reassembler:
  723                   ;___________________
  724                   ;
  725 C1DA  FE CB       NIND:	CP	0CBH		;CB?
  726 C1DC  21 6001     	LD	HL,BEG/2+1
KC-Debugger     							    SLR180 1.31 Page  23
REAS    Z80

  727 C1DF  20 1E       	JR	NZ,NCB
  728 C1E1  2C          	INC	L
  729 C1E2  CB 49       	BIT	1,C		;Index?
  730 C1E4  28 20       	JR	Z,ZBYTE
  731 C1E6  CB F9       	SET	7,C
  732 C1E8  13          	INC	DE
  733 C1E9  18 1B       	JR	ZBYTE
  734                    
  735                   ;Befehl reassemblieren (Adresse in DE):
  736                    
  737 C1EB  0E 00       DIS:	LD	C,0
  738 C1ED  1A          BLE:	LD	A,(DE)
  739 C1EE  FE DD       	CP	0DDH		;IX?
  740 C1F0  20 04       	JR	NZ,NDD
  741 C1F2  0E 02       	LD	C,2
  742 C1F4  18 06       	JR	WE
  743                   	;
  744 C1F6  FE FD       NDD:	CP	0FDH		;IY?
  745 C1F8  20 E0       	JR	NZ,NIND
  746 C1FA  0E 03       	LD	C,3
  747 C1FC  13          WE:	INC	DE	;Adr.+1
  748 C1FD  18 EE       	JR	BLE
  749                   	;
  750 C1FF  FE ED       NCB:	CP	0EDH		;ED?
  751 C201  20 04       	JR	NZ,NED
  752 C203  2D          	DEC	L
  753 C204  0E 00       	LD	C,0
  754 C206  13          ZBYTE:	INC	DE
  755 C207  29          NED:	ADD	HL,HL
  756 C208  46          	LD	B,(HL)	;ab Befehl
  757 C209  23          	INC	HL
  758 C20A  6E          	LD	L,(HL)
  759 C20B  1A          SUCH:	LD	A,(DE)	;OP-Code
  760 C20C  A6          	AND	(HL)	;Maske
  761 C20D  23          	INC	HL
  762 C20E  FD          	DB	0FDh	;LD	LY,A
  763 C20F  6F          	LD	L,A	;merken
  764 C210  7E          CMP:	LD	A,(HL)
  765 C211  23          	INC	HL
  766 C212  FE FF       	CP	-1
  767 C214  28 F5       	JR	Z,SUCH
  768 C216  04          	INC	B	;Bef.-Zaehler
  769 C217  FD          	DB	0FDh	;CP	LY
  770 C218  BD          	CP	L
  771 C219  20 F5       	JR	NZ,CMP
  772 C21B  C5          	PUSH	BC
  773 C21C  1A          	LD	A,(DE)
  774 C21D  13          	INC	DE
  775 C21E  FD          	DB	0FDh	;LD	LY,A
  776 C21F  6F          	LD	L,A
  777 C220  0F          	RRCA
  778 C221  0F          	RRCA
  779 C222  0F          	RRCA
  780 C223  E6 07       	AND	7
  781 C225  47          	LD	B,A
  782 C226  F1          	POP	AF	;Bef.-Nr.
  783 C227  18 7A       	JR	PLA
  784                    
KC-Debugger     							    SLR180 1.31 Page  24
REAS    Z80

  785 C229  1A          EE:	LD	A,(DE)
  786 C22A  13          	INC	DE
  787 C22B  6F          	LD	L,A
  788 C22C  26 00       	LD	H,0
  789 C22E  FE 80       	CP	80H
  790 C230  38 01       	JR	C,NCOR
  791 C232  25          	DEC	H
  792 C233  19          NCOR:	ADD	HL,DE
  793 C234  CD C37E     	CALL	OFSET
  794 C237  C3 C328     JPHL:	JP	OUTHL
  795                   ;
  796                   ; Ausgabe einer 16-Bit-Zahl
  797                   ; PE:	DE	Adresszeiger
  798                   ;
  799 C23A  1A          NN:	LD	A,(DE)		; Low lesen
  800 C23B  13          	INC	DE		; naechstes Byte
  801 C23C  6F          	LD	L,A
  802 C23D  1A          	LD	A,(DE)		; High lesen
  803 C23E  13          	INC	DE		; naechstes Byte
  804 C23F  67          	LD	H,A
  805 C240  18 F5       	JR	JPHL
  806                   ;
  807                   ; Ausgabe einer 8-Bit-Zahl
  808                   ; PE:	DE	Adresszeiger
  809                   ;
  810 C242  1A          NE:	LD	A,(DE)
  811 C243  13          	INC	DE
  812 C244  6F          	LD	L,A
  813 C245  26 00       	LD	H,0
  814 C247  18 EE       	JR	JPHL
  815                    
  816 C249  07          RS:	RLCA
  817 C24A  07          	RLCA
  818 C24B  07          	RLCA
  819 C24C  6F          	LD	L,A
  820 C24D  26 00       	LD	H,0
  821 C24F  18 E6       	JR	JPHL
  822                   ;
  823                   ; Zeichen-Anzeige aus Token
  824                   ; PE:	A	Byte 
  825                   ;
  826 C251  C6 3C       BE:	ADD	'0'+O1
  827 C253  FE 2C       PRIA:	CP	' '+O1
  828 C255  38 29       	JR	C,MACRO	;<2CH
  829 C257  D6 0C       	SUB	O1
  830 C259  FE 20       	CP	' '
  831 C25B  28 10       	JR	Z,TABU
  832 C25D  FE 29       	CP	')'
  833 C25F  20 02       	JR	NZ,PRIH
  834 C261  CB 91       	RES	2,C
  835 C263  FE 5B       PRIH:	CP	5BH
  836 C265  DA CB06     	JP	C,AUSZEI
  837 C268  D6 1A       	SUB	1AH
  838 C26A  CD CB06     	CALL	AUSZEI
  839 C26D  CD CAFB     TABU:	CALL	AUSTAB		; Ausgabe Trennzeichen
  840 C270  3A B791     	LD	A,(POCU)
  841 C273  A7          	AND	A
  842 C274  C8          	RET	Z
KC-Debugger     							    SLR180 1.31 Page  25
REAS    Z80

  843 C275  3A B7A0     SPC:	LD	A,(CURSO)
  844 C278  FE 0A       	CP	10
  845 C27A  D0          	RET	NC
  846 C27B  CD CAFB     	CALL	AUSTAB		; Ausgabe Trennzeichen
  847 C27E  18 F5       	JR	SPC
  848                   
  849 C280  E5          MACRO:	PUSH	HL
  850 C281  21 C2E4     	LD	HL,HLRET
  851 C284  E5          	PUSH	HL
  852 C285  FE 1D       	CP	1DH
  853 C287  38 1A       	JR	C,PLA	;<1DH
  854 C289  FE 25       	CP	25H
  855 C28B  30 2A       	JR	NC,MA	;25H...2BH
  856 C28D  FE 1F       	CP	1FH
  857 C28F  38 0C       	JR	C,MM2	;1DH...1EH
  858 C291  20 02       	JR	NZ,MM1	;20H...24H
  859 C293  CB C0       	SET	0,B	;1FH
  860 C295  3D          MM1:	DEC	A
  861 C296  FE 22       	CP	22H
  862 C298  38 03       	JR	C,MM2
  863 C29A  CB 90       	RES	2,B
  864 C29C  3D          	DEC	A
  865 C29D  87          MM2:	ADD	A
  866 C29E  87          	ADD	A
  867 C29F  87          	ADD	A	;*8
  868 C2A0  D6 DB       	SUB	0DBH
  869 C2A2  80          	ADD	B
  870 C2A3  CB 49       PLA:	BIT	1,C	;Index-Befehl?
  871 C2A5  28 54       	JR	Z,NM	;nein
  872 C2A7  FE 1A       	CP	1AH	;HL?
  873 C2A9  20 3B       	JR	NZ,NHL
  874 C2AB  3E 55       	LD	A,'I'+O1
  875 C2AD  CD C253     	CALL	PRIA
  876 C2B0  79          XY:	LD	A,C
  877 C2B1  E6 01       	AND	1		; IX oder IY
  878 C2B3  C6 64       	ADD	'X'+O1
  879 C2B5  18 9C       	JR	PRIA
  880                    
  881 C2B7  C6 B8       MA:	ADD	Low(MAC)-25H	; Sprungtabelle
  882 C2B9  6F          	LD	L,A		; berechnen
  883 C2BA  6E          	LD	L,(HL)		; und dann laden
  884 C2BB  78          	LD	A,B
  885 C2BC  CB 79       	BIT	7,C
  886 C2BE  E9          	JP	(HL)		; Ansprung
  887                    
  888 C2BF  20 29       RE:	JR	NZ,ME
  889 C2C1  FD          RA:	DB	0FDH		;LD	A,LY
  890 C2C2  7D          	LD	A,L
  891 C2C3  E6 07       	AND	7		; Bit 2..0
  892 C2C5  47          	LD	B,A
  893 C2C6  3E 20       	LD	A,20H
  894 C2C8  18 D3       	JR	MM2
  895                    
  896 C2CA  C8          R1:	RET	Z
  897 C2CB  FD          	DB	0FDH		;LD	A,LY
  898 C2CC  7D          	LD	A,L
  899 C2CD  E6 07       	AND	7
  900 C2CF  FE 06       	CP	6
KC-Debugger     							    SLR180 1.31 Page  26
REAS    Z80

  901 C2D1  20 03       	JR	NZ,HM
  902 C2D3  CB 71       	BIT	6,C
  903 C2D5  C0          	RET	NZ
  904 C2D6  3E 38       HM:	LD	A,','+O1
  905 C2D8  CD C253     	CALL	PRIA
  906 C2DB  18 E4       	JR	RA
  907                   ;
  908                   ; 1-Byte-Sprungtabelle
  909                   ; H-Teil aller Routinen muss gleich sein (auch HLRET) !!!
  910                   ;
  911 C2DD  42          MAC:	DB	Low(NE)	;n		8-Bit-Zahl
  912 C2DE  3A          	DB	Low(NN)	;nn		16-Bit-Zahl
  913 C2DF  29          	DB	Low(EE)	;e
  914 C2E0  51          	DB	Low(BE)	;bit
  915 C2E1  BF          	DB	Low(RE)	;reg.
  916 C2E2  CA          	DB	Low(R1)	;zusatz-reg.
  917 C2E3  49          	DB	Low(RS)	;restart
  918                   
  919 C2E4  E1          HLRET:	POP	HL
  920 C2E5  C9          	RET
  921                   IF2
  922         0000      IF	High(HLRET) NE High(NE)
  924                   ENDIF
  925         0000      IF	High(HLRET) NE High(NN)
  927                   ENDIF
  928         0000      IF	High(HLRET) NE High(EE)
  930                   ENDIF
  931         0000      IF	High(HLRET) NE High(BE)
  933                   ENDIF
  934         0000      IF	High(HLRET) NE High(RE)
  936                   ENDIF
  937         0000      IF	High(HLRET) NE High(R1)
  939                   ENDIF
  940         0000      IF	High(HLRET) NE High(RS)
  942                   ENDIF
  943                   ENDIF
  944                   ;-------
  945 C2E6  FE 2B       NHL:	CP	2BH	;M?
  946 C2E8  20 11       	JR	NZ,NM
  947 C2EA  CB F1       ME:	SET	6,C
  948 C2EC  CB D1       	SET	2,C
  949 C2EE  3E 39       	LD	A,39H
  950 C2F0  CB 79       	BIT	7,C
  951 C2F2  28 07       	JR	Z,NM
  952 C2F4  1B          	DEC	DE
  953 C2F5  1B          	DEC	DE
  954 C2F6  CD C2FB     	CALL	NM		; Ausgabe als Adresse
  955 C2F9  13          	INC	DE
  956 C2FA  C9          	RET
  957                   ;
  958                   ; Anzeige Mnemonik
  959                   ; PE:	A	Kennung
  960                   ;	C
  961                   ;
  962 C2FB  3C          NM:	INC	A
  963 C2FC  21 C062     	LD	HL,BMNE		; Tabelle der Mnemoniken
  964 C2FF  23          SCH:	INC	HL
  965 C300  CB 7E       	BIT	7,(HL)		; Token-Ende?
KC-Debugger     							    SLR180 1.31 Page  27
REAS    Z80

  966 C302  28 FB       	JR	Z,SCH		; noch nicht
  967 C304  3D          	DEC	A		; Kennung gefunden?
  968 C305  20 F8       	JR	NZ,SCH		; noch nicht
  969 C307  7E          PRST:	LD	A,(HL)
  970 C308  E6 7F       	AND	7FH
  971 C30A  CD C253     	CALL	PRIA	;anzeigen
  972 C30D  23          	INC	HL
  973 C30E  CB 7E       	BIT	7,(HL)		; neuer Token?
  974 C310  28 F5       	JR	Z,PRST		; nein, weiter anzeigen
  975 C312  7D          	LD	A,L
  976 C313  3D          	DEC	A
  977 C314  E6 FE       	AND	0FEH
  978 C316  FE C0       	CP	0C0H	;H oder L?
  979 C318  C0          	RET	NZ
  980 C319  CB 49       	BIT	1,C
  981 C31B  C8          	RET	Z	;kein Indexbef.
  982 C31C  CB 71       	BIT	6,C
  983 C31E  C0          	RET	NZ
  984 C31F  FD          	DB	0FDH	;LD	A,LY
  985 C320  7D          	LD	A,L
  986 C321  E6 C7       	AND	0C7H
  987 C323  FE 46       	CP	46H
  988 C325  C8          	RET	Z
  989 C326  18 88       	JR	XY	;HX,LX,HY,LY
  990                    
  991                   ;Ausgabe HL als HEX-Zahl:
  992 C328  CB 51       OUTHL:	BIT	2,C		; Vorzeichen beachten?
  993 C32A  28 12       	JR	Z,OU1		; nein
  994 C32C  7D          	LD	A,L
  995 C32D  A7          	AND	A
  996 C32E  C8          	RET	Z		; ??? zusaetzlich in ROM-Version ???
  997                   ;	JR	NZ,OU0		; ??? fehlt in ROM-Version ???
  998                   ;	LD	A,8		; ??? fehlt in ROM-Version ???
  999                   ;	JR	OU6		; ??? fehlt in ROM-Version ???
 1000 C32F  F2 C339     OU0:	JP	P,OU7	;Plus
 1001 C332  ED 44       	NEG
 1002 C334  6F          	LD	L,A
 1003 C335  3E 2D       	LD	A,'-'	;Minus
 1004 C337  18 02       	JR	OU4		; ??? zusaetzlich in ROM-Version ???
 1005                   	;
 1006 C339  3E 2B       OU7:	LD	A,'+'		; ??? zusaetzlich in ROM-Version ???
 1007 C33B  CD CB06     OU4:	CALL	AUSZEI
 1008 C33E  C5          OU1:	PUSH	BC
 1009 C33F  22 B797     	LD	(NUMVX),HL	; Zahl hier ablegen
 1010 C342  01 0440     	LD	BC,440H		; B=4: 4 Stellen untersuchen
 1011                   				; Bit 6(C) gesetzt: fuehrende Nullen weglassen
 1012 C345  21 B797     OU2:	LD	HL,NUMVX
 1013 C348  AF          	XOR	A
 1014 C349  ED 6F       	RLD
 1015 C34B  23          	INC	HL
 1016 C34C  ED 6F       	RLD
 1017 C34E  A7          	AND	A		; diese Stelle = 0?
 1018 C34F  20 07       	JR	NZ,OU3		; nein, diese Stelle anzeigen
 1019 C351  CB 71       	BIT	6,C		; Ausgabe laeuft?
 1020 C353  28 03       	JR	Z,OU3		; ja, auch 0 anzeigen
 1021 C355  10 EE       	DJNZ	OU2
 1022 C357  04          	INC	B		; Falls alle 4 Stellen 0 sind, diese einmalig anzeigen
 1023 C358  C6 30       OU3:	ADD	30H		; 0..9
KC-Debugger     							    SLR180 1.31 Page  28
REAS    Z80

 1024 C35A  FE 3A       	CP	3AH		; groesser als 9?
 1025 C35C  38 0E       	JR	C,OU5		; nein
 1026 C35E  C6 07       	ADD	7		; HEX-Korrektur: A..F
 1027 C360  CB 71       	BIT	6,C		; Ausgabe laeuft?
 1028 C362  28 08       	JR	Z,OU5
 1029 C364  F5          	PUSH	AF
 1030 C365  3E 30       	LD	A,'0'
 1031 C367  CD CB06     	CALL	AUSZEI		; Zeichen anzeigen
 1032 C36A  0C          	INC	C		; angezeigte Zeichen mitzaehlen
 1033 C36B  F1          	POP	AF
 1034 C36C  CD CB06     OU5:	CALL	AUSZEI		; Zeichen anzeigen
 1035 C36F  0C          	INC	C		; angezeigte Zeichen mitzaehlen
 1036 C370  CB B1       	RES	6,C		; merken, dass Ausgabe laeuft
 1037 C372  10 D1       	DJNZ	OU2
 1038 C374  79          	LD	A,C
 1039 C375  E6 FE       	AND	0FEH
 1040 C377  C1          	POP	BC
 1041 C378  C8          	RET	Z
 1042 C379  3E 48       	LD	A,'H'		; H fuer HEX-Zahl anhaengen
 1043 C37B  C3 CB06     OU6:	JP	AUSZEI
 1044                   
 1045                   ;--Offset berechnen--
 1046 C37E  D5          OFSET:	PUSH	DE
 1047 C37F  ED 5B A883  	LD	DE,(ROFFS)	; Offset fuer Ausgabe
 1048 C383  19          	ADD	HL,DE		; addieren
 1049 C384  D1          	POP	DE
 1050 C385  C9          	RET
 1051                   ;
 1052                   ; 6 bekannte Prologbytes:
 1053                   ; Die ersten 4 werden immer verwendet, die naechsten beiden nur
 1054                   ; wenn kein anderes in der Kommandozeile angegeben wurde
 1055                   ;
 1056 C386  7F          PROBY:	DB	7FH		; CAOS
 1057 C387  DD          	DB	0DDH		; EDAS
 1058 C388  FD          	DB	0FDH		; TEMO
 1059 C389  A1          	DB	0A1H		; JEDIT
 1060 C38A  3D          	DB	3DH		; M052 USB-Terminal bis CAOS 4.2
 1061 C38B  3E          	DB	3EH		; M052 USB-Terminal ab CAOS 4.3
 1062                   ;	DB	0EDH		; RAMDOS, BASICMENU, COPY, (Frank Klemm?)
 1063                   ;	DB	0E8H		; ??? (Frank Klemm?)
 1064                   ;	DB	0BBH		; in HOUSE verwendet
 1065                   ;	DB	0BCH		; in PENGO verwendet
 1066                   
 1067                   ;
 1068                   ; eine Zeile reassemblieren
 1069                   ; (Einsprung wird auch von TEMO mitbenutzt)
 1070                   ; PE:	DE	Adresse
 1071                   ; PA:	DE	Adresse nach diesem Befehl
 1072                   ;
 1073 C38C  3E 02       DISASS:	LD	A,2		; Zeile loeschen
 1074 C38E  CD CB06     	CALL	AUSZEI
 1075 C391  D5          	PUSH	DE
 1076 C392  E1          	POP	HL
 1077 C393  CD C37E     	CALL	OFSET		; Offset addieren, falls gesetzt
 1078 C396  CD CB1F     	CALL	AUSHL		; Adresse anzeigen
 1079 C399  CD CAFB     	CALL	AUSTAB		; Ausgabe Trennzeichen
 1080 C39C  D5          ZEILE:	PUSH	DE
 1081 C39D  E1          	POP	HL
KC-Debugger     							    SLR180 1.31 Page  29
REAS    Z80

 1082 C39E  3A A882     	LD	A,(DMODE)	; TEST, ob DEFx auszugeben ist
 1083 C3A1  A7          	AND	A
 1084 C3A2  20 69       	JR	NZ,DIS1		; Special Mode
 1085 C3A4  CD CDDA     	CALL	LENG
 1086 C3A7  3A A880     	LD	A,(MS)		; Markenschalter
 1087 C3AA  CB 5F       	BIT	3,A		; neues Menuewort gefunden?
 1088 C3AC  28 0F       	JR	Z,DEF3		; nein
 1089 C3AE  3E 03       	LD	A,3		; Special-Mode 3: Menuewort
 1090 C3B0  32 A882     	LD	(DMODE),A	; setzen
 1091 C3B3  0E 00       	LD	C,0
 1092 C3B5  3E 87       	LD	A,87H		; Kennung fuer DW
 1093 C3B7  CD C2FB     	CALL	NM		; Anzeige "DW"
 1094 C3BA  C3 C23A     	JP	NN		; Anzeige 16-Bit-Zahl
 1095                    
 1096 C3BD  06 00       DEF3:	LD	B,0
 1097 C3BF  7E          	LD	A,(HL)
 1098 C3C0  FE CD       	CP	0CDH		;CD
 1099 C3C2  20 1A       	JR	NZ,DEF4
 1100 C3C4  23          	INC	HL
 1101 C3C5  7E          	LD	A,(HL)
 1102 C3C6  FE 21       	CP	21H		;21
 1103 C3C8  28 04       	JR	Z,ZU5
 1104 C3CA  FE 03       	CP	3		;03
 1105 C3CC  20 17       	JR	NZ,ZU4
 1106 C3CE  23          ZU5:	INC	HL
 1107 C3CF  7E          	LD	A,(HL)
 1108 C3D0  FE F0       	CP	0F0H		;F0
 1109 C3D2  20 1F       	JR	NZ,ZU2
 1110 C3D4  23          ZU0:	INC	HL
 1111 C3D5  7E          	LD	A,(HL)
 1112 C3D6  FE 23       	CP	23H		;23
 1113 C3D8  06 04       	LD	B,4
 1114 C3DA  28 02       	JR	Z,DEF4
 1115 C3DC  06 01       	LD	B,1
 1116 C3DE  78          DEF4:	LD	A,B
 1117 C3DF  32 A882     	LD	(DMODE),A
 1118 C3E2  C3 C1EB     	JP	DIS
 1119                    
 1120 C3E5  FE 0F       ZU4:	CP	0FH		;0F
 1121 C3E7  20 0B       	JR	NZ,ZU1
 1122 C3E9  23          	INC	HL
 1123 C3EA  7E          	LD	A,(HL)
 1124 C3EB  FE F0       	CP	0F0H		;F0
 1125 C3ED  20 04       	JR	NZ,ZU2
 1126 C3EF  06 05       	LD	B,5
 1127 C3F1  18 EB       	JR	DEF4
 1128                   
 1129 C3F3  2B          ZU2:	DEC	HL		;Direkte Ausgabe
 1130 C3F4  D5          ZU1:	PUSH	DE		;UP 23H
 1131 C3F5  E5          	PUSH	HL
 1132 C3F6  2A B7B0     	LD	HL,(SUTAB)
 1133 C3F9  11 0046     	LD	DE,2*23H	; UP OSTR
 1134 C3FC  19          	ADD	HL,DE
 1135 C3FD  D1          	POP	DE
 1136 C3FE  1A          	LD	A,(DE)
 1137 C3FF  BE          	CP	(HL)
 1138 C400  20 08       	JR	NZ,ZU3
 1139 C402  23          	INC	HL
KC-Debugger     							    SLR180 1.31 Page  30
REAS    Z80

 1140 C403  13          	INC	DE
 1141 C404  1A          	LD	A,(DE)
 1142 C405  BE          	CP	(HL)
 1143 C406  20 02       	JR	NZ,ZU3
 1144 C408  06 02       	LD	B,2
 1145 C40A  D1          ZU3:	POP	DE
 1146 C40B  18 D1       	JR	DEF4
 1147                   ;
 1148                   ; Special Mode:
 1149                   ; 1: DB xx
 1150                   ; 2: DB '...'
 1151                   ; 3: Menuewort
 1152                   ; 4: DB xx..
 1153                   ; 5: DW xxxx-$-2
 1154                   ;
 1155 C40D  D6 02       DIS1:	SUB	2
 1156 C40F  38 32       	JR	C,DEF10		; DB xx
 1157 C411  28 0C       	JR	Z,DEF7		; Zeichenkette
 1158 C413  32 A882     	LD	(DMODE),A
 1159 C416  3D          	DEC	A
 1160 C417  28 06       	JR	Z,DEF7		; Menuewort
 1161 C419  3D          	DEC	A
 1162 C41A  28 2B       	JR	Z,DEF11		; DB
 1163 C41C  AF          	XOR	A
 1164 C41D  18 36       	JR	DEF13		; DW
 1165                    
 1166                   ;DB '...'
 1167 C41F  1A          DEF7:	LD	A,(DE)		; String
 1168 C420  FE 20       	CP	20H
 1169 C422  38 23       	JR	C,DEF11		; Steuerzeichen
 1170 C424  FE 80       	CP	80H
 1171 C426  30 1F       	JR	NC,DEF11	; > 80h
 1172 C428  3E 86       	LD	A,86H		; Kennung fuer DB '
 1173 C42A  CD C2FB     	CALL	NM		; Anzeige "DB '"
 1174 C42D  06 14       	LD	B,20		; maximale Laenge der Zeichenkette
 1175 C42F  1A          DEF8:	LD	A,(DE)
 1176 C430  FE 20       	CP	20H
 1177 C432  38 0A       	JR	C,DEF9
 1178 C434  FE 80       	CP	80H
 1179 C436  30 06       	JR	NC,DEF9
 1180 C438  CD CB06     	CALL	AUSZEI
 1181 C43B  13          	INC	DE
 1182 C43C  10 F1       	DJNZ	DEF8
 1183 C43E  3E 27       DEF9:	LD	A,27H		; '
 1184 C440  C3 CB06     	JP	AUSZEI
 1185                    
 1186                   ;Einmal: DB xx
 1187 C443  3C          DEF10:	INC	A		; A=0
 1188 C444  32 A882     	LD	(DMODE),A	; Special-Mode beenden
 1189                   ;Bis (DE)=0: DB xx
 1190 C447  1A          DEF11:	LD	A,(DE)		; Zeichen holen
 1191 C448  A7          	AND	A
 1192 C449  20 03       	JR	NZ,DEF12
 1193 C44B  32 A882     	LD	(DMODE),A	; bei 0 = Special-Mode beenden
 1194 C44E  3E 85       DEF12:	LD	A,85H		; Kennung fuer DB
 1195 C450  0E 00       	LD	C,0
 1196 C452  C3 C2FB     	JP	NM		; Anzeige "DB"
 1197                    
KC-Debugger     							    SLR180 1.31 Page  31
REAS    Z80

 1198                   ;DW xxxx-$-2 , (DMODE)=0:
 1199 C455  3E 87       DEF13:	LD	A,87H		; Kennung fuer DW
 1200 C457  0E 00       	LD	C,0
 1201 C459  CD C2FB     	CALL	NM		; Anzeige "DW"
 1202 C45C  1A          	LD	A,(DE)
 1203 C45D  6F          	LD	L,A
 1204 C45E  13          	INC	DE
 1205 C45F  1A          	LD	A,(DE)
 1206 C460  67          	LD	H,A
 1207 C461  13          	INC	DE
 1208 C462  19          	ADD	HL,DE
 1209 C463  CD C37E     	CALL	OFSET
 1210 C466  CD C328     	CALL	OUTHL
 1211 C469  21 C47B     	LD	HL,DW2		; Zeichenkette -$-2
 1212 C46C  01 0400     	LD	BC,400H		; 4 Zeichen
 1213 C46F  7E          DEF15:	LD	A,(HL)
 1214 C470  23          	INC	HL
 1215 C471  CD CB06     	CALL	AUSZEI
 1216 C474  10 F9       	DJNZ	DEF15
 1217 C476  AF          	XOR	A		; Special-Mode ausschalten
 1218 C477  32 A882     	LD	(DMODE),A
 1219 C47A  C9          	RET
 1220                   	;
 1221 C47B  2D 24 2D 32 DW2:	DB	'-$-2'
 1222                   ;_______________________________________
 1223                   ;
 1224                   ;  Disassembler mit Bildschirmausgabe und Scrolling
 1225                   ;
 1226                   ;	%DISASS Adresse (Zeilen Ausgabeadresse Prologbytes)
 1227                   ;
 1228 C47F  7F7F        	DW	7F7FH
 1229 C481  44 49 53 41 	DB	'DISASS'	; so hiess das Menuewort bereits im Modul M027
 1230 C487  01          	DB	1
 1231 C488  E5          	PUSH	HL
 1232 C489  21 DBF8     	LD	HL,CEXIT	; Bei RET erst noch den USER-ROM abschalten
 1233 C48C  E3          	EX	(SP),HL
 1234 C48D  B7          LIST:	OR	A		; Adresse angegeben?
 1235 C48E  20 28       	JR	NZ,AR0
 1236 C490  CD D7CB     	CALL	HELP
 1237 C493  44 49 53 41 	DB	'DISASS Aadr (Zeilen (Ausadr (Prol)))',0
 1238                   	;
 1239 C4B8  C5          AR0:	PUSH	BC		; Ausgabeadresse
 1240 C4B9  4B          	LD	C,E		; C=Zeilenzahl
 1241 C4BA  D1          	POP	DE		; DE=Ausgabeadresse
 1242 C4BB  E5          	PUSH	HL		; Adresse
 1243 C4BC  F5          	PUSH	AF
 1244 C4BD  FE 02       	CP	2
 1245 C4BF  38 04       	JR	C,AR1		; <2 Parameter
 1246 C4C1  79          	LD	A,C
 1247 C4C2  B7          	OR	A		; Zeilenzahl = 0 ?
 1248 C4C3  20 05       	JR	NZ,AR2
 1249 C4C5  ED 4B B79F  AR1:	LD	BC,(WINLG+1)	; Zeilenlaenge von Fenster verwenden
 1250 C4C9  0D          	DEC	C
 1251 C4CA  FD          AR2:	DB	0FDH		; LD HY,C
 1252 C4CB  61          	LD	H,C		; Zeilenzahl in HY
 1253 C4CC  F1          	POP	AF
 1254 C4CD  FE 03       	CP	3
 1255 C4CF  30 02       	JR	NC,AR4		; >2 Parameter
KC-Debugger     							    SLR180 1.31 Page  32
REAS    Z80

 1256 C4D1  D1          	POP	DE
 1257 C4D2  D5          	PUSH	DE		; Ausgabeadresse = Reassembleradresse
 1258 C4D3  E1          AR4:	POP	HL
 1259 C4D4  EB          	EX	DE,HL
 1260 C4D5  B7          	OR	A
 1261 C4D6  ED 52       	SBC	HL,DE		; Differenz berechnen und als
 1262 C4D8  22 A883     	LD	(ROFFS),HL	; Offset merken
 1263 C4DB  D5          	PUSH	DE
 1264 C4DC  21 C386     	LD	HL,PROBY	; 6 bekannte Prologbytes
 1265 C4DF  11 A885     	LD	DE,PBY		; Merkbereich im IRM
 1266 C4E2  01 0006     	LD	BC,6		; kopieren
 1267 C4E5  ED B0       	LDIR
 1268 C4E7  FE 04       	CP	4
 1269 C4E9  38 06       	JR	C,AR5		; <4 Parameter
 1270 C4EB  2A B788     	LD	HL,(ARG4)	; 1/2 zusaetzliche(s) Prologbyte(s)
 1271 C4EE  22 A889     	LD	(PBY+4),HL	; letzte beide in PBY ueberschreiben
 1272 C4F1  D1          AR5:	POP	DE		; Adresse
 1273 C4F2  ED 43 A881  	LD	(CMODE),BC	; 0=Bildschirm, Specialmode aus
 1274 C4F6  3E 09       	LD	A,9
 1275 C4F8  32 B791     	LD	(POCU),A
 1276 C4FB  FD          LI3:	DB	0FDh		; LD B,HY
 1277 C4FC  44          	LD	B,H		; Zeilenzahl
 1278 C4FD  C5          LI4:	PUSH	BC		; Zeilenzaehler
 1279 C4FE  D5          	PUSH	DE		; Adresse
 1280 C4FF  CD C38C     	CALL	DISASS		; Befehl reassemblieren
 1281 C502  E1          	POP	HL		; Adresse alt
 1282 C503  D5          	PUSH	DE		; Adresse neu
 1283 C504  EB          	EX	DE,HL
 1284 C505  B7          	OR	A
 1285 C506  ED 52       	SBC	HL,DE		; Anzahl Bytes fuer den Befehl
 1286 C508  7D          	LD	A,L
 1287 C509  FE 04       	CP	4
 1288 C50B  38 02       	JR	C,BY0		; weniger als 4
 1289 C50D  3E 04       	LD	A,4		; sonst auf 4 begrenzen
 1290 C50F  4F          BY0:	LD	C,A		; Byteanzahl in C
 1291                   ;	LD	A,25
 1292                   ;	LD	(CURSO),A	; Spalte fuer Zeichenanzeige setzen
 1293 C510  3A B7A0     BY1:	LD	A,(CURSO)
 1294 C513  FE 19       	CP	25		; Spalte fuer Zeichenanzeige erreicht?
 1295 C515  28 12       	JR	Z,BY2		; Zeichen anzeigen
 1296 C517  30 1B       	JR	NC,BY4		; bereits darueber -> sofort die HEX-Werte
 1297 C519  3E 09       	LD	A,9		; Cursor nach rechts
 1298 C51B  CD CB0E     	CALL	DOCHR
 1299 C51E  18 F0       	JR	BY1
 1300                   	;
 1301 C520  3E 01       LI1:	LD	A,1
 1302 C522  32 A882     	LD	(DMODE),A
 1303 C525  06 01       LI2:	LD	B,1
 1304 C527  18 D4       	JR	LI4
 1305                   	;
 1306 C529  41          BY2:	LD	B,C		; Anzahl Zeichen
 1307 C52A  D5          	PUSH	DE
 1308 C52B  1A          BY3:	LD	A,(DE)
 1309 C52C  13          	INC	DE
 1310 C52D  CD F003     	CALL	PV1
 1311 C530  42          	DEFB	CSTBT		; Zeichen anzeigen
 1312 C531  10 F8       	DJNZ	BY3
 1313 C533  D1          	POP	DE
KC-Debugger     							    SLR180 1.31 Page  33
REAS    Z80

 1314                   ;	LD	A,30
 1315                   ;	LD	(CURSO),A	; Spalte fuer HEX-Aanzeige setzen
 1316 C534  3A B7A0     BY4:	LD	A,(CURSO)
 1317 C537  FE 1E       	CP	30		; Spalte fuer Hex-Anzeige erreicht?
 1318 C539  28 09       	JR	Z,BY5
 1319 C53B  30 0F       	JR	NC,BY7
 1320 C53D  3E 09       	LD	A,9		; Cursor nach rechts
 1321 C53F  CD CB0E     	CALL	DOCHR
 1322 C542  18 F0       	JR	BY4
 1323                   	;
 1324 C544  41          BY5:	LD	B,C		; Anzahl Zeichen
 1325 C545  1A          BY6:	LD	A,(DE)
 1326 C546  13          	INC	DE
 1327 C547  CD CB35     	CALL	AUSA		; HEX anzeigen
 1328 C54A  10 F9       	DJNZ	BY6
 1329 C54C  D1          BY7:	POP	DE
 1330 C54D  CD D3D5     	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 1331 C550  C1          	POP	BC		; Zeilenzaehler (Bildschirm)
 1332 C551  CD F003     	CALL	PV1
 1333 C554  2A          	DB	BRKT		; BRK?
 1334 C555  D8          	RET	C
 1335 C556  10 A5       	DJNZ	LI4		; wiederholen bis Zeilenzahl erreicht ist
 1336 C558  CD F003     LI5:	CALL	PV1
 1337 C55B  04          	DB	KBD
 1338 C55C  FE 03       	CP	3	;BRK
 1339 C55E  C8          	RET	Z
 1340 C55F  FE 0D       	CP	CR	;Enter
 1341 C561  28 98       	JR	Z,LI3
 1342 C563  FE 0A       	CP	LF	;CUD
 1343 C565  28 3B       	JR	Z,LI9
 1344 C567  FE 09       	CP	9	;CUR
 1345 C569  28 BA       	JR	Z,LI2
 1346 C56B  FE 44       	CP	'D'
 1347 C56D  28 B1       	JR	Z,LI1
 1348 C56F  FE 08       	CP	8	;CUL
 1349 C571  28 36       	JR	Z,LI0
 1350 C573  FE 0B       	CP	0BH	;CUU
 1351 C575  20 E1       	JR	NZ,LI5
 1352 C577  3A B79F     	LD	A,(WINLG+1)	; Zeile
 1353 C57A  3D          	DEC	A
 1354 C57B  87          	ADD	A
 1355 C57C  47          LI6:	LD	B,A
 1356 C57D  FD E5       	PUSH	IY
 1357 C57F  D5          	PUSH	DE
 1358 C580  FD E1       	POP	IY
 1359 C582  C5          LI7:	PUSH	BC
 1360 C583  FD E5       	PUSH	IY
 1361 C585  D1          	POP	DE
 1362 C586  21 FFF0     	LD	HL,0FFF0H
 1363 C589  19          	ADD	HL,DE
 1364 C58A  CD CDDA     LI8:	CALL	LENG
 1365 C58D  E5          	PUSH	HL
 1366 C58E  FD E1       	POP	IY
 1367 C590  09          	ADD	HL,BC
 1368 C591  AF          	XOR	A
 1369 C592  ED 52       	SBC	HL,DE
 1370 C594  19          	ADD	HL,DE
 1371 C595  38 F3       	JR	C,LI8
KC-Debugger     							    SLR180 1.31 Page  34
REAS    Z80

 1372 C597  C1          	POP	BC
 1373 C598  10 E8       	DJNZ	LI7
 1374 C59A  FD E5       	PUSH	IY
 1375 C59C  D1          	POP	DE
 1376 C59D  FD E1       	POP	IY
 1377 C59F  32 A882     	LD	(DMODE),A
 1378 C5A2  CD F003     LI9:	CALL	PV1
 1379 C5A5  2D          	DB	HOME
 1380 C5A6  C3 C4FB     	JP 	LI3
 1381                   	;
 1382 C5A9  3A B79F     LI0:	LD	A,(WINLG+1)	; Zeile
 1383 C5AC  18 CE       	JR	LI6
 1384                   ;_______________________________________
 1385                   ;
 1386                   ; Markenreassembler mit Ausgabe auf verschiedene Medien
 1387                   ;
 1388                   ;	%QMR (alle Parameter werden im Dialog abgefragt)
 1389                   ;
 1390 C5AE  7F7F        	DW	7F7FH
 1391 C5B0  51 4D 52 01 	DB	'QMR',1
 1392 C5B4  E5          	PUSH	HL
 1393 C5B5  21 DBF8     	LD	HL,CEXIT	; Bei RET erst noch den USER-ROM abschalten
 1394 C5B8  E3          	EX	(SP),HL
 1395                   
 1396                   ; ---	Reasemmbler-Bereich -> ARG1, ARG2, ROFFS
 1397                   
 1398 C5B9  CD F003     EING2:	CALL	PV1
 1399 C5BC  23          	DB	OSTR
 1400 C5BD  02 52 65 61 	DB	2,'Reass.Bereich: ',0
 1401 C5CE  01 0F1C     	LD	BC,0F1CH
 1402 C5D1  CD CF38     	CALL	EIZE1		; Anfangs-, End- und Originaladresse abfragen
 1403 C5D4  D8          	RET	C		; BRK
 1404 C5D5  CD CF8F     	CALL	GETHEX		; 1. Argument erfassen
 1405 C5D8  38 DF       	JR	C,EING2		; Eingabe fehlerhaft
 1406 C5DA  2A B797     	LD	HL,(NUMVX)
 1407 C5DD  22 B782     	LD	(ARG1),HL	; Anfangsadresse merken
 1408 C5E0  13          	INC	DE		; Leerzeichen uebergehen
 1409 C5E1  CD CF8F     	CALL	GETHEX		; 2. Argument erfassen
 1410 C5E4  38 D3       	JR	C,EING2		; Eingabe fehlerhaft
 1411 C5E6  2A B797     	LD	HL,(NUMVX)
 1412 C5E9  22 B784     	LD	(ARG2),HL	; Endadresse merken
 1413 C5EC  13          	INC	DE		; Leerzeichen uebergehen
 1414 C5ED  CD CF8F     	CALL	GETHEX		; 3. Argument erfassen
 1415 C5F0  38 C7       	JR	C,EING2		; Eingabe fehlerhaft
 1416 C5F2  3A B796     	LD	A,(NUMNX)
 1417 C5F5  B7          	OR	A		; Anzahl Zeichen
 1418 C5F6  67          	LD	H,A
 1419 C5F7  6F          	LD	L,A
 1420 C5F8  28 09       	JR	Z,EING1		; kein 3. Argument angegeben
 1421 C5FA  2A B797     	LD	HL,(NUMVX)	; "Originaladresse"
 1422 C5FD  ED 5B B782  	LD	DE,(ARG1)
 1423 C601  ED 52       	SBC	HL,DE		; Offset zu Anfangsadresse berechnen
 1424 C603  22 A883     EING1:	LD	(ROFFS),HL	; Ausgebe-Offset
 1425                   
 1426                   ; ---	Markenbereich -> ARG3, ARG4
 1427                   
 1428 C606  CD D3D5     	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 1429 C609  CD F003     EING5:	CALL	PV1
KC-Debugger     							    SLR180 1.31 Page  35
REAS    Z80

 1430 C60C  23          	DB	OSTR
 1431 C60D  02 4D 61 72 	DB	2,'Markenbereich: '
 1432 C61D  00          	DB	0
 1433 C61E  2A B782     	LD	HL,(ARG1)	; Anfangsadresse und
 1434 C621  ED 5B B784  	LD	DE,(ARG2)	; Endadresse
 1435 C625  CD F003     	CALL	PV1
 1436 C628  1B          	DB	HLDE		; als Vorschlag fuer Markenbereich anzeigen
 1437 C629  01 0F17     	LD	BC,0F17H
 1438 C62C  CD CF38     	CALL	EIZE1		; Adressen abfragen
 1439 C62F  D8          	RET	C		; BRK
 1440 C630  CD CF8F     	CALL	GETHEX		; 1. Argument erfassen
 1441 C633  38 D4       	JR	C,EING5		; Eingabefehler
 1442 C635  2A B797     	LD	HL,(NUMVX)
 1443 C638  22 B786     	LD	(ARG3),HL	; Beginn Markenbereich merken
 1444 C63B  13          	INC	DE		; Leerzeichen uebergehen
 1445 C63C  CD CF8F     	CALL	GETHEX		; 2. Argument erfassen
 1446 C63F  38 C8       	JR	C,EING5		; Eingabefehler
 1447 C641  2A B797     	LD	HL,(NUMVX)
 1448 C644  22 B788     	LD	(ARG4),HL	; Ende Markenbereich merken
 1449                   
 1450                   ; ---	Markentabelle -> MTE
 1451                   
 1452 C647  CD D3D5     	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 1453                   ; ermitteln, wieviel RAM vorhanden ist von 200h bis C000h:
 1454 C64A  CD CF86     	CALL	IRM_OF		; IRM ausschalten
 1455 C64D  21 0200     	LD	HL,200H		; RAM-Beginn
 1456 C650  24          RAM:	INC	H		; +100h
 1457 C651  7C          	LD	A,H
 1458 C652  FE C0       	CP	0C0H		; C000h erreicht?
 1459 C654  28 08       	JR	Z,RAM8		; ja
 1460 C656  7E          	LD	A,(HL)		; Speicherinhalt lesen
 1461 C657  2F          	CPL
 1462 C658  77          	LD	(HL),A		; negiert in Speicher schreiben
 1463 C659  BE          	CP	(HL)		; RAM?
 1464 C65A  2F          	CPL
 1465 C65B  77          	LD	(HL),A		; Originalwert zurueck schreiben
 1466 C65C  28 F2       	JR	Z,RAM		; ja, RAM vorhanden
 1467 C65E  CD CF7F     RAM8:	CALL	IRM_ON
 1468 C661  22 A88B     	LD	(MTE),HL	; als Marken-Ende eintragen
 1469                    
 1470 C664  2A A88B     EING15:	LD	HL,(MTE)	; ermitteltes RAM-Ende vorschlagen fuer das
 1471 C667  CD F003     	CALL	PV1		; Ende der Markentabelle
 1472 C66A  23          	DB	OSTR
 1473 C66B  02 4D 61 72 	DB	2,'Markentabelle: ',0
 1474 C67C  CD D597     	CALL	HLHEX
 1475 C67F  01 0F12     	LD	BC,0F12H
 1476 C682  CD CF38     	CALL	EIZE1		; Adresse abfragen bzw. bestaetigen lassen
 1477 C685  D8          	RET	C		; BRK
 1478 C686  CD CF8F     	CALL	GETHEX		; Argument erfassen
 1479 C689  38 D9       	JR	C,EING15	; Eingabefehler
 1480 C68B  2A B797     	LD	HL,(NUMVX)
 1481 C68E  22 A88B     	LD	(MTE),HL	; Ende der Markentabelle ab hier
 1482                    
 1483                   ; ---	Bis zu 6 verschiedene Prologbytes abfragen
 1484                   
 1485 C691  CD D3D5     	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 1486 C694  CD F003     EING11:	CALL	PV1
 1487 C697  23          	DB	OSTR
KC-Debugger     							    SLR180 1.31 Page  36
REAS    Z80

 1488 C698  02 36 20 50 	DB	2,'6 Prologbytes: ',0
 1489 C6A9  06 04       	LD	B,4		; 4 Prologbytes vorgeben
 1490 C6AB  21 C386     	LD	HL,PROBY	; stehen hier im ROM
 1491 C6AE  7E          EING9:	LD	A,(HL)
 1492 C6AF  CD D318     	CALL	AHSPC		; anzeigen + Leerzeichen
 1493 C6B2  23          	INC	HL
 1494 C6B3  10 F9       	DJNZ	EING9
 1495 C6B5  01 0F1F     	LD	BC,0F1FH
 1496 C6B8  CD CF38     	CALL	EIZE1		; Eingabe der max. 6 Prologbytes
 1497 C6BB  D8          	RET	C		; BRK
 1498 C6BC  06 06       	LD	B,6		; 6 Argumente auswerten
 1499 C6BE  21 A885     	LD	HL,PBY		; ablegen ab PBY
 1500 C6C1  E5          EING10:	PUSH	HL
 1501 C6C2  CD CF8F     	CALL	GETHEX		; Argument erfassen
 1502 C6C5  E1          	POP	HL
 1503 C6C6  38 CC       	JR	C,EING11	; Eingabefehler, wiederholen
 1504 C6C8  3A B797     	LD	A,(NUMVX)	; Wert
 1505 C6CB  77          	LD	(HL),A		; eintragen
 1506 C6CC  13          	INC	DE
 1507 C6CD  23          	INC	HL
 1508 C6CE  10 F1       	DJNZ	EING10
 1509                    
 1510                   ; ---	Markenschalter EIN/AUS -> BIT 4(MS)
 1511                   
 1512 C6D0  CD F003     	CALL	PV1
 1513 C6D3  23 0A 02    	DB	OSTR,LF,2
 1514 C6D6  4D 61 72 6B 	DB	'Markenschalter:',0
 1515 C6E6  21 A880     	LD	HL,MS		; Markenschalter
 1516 C6E9  AF          	XOR	A		; Voreinstellung: 0=Markenschalter=AUS,
 1517 C6EA  77          EING8:	LD	(HL),A		;		  1=Trennzeichen=TAB
 1518 C6EB  3E 10       	LD	A,10H
 1519 C6ED  32 B7A0     	LD	(CURSO),A
 1520 C6F0  CB 66       	BIT	4,(HL)		; aktuell ein oder aus?
 1521 C6F2  28 0A       	JR	Z,EING6		; entsprechend anzeigen
 1522 C6F4  CD F003     	CALL	PV1
 1523 C6F7  23 45 49 4E 	DB	OSTR,'EIN',0
 1524 C6FC  18 08       	JR	EING7
 1525                   	;
 1526 C6FE  CD F003     EING6:	CALL	PV1
 1527 C701  23 41 55 53 	DB	OSTR,'AUS',0
 1528 C706  CD F003     EING7:	CALL	PV1
 1529 C709  04          	DB	KBD
 1530 C70A  FE 03       	CP	3		; BRK = Abbruch
 1531 C70C  28 47       	JR	Z,NLCY1
 1532 C70E  FE 20       	CP	' '		; mit Leertaste umschalten
 1533 C710  20 05       	JR	NZ,EING4
 1534 C712  3E 10       	LD	A,10H		; Bit 4
 1535 C714  AE          	XOR	(HL)		; umschalten
 1536 C715  18 D3       	JR	EING8		; neu eintragen und anzeigen
 1537                   	;
 1538 C717  FE 0D       EING4:	CP	CR		; CR = Bestaetigung
 1539 C719  20 EB       	JR	NZ,EING7
 1540                   
 1541                   ; ---	Trennzeichen TAB/SPC -> Bit 6(MS)
 1542                   
 1543 C71B  CD F003     	CALL	PV1
 1544 C71E  23 0A 02    	DB	OSTR,LF,2	; neue Zeile loeschen
 1545 C721  32 2E 54 72 	DB	'2.Trennzeichen:',0
KC-Debugger     							    SLR180 1.31 Page  37
REAS    Z80

 1546 C731  21 A880     	LD	HL,MS		; Markenschalter
 1547 C734  3E 10       EING21:	LD	A,10H
 1548 C736  32 B7A0     	LD	(CURSO),A
 1549 C739  CB 76       	BIT	6,(HL)		; aktuell TAB oder Leerzeichen?
 1550 C73B  28 0A       	JR	Z,EING22	; entsprechend anzeigen
 1551 C73D  CD F003     	CALL	PV1
 1552 C740  23 53 50 43 	DB	OSTR,'SPC',0
 1553 C745  18 08       	JR	EING23
 1554                   	;
 1555 C747  CD F003     EING22:	CALL	PV1
 1556 C74A  23 54 41 42 	DB	OSTR,'TAB',0
 1557 C74F  CD F003     EING23:	CALL	PV1
 1558 C752  04          	DB	KBD
 1559 C753  FE 03       	CP	3		; BRK = Abbruch
 1560 C755  CA CF44     NLCY1:	JP	Z,NLCY
 1561 C758  FE 20       	CP	' '		; mit Leertaste umschalten
 1562 C75A  20 06       	JR	NZ,EING24
 1563 C75C  3E 40       	LD	A,40H		; Bit 6
 1564 C75E  AE          	XOR	(HL)		; umschalten
 1565 C75F  77          	LD	(HL),A		; eintragen
 1566 C760  18 D2       	JR	EING21		; und neu anzeigen
 1567                   	;
 1568 C762  FE 0D       EING24:	CP	CR		; CR = Bestaetigung
 1569 C764  20 E9       	JR	NZ,EING23
 1570                   ;
 1571                   ; Auswahl Ausgabemedium
 1572                   ; PA:	CMODE	1=Tape, 2=Disk, 3=Printer, 4=Screen, 5=Edas
 1573                   ; neu:		1=Device, 2=Printer, 3=Screen, 4=Edas
 1574                   ;
 1575 C766  CD F003     	CALL	PV1		
 1576 C769  23          	DB	OSTR
 1577 C76A  0A 02       	DB	LF,2		; neue Zeile loeschen
 1578 C76C  44 65 76 69 	DB	'Device=',0
 1579 C774  3E FE       	LD	A,0FEh		; aktuellen Treibername anzeigen
 1580 C776  CD F003     	CALL	PV1
 1581 C779  49          	DB	DEVICE		; 49H - neue Funktion seit CAOS 4.6
 1582 C77A  CD F003     	CALL	PV1
 1583 C77D  23          	DB	OSTR
 1584 C77E  2C 20 50 72 	DB	', Print, Screen, Assembler? ',0
 1585 C79B  CD F003     EING14:	CALL	PV1
 1586 C79E  04          	DB	KBD
 1587 C79F  FE 03       	CP	3		; BRK
 1588 C7A1  28 B2       	JR	Z,NLCY1
 1589 C7A3  E6 DF       	AND	0DFH		; CAPS
 1590 C7A5  2E 01       	LD	L,1
 1591 C7A7  FE 44       	CP	'D'
 1592 C7A9  28 0F       	JR	Z,EING13	; 1 = Device
 1593 C7AB  2C          	INC	L
 1594 C7AC  FE 50       	CP	'P'
 1595 C7AE  28 0A       	JR	Z,EING13	; 2 = Printer
 1596 C7B0  2C          	INC	L
 1597 C7B1  FE 53       	CP	'S'
 1598 C7B3  28 05       	JR	Z,EING13	; 3 = Screen
 1599 C7B5  2C          	INC	L
 1600 C7B6  FE 41       	CP	'A'
 1601 C7B8  20 E1       	JR	NZ,EING14	; 4 = Edas/ASM
 1602 C7BA  CD F003     EING13:	CALL	PV1
 1603 C7BD  00          	DB	CRT		; Zeichen zur Bestaetigung anzeigen
KC-Debugger     							    SLR180 1.31 Page  38
REAS    Z80

 1604 C7BE  CD F003     	CALL	PV1
 1605 C7C1  23          	DB	OSTR
 1606 C7C2  0A 02 00    	DB	LF,2,0		; naechste Zeile loeschen
 1607 C7C5  26 00       	LD	H,0		; Special-Mode = AUS
 1608 C7C7  22 A881     	LD	(CMODE),HL	; Ausgabeziel einstellen
 1609 C7CA  3E 04       	LD	A,4
 1610 C7CC  BD          	CP	L		; Edas/ASM?
 1611 C7CD  20 58       	JR	NZ,EING30
 1612 C7CF  CD F003     EING31:	CALL	PV1		; Bei Edas: RAM-Beginn abfragen
 1613 C7D2  23          	DB	OSTR
 1614 C7D3  02 54 6F 70 	DB	2,'Top of RAM: 0200',0
 1615 C7E5  01 0C0F     	LD	BC,0C0FH
 1616 C7E8  CD CF38     	CALL	EIZE1		; Eingabe neuer Wert oder nur bestaetigen
 1617 C7EB  D8          	RET	C		; BRK
 1618 C7EC  CD CF8F     	CALL	GETHEX		; HEX-Zahl erfassen
 1619 C7EF  38 DE       	JR	C,EING31
 1620 C7F1  2A B797     	LD	HL,(NUMVX)	; eingegebener Wert
 1621 C7F4  22 0042     	LD	(OBJ),HL	; als Beginn Maschinencode eintragen
 1622 C7F7  CD CF86     	CALL	IRM_OF
 1623 C7FA  36 0D       	LD	(HL),CR		; Speicher mit CR initialisieren
 1624 C7FC  CD CF7F     	CALL	IRM_ON
 1625 C7FF  23          	INC	HL
 1626 C800  22 0018     	LD	(T1A),HL	; Beginn Teiltext 1 setzen
 1627 C803  22 001C     	LD	(T1E),HL	; Ende Teiltext 1 an gleicher Stelle = leer
 1628 C806  2A A88B     	LD	HL,(MTE)	; Ende der QMR-Marken ist gleichzeitig
 1629 C809  22 0046     	LD	(MTOP),HL	; der Anfang der EDAS-Markentabelle
 1630 C80C  22 0044     	LD	(MBOT),HL	; und auch das Ende der EDAS-Markentabelle
 1631 C80F  11 B7F5     	LD	DE,NAMP		; Namenspuffer
 1632 C812  21 C81C     	LD	HL,QMRNAM	; Defaultbelegung QMR
 1633 C815  01 000B     	LD	BC,11		; 8.3
 1634 C818  ED B0       	LDIR			; Dateiname eintragen
 1635 C81A  18 45       	JR	EING32
 1636                   	;
 1637 C81C  51 4D 52 2D QMRNAM:	DB	'QMR-REASASM'
 1638                   	;
 1639 C827  3E 02       EING30:	LD	A,2		; Printer?
 1640 C829  BD          	CP	L
 1641 C82A  20 3C       	JR	NZ,EING19
 1642 C82C  CD F003     EING17:	CALL	PV1		; Beim Drucker: Randeinstellung abfragen
 1643 C82F  23          	DB	OSTR
 1644 C830  02 52 61 6E 	DB	2,'Rand Zeilen: ',0
 1645 C83F  01 0D11     	LD	BC,0D11H
 1646 C842  CD CF38     	CALL	EIZE1
 1647 C845  D8          	RET	C		; BRK
 1648 C846  CD CF8F     	CALL	GETHEX		; 1. Argument erfassen
 1649 C849  38 E1       	JR	C,EING17	; Eingabefehler
 1650 C84B  3A B797     	LD	A,(NUMVX)
 1651 C84E  32 B792     	LD	(PRLI),A	; Leerzeichen am linken Rand
 1652 C851  13          	INC	DE
 1653 C852  CD CF8F     	CALL	GETHEX		; 2. Argument erfassen
 1654 C855  38 D5       	JR	C,EING17	; Eingabefehler
 1655 C857  3A B797     	LD	A,(NUMVX)
 1656 C85A  32 B793     	LD	(PRZE),A	; Zeilenzahl pro Druckseite	
 1657 C85D  AF          	XOR	A
 1658 C85E  32 B794     	LD	(PRZC),A	; Zeilenzaehler auf 0 initialisieren
 1659 C861  CD F003     EING32:	CALL	PV1
 1660 C864  23          	DB	OSTR
 1661 C865  0A 02 00    	DB	LF,2,0		; Neue Zeile loeschen
KC-Debugger     							    SLR180 1.31 Page  39
REAS    Z80

 1662 C868  CD F003     EING19:	CALL	PV1
 1663 C86B  23          	DB	OSTR
 1664 C86C  0A 02 4F 6B 	DB	LF,2,'Ok ? (J)/N',LF,2,0
 1665 C87B  CD F003     	CALL	PV1
 1666 C87E  04          	DB	KBD		; letzte Abfrage bevor es los geht
 1667 C87F  FE 03       	CP	3		; BRK
 1668 C881  C8          	RET	Z
 1669 C882  E6 DF       	AND	0DFH
 1670 C884  FE 4E       	CP	'N'		; und "N" bricht ab, alles andere startet
 1671 C886  C8          	RET	Z		; den Reassembler-Lauf
 1672 C887  2A A88B     	LD	HL,(MTE)
 1673 C88A  2B          	DEC	HL		; Speicherende zur Vorbereitung der Marken
 1674 C88B  22 A88F     	LD	(MTM),HL	; Zeiger setzen
 1675 C88E  CD F003     	CALL	PV1
 1676 C891  23          	DB	OSTR
 1677 C892  0A 02 50 41 	DB	LF,2,'PASS 1',0
 1678 C89B  CD CCBF     	CALL	PASS1		; Erzeugen der Markentabelle
 1679 C89E  3A A881     	LD	A,(CMODE)
 1680 C8A1  FE 04       	CP	4		; Edas?
 1681 C8A3  20 07       	JR	NZ,PASS2
 1682 C8A5  2A A88D     	LD	HL,(MTA)	; hier beginnt jetzt die QMR-Markentabelle
 1683 C8A8  2B          	DEC	HL
 1684 C8A9  22 001E     	LD	(T2A),HL	; Text 2 kann bis max. zur Markentabelle gehen
 1685 C8AC  CD F003     PASS2:	CALL	PV1
 1686 C8AF  23          	DB	OSTR
 1687 C8B0  08 32 0A 02 	DB	8,'2',LF,2,0	; Anzeige Pass 2
 1688 C8B5  3A A881     	LD	A,(CMODE)
 1689 C8B8  3D          	DEC	A
 1690 C8B9  20 2C       	JR	NZ,REAS		; Ausgabe nicht auf Device
 1691                   
 1692                   ; Vorblock erzeugen:
 1693 C8BB  21 C8E3     	LD	HL,CASM		; Dateityp ASM
 1694 C8BE  CD CAE5     	CALL	RECIN		; Dateiname eingeben und Kassettenpuffer fuellen
 1695 C8C1  D8          	RET	C		; BRK gedrueckt
 1696 C8C2  21 B700     	LD	HL,CASS		; Dateiname im Kassettenpuffer
 1697 C8C5  CD F021     	CALL	PV7		; Vorblock ausgeben
 1698 C8C8  02          	DB	2		; ISRO
 1699 C8C9  D8          	RET	C		; Fehler aufgetreten
 1700 C8CA  3E 02       RECD:	LD	A,2
 1701 C8CC  CD F003     	CALL	PV1		; Bildschirmzeile loeschen ???
 1702 C8CF  00          	DB	CRT
 1703 C8D0  DD 7E 02    	LD	A,(IX+2)	; Blocknummer
 1704 C8D3  CD F003     	CALL	PV1
 1705 C8D6  1C          	DB	AHEX		; anzeigen
 1706 C8D7  3E 3E       	LD	A,'>'
 1707 C8D9  CD F003     	CALL	PV1		; dahinter ein > anzeigen
 1708 C8DC  00          	DB	CRT
 1709 C8DD  AF          	XOR	A		; Zeiger in Kassettenpuffer
 1710 C8DE  32 B7DA     	LD	(DTPTR),A	; mit 0 initialisieren
 1711 C8E1  18 04       	JR	REAS
 1712                   ;
 1713 C8E3  41 53 4D 00 CASM:	DB	'ASM',0	
 1714                   ;
 1715 C8E7  AF          REAS:	XOR	A		; gedachte Cursorposition von Ausgabe
 1716 C8E8  32 B791     	LD	(POCU),A
 1717 C8EB  21 A880     	LD	HL,MS		; Markenschalter
 1718 C8EE  CB AE       	RES	5,(HL)
 1719 C8F0  CD CB2A     	CALL	AUSTR
KC-Debugger     							    SLR180 1.31 Page  40
REAS    Z80

 1720 C8F3  0D 0A 09    	DB	CR,LF,9		; neue Zeile, mit TAB beginnen
 1721 C8F6  4F 52 47 00 	DB	'ORG',0
 1722 C8FA  CD CB48     	CALL	AUS9		; Tabulator oder Leerzeichen
 1723 C8FD  3E 30       	LD	A,'0'
 1724 C8FF  CD CB5C     	CALL	AUS
 1725 C902  2A B782     	LD	HL,(ARG1)	; Anfangsadresse Reassemblierbereich
 1726 C905  CD C37E     	CALL	OFSET		; mit Offset verrechnen
 1727 C908  CD CB1F     	CALL	AUSHL		; und als ORG-Adresse angeben
 1728 C90B  CD CB2A     	CALL	AUSTR
 1729 C90E  48          	DB	'H'		; Hex-Kennung anfuegen
 1730 C90F  0D 0A       	DB	CR,LF		; neue Zeile
 1731 C911  3B 00       	DB	';',0		; darunter noch eine Kommentarzeile
 1732                   ;
 1733                   ; Neue Zeile initialisieren
 1734                   ;
 1735 C913  CD F003     DIZ1:	CALL	PV1
 1736 C916  2A          	DB	BRKT		; BREAK-Taste in jeder Zeile abfragen
 1737 C917  38 4C       	JR	C,DIZ3		; Abbruch...
 1738 C919  21 A893     	LD	HL,ZKS		; Stringspeicher
 1739 C91C  22 A891     	LD	(PZS),HL	; Pointer auf Anfang setzen
 1740 C91F  11 A894     	LD	DE,ZKS+1
 1741 C922  01 0030     	LD	BC,48
 1742 C925  36 00       	LD	(HL),0
 1743 C927  ED B0       	LDIR			; Stringspeicher loeschen
 1744 C929  2A B782     	LD	HL,(ARG1)	; aktuelle Adresse
 1745 C92C  ED 5B B784  	LD	DE,(ARG2)	; Endadresse
 1746 C930  B7          	OR	A
 1747 C931  ED 52       	SBC	HL,DE		; fertig?
 1748 C933  D2 CA7E     	JP	NC,DIZ16	; ja
 1749 C936  3A A881     	LD	A,(CMODE)
 1750 C939  FE 04       	CP	4		; Edas?
 1751 C93B  C2 C9D6     	JP	NZ,DIZ4		; nein
 1752 C93E  2A 001E     	LD	HL,(T2A)	; Quelltextspeicher Anfang
 1753 C941  ED 5B 001C  	LD	DE,(T1E)	; Quelltextspeicher Ende
 1754 C945  B7          	OR	A
 1755 C946  ED 52       	SBC	HL,DE		; Quelltextspeicher voll?
 1756 C948  D2 C9D6     	JP	NC,DIZ4		; nein
 1757 C94B  CD F003     DIZ2:	CALL	PV1
 1758 C94E  23          	DB	OSTR
 1759 C94F  0D 0A       	DB	CR,LF
 1760 C951  3C 3C 3C 20 	DB	'<<< No Memory >>>'
 1761 C962  0D 0A 00    	DB	CR,LF,0
 1762 C965  3A A881     DIZ3:	LD	A,(CMODE)
 1763 C968  FE 04       	CP	4		; Edas?
 1764 C96A  20 4E       	JR	NZ,DIZ23
 1765                   
 1766                   ; EDAS-Quelltext abschliessen
 1767                   
 1768 C96C  CD CF86     	CALL	IRM_OF
 1769 C96F  2A 001C     	LD	HL,(T1E)
 1770 C972  ED 4B 0018  	LD	BC,(T1A)
 1771 C976  A7          	AND	A
 1772 C977  ED 42       	SBC	HL,BC
 1773 C979  44          	LD	B,H
 1774 C97A  4D          	LD	C,L		; BC = Groesse des erzeugten Quelltextes
 1775 C97B  2A 0046     	LD	HL,(MTOP)	; Speicherende
 1776 C97E  2B          	DEC	HL
 1777 C97F  22 001A     	LD	(T2E),HL	; Ende Text 2
KC-Debugger     							    SLR180 1.31 Page  41
REAS    Z80

 1778 C982  36 03       	LD	(HL),3		; Ende-Kennung eintragen
 1779 C984  2B          	DEC	HL
 1780 C985  36 0A       	LD	(HL),LF		; letzte Zeile mit CR,LF abschliessen
 1781 C987  2B          	DEC	HL
 1782 C988  36 0D       	LD	(HL),CR
 1783 C98A  2B          	DEC	HL
 1784 C98B  EB          	EX	DE,HL
 1785 C98C  2A 001C     	LD	HL,(T1E)
 1786 C98F  2B          	DEC	HL
 1787 C990  ED B8       	LDDR			; Quelltext zu Teiltext2 verschieben
 1788 C992  23          	INC	HL
 1789 C993  22 001C     	LD	(T1E),HL	; Teiltext1 jetzt wieder leer
 1790 C996  13          	INC	DE
 1791 C997  ED 53 001E  	LD	(T2A),DE	; Quelltext beginnt hier an Teiltext2
 1792 C99B  ED 43 0020  	LD	(COL),BC	; Cursor Pos 0,0
 1793 C99F  ED 43 0040  	LD	(OFFS),BC	; Offset=0
 1794 C9A3  21 2808     	LD	HL,2808H
 1795 C9A6  22 0010     	LD	(RANDL),HL	; linker Rand=8, rechter Rand=40 (fuer Editor)
 1796 C9A9  CD CF7F     	CALL	IRM_ON
 1797 C9AC  CD F003     	CALL	PV1
 1798 C9AF  23          	DB	OSTR
 1799 C9B0  0A 02       	DB	LF,2
 1800 C9B2  25 52 45 41 	DB	'%REASM',0
 1801 C9B9  C9          	RET
 1802                   	;
 1803 C9BA  CD CB2A     DIZ23:	CALL	AUSTR
 1804 C9BD  0D 0A       	DB	CR,LF		; Ausgabe neue Zeile (CR+LF)
 1805 C9BF  03 00       	DB	3,0		; Ende-Kennung als letztes Zeichen anhaengen
 1806 C9C1  3A A881     	LD	A,(CMODE)
 1807 C9C4  3D          	DEC	A
 1808 C9C5  20 07       	JR	NZ,ENDD		; keine Device-Ausgabe
 1809 C9C7  01 0100     	LD	BC,100H
 1810 C9CA  CD F021     	CALL	PV7		; Ausgabedatei schliessen mit
 1811 C9CD  03          	DB	3		; CSRO
 1812 C9CE  CD F003     ENDD:	CALL	PV1
 1813 C9D1  23          	DB	OSTR
 1814 C9D2  0A 02 00    	DB	LF,2,0
 1815 C9D5  C9          	RET
 1816                   ;
 1817                   ; Marken setzen und Markentest:
 1818                   ;
 1819 C9D6  ED 5B B782  DIZ4:	LD	DE,(ARG1)	; aktuelle Adresse
 1820 C9DA  3A A882     	LD	A,(DMODE)
 1821 C9DD  F5          	PUSH	AF
 1822 C9DE  D5          	PUSH	DE
 1823 C9DF  CD C39C     	CALL	ZEILE		; einen Befehl reassemblieren -> Stringspeicher
 1824 C9E2  ED 53 B782  	LD	(ARG1),DE	; neue Adresse
 1825 C9E6  21 A880     	LD	HL,MS		; Markenschalter
 1826 C9E9  CB EE       	SET	5,(HL)
 1827 C9EB  E1          	POP	HL		; Adresse des soeben reassemblierten Befehls
 1828 C9EC  E5          	PUSH	HL
 1829 C9ED  CD CB55     	CALL	AUSCR		; Ausgabe neue Zeile (CR+LF)
 1830 C9F0  CD C37E     	CALL	OFSET		; Offset addieren
 1831 C9F3  CD CD7D     	CALL	ARGNET		; Marke setzen?
 1832 C9F6  E1          	POP	HL
 1833 C9F7  F1          	POP	AF
 1834 C9F8  FE 05       	CP	5
 1835 C9FA  28 16       	JR	Z,DIZ5
KC-Debugger     							    SLR180 1.31 Page  42
REAS    Z80

 1836 C9FC  B7          	OR	A
 1837 C9FD  20 7A       	JR	NZ,DIZ15
 1838 C9FF  CD CDDA     	CALL	LENG
 1839 CA02  28 0E       	JR	Z,DIZ5		; PC veraendernder Befehl
 1840 CA04  38 0C       	JR	C,DIZ5		; Relativsprung
 1841 CA06  3A A880     	LD	A,(MS)		; Markenschalter
 1842 CA09  CB 67       	BIT	4,A
 1843 CA0B  28 6C       	JR	Z,DIZ15		; nicht als Marke ausgeben
 1844 CA0D  CD CEAE     	CALL	SLD
 1845 CA10  20 67       	JR	NZ,DIZ15	; keine Wert enthalten im Befehl
 1846                   ;
 1847                   ;--Ausgabe einer Zeile mit Marke:
 1848                   ;
 1849 CA12  21 A893     DIZ5:	LD	HL,ZKS		; vorbereitete Zeile im Speicher
 1850 CA15  7E          DIZ6:	LD	A,(HL)		; Zeichen testen
 1851 CA16  FE 30       	CP	'0'
 1852 CA18  38 04       	JR	C,DIZ8		; kleiner als '0'
 1853 CA1A  FE 3A       	CP	'9'+1
 1854 CA1C  38 06       	JR	C,DIZ9		; Dezimalzahl erkannt
 1855 CA1E  CD CB5C     DIZ8:	CALL	AUS		; alles andere direkt ausgeben
 1856 CA21  23          	INC	HL
 1857 CA22  18 F1       	JR	DIZ6
 1858                   	;
 1859 CA24  E5          DIZ9:	push	hl
 1860 CA25  23          diz9a:	inc	hl		; Test auf 0FFFFH
 1861 CA26  7E          	ld	a,(hl)
 1862 CA27  FE 48       	cp	'H'
 1863 CA29  28 42       	jr	z,diz15a	; FFFFH nie als Marke ausgeben
 1864 CA2B  FE 46       	cp	'F'
 1865 CA2D  28 F6       	jr	z,diz9a		; weiter testen
 1866 CA2F  E1          	pop	hl
 1867                   
 1868 CA30  06 05       	LD	B,5		; Laenge testen, 5=Standard
 1869 CA32  E5          	PUSH	HL
 1870 CA33  7E          DIZ10:	LD	A,(HL)
 1871 CA34  B7          	OR	A		; Ende-0?
 1872 CA35  28 14       	JR	Z,DIZ11
 1873 CA37  FE 48       	CP	'H'		; Ende der HEX-Zahl?
 1874 CA39  28 10       	JR	Z,DIZ11
 1875 CA3B  FE 2C       	CP	','		; Komma trennt Zahlan
 1876 CA3D  28 0C       	JR	Z,DIZ11
 1877 CA3F  FE 29       	CP	')'		; Klammer beendet
 1878 CA41  28 08       	JR	Z,DIZ11
 1879 CA43  FE 2D       	CP	'-'		; Rechenzeichen beendet
 1880 CA45  28 04       	JR	Z,DIZ11
 1881 CA47  05          	DEC	B
 1882 CA48  23          	INC	HL
 1883 CA49  18 E8       	JR	DIZ10
 1884                   	;
 1885 CA4B  78          DIZ11:	LD	A,B		; restliche Anzahl
 1886 CA4C  A7          	AND	A		; genau 5 Zeichen (ohne das 'H' am Ende)?
 1887 CA4D  20 04       	JR	NZ,DIZ12	; nein
 1888 CA4F  E1          	POP	HL
 1889 CA50  23          	INC	HL		; erste fuehrende 0 uebergehen
 1890 CA51  E5          	PUSH	HL
 1891 CA52  3C          	INC	A		; Anzahl um 1 erhoehen
 1892 CA53  47          DIZ12:	LD	B,A
 1893 CA54  3E 55       	LD	A,'U'		; Marke mit 'U' einleiten
KC-Debugger     							    SLR180 1.31 Page  43
REAS    Z80

 1894 CA56  CD CB5C     DIZ13:	CALL	AUS
 1895 CA59  3E 30       	LD	A,'0'		; falls noetig, fuehrende Nullen ergaenzen
 1896 CA5B  10 F9       	DJNZ	DIZ13
 1897 CA5D  E1          	POP	HL
 1898 CA5E  7E          DIZ20:	LD	A,(HL)		; Zeichen testen
 1899 CA5F  23          	INC	HL
 1900 CA60  B7          	OR	A
 1901 CA61  CA C913     	JP	Z,DIZ1		; Ende
 1902 CA64  FE 48       	CP	'H'
 1903 CA66  28 06       	JR	Z,DIZ14		; Rest nach der Marke ausgeben
 1904 CA68  CD CB5C     	CALL	AUS		; HEX-Zahl als Name der Marke ausgeben
 1905 CA6B  18 F1       	JR	DIZ20
 1906                   ;
 1907                   ;--Ausgabe einer Zeile vom Zwischenspeicher:
 1908                   ;
 1909 CA6D  E1          diz15a:	pop	hl
 1910 CA6E  7E          DIZ14:	LD	A,(HL)
 1911 CA6F  B7          	OR	A
 1912 CA70  CA C913     	JP	Z,DIZ1
 1913 CA73  CD CB5C     	CALL	AUS
 1914 CA76  23          	INC	HL
 1915 CA77  18 F5       	JR	DIZ14
 1916                   	;
 1917 CA79  21 A893     DIZ15:	LD	HL,ZKS
 1918 CA7C  18 F0       	JR	DIZ14
 1919                   ;
 1920                   ;--Ende, Ausgabe restlicher Marken:
 1921                   ;
 1922 CA7E  ED 5B A88B  DIZ16:	LD	DE,(MTE)	; Ende der Markentabelle
 1923 CA82  2A A88D     	LD	HL,(MTA)	; Anfang Markentabelle
 1924 CA85  B7          	OR	A
 1925 CA86  ED 52       	SBC	HL,DE
 1926 CA88  D2 C965     	JP	NC,DIZ3		; fertig
 1927 CA8B  EB          	EX	DE,HL
 1928 CA8C  CD CF86     	CALL	IRM_OF
 1929 CA8F  2B          	DEC	HL
 1930 CA90  3E FF       	LD	A,-1
 1931 CA92  BE          	CP	(HL)		; Marke?
 1932 CA93  20 0D       	JR	NZ,DIZ18	; ja
 1933 CA95  2B          	DEC	HL
 1934 CA96  BE          	CP	(HL)		; FFFFh?
 1935 CA97  20 08       	JR	NZ,DIZ17	; nein, also Marke
 1936 CA99  CD CF7F     	CALL	IRM_ON
 1937 CA9C  22 A88B     	LD	(MTE),HL	; Ende der Markentabelle weiter setzen
 1938 CA9F  18 DD       	JR	DIZ16
 1939                    
 1940 CAA1  23          DIZ17:	INC	HL
 1941 CAA2  56          DIZ18:	LD	D,(HL)		; High-Teil der Marke
 1942 CAA3  2B          	DEC	HL
 1943 CAA4  5E          	LD	E,(HL)		; Low-Teil der Marke
 1944 CAA5  CD CF7F     	CALL	IRM_ON
 1945 CAA8  22 A88B     	LD	(MTE),HL	; Ende der Markentabelle weiter setzen
 1946 CAAB  21 A880     	LD	HL,MS		; Markenschalter
 1947 CAAE  CB 8E       	RES	1,(HL)
 1948 CAB0  EB          	EX	DE,HL
 1949 CAB1  CD CB55     	CALL	AUSCR		; Ausgabe neue Zeile (CR+LF)
 1950 CAB4  CD CDAD     	CALL	ARGNT6		; Ausgabe Unnnn Tabulator
 1951 CAB7  CD CB2A     	CALL	AUSTR
KC-Debugger     							    SLR180 1.31 Page  44
REAS    Z80

 1952 CABA  45 51 55 00 	DB	'EQU',0
 1953 CABE  CD CB48     	CALL	AUS9		; Tabulator oder Leerzeichen
 1954 CAC1  3E 30       	LD	A,'0'		; Adressen beginnen immer mit einer Ziffer
 1955 CAC3  CD CB5C     	CALL	AUS
 1956 CAC6  CD CB1F     	CALL	AUSHL		; zugehoerige Adresse
 1957 CAC9  3E 48       	LD	A,'H'		; HEX-Kennung anhaengen
 1958 CACB  CD CB5C     	CALL	AUS
 1959 CACE  3A A881     	LD	A,(CMODE)
 1960 CAD1  FE 04       	CP	4		; Edas?
 1961 CAD3  20 A9       	JR	NZ,DIZ16
 1962 CAD5  2A 001E     	LD	HL,(T2A)
 1963 CAD8  ED 5B 001C  	LD	DE,(T1E)
 1964 CADC  25          	DEC	H
 1965 CADD  B7          	OR	A
 1966 CADE  ED 52       	SBC	HL,DE
 1967 CAE0  DA C94B     	JP	C,DIZ2		; no Memory
 1968 CAE3  18 99       	JR	DIZ16		; weiter zur naechsten Marke
 1969                   ;
 1970                   ; Kassettenpuffer loeschen, Dateinamen eingeben und kopieren
 1971                   ;	(Routine wird von JEDIT und BSAVE mit benutzt!)
 1972                   ; PE:	HL=Zeiger auf Erweiterung (ASM oder JOY)
 1973                   ; PA:	CY=1:	Abbruch
 1974                   ;	sonst:	DE=CASS+80H, BC=0
 1975                   ; 
 1976 CAE5  CD CF1E     RECIN:	CALL	EIZE2		; Name eingeben
 1977 CAE8  D8          	RET	C		; BRK
 1978 CAE9  EB          	EX	DE,HL		; HL = Name
 1979 CAEA  11 B700     	LD	DE,CASS		; Name in den Kassettenpuffer kopieren
 1980 CAED  01 000B     	LD	BC,11
 1981 CAF0  ED B0       	LDIR
 1982 CAF2  CD D3D5     	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 1983 CAF5  AF          	XOR	A		; uebrige Bytes loeschen
 1984 CAF6  12          PUCL:	LD	(DE),A	
 1985 CAF7  1C          	INC	E	
 1986 CAF8  F8          	RET	M		; raus wenn B780H erreicht ist
 1987 CAF9  18 FB       	JR	PUCL
 1988                   ;
 1989                   ; Ausgabe Trennzeichen TAB oder Space:
 1990                   ;
 1991 CAFB  3A A880     AUSTAB:	LD	A,(MS)		; Markenschalter
 1992 CAFE  CB 77       	BIT	6,A
 1993 CB00  3E 09       	LD	A,9		; TAB
 1994 CB02  28 02       	JR	Z,AUSZEI
 1995 CB04  3E 20       	LD	A,' '		; Space
 1996                   ;
 1997                   ; Ausgabe eines Zeichens auf BS oder in Puffer:
 1998                   ;
 1999 CB06  F5          AUSZEI:	PUSH	AF
 2000 CB07  3A A881     	LD	A,(CMODE)
 2001 CB0A  A7          	AND	A	  	; Bildschirm?
 2002 CB0B  20 06       	JR	NZ,AUSZS	; -> Pufffer
 2003 CB0D  F1          	POP	AF
 2004 CB0E  CD F003     DOCHR:	CALL	PV1
 2005 CB11  24          	DB	OCHR
 2006 CB12  C9          	RET
 2007                   	;
 2008 CB13  F1          AUSZS:	POP	AF
 2009 CB14  E5          	PUSH	HL
KC-Debugger     							    SLR180 1.31 Page  45
REAS    Z80

 2010 CB15  2A A891     	LD	HL,(PZS)
 2011 CB18  77          	LD	(HL),A		; Puffer
 2012 CB19  23          	INC	HL
 2013 CB1A  22 A891     	LD	(PZS),HL
 2014 CB1D  E1          	POP	HL
 2015 CB1E  C9          	RET
 2016                   ;
 2017                   ;--Ausgabe von HL:
 2018                   ;
 2019 CB1F  F5          AUSHL:	PUSH	AF
 2020 CB20  7C          	LD	A,H
 2021 CB21  CD CB35     	CALL	AUSA
 2022 CB24  7D          	LD	A,L
 2023 CB25  CD CB35     	CALL	AUSA
 2024 CB28  F1          	POP	AF
 2025 CB29  C9          	RET
 2026                   ;
 2027                   ; Ausgabe einer Zeichenkette, die dem CALL folgr.
 2028                   ;
 2029 CB2A  E3          AUSTR:	EX	(SP),HL		; Stack und HL tauschen
 2030 CB2B  7E          AUSX:	LD	A,(HL)		; Zeichen holen
 2031 CB2C  23          	INC	HL		; naechste Adresse
 2032 CB2D  B7          	OR	A		; Ende-0?
 2033 CB2E  C4 CB5C     	CALL	NZ,AUS		; ausgeben, wenn nicht 0
 2034 CB31  20 F8       	JR	NZ,AUSX		; weiter, wenn nicht 0
 2035 CB33  E3          	EX	(SP),HL		; hier weiter abarbeiten
 2036 CB34  C9          	RET
 2037                   ;
 2038                   ;--Ausgabe von A:
 2039                   ;
 2040 CB35  F5          AUSA:	PUSH	AF
 2041 CB36  1F          	RRA
 2042 CB37  1F          	RRA
 2043 CB38  1F          	RRA
 2044 CB39  1F          	RRA
 2045 CB3A  CD CB3E     	CALL	AUSA1
 2046 CB3D  F1          	POP	AF
 2047 CB3E  E6 0F       AUSA1:	AND	0FH
 2048 CB40  C6 90       	ADD	90H
 2049 CB42  27          	DAA
 2050 CB43  CE 40       	ADC	40H
 2051 CB45  27          	DAA
 2052 CB46  18 14       	JR	AUS
 2053                   ;
 2054                   ; Ausgabe Tabulator oder Leerzeichen auf Ausgabegeraet:
 2055                   ;
 2056 CB48  3A A880     AUS9:	LD	A,(MS)		; Markenschalter
 2057 CB4B  CB 77       	BIT	6,A
 2058 CB4D  3E 20       	LD	A,' '		; Leerzeichen
 2059 CB4F  20 0B       	JR	NZ,AUS
 2060 CB51  3E 09       AUS91:	LD	A,9		; Tabulator
 2061 CB53  18 07       	JR	AUS
 2062                   ;
 2063                   ;--Ausgabe auf das Ausgabegeraet:
 2064                   ;
 2065 CB55  3E 0D       AUSCR:	LD	A,CR
 2066 CB57  CD CB5C     	CALL	AUS
 2067 CB5A  3E 0A       	LD	A,LF
KC-Debugger     							    SLR180 1.31 Page  46
REAS    Z80

 2068 CB5C  C5          AUS:	PUSH	BC
 2069 CB5D  D5          	PUSH	DE
 2070 CB5E  E5          	PUSH	HL
 2071 CB5F  F5          	PUSH	AF		; Zeichencode
 2072 CB60  3A A881     	LD	A,(CMODE)
 2073 CB63  A7          	AND	A
 2074 CB64  28 3F       	JR	Z,AUSBS		; 0=Bildschirm (REAS)
 2075 CB66  3D          	DEC	A
 2076 CB67  28 43       	JR	Z,AUSCC		; 1=Device
 2077 CB69  3D          	DEC	A
 2078 CB6A  28 69       	JR	Z,AUSPR		; 2=Drucker
 2079 CB6C  3D          	DEC	A
 2080 CB6D  28 12       	JR	Z,AUSSC		; 3=Screen (QMR)
 2081                   
 2082                   ; 4 = Edas
 2083 CB6F  2A 001C     	LD	HL,(T1E)	; aktuelle Position
 2084 CB72  F1          	POP	AF
 2085 CB73  CD CF86     	CALL	IRM_OF
 2086 CB76  77          	LD	(HL),A		; in Edas-Textpuffer schreiben
 2087 CB77  CD CF7F     	CALL	IRM_ON
 2088 CB7A  23          	INC	HL
 2089 CB7B  22 001C     	LD	(T1E),HL	; weiter ruecken
 2090 CB7E  C3 CC82     	JP	END
 2091                   
 2092                   ; 3 = Screen
 2093 CB81  CD F003     AUSSC:	CALL	PV1
 2094 CB84  0C          	DB	KBDS
 2095 CB85  FE 13       	CP	13H		; STOP gedrueckt?
 2096 CB87  20 08       	JR	NZ,AUSS
 2097 CB89  CD F003     AUSW:	CALL	PV1
 2098 CB8C  04          	DB	KBD		; warten
 2099 CB8D  FE 13       	CP	13H
 2100 CB8F  28 F8       	JR	Z,AUSW		; weiter warten
 2101 CB91  F1          AUSS:	POP	AF		; Zeichencode
 2102 CB92  FE 09       	CP	9		; TAB?
 2103 CB94  20 10       	JR	NZ,AUSBS2
 2104 CB96  3E 20       AUSS1:	LD	A,' '		; in Leerzeichen umwandeln
 2105 CB98  CD CB0E     	CALL	DOCHR
 2106 CB9B  3A B7A0     	LD	A,(CURSO)
 2107 CB9E  E6 07       	AND	7		; bis naechste TAB-Position erreicht ist
 2108 CBA0  CA CC82     	JP	Z,END
 2109 CBA3  18 F1       	JR	AUSS1
 2110                   
 2111                   ; 0 = Bildschirm
 2112 CBA5  F1          AUSBS:	POP	AF		; Zeichencode
 2113 CBA6  CD CB0E     AUSBS2:	CALL	DOCHR
 2114 CBA9  C3 CC82     	JP	END
 2115                   
 2116                   ; 1 = Device
 2117 CBAC  F1          AUSCC:	POP	AF		; Zeichencode
 2118 CBAD  57          	LD	D,A
 2119 CBAE  3A B7DA     	LD	A,(DTPTR)	; Zeiger in Kassettenpuffer
 2120 CBB1  26 B7       	LD	H,High(CASS)	; B7H im IRM
 2121 CBB3  6F          	LD	L,A
 2122 CBB4  72          	LD	(HL),D		; Datenbyte ablegen
 2123 CBB5  3C          	INC	A		; Zeiger erhoehen
 2124 CBB6  E6 7F       	AND	7FH		; Puffer ist 128 Byte gross
 2125 CBB8  32 B7DA     	LD	(DTPTR),A	; neuen Zeiger eintragen
KC-Debugger     							    SLR180 1.31 Page  47
REAS    Z80

 2126 CBBB  C2 CC82     	JP	NZ,END		; Puffer ist noch nicht voll
 2127 CBBE  01 0100     	LD	BC,100H		; kurzer Vorton
 2128 CBC1  CD F021     	CALL	PV7		; Ausgabe Datenblock
 2129 CBC4  00          	DB	0		; mit MBO
 2130 CBC5  3E 19       	LD	A,19H
 2131 CBC7  CD F003     	CALL	PV1
 2132 CBCA  00          	DB	CRT		; Cursor auf Zeilenanfang
 2133 CBCB  DD 7E 02    	LD	A,(IX+2)	; Blocknummer
 2134 CBCE  CD F003     	CALL	PV1
 2135 CBD1  1C          	DB	AHEX		; anzeigen
 2136 CBD2  C3 CC82     	JP	END
 2137                   
 2138                   ; 2 = Drucker
 2139 CBD5  F1          AUSPR:	POP	AF		; Zeichencode
 2140 CBD6  FE 03       	CP	3
 2141 CBD8  C4 CC86     	CALL	NZ,AUSPR1	; BRK wird nicht mit gedruckt
 2142 CBDB  FE 0A       	CP	LF		; neue Zeile?
 2143 CBDD  C2 CC82     	JP	NZ,END		; nein, fertig
 2144 CBE0  3A B793     	LD	A,(PRZE)	; Zeilenzahl pro Druckseite
 2145 CBE3  B7          	OR	A
 2146 CBE4  28 2E       	JR	Z,PRIZE		; 0=endlos
 2147 CBE6  47          	LD	B,A
 2148 CBE7  3A B794     	LD	A,(PRZC)	; Zeilenzaehler
 2149 CBEA  3C          	INC	A		; erhoehen
 2150 CBEB  B8          	CP	B
 2151 CBEC  38 26       	JR	C,PRIZE
 2152 CBEE  3E 0C       	LD	A,0CH		; Blatt auswerfen
 2153 CBF0  CD CCB3     	CALL	DRU		; "eject"
 2154 CBF3  CD F003     	CALL	PV1
 2155 CBF6  23          	DB	OSTR
 2156 CBF7  4E 65 78 74 	DB	'Next Page!',0
 2157 CC02  CD F003     	CALL	PV1
 2158 CC05  04          	DB	KBD		; Eingabe abwarten
 2159 CC06  F5          	PUSH	AF
 2160 CC07  3E 02       	LD	A,2
 2161 CC09  CD F003     	CALL	PV1		; Bildschirmzeile wieder loeschen
 2162 CC0C  00          	DB	CRT
 2163 CC0D  F1          	POP	AF
 2164 CC0E  FE 03       	CP	3		; BRK?
 2165 CC10  CA D195     	JP	Z,PRSE		; --> CAOS
 2166 CC13  AF          	XOR	A		; neu beginnen bei Zeile 0
 2167 CC14  32 B794     PRIZE:	LD	(PRZC),A	; Zeilenzaehler aktualisieren
 2168 CC17  3A B792     	LD	A,(PRLI)	; linker Rand
 2169 CC1A  B7          	OR	A
 2170 CC1B  28 09       	JR	Z,PRILI1	; ohne Rand
 2171 CC1D  3C          	INC	A
 2172 CC1E  47          	LD	B,A		; Anzahl in Register B
 2173 CC1F  3E 20       PRILI:	LD	A,' '		; per Leerzeichen
 2174 CC21  CD CCB3     	CALL	DRU		; den gewuenschten linken Rand erzeugen
 2175 CC24  10 F9       	DJNZ	PRILI
 2176 CC26  AF          PRILI1:	XOR	A
 2177 CC27  32 B795     	LD	(PRCU),A	; hier ist dann Druckspalte 0
 2178 CC2A  21 A880     	LD	HL,MS		; Markenschalter
 2179 CC2D  CB 4E       	BIT	1,(HL)
 2180 CC2F  28 4C       	JR	Z,PRI3
 2181 CC31  ED 5B B782  	LD	DE,(ARG1)
 2182 CC35  E1          	POP	HL
 2183 CC36  E5          	PUSH	HL
KC-Debugger     							    SLR180 1.31 Page  48
REAS    Z80

 2184 CC37  CD CB1F     	CALL	AUSHL	;Adresse
 2185 CC3A  EB          	EX	DE,HL
 2186 CC3B  ED 52       	SBC	HL,DE
 2187 CC3D  7D          	LD	A,L
 2188 CC3E  FE 04       	CP	4
 2189 CC40  38 02       	JR	C,PRI1
 2190 CC42  3E 04       	LD	A,4	;max. 4 Bytes
 2191 CC44  47          PRI1:	LD	B,A
 2192 CC45  D5          	PUSH	DE
 2193 CC46  C5          	PUSH	BC
 2194 CC47  3E 20       PRI2:	LD	A,' '
 2195 CC49  CD CCB3     	CALL	DRU
 2196 CC4C  1A          	LD	A,(DE)
 2197 CC4D  13          	INC	DE
 2198 CC4E  CD CB35     	CALL	AUSA	;Byte
 2199 CC51  10 F4       	DJNZ	PRI2
 2200 CC53  C1          	POP	BC
 2201 CC54  C5          	PUSH	BC
 2202 CC55  3E 05       	LD	A,5
 2203 CC57  90          	SUB	B
 2204 CC58  47          	LD	B,A
 2205 CC59  3E 20       PRI4:	LD	A,' '
 2206 CC5B  CD CCB3     	CALL	DRU
 2207 CC5E  3E 20       	LD	A,' '	;3*Space
 2208 CC60  CD CCB3     	CALL	DRU
 2209 CC63  3E 20       	LD	A,' '
 2210 CC65  CD CCB3     	CALL	DRU
 2211 CC68  10 EF       	DJNZ	PRI4
 2212 CC6A  C1          	POP	BC
 2213 CC6B  D1          	POP	DE
 2214 CC6C  1A          PRI6:	LD	A,(DE)
 2215 CC6D  13          	INC	DE
 2216 CC6E  FE 7F       	CP	7FH
 2217 CC70  30 04       	JR	NC,PRI7
 2218 CC72  FE 20       	CP	20H
 2219 CC74  30 02       	JR	NC,PRI5
 2220 CC76  3E 2E       PRI7:	LD	A,'.'	;nicht druckbare
 2221 CC78  CD CCB3     PRI5:	CALL	DRU	;Zeichen
 2222 CC7B  10 EF       	DJNZ	PRI6
 2223 CC7D  3E 09       PRI3:	LD	A,9	;1. Tabulator
 2224 CC7F  CD CC86     	CALL	AUSPR1
 2225                   	;
 2226 CC82  E1          END:	POP	HL
 2227 CC83  D1          	POP	DE
 2228 CC84  C1          	POP	BC
 2229 CC85  C9          	RET
 2230                   ;
 2231 CC86  F5          AUSPR1:	PUSH	AF
 2232 CC87  FE 09       	CP	9
 2233 CC89  28 05       	JR	Z,AUSPR2
 2234 CC8B  CD CCB3     	CALL	DRU
 2235 CC8E  18 12       	JR	AUSPRE
 2236 CC90  3A B795     AUSPR2:	LD	A,(PRCU)
 2237 CC93  06 19       	LD	B,25		;Tab1
 2238 CC95  B8          	CP	B
 2239 CC96  38 0C       	JR	C,AUSPR3
 2240 CC98  06 21       	LD	B,33		;Tab2
 2241 CC9A  B8          	CP	B
KC-Debugger     							    SLR180 1.31 Page  49
REAS    Z80

 2242 CC9B  38 07       	JR	C,AUSPR3
 2243 CC9D  06 26       	LD	B,38		;Tab3
 2244 CC9F  B8          	CP	B
 2245 CCA0  38 02       	JR	C,AUSPR3
 2246 CCA2  F1          AUSPRE:	POP	AF
 2247 CCA3  C9          	RET
 2248                   
 2249 CCA4  C5          AUSPR3:	PUSH	BC
 2250 CCA5  3E 20       	LD	A,20H
 2251 CCA7  CD CCB3     	CALL	DRU
 2252 CCAA  3A B795     	LD	A,(PRCU)
 2253 CCAD  C1          	POP	BC
 2254 CCAE  B8          	CP	B	;Tab erreicht?
 2255 CCAF  20 F3       	JR	NZ,AUSPR3
 2256 CCB1  18 EF       	JR	AUSPRE
 2257                    
 2258 CCB3  CD F003     DRU:	CALL	PV1
 2259 CCB6  02          	DB	UOT1
 2260 CCB7  3A B795     	LD	A,(PRCU)
 2261 CCBA  3C          	INC	A
 2262 CCBB  32 B795     	LD	(PRCU),A
 2263 CCBE  C9          	RET
 2264                   ;
 2265                   ; Erzeugen der Markentabelle:
 2266                   ;
 2267 CCBF  2A A88B     PASS1:	LD	HL,(MTE)	; MTB loeschen
 2268 CCC2  22 A88D     	LD	(MTA),HL	; indem MTA=MTE gesetzt wird
 2269 CCC5  2A B788     IMT1:	LD	HL,(ARG4)	; Endadresse Markenbereich
 2270 CCC8  ED 5B B786  	LD	DE,(ARG3)	; Anfangsadresse Markenbereich
 2271 CCCC  B7          	OR	A
 2272 CCCD  2B          	DEC	HL
 2273 CCCE  ED 52       	SBC	HL,DE		; fertig?
 2274 CCD0  D8          	RET	C
 2275 CCD1  21 A880     	LD	HL,MS		; Markenschalter
 2276 CCD4  CB 56       	BIT	2,(HL)		; DW nach UREL?
 2277 CCD6  28 10       	JR	Z,IMT2		; nein
 2278 CCD8  CB 96       	RES	2,(HL)		; Kennung zuruecksetzen
 2279 CCDA  EB          	EX	DE,HL
 2280 CCDB  5E          	LD	E,(HL)		; Wert (Low)
 2281 CCDC  23          	INC	HL
 2282 CCDD  56          	LD	D,(HL)		; Wert (High)
 2283 CCDE  23          	INC	HL
 2284 CCDF  22 B786     	LD	(ARG3),HL
 2285 CCE2  19          	ADD	HL,DE		; aktuelle Adresse addieren
 2286 CCE3  CD C37E     	CALL	OFSET		; Offset addieren
 2287 CCE6  18 42       	JR	IMT13		; eintragen
 2288                    
 2289 CCE8  EB          IMT2:	EX	DE,HL		; HL jetzt Adresse zur Reassemblierung
 2290 CCE9  CD CDDA     	CALL	LENG		; Befehlslaenge ermitteln
 2291 CCEC  E5          	PUSH	HL
 2292 CCED  F5          	PUSH	AF
 2293 CCEE  09          	ADD	HL,BC		; Befehlslaenge addieren
 2294 CCEF  22 B786     	LD	(ARG3),HL	; naechster Befehl beginnt hier
 2295 CCF2  21 A880     	LD	HL,MS		; Markenschalter
 2296 CCF5  CB 5E       	BIT	3,(HL)
 2297 CCF7  28 04       	JR	Z,IMT8
 2298 CCF9  E1          	POP	HL	;Stack clear
 2299 CCFA  E1          	POP	HL
KC-Debugger     							    SLR180 1.31 Page  50
REAS    Z80

 2300 CCFB  18 C8       	JR	IMT1
 2301                    
 2302 CCFD  F1          IMT8:	POP	AF
 2303 CCFE  E1          	POP	HL
 2304 CCFF  28 0E       	JR	Z,IMT16
 2305 CD01  38 18       	JR	C,IMT12
 2306 CD03  3A A880     	LD	A,(MS)		; Markenschalter
 2307 CD06  CB 67       	BIT	4,A
 2308 CD08  28 BB       	JR	Z,IMT1
 2309 CD0A  CD CEAE     	CALL	SLD
 2310 CD0D  20 B6       	JR	NZ,IMT1
 2311                    
 2312 CD0F  79          IMT16:	LD	A,C
 2313 CD10  FE 04       	CP	4
 2314 CD12  20 01       	JR	NZ,IMT17
 2315 CD14  23          	INC	HL
 2316 CD15  23          IMT17:	INC	HL
 2317 CD16  5E          	LD	E,(HL)
 2318 CD17  23          	INC	HL
 2319 CD18  56          	LD	D,(HL)	;DE=Marke
 2320 CD19  18 10       	JR	IMT14
 2321                    
 2322 CD1B  23          IMT12:	INC	HL	;Relativsprung
 2323 CD1C  7E          	LD	A,(HL)
 2324 CD1D  23          	INC	HL
 2325 CD1E  4F          	LD	C,A
 2326 CD1F  06 00       	LD	B,0
 2327 CD21  FE 80       	CP	80H
 2328 CD23  38 01       	JR	C,IMT15
 2329 CD25  25          	DEC	H
 2330 CD26  09          IMT15:	ADD	HL,BC
 2331 CD27  CD C37E     	CALL	OFSET
 2332                   ;
 2333                   ; Marke eintragen in die Tabelle
 2334 CD2A  EB          IMT13:	EX	DE,HL		; DE=neue Marke
 2335 CD2B  2A A88D     IMT14:	LD	HL,(MTA)	; Anfang Markentabelle
 2336 CD2E  ED 4B A88B  IMT31:	LD	BC,(MTE)	; Ende Markentabelle
 2337 CD32  E5          	PUSH	HL
 2338 CD33  B7          	 OR	A
 2339 CD34  ED 42       	 SBC	HL,BC		; Ende der Tabelle erreicht?
 2340 CD36  E1          	POP	HL
 2341 CD37  30 18       	JR	NC,IMT32	; ja, neue Marke
 2342 CD39  CD CF86     	CALL	IRM_OF
 2343 CD3C  4E          	LD	C,(HL)		;low
 2344 CD3D  23          	INC	HL
 2345 CD3E  46          	LD	B,(HL)		;high
 2346 CD3F  23          	INC	HL
 2347 CD40  CD CF7F     	CALL	IRM_ON
 2348 CD43  E5          	PUSH	HL
 2349 CD44  62          	 LD	H,D
 2350 CD45  6B          	 LD	L,E
 2351 CD46  B7          	 OR	A
 2352 CD47  ED 42       	 SBC	HL,BC		; Vergleich neue Marke mit Tabelleninhalt
 2353 CD49  E1          	POP	HL
 2354 CD4A  CA CCC5     	JP	Z,IMT1		; Marke bereits vorhanden
 2355 CD4D  38 DF       	JR	C,IMT31		; weitersuchen
 2356 CD4F  2B          	DEC	HL
 2357 CD50  2B          	DEC	HL		; naechste Speicherzelle
KC-Debugger     							    SLR180 1.31 Page  51
REAS    Z80

 2358 CD51  ED 4B A88D  IMT32:	LD	BC,(MTA)
 2359 CD55  C5          	PUSH	BC
 2360 CD56  D5          	PUSH	DE
 2361 CD57  CD CF86     	CALL	IRM_OF
 2362 CD5A  50          	LD	D,B
 2363 CD5B  59          	LD	E,C
 2364 CD5C  B7          	OR	A
 2365 CD5D  ED 42       	SBC	HL,BC
 2366 CD5F  28 0A       	JR	Z,IMT33
 2367 CD61  44          	LD	B,H
 2368 CD62  4D          	LD	C,L
 2369 CD63  62          	LD	H,D
 2370 CD64  6B          	LD	L,E
 2371 CD65  1B          	DEC	DE
 2372 CD66  1B          	DEC	DE
 2373 CD67  ED B0       	LDIR			; einsortieren
 2374 CD69  13          	INC	DE
 2375 CD6A  13          	INC	DE
 2376 CD6B  EB          IMT33:	EX	DE,HL
 2377 CD6C  D1          	POP	DE
 2378 CD6D  2B          	DEC	HL
 2379 CD6E  72          	LD	(HL),D		; eintragen
 2380 CD6F  2B          	DEC	HL
 2381 CD70  73          	LD	(HL),E
 2382 CD71  CD CF7F     	CALL	IRM_ON
 2383 CD74  E1          	POP	HL
 2384 CD75  2B          	DEC	HL
 2385 CD76  2B          	DEC	HL		; MTA-2
 2386 CD77  22 A88D     	LD	(MTA),HL
 2387 CD7A  C3 CCC5     	JP	IMT1
 2388                   ;
 2389                   ;--Setzen einer Marke:
 2390                   ;
 2391 CD7D  E5          ARGNET:	PUSH	HL		; aktuelle Adresse
 2392 CD7E  ED 5B A88F  	LD	DE,(MTM)	; Zeiger in Markentabelle
 2393 CD82  2A A88D     	LD	HL,(MTA)	; Beginn Markentabelle
 2394 CD85  2B          	DEC	HL
 2395 CD86  B7          	OR	A
 2396 CD87  ED 52       	SBC	HL,DE		; Markentabelle ausgesucht?
 2397 CD89  E1          	POP	HL		; aktuelle Adresse
 2398 CD8A  38 06       	JR	C,ARGNT3	; nein, Marke pruefen
 2399 CD8C  CD CF7F     ARGNT1:	CALL	IRM_ON
 2400 CD8F  C3 CB51     	JP	AUS91		; Tabulator ausgeben
 2401                    
 2402 CD92  CD CF86     ARGNT3:	CALL	IRM_OF		; jetzt Zugriff auf Quelltext
 2403 CD95  1A          ARGNT4:	LD	A,(DE)		; Markentabelle lesen
 2404 CD96  47          	LD	B,A
 2405 CD97  1B          	DEC	DE
 2406 CD98  1A          	LD	A,(DE)
 2407 CD99  1B          	DEC	DE
 2408 CD9A  4F          	LD	C,A		; BC = Wert in Markentabelle
 2409 CD9B  E5          	PUSH	HL
 2410 CD9C  B7          	OR	A
 2411 CD9D  ED 42       	SBC	HL,BC		; Marke auf Adresse?
 2412 CD9F  E1          	POP	HL
 2413 CDA0  28 04       	JR	Z,ARGNT5	; ja, Marke ausgeben
 2414 CDA2  38 E8       	JR	C,ARGNT1	; nein, keine Marke
 2415 CDA4  18 EF       	JR	ARGNT4		; weitersuchen
KC-Debugger     							    SLR180 1.31 Page  52
REAS    Z80

 2416                   	;
 2417 CDA6  CD CF7F     ARGNT5:	CALL	IRM_ON
 2418 CDA9  ED 53 A88F  	LD	(MTM),DE	; Zeiger weiter ruecken
 2419                   ;
 2420                   ;--Ausgebe der Marke:
 2421                   ;
 2422 CDAD  3E 55       ARGNT6:	LD	A,'U'
 2423 CDAF  CD CB5C     	CALL	AUS		; Markenname beginnt mit 'U'
 2424 CDB2  CD CB1F     	CALL	AUSHL		; Adresse der Marke
 2425 CDB5  CD CB51     	CALL	AUS91		; Tabulator ausgeben
 2426 CDB8  ED 5B A88F  	LD	DE,(MTM)
 2427 CDBC  CD CF86     	CALL	IRM_OF
 2428 CDBF  3E FF       	LD	A,-1
 2429 CDC1  13          	INC	DE
 2430 CDC2  12          	LD	(DE),A		; bereits angezeigte Marke loeschen
 2431 CDC3  13          	INC	DE		; in der Markentabelle
 2432 CDC4  12          	LD	(DE),A
 2433 CDC5  C3 CF7F     	JP	IRM_ON
 2434                   ;
 2435                   ; CAOS-Menuewort - Laenge ermitteln
 2436                   ; PE:	HL=Adresse
 2437                   ;
 2438 CDC8  01 0002     SMEN3:	LD	BC,2		; Laenge 2 fuer Prolog
 2439 CDCB  3E 1F       	LD	A,1FH		; Epilog 0..1Fh
 2440 CDCD  23          SMEN4:	INC	HL
 2441 CDCE  03          	INC	BC		; Bytes bis zum Epilog zaehlen
 2442 CDCF  BE          	CP	(HL)		; Epilog gefunden?
 2443 CDD0  38 FB       	JR	C,SMEN4
 2444 CDD2  21 A880     	LD	HL,MS		; Markenschalter
 2445 CDD5  CB DE       	SET	3,(HL)		; Kennung fuer Menuewort
 2446 CDD7  C3 CE8F     	JP	RE11
 2447                   ;
 2448                   ; Bestimmung der Laenge eines Befehls
 2449                   ; - erkennt Menueworte mit 6 versch. Prologbytes
 2450                   ; (Einsprung wird auch von TEMO mitbenutzt)
 2451                   ; PE:	HL	Anfang Befehl
 2452                   ; PA:	BC	Laenge des Befehls
 2453                   ;	Z=1	PC-veraendernder Befehl
 2454                   ;	CY=1	Relativsprung
 2455                   ;
 2456 CDDA  E5          LENG:	PUSH	HL
 2457 CDDB  D5          	PUSH	DE
 2458 CDDC  3A A880     	LD	A,(MS)		; Markenschalter
 2459 CDDF  E6 F3       	AND	0F3H		; Bit 2+3 ruecksetzen
 2460 CDE1  32 A880     	LD	(MS),A
 2461 CDE4  7E          	LD	A,(HL)		; erstes Befehlsbyte holen
 2462 CDE5  23          	INC	HL
 2463 CDE6  BE          	CP	(HL)		; folgendes Byte identisch?
 2464 CDE7  20 10       	JR	NZ,SJPA		; nein, dann kann es kein Prolog sein
 2465 CDE9  11 A885     	LD	DE,PBY		; Prologbytes
 2466 CDEC  06 06       	LD	B,6		; max. 6 Prologbytes auswerten
 2467 CDEE  4F          	LD	C,A
 2468 CDEF  1A          SMEN2:	LD	A,(DE)
 2469 CDF0  B7          	OR	A
 2470 CDF1  28 03       	JR	Z,SMEN1		; 00 kann nicht Prolog sein
 2471 CDF3  B9          	CP	C
 2472 CDF4  28 D2       	JR	Z,SMEN3		; Prologbyte gefunden!
 2473 CDF6  13          SMEN1:	INC	DE
KC-Debugger     							    SLR180 1.31 Page  53
REAS    Z80

 2474 CDF7  10 F6       	DJNZ	SMEN2
 2475                    
 2476 CDF9  2B          SJPA:	DEC	HL		; zurueck auf erstes Befehlsbyte
 2477 CDFA  01 0004     	LD	BC,4		; 4 Byte Laenge annehmen
 2478 CDFD  7E          	LD	A,(HL)		; Befehlscode
 2479 CDFE  FE ED       	CP	0EDH
 2480 CE00  28 29       	JR	Z,TRANS		; Sondertransportbefehl
 2481 CE02  CB AF       	RES	5,A
 2482 CE04  FE DD       	CP 	0DDH
 2483 CE06  28 09       	JR	Z,INDEX		; IX,IY Index-Befehl
 2484 CE08  0D          	DEC	C	; C=3
 2485 CE09  7E          	LD	A,(HL)
 2486 CE0A  FE CB       	CP 	0CBH
 2487 CE0C  20 29       	JR	NZ,SJP2		; Befehl ohne Vorbyte
 2488 CE0E  0D          	DEC	C	; C=2	; 2-Byte-Bitbefehl CB..
 2489 CE0F  18 7E       	JR	RE11
 2490                   ;
 2491                   ; Indexbefehl mit IX- oder IY-Register
 2492 CE11  23          INDEX:	INC	HL	; C=4	; DD..  FD..
 2493 CE12  7E          	LD	A,(HL)		; 2. Befehlsbyte
 2494 CE13  FE CB       	CP	0CBH
 2495 CE15  28 78       	JR	Z,RE11		; 4-Byte-Bitbefehle DD/FD CB..
 2496 CE17  E6 B8       	AND	0B8H
 2497 CE19  FE 30       	CP	30H		; Befehle DD/FD 30-37 und DD/FD 70-77 wie ohne
 2498 CE1B  28 0B       	JR	Z,SJP3		; Vorbyte behandeln, nur 2 Byte laenger!
 2499 CE1D  7E          	LD	A,(HL)		; 2. Befehlsbyte
 2500 CE1E  E6 C7       	AND	0C7H
 2501 CE20  FE 46       	CP	46H		; Ladebefehle mit (i+d)?
 2502 CE22  28 04       	JR	Z,SJP3		; 46,4E,56,5E,66,6E,76,7E
 2503 CE24  FE 86       	CP	86H		; Arithmetik mit (i+d)?
 2504 CE26  20 0F       	JR	NZ,SJP2		; 86,8E,96,9E,A6,AE,B6,BE
 2505 CE28  0C          SJP3:	INC	C	; C=5	; 2 Byte laenger wenn Vorbyte DD/FD mit Index
 2506 CE29  18 0C       	JR	SJP2		; alle anderen je 1 Byte laenger
 2507                   ;
 2508                   ; Sondertransportbefehl ED ..
 2509 CE2B  23          TRANS:	INC	HL
 2510 CE2C  7E          	LD	A,(HL)		; 2. Befehlsbyte
 2511 CE2D  E6 C7       	AND	0C7H
 2512 CE2F  FE 43       	CP	43H
 2513 CE31  28 5C       	JR	Z,RE11		; 4-Byte-Befehl Lade Doppelregister mit nn
 2514 CE33  0E 02       	LD	C,2
 2515 CE35  18 58       	JR	RE11		; alles andere sind 2-Byte-Befehle
 2516                   ;
 2517                   ; Befehl ohne Vorbyte
 2518 CE37  7E          SJP2:	LD	A,(HL)	; C=3
 2519 CE38  FE CD       	CP	0CDH
 2520 CE3A  28 22       	JR	Z,SKIP		; CD			Call..
 2521 CE3C  FE C3       	CP	0C3H
 2522 CE3E  28 1B       	JR	Z,SJP5		; C3			Jp..
 2523 CE40  E6 E7       	AND	0E7H
 2524 CE42  FE 22       	CP	22H
 2525 CE44  28 49       	JR	Z,RE11		; 22,2A,32,3A		16-Bit-Ladebefehle
 2526 CE46  7E          	LD	A,(HL)
 2527 CE47  E6 CF       	AND	0CFH
 2528 CE49  FE 01       	CP	1
 2529 CE4B  28 42       	JR	Z,RE11		; 01,11,21,31		16-Bit-Ladebefehle
 2530 CE4D  0D          	DEC	C	; C=2
 2531 CE4E  E6 C7       	AND	0C7H
KC-Debugger     							    SLR180 1.31 Page  54
REAS    Z80

 2532 CE50  28 54       	JR	Z,SJP9		; 00,08,10,18,20,28,30,38
 2533 CE52  FE C2       	CP	0C2H
 2534 CE54  28 04       	JR	Z,SJP4		; C2,CA,D2,DA,E2,EA,F2,FA
 2535 CE56  FE C4       	CP	0C4H
 2536 CE58  20 39       	JR	NZ,SJP7		; C4,CC,D4,DC,E4,EC,F4,FC
 2537                   
 2538                   ; Bedingte Sprung- und Callbefehle
 2539 CE5A  0C          SJP4:	INC	C	; C=3
 2540 CE5B  AF          SJP5:	XOR	A		; Z=1, CY=0	- PC-veraendernder Befehl
 2541 CE5C  18 32       	JR	SJPRET
 2542                   ;
 2543                   ; Sonderbehandlung CALL: erkennt PV1+DB, OSTR, UREL
 2544 CE5E  23          SKIP:	INC	HL
 2545 CE5F  7E          	LD	A,(HL)
 2546 CE60  FE 21       	CP	21H
 2547 CE62  28 04       	JR	Z,SK3		; eventuell PV7?
 2548 CE64  FE 03       	CP	3
 2549 CE66  20 14       	JR	NZ,SK2		; nicht PV1
 2550 CE68  23          SK3:	INC	HL
 2551 CE69  7E          	LD	A,(HL)
 2552 CE6A  FE F0       	CP	0F0H		; 0F003H = PV1?
 2553 CE6C  20 ED       	JR	NZ,SJP5
 2554 CE6E  0C          SK0:	INC	C		; ein Byte mehr zu Befehl
 2555 CE6F  23          	INC	HL
 2556 CE70  7E          	LD	A,(HL)
 2557 CE71  D6 23       	SUB	OSTR		; UP 23H?
 2558 CE73  20 E6       	JR	NZ,SJP5
 2559 CE75  03          SK1:	INC	BC		; Bytes mitzaehlen
 2560 CE76  23          	INC	HL		; naechste Adresse
 2561 CE77  BE          	CP	(HL)		; String zu Ende?
 2562 CE78  20 FB       	JR	NZ,SK1
 2563 CE7A  18 DF       	JR	SJP5
 2564                   	;
 2565 CE7C  FE 0F       SK2:	CP	0FH
 2566 CE7E  20 DB       	JR	NZ,SJP5		; nicht UREL
 2567 CE80  23          	INC	HL
 2568 CE81  7E          	LD	A,(HL)
 2569 CE82  FE F0       	CP	0F0H		; 0F00Fh = UREL?
 2570 CE84  20 D5       	JR	NZ,SJP5
 2571 CE86  0E 03       	LD	C,3		; 3-Byte-Befehl
 2572 CE88  21 A880     	LD	HL,MS		; Markenschalter
 2573 CE8B  CB D6       	SET	2,(HL)		; es folgt DW ...
 2574 CE8D  18 CC       	JR	SJP5
 2575                   	;
 2576 CE8F  A7          RE11:	AND	A		; CY=0	- kein Relativsprung!
 2577 CE90  D1          SJPRET:	POP	DE
 2578 CE91  E1          	POP	HL
 2579 CE92  C9          	RET
 2580                   
 2581                   ; Ausfiltern weiterer 2-Byte-Befehle ohne Vorbyte
 2582 CE93  FE 06       SJP7:	CP	6	; C=2
 2583 CE95  28 F8       	JR	Z,RE11		; 06,0E,16,1E,26,2E,36,3E	Ladebefehle,n
 2584 CE97  FE C6       	CP	0C6H
 2585 CE99  28 F4       	JR	Z,RE11		; C6,CE,D6,DE,E6,EE,F6,FE	Artithm.,n
 2586 CE9B  7E          	LD	A,(HL)
 2587 CE9C  E6 F7       	AND	0F7H
 2588 CE9E  FE D3       	CP	0D3H
 2589 CEA0  28 ED       	JR	Z,RE11		; D3,DB				IN/OUT
KC-Debugger     							    SLR180 1.31 Page  55
REAS    Z80

 2590 CEA2  0D          SJP8:	DEC	C	; C=1
 2591 CEA3  79          	LD	A,C		; kein PC-veraendernder Befehl (Z=0)
 2592 CEA4  18 E9       	JR	RE11
 2593                   
 2594                   ; 00,08,10,18,20,28,30,38:
 2595 CEA6  7E          SJP9:	LD	A,(HL)	; C=2
 2596 CEA7  FE 09       	CP	9		; kleiner als 09?
 2597 CEA9  38 F7       	JR	C,SJP8		; NOP oder EX AF,AF'
 2598 CEAB  37          	SCF			; CY=1	- Relativsprung!
 2599 CEAC  18 E2       	JR	SJPRET
 2600                   ;
 2601                   ;--Suche, ob Marken im Ladebefehl:
 2602                   ;
 2603 CEAE  E5          SLD:	PUSH	HL
 2604 CEAF  C5          	PUSH	BC
 2605 CEB0  D5          	PUSH	DE
 2606 CEB1  CD CDDA     	CALL	LENG
 2607 CEB4  79          	LD	A,C		; Befehlslaenge
 2608 CEB5  FE 03       	CP	3		; mindestens 3 Byte lang?
 2609 CEB7  30 05       	JR	NC,SLD2		; ja
 2610 CEB9  D1          SLD1:	POP	DE
 2611 CEBA  C1          	POP	BC
 2612 CEBB  E1          	POP	HL
 2613 CEBC  A7          	AND	A
 2614 CEBD  C9          	RET
 2615                   	;
 2616 CEBE  7E          SLD2:	LD	A,(HL)
 2617 CEBF  FE DD       	CP	0DDH
 2618 CEC1  28 2F       	JR	Z,SLD5
 2619 CEC3  FE FD       	CP	0FDH
 2620 CEC5  28 2B       	JR	Z,SLD5
 2621 CEC7  FE ED       	CP	0EDH
 2622 CEC9  28 37       	JR	Z,SLD6
 2623 CECB  FE 01       	CP	1
 2624 CECD  20 05       	JR	NZ,SLD4
 2625 CECF  D1          SLD3:	POP	DE
 2626 CED0  C1          	POP	BC
 2627 CED1  E1          	POP	HL
 2628 CED2  AF          	XOR	A
 2629 CED3  C9          	RET
 2630                    
 2631 CED4  FE 11       SLD4:	CP	11H
 2632 CED6  28 F7       	JR	Z,SLD3
 2633 CED8  FE 21       	CP	21H
 2634 CEDA  28 F3       	JR	Z,SLD3
 2635 CEDC  FE 31       	CP	31H
 2636 CEDE  28 EF       	JR	Z,SLD3
 2637 CEE0  FE 22       	CP	22H
 2638 CEE2  28 EB       	JR	Z,SLD3
 2639 CEE4  FE 2A       	CP	2AH
 2640 CEE6  28 E7       	JR	Z,SLD3
 2641 CEE8  FE 32       	CP	32H
 2642 CEEA  28 E3       	JR	Z,SLD3
 2643 CEEC  FE 3A       	CP	3AH
 2644 CEEE  28 DF       	JR	Z,SLD3
 2645 CEF0  18 C7       	JR	SLD1
 2646                    
 2647 CEF2  23          SLD5:	INC	HL	;DD FD
KC-Debugger     							    SLR180 1.31 Page  56
REAS    Z80

 2648 CEF3  7E          	LD	A,(HL)
 2649 CEF4  FE 21       	CP	21H
 2650 CEF6  28 D7       	JR	Z,SLD3
 2651 CEF8  FE 22       	CP	22H
 2652 CEFA  28 D3       	JR	Z,SLD3
 2653 CEFC  FE 2A       	CP	2AH
 2654 CEFE  28 CF       	JR	Z,SLD3
 2655 CF00  18 B7       	JR	SLD1
 2656                    
 2657 CF02  23          SLD6:	INC	HL	;ED
 2658 CF03  7E          	LD	A,(HL)
 2659 CF04  FE 43       	CP	43H
 2660 CF06  28 C7       	JR	Z,SLD3
 2661 CF08  FE 53       	CP	53H
 2662 CF0A  28 C3       	JR	Z,SLD3
 2663 CF0C  FE 73       	CP	73H
 2664 CF0E  28 BF       	JR	Z,SLD3
 2665 CF10  FE 4B       	CP	4BH
 2666 CF12  28 BB       	JR	Z,SLD3
 2667 CF14  FE 5B       	CP	5BH
 2668 CF16  28 B7       	JR	Z,SLD3
 2669 CF18  FE 7B       	CP	7BH
 2670 CF1A  28 B3       	JR	Z,SLD3
 2671 CF1C  18 9B       	JR	SLD1
 2672                   ;
 2673                   ; Eingabe des Dateinamen und anhaengen der Erweiterung
 2674                   ; PE:	HL=Zeiger auf Dateityp
 2675                   ; PA:	CY=1:	Abbruch mit BRK
 2676                   ;	sonst	DE=Adresse des vollstaendigen Dateinamens im VRAM
 2677                   ;
 2678 CF1E  CD F003     EIZE2:	CALL	PV1
 2679 CF21  23          	DB	OSTR
 2680 CF22  4E 61 6D 65 	DB	'Name :        ',0
 2681                   ;	LD	A,0EH
 2682                   ;	LD	(CURSO),A
 2683 CF31  CD F003     	CALL	PV1		; Dateityp anzeigen
 2684 CF34  45          	DB	ZKOUT		
 2685 CF35  01 0610     	LD	BC,610H		; Namen eingeben
 2686                   ;
 2687                   ; Eingabe in einer Zeile
 2688                   ; PE:	B	erste Spalte
 2689                   ;	C	letzte Spalte
 2690                   ; PA:	CY=1	mit BRK abgebrochen
 2691                   ;	DE	Zeiger auf Beginn der eingegebenen Zeichen
 2692                   ;
 2693 CF38  78          EIZE1:	LD	A,B
 2694 CF39  32 B7A0     	LD	(CURSO),A	; Cursor auf erste Spalte setzen
 2695 CF3C  CD F003     EIZ2:	CALL	PV1
 2696 CF3F  16          	DB	INTB
 2697 CF40  FE 03       	CP	3		; BRK
 2698 CF42  20 05       	JR	NZ,EIZ1
 2699 CF44  CD D3D5     NLCY:	CALL	NL		; neue Zeile mit CRLF (aus TEMO.Z80)
 2700 CF47  37          	SCF			; mit BRK abgebrochen
 2701 CF48  C9          	RET
 2702                   	;	
 2703 CF49  FE 0D       EIZ1:	CP	CR
 2704 CF4B  28 27       	JR	Z,EIZ6		; CR
 2705 CF4D  FE 20       	CP	20H
KC-Debugger     							    SLR180 1.31 Page  57
REAS    Z80

 2706 CF4F  30 10       	JR	NC,EIZ3		; ASCII-Zeichen
 2707 CF51  FE 09       	CP	9
 2708 CF53  28 0C       	JR	Z,EIZ3		; ->
 2709 CF55  FE 08       	CP	8
 2710 CF57  28 08       	JR	Z,EIZ3		; <-
 2711 CF59  FE 1F       	CP	1FH
 2712 CF5B  28 04       	JR	Z,EIZ3		; DEL
 2713 CF5D  FE 0F       	CP	0FH
 2714 CF5F  20 DB       	JR	NZ,EIZ2		; SH-CLR (Hardcopy)
 2715 CF61  CD CB0E     EIZ3:	CALL	DOCHR
 2716 CF64  3A B7A0     	LD	A,(CURSO)	; neue Spalte
 2717 CF67  B8          	CP	B		; zu weit links?
 2718 CF68  30 01       	JR	NC,EIZ4		; nein
 2719 CF6A  78          	LD	A,B		; ansonsten auf Start-Spalte zurueck
 2720 CF6B  B9          EIZ4:	CP	C		; zu weit rechts?
 2721 CF6C  38 01       	JR	C,EIZ5		; nein
 2722 CF6E  79          	LD	A,C		; ansonsten auf End-Spalte bleiben
 2723 CF6F  32 B7A0     EIZ5:	LD	(CURSO),A	; Cursorposition setzen
 2724 CF72  18 C8       	JR	EIZ2		; naechstes Zeichen abfragen
 2725                   ;
 2726 CF74  ED 5B B7A0  EIZ6:	LD	DE,(CURSO)	; D=aktuelle Zeile
 2727 CF78  58          	LD	E,B		; E=erste Spalte
 2728 CF79  CD F003     	CALL	PV1
 2729 CF7C  32          	DB	DABR		; VRAM-Adresse berechnen (CY=0 wenn kein Fehler)
 2730 CF7D  EB          	EX	DE,HL		; VRAM-Adresse jetz in DE
 2731 CF7E  C9          	RET
 2732                   ;-------
 2733 CF7F  F5          IRM_ON:	PUSH	AF
 2734 CF80  DB 88       	IN	A,(88H)
 2735 CF82  F6 24       	OR	24H	;IRM, LED on
 2736 CF84  18 05       	JR	IR_OO
 2737                   	;
 2738 CF86  F5          IRM_OF:	PUSH	AF
 2739 CF87  DB 88       	IN	A,(88H)
 2740 CF89  E6 DB       	AND	0DBH	;IRM, LED off
 2741 CF8B  D3 88       IR_OO:	OUT	(88H),A
 2742 CF8D  F1          	POP	AF
 2743 CF8E  C9          	RET
 2744                   ;-------
 2745 CF8F  CD F003     GETHEX:	CALL	PV1
 2746 CF92  18          	DB	RHEX		; Argument erfassen
 2747 CF93  C9          	RET
 2748                   ;------------------------
   49                   	INCLUDE	TEMO.Z80	; Testmonitor Debugger 2.3
    1                   ;_______________________________________________________________;
    2                   ;								;
    3                   ;	KC-Debugger 2.3 (Testmonitor/Zusatzmonitor)		;
    4                   ;	===========================================		;
    5                   ;								;
    6                   ;	29.05.1988	TEMO 2.1 (C) Frank Klemm '87/'88 Gera	;
    7                   ;	14.12.1992	KC-Debugger 1.0 in CAOS 4.3-USER-ROM	;
    8                   ;	27.07.2013	ROM-Version neu reassembliert		;
    9                   ;								;
   10                   ; Aktuelle Speicherbelegung:					;
   11                   ; 0000-0037h	Arbeitszellen, Registerablage usw.		;
   12                   ; 0038-009Dh	RST38, CTC-Interrupt und Speicherumschaltung	;
   13                   ; 009E-00A1h	Kopie letzter Befehl (4 Byte)			;
   14                   ; 00A2-00ABh	Kopie aktueller + folgender Befehl (10 Byte)	;
KC-Debugger     							    SLR180 1.31 Page  58
TEMO    Z80

   15                   ; 00AC-00ADh	USER-Prompt, USER-Prolog			;
   16                   ; 00AE-00FFh	zur Zeit noch frei (fuer USB-Tastatur-Interrupt);
   17                   ;								;
   18                   ; REAS.Z80			ML-Soft 14.12.1992-08.05.2021	;
   19                   ;_______________________________________________________________;
   20                   ;								;
   21                   ; Weitere Anpassungen:						;
   22                   ; 19.10.2013	weitere Kommentare/Marken aus TEMO.ASM		;
   23                   ;								;
   24                   ; Aenderungen mit Version 1.1:					;
   25                   ; 20.10.2013	TEMO-Initialisierung optimiert, 12 Byte gespart	;
   26                   ;		CHSUM umbenannt in CRC				;
   27                   ;		Registeranzeige erweitert durch 2 Titelzeilen	;
   28                   ; 21.10.2013	weitere Kommentare/Marken aus TEMO.MAC		;
   29                   ; 25.10.2013	Verwendung von MENU und LOOP aus CAOS		;
   30                   ;		CRC berechnet Summe und CRC16			;
   31                   ; 26.10.2013	REG Parameterauswertung neu gemacht		;
   32                   ;		REG ohne Parameter = Anzeige			:
   33                   ;		REG rr nnnn = Registerinhalt neu setzen		;
   34                   ; 27.10.2013	LINEST weggelassen, immer 2 Reassemblerzeilen.	;
   35                   ;		BITTAB aus CAOS mitgenutzt (Adresse FDF8h)	;
   36                   ;		Kommando 'SWITCH' neu programmiert		;
   37                   ;		FILL erweitert fuer Bytefolgen und 0 ohne Byte	;
   38                   ;		MOVE sinvollerweise umbenannt in COPY		;
   39                   ;		Build-In-Hilfe: CRC, IN, OUT, FILL, EXCH, COPY	;
   40                   ;		WORKRAM mit Defaultwert bei Aufruf ohne Param.	;
   41                   ;		Anzeigen bei ARITH erweitert mit +/-/*		;
   42                   ; 29.10.2013	Fehler in Build-In-Hilfe korrigiert		;
   43                   ; 30.10.2013	BREAK erweitert zur Anzeige (ohne ARG)		;
   44                   ;		Kommando SBRK auskommentiert			;
   45                   ;		Begonnen mit Ueberarbeitung Go-Kommando...	;
   46                   ; 03.11.2013	Anzeige Breakpoint im Schrittbetrieb		;
   47                   ;		Step und GO weiterentwickelt, GO: OK.		;
   48                   ; 04.11.2013	Aktuelle Quelltextzeile in roter Schrift	;
   49                   ; 09.11.2013	Schrittbetrieb mit CR funktioniert jetzt auch,	;
   50                   ;		nur nicht im Modul im Aufsatz wegen WAIT	;
   51                   ; 10.11.2013	REAS-Arbeitszellen ab B7F2h neu angeordnet	;
   52                   ;		Prologbytes fuer Reassembler initialisieret	;
   53                   ; 17.11.2013	ARITH testweise durch CALC ersetzt		;
   54                   ;		Code fuer Bildwechsel optimiert			;
   55                   ; 18.11.2013	Speicherumschaltung bei RST38, CTC-Interrupt	;
   56                   ;		und GO eingebaut, RAM0 von 38H bis 7FH benutzt	;
   57                   ;		Es wird nur noch mit CCTL0 gearbeitet!		;
   58                   ;		Standard-Speichernutzung 0...7Fh		;
   59                   ;		(Verlagerung nur fuer 0..36h moeglich)		;
   60                   ;		Kommando "." Stackmodifizieren aufgenommen	;
   61                   ;		Kommando CALC in "?" geaendert			;
   62                   ; 20.11.2013	keine variable Arbeitszellen mehr (schaltbar)	;
   63                   ; 21.11.2013	Registerablage per PUSH-Befehlen optimiert	;
   64                   ;		dadurch insgesamt 265 Byte gespart!		;
   65                   ; 23.11.2013	Nach WORKRAM nur noch IX+9 neu setzen, sonst	;
   66                   ;		werden Einstellungen USER-Bild ueberschrieben	;
   67                   ; 24.11.2013	Schrittbetrieb weiter getestet + optimiert...	;
   68                   ;		(Programmunterbrechung jetzt mit STOP, Abfrage-	;
   69                   ;		schleife dafuer jetzt mit BRK)			;
   70                   ; 27.11.2013	Kopie der aktuellen Programmteile fuer DISASS	;
   71                   ;		jetzt nach RAM0 kopiert um Schrittebtrieb im	;
   72                   ;		CAOS ROM-C verfolgen zu koennen. (Option new)	;
KC-Debugger     							    SLR180 1.31 Page  59
TEMO    Z80

   73                   ; 10.12.2013	Retten/Laden von Promptzeichen und Prologbyte	;
   74                   ; 11.12.2013	Fehler bei Schrittbetrieb mit veraendertem IX	;
   75                   ;		beseitigt					;
   76                   ; 14.12.2013	Arbeitszellen verlagert, so dass 0..0bh frei	;
   77                   ;		bleibt fuer Dateiname (Floppy-Routinen)		;
   78                   ; 15.12.2013	Umbenennung in Version 2.0			;
   79                   ; 16.12.2013	Lautstaerke stumm schalten bei STEP und GO	;
   80                   ; 31.12.2013	RETEMO veraendert RSP (USER-Stack) nicht mehr	;
   81                   ;		REG-Kommando repariert nach Adressverschiebung	;
   82                   ;		vom 14.12.2013					;
   83                   ; 02.01.2013	RST38 optimiert, Code-Regenerierung war an der	;
   84                   ;		falschen Programmstelle eingebaut.		;
   85                   ; 04.01.2014	Option NEW fest eingebaut, Option REL entfernt	;
   86                   ; 12.07.2017	Systemstack auf 01C4H init. (statt 01D4H)	;
   87                   ; 03.02.2018	STAT umbenannt in BRKI wegen EDAS-Arbeitszellen	;
   88                   ; 26.03.2018	REAS umbenannt in DISASS wie im CAOS-Menue	;
   89                   ; 07.10.2018	SWITCH erweiter mit alt -> neu wie in CAOS	;
   90                   ; 14.10.2018	Arbeitszellen verlagert wegen USB-Tastatur,	;
   91                   ;		Umbenennung in Version 2.2			;
   92                   ; 28.03.2021	Kommando FIND zur Bytesuche im Speicher aus	;
   93                   ;		Zusatzmonitor von Gerrit Schuzk uebernommen	;
   94                   ; 08.05.2021	SWITCH korrigiert, konnte keine Module schalten	;
   95                   ; 28.10.2022	kuerzere (langsamere) CRC-Routine eingebaut	;
   96                   ; 29.10.2022	Aufruf %TEMO <TEMO-Kommando> implementiert	;
   97                   ; 30.10.2022	CMP: Vergleich von Speicherbereichen eingebaut	;
   98                   ;		nach Zusatzmonitor ZM				;
   99                   ;		Umbenennung des Debuggers in Version 2.3	;
  100                   ;
  101                   ; Ideen:
  102                   ; - Ruecksprungziel auf 0160H = USER-Stack eintragen
  103                   ; - erweiterte Tastaturinterrupt-Routine um im Echtzeitbetrieb
  104                   ;   eine Unterbrechnungsmoeglichkeit per STOP-Taste zu schaffen
  105                   ;_______________________________________________________________;
  106                   ;
  107                   ; Kommandos im CAOS-Menue:
  108                   ;
  109                   ;	%TEMO	- Kaltstart Debugger
  110                   ;	%RETEMO	- Warmstart Debugger
  111                   ;
  112                   ; Kommandos im Debugger-Menue:					Test:
  113                   ;
  114                   ;	>MENU		- MENU auflisten			ok.
  115                   ;	>WORKRAM	- Arbeitsbereich verlagern		ok.
  116                   ;	>QUIT		- zu CAOS zurueckkehren			ok.
  117                   ;	>REAS		- Reassembler aufrufen			ok.
  118                   ;	>CRC		- Berechnung Pruefsumme, CRC16		ok.
  119                   ;	>REG		- Registeranzeige/Modifikation		ok.
  120                   ;	>SWITCH		- Module lesen / schalten		ok.
  121                   ;	>DISPLAY	- Speicherdump anzeigen			ok.
  122                   ;	>MODIFY		- Speicher modifizieren			ok.
  123                   ;	>IN		- Port lesen				ok.
  124                   ;	>OUT		- Port schreiben			ok.
  125                   ;	>FILL		- Speicherbereich fuellen		ok.
  126                   ;	>EXCH		- Speicherbereich tauschen		ok.
  127                   ;	>COPY		- Speicherbereich kopieren		ok.
  128                   ;	>ARITH		- Addition, Subtraktion, Multiplikation	ok.
  129                   ;	>?		- BASIC-Taschenrechner (Ersatz fuer ARITH)
  130                   ;	>BREAK		- Unterbrechungspunkt setzen/anzeigen	ok.
KC-Debugger     							    SLR180 1.31 Page  60
TEMO    Z80

  131                   ;	>GO		- Sprung in Anwenderprogramm mit Initialisierung des Unterbrechungspunktes
  132                   ;	>STEP		- Schrittbetrieb: LF,CR,U...
  133                   ;	>.		- Stackmodifizieren			ok.
  134                   ;	>STACK		- Anzeige Stackpointer			ok.
  135                   ;
  136                   ;_______________________________________________________;
  137                   ;
  138                   
  139                   ;
  140                   ; Arbeitszellen in Arbeitsspeicher-Bereich (Teil 1):
  141                   ; Adressbereich: 0010h .. 0037h
  142                   ;
  143         0010      RAF	EQU	10h	;+ Register AF	zusammenhaengend, feste Reihenfolge!
  144         0012      RBC	EQU	RAF+2	;| Register BC
  145         0014      RDE	EQU	RAF+4	;| Register DE
  146         0016      RHL	EQU	RAF+6	;| Register HL
  147         0018      RIX	EQU	RAF+8	;| Register IX
  148         001A      RIY	EQU	RAF+10	;| Register IY
  149         001C      ZAF	EQU	RAF+12	;| Register AF'
  150         001E      ZBC	EQU	RAF+14	;| Register BC'
  151         0020      ZDE	EQU	RAF+16	;| Register DE'
  152         0022      ZHL	EQU	RAF+18	;| Register HL'
  153         0024      RSP	EQU	RAF+20	;| Register SP
  154         0026      RTS	EQU	RAF+22	;+  Stack-Inhalt
  155         0028      PCO	EQU	RAF+24	;+ PC (alter Wert)
  156         002A      PCN	EQU	RAF+26	;+ PC (neuer Wert)
  157                   ;
  158         0028      mem2	equ	28h	; bis 2Bh:  4 Byte Code (letzter Befehl)
  159         002C      mem1	equ	2Ch	; bis 35h: 10 Byte Code (aktueller+folgender Befehl)
  160                   ;
  161         0036      uprompt	equ	36h		;+ 36h	Ablage USER-Prompt
  162                   				;|
  163         0037      uprol	equ	uprompt+1	;+ 37h	Ablage USER-Prologbyte
  164                   ;
  165                   ; die anderen Arbeitszellen nach den RST38-Routinen:
  166                   ;
  167         00A6      BREAK	EQU	RSTEND-RST38+38H
  168                   			;+ AAh	Unterbrechungspunkt (RAM)
  169         00A8      BRKI	EQU	BREAK+2	;| ACh	Inhalt Unterbrechungspunkt (BREAK)
  170         00A9      MODE	EQU	BREAK+3	;+ ADh	Betriebsart bei Schrittbetrieb
  171                   	; 0	Echtzeitbetrieb (Abbruch nur bei RST38)
  172                   	; 1	Schrittbetrieb ohne Anzeige (Kontrolle Breakpoint durch CTC)
  173                   	; 2	Schrittbetrieb mit Anzeige bis Breakpoint (ohne Tastaturabfrage)
  174                   	; 3	Schrittbetrieb mit Anzeige und Tastatursteuerung
  175                   ;
  176                   ; Die folgenden Arbeitszellen liegen im IRM hinter der SUTAB
  177                   ;
  178         AAE8      WINDOW2	EQU	0AAE8h	; bis AAF3h: Zwischenspeicher fuer TEMO-Fenster (Bild 1)
  179                   	; 9 Byte:	WINNR,WINON,WINLG,CURSO,STBT,COLOR
  180                   	; 1 Byte:	IX+1 bzw. Port 84h
  181                   	; 2 Byte:	CCTL0 (Grossbuchstaben)
  182                   
  183         AAF4      WINDOW1	EQU	0AAF4h	; bis AAFFh: Zwischenspeicher fuer USER-Fenster (Bild 2)
  184                   	; 9 Byte:	WINNR,WINON,WINLG,CURSO,STBT,COLOR
  185                   	; 1 Byte:	IX+1 bzw. Port 84h
  186                   	; 2 Byte:	CCTL0 (Grossbuchstaben)
  187                   ;
  188                   ; Mitverwendete Arbeitszellen von REAS im IRM:
KC-Debugger     							    SLR180 1.31 Page  61
TEMO    Z80

  189                   ; --------------------------------------------
  190                   ; MS	EQU	0B7F2H	; Markenschalter (alt ARGN=0B781h)
  191                   ; CMODE	EQU	0B7F3H	; Ausgabe auf: 0=Bildschirm ...
  192                   ; DMODE	EQU	CMODE+1	; Special-Mode: 0=normal
  193                   ; ROFFS	EQU	0B7F5H	; Anzeige-Offset Reassembler
  194                   ; PBY	EQU	0B7F7H	; 6 Prologbytes vordefiniert bzw. von Kommandozeile
  195                   	;   bis 0B7FCH
  196                   ;
  197                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  198                   ;
  199                   ;	TEMO-Hilfsroutinen fuer RST38 und Interrupt
  200                   ;	werden in den RAM0 kopiert ab 0038H
  201                   ;
  202 CF94  E3          RST38:	EX	(SP),HL
  203 CF95  2B          	DEC	HL		; zurueck vor RST38H-Byte
  204 CF96  E3          	EX	(SP),HL
  205 CF97  E5          	push	hl
  206 CF98  F5          	push	af
  207 CF99  2A 00A6     	LD	HL,(BREAK)	; Adresse Unterbrechungspunkt
  208 CF9C  3A 00A8     	LD	A,(BRKI)	; urspruenglicher Wert vom Speicher holen
  209 CF9F  77          	LD	(HL),A		; und wieder im Programm eintragen
  210 CFA0  F1          	pop	af
  211 CFA1  21 D59C     	ld	hl,RSTROM	; Restart-Routine im USER-ROM
  212 CFA4  18 04       	jr	memsw		; Speicher sichern und schalten
  213                   	;
  214 CFA6  E5          ICTC:	push	hl
  215 CFA7  21 D5AD     	ld	hl,INTROM	; Interrupt-Routine im USER-ROM
  216 CFAA  E3          memsw:	ex	(sp),hl		; auf Stack legen fuer RET
  217 CFAB  F5          	push	af
  218 CFAC  E5          	push	hl
  219 CFAD  D5          	push	de
  220 CFAE  C5          	push	bc
  221 CFAF  11 0028     	ld	de,mem2		; Codespeicher 2 (letzter Befehl)
  222 CFB2  21 002C     	ld	hl,mem1		; Codespeicher 1 (aktueller+folgender Befehl)
  223 CFB5  01 0004     	ld	bc,4		; 4 Byte kopieren
  224 CFB8  ED B0       	ldir			; fuer Anzeige letzten Befehl
  225 CFBA  21 000A     	ld	hl,10
  226 CFBD  39          	add	hl,sp		; Berechnung, wo PC gerade steht
  227 CFBE  7E          	ld	a,(hl)		; das ist 10 Byte zurueck
  228 CFBF  23          	inc	hl		; auf dem Stack zu finden
  229 CFC0  66          	ld	h,(hl)
  230 CFC1  6F          	ld	l,a
  231 CFC2  0E 0A       	ld	c,10		; 10 Byte kopieren
  232 CFC4  ED B0       	ldir			; fuer Anzeige aktuellen+folgenden Befehl
  233 CFC6  C1          	pop	bc
  234 CFC7  D1          	pop	de
  235 CFC8  E1          	pop	hl
  236 CFC9  DB 88       	in	a,(88H)		; PIO-A
  237 CFCB  F5          	push	af
  238 CFCC  3E 8F       nn1:	ld	a,8FH		; Standard (USER ein, IRM ein, CAOS-E ein)
  239 CFCE  D3 88       	out	(88H),a		; mit IRM ein
  240 CFD0  F1          	pop	af
  241 CFD1  32 008F     	ld	(U88H),A	; aktuellen PIO-Zustand im IRM eintragen
  242 CFD4  DD 7E 04    	ld	a,(ix+4)
  243 CFD7  32 0088     	ld	(U86H),A	; aktuellen Zustand im IRM eintragen
  244 CFDA  3E 43       nn2:	ld	a,43h		; Standard (RAM4 ein, CAOS-C aus, USER=DEBUG)
  245 CFDC  DD 77 04    	ld	(ix+4),a	; mit passenden ROM-Ebenen
  246 CFDF  D3 86       	out	(86H),a
KC-Debugger     							    SLR180 1.31 Page  62
TEMO    Z80

  247 CFE1  F1          	pop	af
  248 CFE2  C9          	ret			; Hier Absprung in den ROM (INTROM / RSTROM)
  249                   ;
  250                   ; Startroutine von GO mit Speicherschaltung
  251                   ; muss im RAM0 abgearbeitet werden, da IRM und ROM geschalten werden koennen
  252                   ;
  253 CFE3  3E 43       GORAM:	ld	a,43h		; Standardwert wird ueberschrieben...
  254         0088      U86H	EQU	$-1-RST38+38H	; Inhalt von Port 86H in USER-Programm
  255 CFE5  DD 77 04    	ld	(ix+4),a
  256 CFE8  D3 86       	out	(86H),a		; ROM-Ebenen schalten
  257 CFEA  3E 8F       	ld	a,8Fh		; Standardwert wird ueberschrieben...
  258         008F      U88H	EQU	$-1-RST38+38H	; Inhalt von PIO-A in USER-Programm
  259 CFEC  D3 88       	out	(88H),a		; RAM-Ebenen schalten
  260 CFEE  3A 00A9     	LD	A,(MODE)
  261 CFF1  A7          	AND	A		; RAM- oder ROM-Mode?
  262 CFF2  28 0C       	JR	Z,GO5		; Echtzeitbetrieb, CTC nicht aktivieren!
  263 CFF4  3E 87       	LD	A,87H		; EI, Zeitgeber, VT=16, ZK folgt
  264 CFF6  F3          	DI		; Interrupts sperren
  265 CFF7  D3 8C       	OUT	(CTC0),A	; CTC-Steuerwort
  266 CFF9  3E 02       	LD	A,2		; 2*16=32 Takte
  267 CFFB  D3 8C       	OUT	(CTC0),A	; CTC-Zeitkonstante
  268 CFFD  FB          	EI		; 4 Takte Interrupts freigeben
  269 CFFE  00          	NOP		; 4 Takte warten
  270 CFFF  00          	NOP		; 4 Takte warten
  271 D000  F1          GO5:	POP	AF	; 11 Takte ; Wert in AF laden
  272 D001  C9          	RET		; 10 Takte ; PC anspringen
  273                   			; 33 Takte in Summe ab dem OUT-Befehl!
  274 D002              RSTEND:
  275                   ;
  276                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  277                   ;
  278                   ; Arbeitsspeicher verlagern
  279                   ; Aufruf: WORKRAM [H-adr]
  280                   ;
  281 D002  FDFD        	DEFW	0FDFDH
  282 D004  57 4F 52 4B 	DB	'WORKRAM',1
  283 D00C  3D          	DEC	A		; 1 Parameter?
  284 D00D  7D          	LD	A,L		; angegebenen Parameter verwenden
  285 D00E  28 02       	JR	Z,WORK1
  286 D010  3E 01       	LD	A,1		; ohne Parameter: Defautwert = 1
  287 D012  CD F003     WORK1:	CALL	PV1
  288 D015  31          	DB	SIXD		; Verlagerung Arbeitsbereich (setzt IX+9 zurueck)
  289 D016  CD D777     	CALL	INIT2		; ISR-Routine wieder einstellen
  290 D019  DD 36 09 FD 	LD	(IX+9),0FDh	; Prologbyte fuer TEMO wieder einstellen
  291 D01D  18 63       	JR	TE3		; Monitor-Loop
  292                   ;
  293                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  294                   ;
  295                   ;	TEMO-Kaltstart
  296                   ;
  297 D01F  7F7F        TOP:	DW	7F7FH
  298 D021  54 45 4D 4F 	DB	'TEMO',1FH	; Textargumente zulaessig
  299                   
  300 D026  1A          	ld	a,(de)
  301 D027  B7          	or	a		; Parameter angegeben?
  302 D028  28 25       	jr	z,te0		; nein
  303 D02A  CD DFF3     	CALL	UROM		; Schaltzustand User-ROM merken
  304 D02D  E5          	PUSH	HL		; nach Ausfuehrung wieder abschalten
KC-Debugger     							    SLR180 1.31 Page  63
TEMO    Z80

  305 D02E  3E FD       	LD	A,0FDH		; Prologbyte
  306 D030  21 D36E     	LD	HL,CRC		; Beginn der Menuewortsuche ab CRC
  307 D033  01 0205     	LD	BC,CPA5-CRC	; Laenge Suchbereich bis CMP
  308 D036  CD F003     	CALL	PV1
  309 D039  1D          	DB	ZSUCH		; Menuewort im Debugger suchen
  310 D03A  38 03       	JR	C,SU1		; Menuewort gefunden
  311 D03C  C3 D1E0     SU0:	JP	ERR		; Fehlermeldung, Monitor-Loop
  312                   	;
  313 D03F  23          SU1:	INC	HL		; Epilogbyte uebergehen
  314 D040  E5          	PUSH	HL		; Startadresse
  315 D041  FE 1F       	CP	1FH		; Textparameter?
  316 D043  C8          	RET	Z		; ohne arg zu erfassen!
  317 D044  CD F003     	CALL	PV1
  318 D047  22          	DB	GARG
  319 D048  38 F2       	JR	C,SU0		; bad args
  320 D04A  CD F003     	CALL	PV1
  321 D04D  15          	DB	LARG		; Arg's laden
  322 D04E  C9          	RET
  323                   
  324 D04F              te0:
  325 D04F  21 0010     	LD	HL,RAF		; erstes Register im TEMO-Arbeitsspeicher
  326 D052  AF          	XOR	A
  327 D053  06 18       	LD	B,24		; RAF bis PCN
  328 D055  77          TE1:	LD	(HL),A		; alle Register loeschen
  329 D056  23          	INC	HL
  330 D057  10 FC       	DJNZ	TE1
  331 D059  21 00A6     	LD	HL,BREAK
  332 D05C  06 03       	LD	B,3		; BREAK bis MODE
  333 D05E  77          TE2:	LD	(HL),A		; Unterbrechungspunkt=0
  334 D05F  23          	INC	HL		; MODE=0 voreinstellen
  335 D060  10 FC       	DJNZ	TE2
  336 D062  11 AAE8     	LD	DE,WINDOW2
  337 D065  21 D178     	LD	HL,WINTAB	; vordefinierte Daten fuer TEMO-Fenster
  338 D068  01 000A     	LD	BC,10
  339 D06B  ED B0       	LDIR			; initialisieren
  340 D06D  21 B7A6     	LD	HL,CCTL0
  341 D070  ED A0       	LDI			; Zeichensatz 0 (Grossbuchstaben)
  342 D072  ED A0       	LDI			; hinzufuegen
  343 D074  21 C386     	LD	HL,PROBY
  344 D077  11 A885     	LD	DE,PBY		; 6 bekannte Prologbytes
  345 D07A  01 0006     	LD	BC,6		; fuer Reassembler initialisieren
  346 D07D  ED B0       	LDIR
  347 D07F  CD D774     	CALL	INIT		; TEMO initialisieren, zu Bild 2 wechseln
  348 D082  ED 57       TE3:	LD	A,I
  349 D084  67          	LD	H,A
  350 D085  2E 60       	LD	L,60H
  351 D087  22 0024     	LD	(RSP),HL	; Anwender-SP setzen
  352 D08A  2E C4       	LD	L,0C4H
  353 D08C  22 B7AE     	LD	(SYSP),HL	; System-SP neu setzen
  354 D08F  F9          	LD	SP,HL		; und laden
  355 D090  DD 22 0018  	LD	(RIX),IX	; IX-Register auf aktuellen Wert setzen
  356 D094  AF          	XOR	A
  357 D095  32 B781     	LD	(ARGN),A	; MENU normal ausschreiben
  358 D098  18 21       	JR	TMENU
  359                   ;
  360                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  361                   ;
  362                   ;	TEMO-Warmstart
KC-Debugger     							    SLR180 1.31 Page  64
TEMO    Z80

  363                   ;
  364 D09A  7F7F        	DW	7F7FH
  365 D09C  52 45 54 45 	DB	'RETEMO',1
  366 D0A3  ED 57       	LD	A,I
  367 D0A5  67          	LD	H,A		; WORKRAM
  368                   ;	LD	L,60H
  369                   ;	LD	(RSP),HL	; Anwender-SP nicht neu setzen!
  370 D0A6  2E C4       	LD	L,0C4H
  371 D0A8  22 B7AE     	LD	(SYSP),HL	; System-SP neu setzen
  372 D0AB  F9          	LD	SP,HL		; und laden
  373 D0AC  CD D774     	CALL	INIT		; TEMO initialisieren, zu Bild 2 wechseln
  374 D0AF  C3 D195     	JP	PRSE		; Monitor-Loop
  375                   ;
  376                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  377                   ;
  378                   ; TEMO-Menue ausschreiben
  379                   ; Aufruf: MENU [Mode]
  380                   ;
  381 D0B2  FDFD        	DEFW	0FDFDH
  382 D0B4  4D 45 4E 55 	DB	'MENU',1
  383 D0B9  E1          	POP	HL
  384 D0BA  E1          	POP	HL		; Stack bereinigen
  385 D0BB  CD F003     TMENU:	CALL	PV1	
  386 D0BE  23          	DB	OSTR
  387                   ;	DB	ESC,'2'		; koennte entfallen...
  388 D0BF  0C 0A       	DB	0CH,LF
  389 D0C1  3E 20 4B 43 	DB	'> KC-DEBUGGER 2.3 <',CR,LF,0
  390 D0D7  CD F003     	CALL	PV1		; Uebergang in
  391 D0DA  46          	DB	MENU		; CAOS-Menueschleife
  392                   ;
  393                   ;-------------------------------
  394                   ; Bild 1 fuer Anwenderprogramm einstellen
  395                   ;
  396 D0DB  2A B7A0     BILD0:	LD	HL,(CURSO)	; Cursorposition von TEMO-Fenster
  397 D0DE  22 AAED     	LD	(WINDOW2+5),HL	; abspeichern (fuer RETEMO)
  398 D0E1  21 AAF4     BILD1:	LD	HL,WINDOW1	; USER-Fenster initialisieren
  399 D0E4  ED 4B 0036  	ld	bc,(UPROMPT)	; USER-Prompt und -Prolog (B = Prolog)
  400 D0E8  79          	ld	a,c		; A = Prompt
  401 D0E9  18 2B       	JR	WININI
  402                   ;-------------------------------
  403                   ; Bild 2 fuer TEMO einstellen (Anwenderfenster sichern)
  404                   ;
  405 D0EB  11 AAF4     BILD2:	LD	DE,WINDOW1
  406 D0EE  21 B79B     	LD	HL,WINNR
  407 D0F1  01 0009     	LD	BC,9		; Von WINNR bis COLOR
  408 D0F4  ED B0       	LDIR			; Anwender-Fenster sichern
  409 D0F6  DD 7E 01    	LD	A,(IX+1)
  410 D0F9  E6 0F       	AND	0FH		; nur Bit 0-3 interessant
  411 D0FB  12          	LD	(DE),A		; merken
  412 D0FC  13          	INC	DE
  413 D0FD  23          	INC	HL		; Adresse fuer Scroll-Mode oder
  414 D0FE  23          	INC	HL		; Page-Mode nicht beruecksichtigen
  415 D0FF  ED A0       	LDI
  416 D101  ED A0       	LDI			; Zeichentabelle CCTL0 mit sichern
  417 D103  21 AAE8     	LD	HL,WINDOW2	; TEMO-Fenster initialisieren
  418 D106  DD 7E 09    	ld	a,(IX+9)	; aktuelles Prologbyte
  419 D109  32 0037     	ld	(UPROL),a	; als USER-Prolog merken
  420 D10C  3A B7EC     	ld	a,(PROMPT)	; aktuelles Promptzeichen
KC-Debugger     							    SLR180 1.31 Page  65
TEMO    Z80

  421 D10F  32 0036     	ld	(UPROMPT),A	; als USER-Prompt merken
  422 D112  3E 2B       	ld	a,'+'		; Promptzeichen fuer TEMO
  423 D114  06 FD       	ld	B,0FDH		; Prologbyte fuer TEMO
  424 D116  32 B7EC     WININI:	ld	(PROMPT),A	; neues Promptzeichen
  425 D119  DD 70 09    	LD	(IX+9),B	; neues Prologbyte
  426 D11C  11 B79B     	LD	DE,WINNR
  427 D11F  01 0009     	LD	BC,9
  428 D122  ED B0       	LDIR			; Fensterdaten laden
  429                   
  430 D124  3E 1B       	LD	A,ESC		; ESC-Funktion einleiten
  431 D126  CD CB0E     	CALL	DOCHR		; fuer Bildwechsel
  432 D129  DD 7E 01    	LD	A,(IX+1)
  433 D12C  E6 F0       	AND	0F0H		; Bit 7-4: RAM8-Ebene erhalten
  434 D12E  B6          	OR	(HL)		; Bit 0-3: abgespeicherter Wert
  435 D12F  DD 77 01    	LD	(IX+1),A	; eintragen
  436 D132  D3 84       	OUT	(84H),A		; und aktivieren
  437 D134  23          	INC	HL
  438 D135  13          	INC	DE		; Adresse fuer Scroll-Mode oder
  439 D136  13          	INC	DE		; Page-Mode ueberspringen
  440 D137  ED A0       	LDI
  441 D139  ED A0       	LDI			; Zeichentabelle CCTL0 kopieren
  442 D13B  E6 01       	AND	1		; Bit 0 = Bild
  443 D13D  C6 31       	ADD	A,'1'		; ergibt '1' oder '2'
  444 D13F  C3 CB0E     	JP	DOCHR		; mit ESC 1/2 VRAM-Adresse aktualisieren!
  445                   ;
  446                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  447                   ;
  448                   ; Liste der Registernamen und Flagnamen
  449                   ;
  450 D142  46 20 41 20 REGL:	DB	'F A C B E D L H '	; 8 Einfachregister
  451 D152  53 20 5A 20 	DB	'S Z   HY  P N CY'	; 8 Flags
  452 D162  41 46 42 43 	DB	'AFBCDEHLIYSPPC'	; 7 Doppelregister
  453                   
  454 D170  53 5A 2E 48 FLAGL:	DB	'SZ.H.PNC'
  455                   ;
  456                   ; Fensterdaten fuer TEMO-Fenster
  457                   ;
  458 D178  00          WINTAB:	DB	0	; WINNR	= Fensternummer
  459 D179  0000        	DW	0	; WINON	= Fensteranfang
  460 D17B  2028        	DW	2028H	; WINLG	= Fenstergroesse
  461 D17D  0000        	DW	0	; CURSO	= Cursorposition
  462 D17F  00          	DB	0	; STBT	= Steuerbyte
  463 D180  39          	DB	39H	; COLOR	= Farbe sw/ws
  464 D181  0D          	DB	0DH	; IX+1	= IRM-Ebene (Bild 1, Pixel/Color)
  465                   ;
  466                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  467                   ;
  468                   ; Verlassen des Testmonitors
  469                   ;
  470 D182  FDFD        	DEFW	0FDFDH
  471 D184  51 55 49 54 	DB	'QUIT',1
  472 D189  CD D0DB     	CALL	BILD0		; Daten fuer USER-Fenster laden/aktivieren
  473                   				; und CAOS-Prolog wiederherstellen
  474 D18C  ED 57       	LD	A,I
  475 D18E  67          	LD	H,A
  476 D18F  2E C4       	LD	L,0C4H
  477 D191  22 B7AE     	LD	(SYSP),HL	; normalen System-SP setzen
  478 D194  F9          	LD	SP,HL
KC-Debugger     							    SLR180 1.31 Page  66
TEMO    Z80

  479                   ;
  480                   ; Monitor-Loop:
  481                   ;
  482 D195  CD F003     PRSE:	CALL	PV1
  483 D198  12          	DB	LOOP		; Uebergang zu CAOS-Eingabeschleife
  484                   ;
  485                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  486                   ;
  487                   ; Reassembler aufrufen
  488                   ; Aufruf: REAS Aadr [Zeilen [Ausadr [Prol]]]
  489                   ;
  490 D199  FDFD        	DEFW	0FDFDH
  491 D19B  44 49 53 41 	DB	'DISASS',1
  492 D1A2  C3 C48D     	JP	LIST		; Sprung zum Reassembler
  493                   ;
  494                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  495                   ;
  496                   ; Register modifizieren und anzeigen
  497                   ; Aufruf: REG [register nnnn]
  498                   ;
  499 D1A5  FDFD        	DEFW	0FDFDH
  500 D1A7  52 45 47 1F 	DB	'REG',1FH	; Textparameter zulaessig
  501 D1AB  1A          	LD	A,(DE)
  502 D1AC  E6 DF       	AND	0DFH
  503 D1AE  CA D237     	JP	Z,REGANZ	; ohne Argument -> Registerinhalte anzeigen
  504                   
  505                   ; Register modifizieren:
  506                   
  507 D1B1  21 D142     	LD	HL,REGL		; Registernamen
  508 D1B4  01 002E     	LD	BC,FLAGL-REGL	; Laenge der Tabelle
  509 D1B7  1A          ZS1:	LD	A,(DE)		; Suche nach Registernamen (Kleinbuchstaben)
  510 D1B8  ED A1       	CPI
  511 D1BA  28 07       	JR	Z,LBL1		; 1. Buchstabe stimmt
  512 D1BC  ED A1       	CPI
  513 D1BE  E2 D1E0     LBL2:	JP	PO,ERR		; ausgesucht -> ERROR
  514 D1C1  18 F4       	JR	ZS1
  515                   	;
  516 D1C3  13          LBL1:	INC	DE
  517 D1C4  1A          	LD	A,(DE)		; 2. Zeichen
  518 D1C5  FE 40       	CP	'A'-1		; zu Ende ?
  519 D1C7  0B          	DEC	BC
  520 D1C8  38 09       	JR	C,LBL3
  521 D1CA  03          	INC	BC
  522 D1CB  ED A1       	CPI			; 2. Buchstabe richtig?
  523 D1CD  1B          	DEC	DE
  524 D1CE  20 EE       	JR	NZ,LBL2		; zweiter Buchstabe falsch
  525 D1D0  13          	INC	DE
  526 D1D1  13          	INC	DE
  527 D1D2  1A          	LD	A,(DE)
  528 D1D3  FE 27       LBL3:	CP	27H		; folgt ' ?
  529 D1D5  20 03       	JR	NZ,LBL4
  530 D1D7  13          	INC	DE		; Zeiger nach '
  531 D1D8  CB C0       	SET	0,B		; Zweitregister setzen
  532 D1DA  13          LBL4:	INC	DE
  533 D1DB  CD CF8F     	CALL	GETHEX		; folgende Zahl lesen
  534 D1DE  30 06       	JR	NC,LBL5		; kein Fehler
  535 D1E0  CD F003     ERR:	CALL	PV1		; Fehlermeldung, Monitor-Loop
  536 D1E3  19          	DB	ERRM
KC-Debugger     							    SLR180 1.31 Page  67
TEMO    Z80

  537 D1E4  37          	SCF		;CY=1
  538 D1E5  C9          	RET
  539                   	;
  540 D1E6  ED 5B B797  LBL5:	LD	DE,(NUMVX)	; Zahl holen
  541 D1EA  21 0010     	LD	HL,RAF		; Beginn Registerspeicher
  542 D1ED  3E 2C       	LD	A,FLAGL-REGL-2
  543 D1EF  91          	SUB	C		; A = Nr. des Registers
  544 D1F0  CB 6F       	BIT	5,A
  545 D1F2  20 28       	JR	NZ,DOPP		; Doppelregister
  546 D1F4  0F          	RRCA			; /2
  547 D1F5  CB 5F       	BIT	3,A
  548 D1F7  28 18       	JR	Z,REGI		; Einfachregister
  549                   ;	LD	L,RAF		; Flags
  550 D1F9  CB 40       	BIT	0,B
  551 D1FB  28 02       	JR	Z,FL1
  552 D1FD  2E 1C       	LD	L,ZAF		; Flags Zweitregister
  553 D1FF  E6 07       FL1:	AND	7
  554 D201  01 FDF8     	LD	BC,BITTAB	; Bitmaske aus CAOS
  555 D204  81          	ADD	A,C
  556 D205  4F          	LD	C,A
  557 D206  0A          	LD	A,(BC)		; Maske geholt
  558 D207  CB 43       	BIT	0,E
  559 D209  28 02       	JR	Z,RESF
  560 D20B  B6          	OR	(HL)		; Bit setzen
  561 D20C  01          	DB	01h	; LD BC,nn
  562                   ;
  563 D20D  2F          RESF:	CPL
  564 D20E  A6          	AND	(HL)		; Bit loeschen
  565 D20F  77          	LD	(HL),A
  566 D210  C9          	RET			; Monitor-Loop
  567                   ;
  568                   ; Einzelregister modifizieren
  569                   ;
  570 D211  CB 40       REGI:	BIT	0,B		; Zweitregister?
  571 D213  28 02       	JR	Z,REGI1
  572 D215  C6 0C       	ADD	A,12		; Einzelregister aus Zweitregistersatz
  573 D217  C6 10       REGI1:	ADD	A,RAF
  574 D219  6F          	LD	L,A
  575 D21A  73          	LD	(HL),E
  576 D21B  C9          	RET
  577                   ;
  578                   ; Doppelregister modifizieren
  579                   ;
  580 D21C  CB AF       DOPP:	RES	5,A
  581 D21E  2E 1A       	LD	L,RIY		; Registeradresse IY
  582 D220  FE 08       	CP	8
  583 D222  28 0F       	JR	Z,REGI3
  584 D224  2E 24       	LD	L,RSP		; Registeradresse SP
  585 D226  FE 0A       	CP	10
  586 D228  28 09       	JR	Z,REGI3
  587 D22A  2E 2A       	LD	L,PCN		; Registeradresse PC
  588 D22C  FE 0C       	CP	12
  589 D22E  28 03       	JR	Z,REGI3
  590 D230  CD D211     	CALL	REGI		; Registeradresse berechnen
  591 D233  73          REGI3:	LD	(HL),E		; Low(Doppelregister) eintragen
  592 D234  23          	INC	HL
  593 D235  72          	LD	(HL),D		; High(Doppelregister) eintragen
  594 D236  C9          	RET
KC-Debugger     							    SLR180 1.31 Page  68
TEMO    Z80

  595                   ;
  596                   ; Register anzeigen:
  597                   ;
  598 D237  2A 0024     REGANZ:	LD	HL,(RSP)	; Anwender-Stack
  599 D23A  7E          	LD	A,(HL)
  600 D23B  23          	INC	HL
  601 D23C  66          	LD	H,(HL)
  602 D23D  6F          	LD	L,A		; HL = Inhalt von Stack
  603 D23E  22 0026     	LD	(RTS),HL	; hier aktualisieren
  604                   ;
  605                   ; Registeranzeige
  606                   ;
  607                   ; PE:	Register in den TEMO-Arbeitszellen
  608                   ; VR:	HL, DE, BC, AF
  609                   ;
  610 D241  CD F003     REG:	CALL	PV1		; Registernamen erste Zeile
  611 D244  23          	DB	OSTR
  612 D245  41 20 20 2D 	DB	'A  -FLAGS-- B C  D E  H L  M  IX   IY   ',0
  613 D26E  21 0010     	LD	HL,RAF		; Start mit Register AF
  614 D271  CD D2A1     	CALL	PRLINE		; Erstregistersatz  AF bis IX+IY
  615                   
  616 D274  CD F003     	CALL	PV1		; Registernamen zweite Zeile
  617 D277  23          	DB	OSTR
  618 D278  41 27 20 2D 	DB	'A'' -FLAGS''- B''C'' D''E'' H''L'' M'' SP   (SP) ',0
  619                   ;	CALL	PRLINE		; Zweitregistersatz AF' bis SP + (SP)
  620                   ;	RET			; reinlaufen ...
  621                   ;
  622                   ; Auflisten der Registerinhalte (1 Zeile) ohne CR+LF da Zeile voll ist
  623                   ; PE:	HL	Zeiger auf Registerliste
  624                   ;
  625 D2A1  4E          PRLINE:	LD	C,(HL)		; Flags
  626 D2A2  23          	INC	HL
  627 D2A3  7E          	LD	A,(HL)
  628 D2A4  23          	INC	HL
  629 D2A5  CD D318     	CALL	AHSPC		; --A--
  630                   
  631 D2A8  06 09       	LD	B,8+1		; --Flags--
  632 D2AA  11 D170     	LD	DE,FLAGL	; FLAG-Bezeichner
  633 D2AD  3E 20       PRL1:	LD	A,' '		; Leerzeichen (Flag nicht gesetzt)
  634 D2AF  CB 21       	SLA	C
  635 D2B1  30 01       	JR	NC,PRL2
  636 D2B3  1A          	LD	A,(DE)		; Zeichen des Flags
  637 D2B4  13          PRL2:	INC	DE
  638 D2B5  CD CB0E     	CALL	DOCHR
  639 D2B8  10 F3       	DJNZ	PRL1
  640                   
  641 D2BA  06 03       	LD	B,3		; 3 Doppelregister:
  642 D2BC  CD D2C5     	CALL	WORDS		; -BC-DE-HL-
  643 D2BF  1A          	LD	A,(DE)
  644 D2C0  CD D318     	CALL	AHSPC		; --M--
  645                   
  646 D2C3  06 02       	LD	B,2		; 2 Doppelregister: IX, IY
  647                   ;
  648 D2C5  5E          WORDS:	LD	E,(HL)		; Ausgabe 16 bit-Wort
  649 D2C6  23          	INC	HL
  650 D2C7  56          	LD	D,(HL)
  651 D2C8  23          	INC	HL
  652 D2C9  EB          	EX	DE,HL
KC-Debugger     							    SLR180 1.31 Page  69
TEMO    Z80

  653 D2CA  CD D597     	CALL	HLHEX
  654 D2CD  EB          	EX	DE,HL
  655 D2CE  10 F5       	DJNZ	WORDS
  656 D2D0  C9          	RET
  657                   ;
  658                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  659                   ;
  660                   ; SWITCH - Module listen, lesen, schalten:
  661                   ; Aufruf: SWITCH [Steckplatz [Steuerbyte]]
  662                   ;			L	E
  663                   ;
  664 D2D1  FDFD        	DW	0FDFDH
  665 D2D3  53 57 49 54 	DB	'SWITCH',1
  666 D2DA  FE 01       	CP	1
  667 D2DC  38 30       	JR	C,MODUL		; kein Argument -> Module auflisten
  668 D2DE  28 09       	JR	Z,SWI2		; Modulzustand nur lesen/anzeigen
  669 D2E0  53          	LD	D,E		; Steuerbyte
  670 D2E1  4F          	LD	C,A	; ARGN
  671 D2E2  7D          	LD	A,L		; Steckplatz
  672 D2E3  FE 03       	CP	3
  673 D2E5  DA D1E0     	JP	C,ERR		; RAM0, IRM und USER-ROM hier nicht schaltbar!
  674 D2E8  79          	LD	A,C	; ARGN
  675 D2E9  F5          SWI2:	PUSH	AF
  676 D2EA  CD F003     	CALL	PV1
  677 D2ED  26          	DB	MODU		; Modul lesen/schalten
  678 D2EE  5F          	LD	E,A
  679 D2EF  7D          	LD	A,L
  680 D2F0  CD D318     	CALL	AHSPC		; Steckplatz L anzeigen
  681 D2F3  7C          	LD	A,H
  682 D2F4  CD D318     	CALL	AHSPC		; Kennbyte Modul
  683 D2F7  7B          	LD	A,E
  684 D2F8  CD F003     	CALL	PV1
  685 D2FB  1C          	DB	AHEX		; Steuerbyte alt
  686 D2FC  F1          	POP	AF
  687 D2FD  3D          	DEC	A
  688 D2FE  28 0B       	JR	Z,SWI5		; das war nur lesen
  689 D300  3E 09       	LD	A,9
  690 D302  CD F003     	CALL	PV1
  691 D305  42          	DB	CSTBT		; Pfeil nach rechts anzeigen
  692 D306  7A          	LD	A,D
  693 D307  CD F003     	CALL	PV1
  694 D30A  1C          	DB	AHEX		; Steuerbyte neu
  695 D30B  C3 D3D5     SWI5:	JP	NL
  696                   
  697                   ; alle Module auflisten:
  698                   
  699 D30E  CD F003     MODUL:	CALL	PV1
  700 D311  23          	DB	OSTR
  701 D312  1B 36       	DB	ESC,'6'		; Systemcheck (int. Module)
  702 D314  1B 35       	DB	ESC,'5'		; Modulcheck (ext. Module)
  703 D316  00          	DB	0
  704 D317  C9          	RET
  705                   	;
  706 D318  CD F003     AHSPC:	CALL	PV1
  707 D31B  1C          	DB	AHEX
  708 D31C  CD F003     	CALL	PV1
  709 D31F  2B          	DB	SPACE
  710 D320  C9          	RET
KC-Debugger     							    SLR180 1.31 Page  70
TEMO    Z80

  711                   ;
  712                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  713                   ;
  714                   ; Display
  715                   ; Aufruf: DISPLAY Adresse [Zeilen [Bytes]]
  716                   ;
  717 D321  FDFD        	DEFW	0FDFDH
  718 D323  44 49 53 50 	DB	'DISPLAY',3	; mind. 1 Parameter erforderlich
  719 D32B  CD F003     	CALL	PV1
  720 D32E  3B          	DB	DISP
  721 D32F  C9          	RET
  722                   ;
  723                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  724                   ;
  725                   ; Modify
  726                   ; Aufruf: MODIFY Adresse [Bytes]
  727                   ;
  728 D330  FDFD        	DEFW	0FDFDH
  729 D332  4D 4F 44 49 	DB	'MODIFY',3	; mind. 1 Parameter erforderlich
  730 D339  CD F003     MOD1:	CALL	PV1
  731 D33C  2E          	DB	MODI
  732 D33D  C9          	RET
  733                   ;
  734                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  735                   ;
  736                   ; Stackmodifizieren
  737                   ;
  738 D33E  FDFD        	DEFW	0FDFDH
  739 D340  2E 01       	DEFM	'.',1
  740 D342  2A 0024     	LD	HL,(RSP)	; Anwender-Stack als Adresse
  741 D345  3E 02       	LD	A,2		; 2 Parameter
  742 D347  5F          	LD	E,A		; 2 Byte parallel aendern
  743 D348  18 EF       	JR	MOD1
  744                   ;
  745                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  746                   ;
  747                   ; Transformationsprogramm
  748                   ; nur in Stacktiefe 1 aufrufen !!!
  749                   ;
  750                   ; PE:	HL: Anfang
  751                   ;	DE: Ende+1
  752                   ;	BC: Wert
  753                   ;	A:  ARGN
  754                   ; PA:	HL: Anfang
  755                   ;	DE: Wert
  756                   ;	BC: Laenge
  757                   ;	A:  ARGN
  758                   ;	CY=0
  759                   ;
  760 D34A  EB          FORM:	EX	DE,HL		; Anfang/Ende tauschen
  761 D34B  2B          	DEC	HL		; ENDE-1
  762 D34C  ED 52       	SBC	HL,DE		; Laenge berechnen
  763 D34E  38 07       	JR	C,RANGE		; Ende <= Anfang
  764 D350  23          	INC	HL		; Laenge +1
  765 D351  EB          	EX	DE,HL		; Anfang wieder in HL
  766 D352  C5          	PUSH	BC		; Wert auf Stack legen
  767 D353  42          	LD	B,D
  768 D354  4B          	LD	C,E		; Laenge jetzt in BC
KC-Debugger     							    SLR180 1.31 Page  71
TEMO    Z80

  769 D355  D1          	POP	DE		; Wert jetzt in DE
  770 D356  C9          	RET
  771                   ;
  772 D357  E1          RANGE:	POP	HL		; Stack eine Ebene zurueck
  773 D358  CD F003     RANGE1:	CALL	PV1		; Aufruf RANGE1 wird von JEDIT mitgenutzt!
  774 D35B  23          	DB	OSTR		; Fehlermeldung anzeigen
  775 D35C  49 4E 56 41 	DB	'INVALID RANGE',7,0
  776 D36B  C3 D3D5     	JP	NL		; CR,LF
  777                   ;
  778                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  779                   ;
  780                   ; Berechnung Pruefsumme und CRC16
  781                   ; Aufruf: CRC Aadr Eadr+1
  782                   ;
  783 D36E  FDFD        CRC:	DEFW	0FDFDH
  784 D370  43 52 43 01 	DB	'CRC',1
  785 D374  FE 02       	CP	2		; 2 Argumente erforderlich
  786 D376  28 13       	JR	Z,CRC0
  787 D378  CD D7CB     	CALL	HELP
  788 D37B  43 52 43 20 	DB	'CRC AADR EADR+1',0
  789                   	;
  790 D38B  CD D34A     CRC0:	CALL	FORM		; Argumente transformieren
  791                   
  792                   ; Berechnung Summe16 und CRC16: (HL=Adresse BC=Anzahl)
  793                   
  794         0000      fastcrc	equ	0		; schnelle CRC-Routine
  795         0000      if	fastcrc			; dafuer 11 Byte laenger
  839                   else	; fastcrc		; kuerzere aber langsamere CRC-Routine
  840                   
  841                   ; 28.10.2022: neue CRC-Routine von
  842                   ; https://wikiti.brandonw.net/index.php?title=Z80_Routines:Security:CRC16
  843                   
  844 D38E  EB          	EX	DE,HL		; Adresse in DE
  845 D38F  21 0000     	LD	HL,0		; Startwert fuer Summe
  846 D392  E5          	PUSH	HL		; Summe in (SP) berechnen
  847 D393  21 FFFF     	LD	HL,0FFFFH	; Startwert fuer CRC
  848 D396  1A          CRC1:	LD	A,(DE)
  849 D397  E3          	ex	(sp),hl		; Summe in HL		CRC auf Stack
  850 D398  85          	add	a,l
  851 D399  6F          	ld	l,a		; Summe berechnen
  852 D39A  30 01       	jr	nc,CRC2
  853 D39C  24          	inc	h
  854 D39D  E3          CRC2:	ex	(sp),hl		; Summe wieder auf Stack legen
  855 D39E  C5          	PUSH	BC		; Byte-Anzahl sichern
  856 D39F  1A          	LD	A,(DE)		; Byte holen
  857 D3A0  13          	INC	DE		; naechste Adresse
  858 D3A1  AC          	XOR	H		; XOR mit HWT der CRC
  859 D3A2  67          	LD	H,A
  860 D3A3  06 08       	LD	B,8
  861 D3A5  29          CRC3:	ADD	HL,HL		; nach links rotieren
  862 D3A6  30 08       	JR	NC,CRC4		; wenn MSB gesetzt
  863 D3A8  7C          	LD	A,H
  864 D3A9  EE 10       	XOR	10H		; mit Polynom verknuepfen 
  865 D3AB  67          	LD	H,A
  866 D3AC  7D          	LD	A,L
  867 D3AD  EE 21       	XOR	21H
  868 D3AF  6F          	LD	L,A
  869 D3B0  10 F3       CRC4:	DJNZ	CRC3		; Schleife ueber 8 Bit
KC-Debugger     							    SLR180 1.31 Page  72
TEMO    Z80

  870 D3B2  C1          	POP	BC		; Zaehler zurueck
  871 D3B3  0B          	DEC	BC
  872 D3B4  78          	LD	A,B		; Ende erreicht ?
  873 D3B5  B1          	OR	C
  874 D3B6  20 DE       	JR	NZ,CRC1
  875                   endif
  876                   
  877                   ; Berechnungsergebnis anzeigen:
  878                   
  879 D3B8  CD F003     	CALL	PV1
  880 D3BB  23          	DB	OSTR
  881 D3BC  43 52 43 31 	DB	'CRC16=',0
  882 D3C3  CD D597     	CALL	HLHEX		; CRC anzeigen
  883 D3C6  E1          	POP	HL		; Summe vom Stack holen
  884 D3C7  CD F003     	CALL	PV1
  885 D3CA  23          	DB	OSTR
  886 D3CB  53 55 4D 31 	DB	'SUM16=',0	; Summe anzeigen
  887 D3D2  CD D597     HLCR:	CALL	HLHEX
  888 D3D5  CD F003     NL:	CALL	PV1
  889 D3D8  2C          	DB	CRLF
  890 D3D9  C9          	RET
  891                   ;
  892                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  893                   ;
  894                   ; I/O-Port lesen
  895                   ; Aufruf: IN Port
  896                   ;
  897 D3DA  FDFD        	DEFW	0FDFDH
  898 D3DC  49 4E 01    	DB	'IN',1
  899 D3DF  3D          	DEC	A		; 1 Parameter erforderlich
  900 D3E0  28 0B       	JR	Z,IN0
  901 D3E2  CD D7CB     	CALL	HELP
  902 D3E5  49 4E 20 50 	DB	'IN PORT',0
  903                   	;
  904 D3ED  44          IN0:	LD	B,H
  905 D3EE  4D          	LD	C,L		; Portadresse in BC
  906 D3EF  ED 78       	IN	A,(C)		; Eingabe
  907 D3F1  CD F003     AHCR:	CALL	PV1
  908 D3F4  1C          	DB	AHEX		; und Wert anzeigen
  909 D3F5  C3 D3D5     	JP	NL		; CR,LF
  910                   ;
  911                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  912                   ;
  913                   ; I/O-Port schreiben
  914                   ; Aufruf: OUT Port Byte [Byte ...]
  915                   ;
  916 D3F8  FDFD        	DEFW	0FDFDH
  917 D3FA  4F 55 54 01 	DB	'OUT',1
  918 D3FE  FE 02       	CP	2		; mind. 2 Parameter erforderlich
  919 D400  30 1C       	JR	NC,OUT0
  920 D402  CD D7CB     	CALL	HELP
  921 D405  4F 55 54 20 	DB	'OUT PORT BYTE (BYTE ...)',0
  922                   	;
  923 D41E  44          OUT0:	LD	B,H
  924 D41F  4D          	LD	C,L		; Portadresse in BC
  925 D420  21 B782     	LD	HL,ARG1
  926 D423  3D          OUT1:	DEC	A		; noch ein Parameter?
  927 D424  C8          	RET	Z		; nein, fertig
KC-Debugger     							    SLR180 1.31 Page  73
TEMO    Z80

  928 D425  23          	INC	HL
  929 D426  23          	INC	HL
  930 D427  56          	LD	D,(HL)		; Ausgabebyte
  931 D428  ED 51       	OUT	(C),D
  932 D42A  18 F7       	JR	OUT1
  933                   ;
  934                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  935                   ;
  936                   ; Speicherbereiche mit Daten fuellen
  937                   ; Aufruf: FILL Aadr Eadr+1 [Byte [Byte ...]]
  938                   ;
  939 D42C  FDFD        	DEFW	0FDFDH
  940 D42E  46 49 4C 4C 	DB	'FILL',1
  941 D433  D6 02       	SUB	2		; mind. 2 Parameter erforderlich
  942 D435  30 1F       	JR	NC,FILL0
  943 D437  CD D7CB     	CALL	HELP
  944 D43A  46 49 4C 4C 	DB	'FILL AADR EADR+1 (BYTE ...)',0
  945                   	;
  946 D456  CD D34A     FILL0:	CALL	FORM		; Argumente transformieren / HL=Anfang, BC=Anzahl
  947 D459  EB          	EX	DE,HL		; DE = Adresse
  948 D45A  21 B786     	LD	HL,ARG3		; Bytes ab ARG3 entnehmen
  949 D45D  B7          	OR	A		; 2 Parameter fuer Adressen abziehen
  950 D45E  20 03       	JR	NZ,FILL1	; mehr als 2 Parameter
  951 D460  3C          	INC	A		; 3. Parameter annehmen
  952 D461  36 00       	LD	(HL),0		; ARG3=0 wenn ohne Byte aufgerufen
  953 D463  F5          FILL1:	PUSH	AF		; Anzahl Bytes
  954 D464  E5          	PUSH	HL		; Beginn der Datenbytes
  955 D465  ED A0       FILL2:	LDI			; ein Byte eintragen
  956 D467  E2 D472     	JP	PO,FILL3	; BC=0 -> fertig
  957 D46A  23          	INC	HL		; ARGn = 2 Byte
  958 D46B  3D          	DEC	A
  959 D46C  20 F7       	JR	NZ,FILL2	; noch ein Byte
  960 D46E  E1          	POP	HL
  961 D46F  F1          	POP	AF
  962 D470  18 F1       	JR	FILL1		; wieder von vorn
  963                   	;
  964 D472  E1          FILL3:	POP	HL
  965 D473  F1          	POP	AF
  966 D474  C9          	RET
  967                   ;
  968                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  969                   ;
  970                   ; Speicherbereiche austauschen
  971                   ; Aufruf: EXCH Aadr Eadr+1 Adresse2
  972                   ;
  973 D475  FDFD        	DEFW	0FDFDH
  974 D477  45 58 43 48 	DB	'EXCH',1
  975 D47C  FE 03       	CP	3		; 3 Parameter erforderlich
  976 D47E  28 19       	JR	Z,EXCH0
  977 D480  CD D7CB     	CALL	HELP
  978 D483  45 58 43 48 	DB	'EXCH AADR EADR+1 ADR2',0
  979                   	;
  980 D499  CD D34A     EXCH0:	CALL	FORM		; Argumente transformieren
  981 D49C  1A          EXCH:	LD	A,(DE)
  982 D49D  ED A0       	LDI
  983 D49F  2B          	DEC	HL
  984 D4A0  77          	LD	(HL),A
  985 D4A1  23          	INC	HL
KC-Debugger     							    SLR180 1.31 Page  74
TEMO    Z80

  986 D4A2  EA D49C     	JP	PE,EXCH
  987 D4A5  C9          	RET
  988                   ;
  989                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  990                   ;
  991                   ; Speicherbereich verschieben (kopieren)
  992                   ; Aufruf: COPY Aadr Eadr+1 Adresse2
  993                   ;
  994 D4A6  FDFD        	DEFW	0FDFDH
  995 D4A8  43 4F 50 59 	DB	'COPY',1
  996 D4AD  FE 03       	CP	3		; 3 Parameter erforderlich
  997 D4AF  28 19       	JR	Z,MOVE0
  998 D4B1  CD D7CB     	CALL	HELP
  999 D4B4  43 4F 50 59 	DB	'COPY AADR EADR+1 ADR2',0
 1000                   	;
 1001 D4CA  CD D34A     MOVE0:	CALL	FORM		; Argumente transformieren
 1002 D4CD  ED 52       	SBC	HL,DE		; Kopierrichtung feststellen
 1003 D4CF  19          	ADD	HL,DE
 1004 D4D0  38 03       	JR	C,MOVE1
 1005 D4D2  ED B0       	LDIR			; nach vorn -> LDIR (Quelle > Ziel)
 1006 D4D4  C9          	RET
 1007                   ;
 1008 D4D5  09          MOVE1:	ADD	HL,BC
 1009 D4D6  EB          	EX	DE,HL
 1010 D4D7  09          	ADD	HL,BC
 1011 D4D8  EB          	EX	DE,HL
 1012 D4D9  2B          	DEC	HL
 1013 D4DA  1B          	DEC	DE
 1014 D4DB  ED B8       	LDDR			; nach hinten -> LDDR (Quelle < Ziel)
 1015 D4DD  C9          	RET
 1016         0001      IF CALC
 1017                   ; Taschenrechner aus CALC verwenden
 1018                   ELSE ; CALC
 1062                   ENDIF ; CALC
 1063                   ;-------------------------------------------------------
 1064                   ; Menuewort FIND		Suche nach Datenbyte(s) ab ADR
 1065                   ; (Suchbereich immer volle 64K, also auch ueber FFFFh hinaus)
 1066                   ;
 1067                   ; Syntax: %FIND ADR Byte1 [Byte2] ... [Byte9]
 1068                   ;
 1069 D4DE  FDFD        	DW	0FDFDH
 1070 D4E0  46 49 4E 44 	DB	'FIND',1
 1071 D4E5  FE 02       	CP	2		; mindestens 2 Argumente erforderlich
 1072 D4E7  30 1C       	JR	NC,FIND0
 1073 D4E9  CD D7CB     	CALL	HELP
 1074 D4EC  46 49 4E 44 	DB	'FIND ADR BYTE (BYTE ...)',0
 1075                   	;
 1076 D505  01 0000     FIND0:	LD	BC,0		; Laenge Suchbereich
 1077 D508  11 B784     FI2:	LD	DE,ARG2		; erstes zu suchendes Datenbyte
 1078 D50B  1A          	LD	A,(DE)
 1079 D50C  ED B1       	CPIR
 1080 D50E  E0          	RET	PO		; Byte nicht gefunden
 1081 D50F  C5          	PUSH	BC
 1082 D510  E5          	PUSH	HL		; merken wie weit wir sind...
 1083 D511  ED 4B B780  	LD	BC,(ARGN-1)	; (ARGN) = Anzahl Datenbytes + 1
 1084 D515  10 07       	DJNZ	FI4		; B=Anzahl Datenbytes
 1085                   	;
 1086 D517  13          FI3:	INC	DE		; naechstes Byte (naechstes ARG)
KC-Debugger     							    SLR180 1.31 Page  75
TEMO    Z80

 1087 D518  13          	INC	DE
 1088 D519  1A          	LD	A,(DE)		; holen
 1089 D51A  BE          	CP	(HL)		; und vergleichen
 1090 D51B  23          	INC	HL		; naechstes Byte (Speicher)
 1091 D51C  20 0E       	JR	NZ,FI6		; unterschiedlich
 1092 D51E  10 F7       FI4:	DJNZ	FI3		; weitere Datenbytes?
 1093 D520  E1          	POP	HL
 1094 D521  E5          	PUSH	HL		; gesuchte Byte(s) gefunden
 1095 D522  2B          	DEC	HL
 1096 D523  CD D3D2     	CALL	HLCR		; Adresse anzeigen und neue Zeile
 1097 D526  CD F003     FI5:	CALL	PV1		; Tastatureingabe abwarten
 1098 D529  04          	DB	KBD
 1099 D52A  FE 03       	CP	3		; BRK bricht ab, alle anderen Tasten: weiter
 1100 D52C  E1          FI6:	POP	HL
 1101 D52D  C1          	POP	BC
 1102 D52E  20 D8       	JR	NZ,FI2		; nicht BRK, also weiter suchen
 1103 D530  C9          	RET
 1104                   ;
 1105                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1106                   ;
 1107                   ; COMPARE - Vergleich zweier Speicherbereiche ab Adresse1 und Adresse2
 1108                   ; Aufruf: CMP ADR1 ADR2
 1109                   ;    Nach jedem unterschiedlichen Byte wird auf eine Taste gewarten.
 1110                   ;    Es wird solange verglichen, bis man BRK drueckt.
 1111                   ;
 1112 D531  FDFD        	DW	0FDFDH
 1113 D533  43 4D 50 01 	DB	'CMP',1
 1114 D537  FE 02       	CP	2		; 2 Argumente erforderlich
 1115 D539  28 11       	JR	Z,CPA1
 1116 D53B  CD D7CB     	CALL	HELP
 1117 D53E  43 4D 50 20 	DB	'CMP ADR1 ADR2',0
 1118                   	;
 1119 D54C  1A          CPA1:	LD	A,(DE)
 1120 D54D  BE          	CP	(HL)		; Bytes vergleichen
 1121 D54E  28 23       	JR	Z,CPA5		; identisch, weiter zur naechsten Adresse
 1122 D550  06 02       	LD	B,2		; wenn unterschiedlich:
 1123 D552  18 09       	JR	CPA3		; 2 Adresse/Inhalt-Paare anzeigen
 1124                   	;
 1125 D554  CD F003     CPA2:	CALL	PV1		; dazwischen <>
 1126 D557  23          	DB	OSTR
 1127 D558  20 3C 3E 20 	DB	' <> ',0
 1128 D55D  CD F003     CPA3:	CALL	PV1
 1129 D560  1A          	DB	HLHX		; Anzeige Adresse
 1130 D561  7E          	LD	A,(HL)
 1131 D562  CD F003     	CALL	PV1
 1132 D565  1C          	DB	AHEX		; und deren Inhalt
 1133 D566  EB          	EX	DE,HL
 1134 D567  10 EB       	DJNZ	CPA2
 1135 D569  CD D3D5     	CALL	NL		; neue Zeile
 1136 D56C  CD F003     	CALL	PV1		; Tastatureingabe abwarten
 1137 D56F  04          	DB	KBD
 1138 D570  FE 03       	CP	3
 1139 D572  C8          	RET	Z		; BRK bricht ab, alle anderen Tasten: weiter
 1140 D573  13          CPA5:	INC	DE		; Adressen+1
 1141 D574  23          	INC	HL
 1142 D575  18 D5       	JR	CPA1
 1143                   ;
 1144                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
KC-Debugger     							    SLR180 1.31 Page  76
TEMO    Z80

 1145                   ;
 1146                   ; Setzen oder Anzeigen eines Unterbrechungspunktes
 1147                   ; Aufruf: BREAK [Adresse]
 1148                   ;
 1149 D577  FDFD        	DEFW	0FDFDH
 1150 D579  42 52 45 41 	DB	'BREAK',1
 1151 D57F  11 D3D5     	LD	DE,NL		; CR,LF
 1152 D582  D5          	PUSH	DE		; Auf Stack als RET-Adresse ablegen
 1153                   ;
 1154                   ; Breakpoint setzen/laden
 1155                   ; PE:	A=0	nur anzeigen
 1156                   ;	A>0	Breakpoint setzen
 1157                   ;	HL	Adresse
 1158                   ;
 1159 D583  B7          BREAK1:	OR	A		; Argument?
 1160 D584  28 03       	JR	Z,BREAK0	; A=0, nur anzeigen
 1161 D586  22 00A6     	LD	(BREAK),HL	; Breakpoint setzen
 1162 D589  CD F003     BREAK0:	CALL	PV1
 1163 D58C  23          	DB	OSTR
 1164 D58D  42 52 45 41 	DB	'BREAK=',0
 1165 D594  2A 00A6     	LD	HL,(BREAK)	; aktueller Unterbrechungspunkt
 1166 D597  CD F003     HLHEX:	CALL	PV1
 1167 D59A  1A          	DB	HLHX		; anzeigen
 1168 D59B  C9          	RET
 1169                   ;
 1170                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1171                   ;
 1172                   ; RST 38-Routine fuer Unterbrechungspunkt im RAM
 1173                   ;
 1174 D59C  F5          RSTROM:	PUSH	AF
 1175 D59D  E5          	 PUSH	HL
 1176 D59E  2A 00A6     	  LD	HL,(BREAK)	; Adresse Unterbrechungspunkt
 1177 D5A1  3A 00A8     	  LD	A,(BRKI)	; urspruenglicher Wert
 1178 D5A4  77          	  LD	(HL),A		; wieder eintragen
 1179 D5A5  3E 03       	  LD	A,3
 1180 D5A7  32 00A9     	  LD	(MODE),A	; weiter MODE 3: Schrittbetrieb mit Steuerung
 1181 D5AA  E1          	 POP	HL
 1182 D5AB  18 08       	JR	ICTC1		; weiter wie bei CTC-Breakpoint im ROM
 1183                   ;
 1184                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1185                   ;
 1186                   ; CTC-Interruptroutine fuer Unterbrechungspunkt im ROM
 1187                   ;
 1188 D5AD  F5          INTROM:	PUSH	AF
 1189 D5AE  3E 03       	 LD	A,3
 1190 D5B0  D3 8C       	 OUT	(CTC0),A	; CTC abschalten
 1191 D5B2  CD D60C     	 CALL	EIRETI		; Interrupt freigeben
 1192 D5B5  F1          ICTC1:	POP	AF
 1193 D5B6  ED 73 0024  	LD	(RSP),SP	; Register SP erst einmal merken
 1194 D5BA  F3          	DI
 1195 D5BB  31 0024     	LD	SP,RSP		; Register hier rueckwaerts ablegen...
 1196 D5BE  D9          	EXX
 1197 D5BF  E5          	PUSH	HL		; Register HL'
 1198 D5C0  D5          	PUSH	DE		; Register DE'
 1199 D5C1  C5          	PUSH	BC		; Register BC'
 1200 D5C2  D9          	EXX
 1201 D5C3  08          	EX	AF,AF'
 1202 D5C4  F5          	PUSH	AF		; Register AF'
KC-Debugger     							    SLR180 1.31 Page  77
TEMO    Z80

 1203 D5C5  08          	EX	AF,AF'
 1204 D5C6  FD E5       	PUSH	IY		; Register IY
 1205 D5C8  DD E5       	PUSH	IX		; Register IX
 1206 D5CA  E5          	PUSH	HL		; Register HL
 1207 D5CB  D5          	PUSH	DE		; Register DE
 1208 D5CC  C5          	PUSH	BC		; Register BC
 1209 D5CD  F5          	PUSH	AF		; Register AF
 1210 D5CE  ED 7B 0024  	LD	SP,(RSP)	; Nach Stackablage SP wieder wie zuvor
 1211 D5D2  2A 002A     	LD	HL,(PCN)	; aktuellen Wert von PC neu
 1212 D5D5  22 0028     	LD	(PCO),HL	; nach PC alt umladen (fuer Reassembler)
 1213 D5D8  E1          	POP	HL		; PC (RET-Adresse zu Anwenderprogramm)
 1214 D5D9  ED 73 0024  	LD	(RSP),SP	; Register SP jetzt endgueltig
 1215 D5DD  22 002A     	LD	(PCN),HL	; Adresse fuer Fortsetzung Anwenderprogramm
 1216 D5E0  EB          	EX	DE,HL		; Zum Vergleich in DE bereithalten
 1217 D5E1  E1          	POP	HL		; noch einen Wert vom Stack holen
 1218 D5E2  22 0026     	LD	(RTS),HL	; naechster Wert von Stack
 1219 D5E5  E5          	PUSH	HL		; Stack wieder auf richtigen Wert
 1220 D5E6  FB          	EI
 1221                   
 1222 D5E7  CD F003     	CALL	PV1
 1223 D5EA  0E          	DB	KBDZ		; Taste gedrueckt? (Quittieren)
 1224 D5EB  30 04       	JR	NC,ICTC3	; nein
 1225 D5ED  FE 13       	CP	13H		; Taste Stop?
 1226 D5EF  28 10       	JR	Z,ICTC2		; ja, dann Wechsel zu MODE 3
 1227                   
 1228 D5F1  2A 00A6     ICTC3:	LD	HL,(BREAK)
 1229 D5F4  ED 52       	SBC	HL,DE		; BREAK-Adresse erreicht?
 1230 D5F6  28 09       	JR	Z,ICTC2		; ja, dann Wechsel zu MODE 3
 1231                   
 1232 D5F8  3A 00A9     	LD	A,(MODE)
 1233 D5FB  3D          	DEC	A		; MODE 1?
 1234 D5FC  CA D657     	JP	Z,GO4		; ja, Programm weiter abarbeiten
 1235 D5FF  18 05       	JR	ANZ0
 1236                   
 1237 D601  3E 03       ICTC2:	LD	A,3		; Uebergang zu MODE 3 (Eingabemodus)
 1238 D603  32 00A9     	LD	(MODE),A
 1239 D606  CD D0EB     ANZ0:	CALL	BILD2		; Daten fuer TEMO-Fenster laden/aktivieren
 1240 D609  C3 D698     	JP	ANZ		; dann zur Registeranzeige
 1241                   	;
 1242 D60C  FB          EIRETI:	EI
 1243 D60D  ED 4D       	RETI
 1244                   ;
 1245                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1246                   ;
 1247                   ; Sprung in ein Anwenderprogramm mit Initialisierung des Unterbrechungspunktes
 1248                   ; (mit RST 38 - wenn im RAM)
 1249                   ; (mit CTC-Steuerung - wenn im ROM)
 1250                   ; Aufruf: GO [Adresse]
 1251                   ;
 1252 D60F  FDFD        	DEFW	0FDFDH
 1253 D611  47 4F 01    	DB	'GO',1
 1254 D614  A7          	AND	A		; wenn keine Adresse, dann
 1255 D615  28 0B       	JR	Z,GO0		; weiter an abgespeicherter PC-Adresse
 1256 D617  22 002A     	LD	(PCN),HL	; neue PC-Adresse setzen
 1257 D61A  11 002C     	ld	de,mem1
 1258 D61D  01 0004     	ld	bc,4		; maximal 4 Byte
 1259 D620  ED B0       	ldir			; Kopie des aktuellen Befehls anlegen
 1260 D622  DB 89       GO0:	IN	A,(89h)
KC-Debugger     							    SLR180 1.31 Page  78
TEMO    Z80

 1261 D624  F6 1F       	OR	1Fh		; Lautstaerke = 0
 1262 D626  D3 89       	OUT	(89h),A
 1263 D628  2A 00A6     GO1:	LD	HL,(BREAK)	; Unterbrechungspunkt
 1264 D62B  7E          	LD	A,(HL)
 1265 D62C  32 00A8     	LD	(BRKI),A	; Inhalt hier merken
 1266 D62F  36 FF       	LD	(HL),0FFH	; RST 38H eintragen
 1267 D631  7E          	LD	A,(HL)		; Wert zur Kontrolle zuruecklesen
 1268 D632  3C          	INC	A		; wenn RAM, dann ist das FFH
 1269 D633  28 02       	JR	Z,GO2		; RAM: Mode 0 (Echtzeitbetrieb)
 1270 D635  3E 01       	LD	A,1		; ROM: Mode 1 (Schrittbetrieb ohne Anzeige)
 1271 D637  32 00A9     GO2:	LD	(MODE),A	; MODE eintragen
 1272 D63A  CD D0E1     GO3:	CALL	BILD1		; Daten fuer USER-Fenster laden/aktivieren
 1273 D63D  2A 0022     	LD	HL,(ZHL)	; HL'
 1274 D640  ED 5B 0020  	LD	DE,(ZDE)	; DE'
 1275 D644  ED 4B 001E  	LD	BC,(ZBC)	; BC'
 1276 D648  D9          	EXX			; alle Zweitregister sind geladen
 1277 D649  2A 001C     	LD	HL,(ZAF)	; AF'
 1278 D64C  E5          	PUSH	HL
 1279 D64D  F1          	POP	AF
 1280 D64E  08          	EX	AF,AF'		; jetzt auch AF'
 1281 D64F  ED 4B 0012  	LD	BC,(RBC)	; BC
 1282 D653  ED 7B 0024  	LD	SP,(RSP)	; ab hier wird der USER-Stack benutzt
 1283 D657  2A 002A     GO4:	LD	HL,(PCN)
 1284 D65A  E5          	PUSH	HL		; PC auf Stack
 1285 D65B  2A 0010     	LD	HL,(RAF)
 1286 D65E  E5          	PUSH	HL		; AF auf Stack
 1287                   ;	LD	IX,(RIX)	; IX darf sich nicht aendern!
 1288 D65F  FD 2A 001A  	LD	IY,(RIY)	; Wert in IY laden
 1289 D663  2A 0016     	LD	HL,(RHL)	; Wert in HL laden
 1290 D666  ED 5B 0014  	LD	DE,(RDE)	; Wert in DE laden
 1291 D66A  C3 0087     	JP	GORAM-RST38+0038H	; den Rest im RAM0 abarbeiten...
 1292                   ;
 1293                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1294                   ;
 1295                   ; Programm im Schrittbetrieb abarbeiten
 1296                   ; Aufruf: STEP [Adresse]
 1297                   ;
 1298 D66D  FDFD        	DEFW	0FDFDH
 1299 D66F  53 54 45 50 	DB	'STEP',1
 1300 D674  ED 5B B7A0  	LD	DE,(CURSO)	; Cursorposition
 1301 D678  ED 53 AAED  	LD	(WINDOW2+5),DE	; in Fensterdaten abspeichern
 1302 D67C  A7          	AND	A		; Adresse angegeben?
 1303 D67D  28 03       	JR	Z,ANZ2		; nein, weiter wo wir waren
 1304 D67F  22 002A     ANZ1:	LD	(PCN),HL	; neue PC-Adresse fuer Schrittbetrieb einstellen
 1305 D682  DB 89       ANZ2:	IN	A,(89h)
 1306 D684  F6 1F       	OR	1Fh		; Lautstaerke = 0
 1307 D686  D3 89       	OUT	(89h),A
 1308 D688  3E 03       	LD	A,3		; STEP mit MODE3 starten
 1309 D68A  32 00A9     	LD	(MODE),A
 1310 D68D  2A 002A     	ld	hl,(PCN)	; HL = Adresse naechster Befehl
 1311 D690  11 002C     	ld	de,mem1
 1312 D693  01 000A     	ld	bc,10
 1313 D696  ED B0       	ldir			; Kopie des aktuellen Befehls anlegen
 1314                   ;
 1315                   ; Einsprung von Unterbrechungspunkt (RST38 oder CTC-Interrupt)
 1316                   ;
 1317 D698  ED 7B B7AE  ANZ:	LD	SP,(SYSP)	; jetzt TEMO-Stack verwenden!
 1318 D69C  CD F003     	CALL	PV1
KC-Debugger     							    SLR180 1.31 Page  79
TEMO    Z80

 1319 D69F  2D          	DB	HOME		; Cursor in Home-Position setzen fuer
 1320 D6A0  CD D241     	CALL	REG		; Registeranzeige
 1321 D6A3  AF          	XOR	A	; CY=0
 1322 D6A4  32 A880     	LD	(MS),A		; Markenschalter setzen
 1323 D6A7  67          	LD	H,A
 1324 D6A8  6F          	LD	L,A
 1325 D6A9  22 A881     	LD	(CMODE),HL	; CMODE=0 und DMODE=0 fuer Reassembler
 1326 D6AC  2A 0028     	ld	hl,(PCO)	; HL = Adresse letzter Befehl
 1327 D6AF  11 0028     	ld	de,mem2		; DE = Adresse der Kopie im RAM0
 1328 D6B2  ED 52       	sbc	hl,de		; = Offset fuer Reassembler
 1329 D6B4  22 A883     	LD	(ROFFS),HL	; Ausgabe-Offset fuer Reassembler
 1330 D6B7  CD C38C     	CALL	DISASS		; 1. List-Zeile (letzter Befehl)
 1331 D6BA  3E 1D       	LD	A,1DH
 1332 D6BC  32 B7A0     	LD	(CURSO),A	; Cursorspalte setzen
 1333 D6BF  AF          	XOR	A
 1334 D6C0  32 A882     	LD	(DMODE),A	; Specialmode zuruecksetzen da neue Adresse
 1335 D6C3  CD D589     	CALL	BREAK0		; Breakpoint anzeigen (A=0)
 1336 D6C6  2A 002A     	ld	hl,(PCN)	; HL = Adresse naechster Befehl
 1337 D6C9  11 002C     	ld	de,mem1		; Adresse der Kopie im RAM0
 1338 D6CC  A7          	and	a	; CY=0
 1339 D6CD  ED 52       	sbc	hl,de		; = Offset fuer Reassembler
 1340 D6CF  22 A883     	LD	(ROFFS),HL	; Ausgabe-Offset fuer Reassembler
 1341 D6D2  06 02       	LD	B,2		; 2 weitere List-Zeilen
 1342 D6D4  3E 11       	LD	A,11h		; aktuelle Zeile rot/blau
 1343 D6D6  32 B7A3     ANZ3:	LD	(COLOR),A	; Textfarbe einstellen
 1344 D6D9  C5          	PUSH	BC
 1345 D6DA  CD C38C     	CALL	DISASS		; List-Zeile (aktueller+naechster Befehl)
 1346 D6DD  CD D3D5     	CALL	NL		; CR,LF
 1347 D6E0  C1          	POP	BC
 1348 D6E1  3E 39       	ld	a,39h		; dann wieder weiss/blau
 1349 D6E3  10 F1       	DJNZ	ANZ3		; wiederholen
 1350 D6E5  3A 00A9     	LD	A,(MODE)
 1351 D6E8  FE 02       	CP	2		; mit Tastaturabfrage?
 1352 D6EA  CA D63A     	JP	Z,GO3		; nein, weiter abarbeiten
 1353 D6ED  CD F003     	CALL	PV1
 1354 D6F0  23          	DB	OSTR
 1355 D6F1  02          	DB	2		; Zeile loeschen
 1356 D6F2  20 57 45 49 	DB	' WEITER MIT: CR, LF, BRK, G, U, I, S?',0
 1357 D718  CD F003     ANZ4:	CALL	PV1		; Zeicheneingabe (Tastatur)
 1358 D71B  16          	DB	INTB
 1359 D71C  E6 DF       	AND	0DFH		; Upcase fuer Kleinbuchstaben
 1360 D71E  FE 55       	CP	'U'
 1361 D720  28 3D       	JR	Z,USER		; U = Anzeige USER-Bildschirm		OK.
 1362 D722  FE 03       	CP	3
 1363 D724  28 1B       	JR	Z,BBRK		; BRK = -> Monitor-Loop			OK.
 1364 D726  FE 0D       	CP	CR
 1365 D728  CA D63A     	JP	Z,GO3		; CR = einen Befehl im Schrittbetrieb abarbeiten
 1366 D72B  FE 0A       	CP	LF
 1367 D72D  28 1B       	JR	Z,TGO		; LF = Go und Breakpoint auf naechsten Befehl
 1368 D72F  FE 49       	CP	'I'
 1369 D731  28 20       	JR	Z,IGNOR		; I = Ignore: naechsten Befehl ueberspringen
 1370 D733  FE 47       	CP	'G'
 1371 D735  CA D628     	JP	Z,GO1		; G = Go: Programm weiter abarbeiten (MODE 0/1)
 1372 D738  FE 53       	CP	'S'
 1373 D73A  20 DC       	JR	NZ,ANZ4		; S = Stepbetrieb mit laufender Anzeige
 1374 D73C  3E 02       	LD	A,2
 1375 D73E  C3 D637     	JP	GO2		; MODE 2: Stepbetrieb mit Anzeige (Step)
 1376                   
KC-Debugger     							    SLR180 1.31 Page  80
TEMO    Z80

 1377 D741  2A AAED     BBRK:	LD	HL,(WINDOW2+5)	; abgespeicherte Cursorposition
 1378 D744  22 B7A0     	LD	(CURSO),HL	; Cursor-Position regenerieren
 1379 D747  C3 D195     	JP	PRSE		; LOOP
 1380                   ;
 1381                   ; LF = neuer Unterbrechungspunkt auf naechsten Befehl setzen
 1382                   ;
 1383 D74A  CD D78E     TGO:	CALL	NXTST		; Berechnung Befehlslaenge
 1384 D74D  22 00A6     	LD	(BREAK),HL	; neuer Unterbrechungspunkt
 1385 D750  C3 D628     	JP	GO1
 1386                   ;
 1387                   ; I = naechsten Befehl ignorieren/ueberspringen
 1388                   ;
 1389 D753  2A 002A     IGNOR:	LD	HL,(PCN)	; aktuelle PC-Adresse
 1390 D756  22 0028     	LD	(PCO),HL	; nach PC alt kopieren
 1391 D759  CD D78E     	CALL	NXTST		; Berechnung der naechsten Adresse
 1392 D75C  C3 D67F     	JP	ANZ1		; PC_neu eintragen
 1393                   ;
 1394                   ; U = USER-Bildschirm anzeigen und Tastatureingabe abwarten
 1395                   ;
 1396 D75F  2A B7A0     USER:	ld	hl,(curso)
 1397 D762  E5          	push	hl
 1398 D763  CD D0E1     	CALL	BILD1		; USER-Bild/Fenster laden/aktivieren
 1399 D766  CD F003     	CALL	PV1
 1400 D769  04          	DB	KBD
 1401 D76A  CD D0EB     	CALL	BILD2		; TEMO-Bild/Fenster laden/aktivieren
 1402 D76D  E1          	pop	hl
 1403 D76E  22 B7A0     	ld	(curso),hl
 1404 D771  C3 D718     	JP	ANZ4
 1405                   ;
 1406                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1407                   ;
 1408                   ; Unterprogramm: TEMO initialisieren:
 1409                   ;
 1410 D774  CD D0EB     INIT:	CALL	BILD2		; Daten fuer TEMO-Fenster laden/aktivieren
 1411 D777  11 0038     INIT2:	LD	DE,0038H	; Adresse von RST38
 1412 D77A  21 CF94     	LD	HL,RST38	; Hilfsprogramm vom ROM
 1413 D77D  01 006E     	LD	BC,RSTEND-RST38
 1414 D780  ED B0       	LDIR			; in den RAM0 kopieren
 1415                   ;
 1416                   ; die folgenden 4 Befehle koennen entfallen, da Werte bekant sind:
 1417                   ;	IN	A,(88H)
 1418                   ;	LD	(nn1-RST38+38H+1),A	; Sollzustand PIO-A
 1419                   ;	LD	A,(IX+4)
 1420                   ;	LD	(nn2-RST38+38H+1),A	; Sollzustand Port 86H
 1421                   ;
 1422 D782  ED 57       	LD	A,I		; Init CTC-Interrupt
 1423 D784  67          	LD	H,A
 1424 D785  2E E8       	LD	L,0E8H		; Interrupt-Vektor CTC0
 1425 D787  11 004A     	LD	DE,ICTC-RST38+38H	; Interuptroutine im RAM0
 1426 D78A  73          	LD	(HL),E
 1427 D78B  23          	INC	HL
 1428 D78C  72          	LD	(HL),D
 1429 D78D  C9          	ret
 1430                   ;---------------------------------------
 1431                   ;
 1432                   ; Unterprogramm zum Berechnen der Adresse des naechsten Befehls
 1433                   ; PE:	PCN	Adresse aktueller Befehl
 1434                   ; PA:	HL	Adresse naechster Befehl
KC-Debugger     							    SLR180 1.31 Page  81
TEMO    Z80

 1435                   ;
 1436 D78E  21 002C     NXTST:	ld	hl,mem1		; Kopie des aktuellen Befehls im RAM0
 1437 D791  CD CDDA     	CALL	LENG		; Befehlslaenge bestimmen in Reassembler...
 1438 D794  3A A880     	LD	A,(MS)
 1439 D797  CB 57       	BIT	2,A		; folgt Adresse nach UREL?
 1440 D799  28 02       	JR	Z,NEWPC
 1441 D79B  03          	INC	BC		; dann noch zwei Bytes mehr!
 1442 D79C  03          	INC	BC
 1443 D79D  2A 002A     NEWPC:	ld	hl,(PCN)	; aktuelle PC-Adresse
 1444 D7A0  09          	ADD	HL,BC		; Laenge addieren
 1445 D7A1  C9          	RET
 1446                   ;
 1447                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1448                   ;
 1449                   ; Stackpointer anzeigen (zum Test...)
 1450                   ;
 1451         0001      if stack
 1452 D7A2  7F7F        	DEFW	7F7FH		; verstecktes Menuewort fuer CAOS
 1453 D7A4  53 54 41 43 	DB	'STACK ',1
 1454 D7AB  21 0002     	LD	HL,2
 1455 D7AE  CD D7C0     	CALL	STACK1
 1456 D7B1  C3 DBF8     	JP	CEXIT		; USER-ROM abschalten (Code von JEDIT/CALC benutzen)
 1457                   ;
 1458 D7B4  FDFD        	DEFW	0FDFDH		; verstecktes Menuewort fuer TEMO
 1459 D7B6  53 54 41 43 	DB	'STACK ',1
 1460 D7BD  21 0000     	LD	HL,0
 1461 D7C0  39          STACK1:	ADD	HL,SP
 1462 D7C1  CD D597     	CALL	HLHEX		; Stackpointer anzeigen
 1463                   
 1464 D7C4  7E          	ld	a,(hl)
 1465 D7C5  23          	inc	hl
 1466 D7C6  66          	ld	h,(hl)
 1467 D7C7  6F          	ld	l,a
 1468 D7C8  C3 D3D2     	JP	HLCR		; und Stackinhalt, danach CR,LF
 1469                   endif
 1470                   ;
 1471                   ; Hilfe-Funktion, Aufruf per CALL gefolgt von Hilfetext
 1472                   ;
 1473 D7CB  CD F003     HELP:	CALL	PV1
 1474 D7CE  23 0B 09 00 	DB	OSTR,0BH,9,0	; Cursor hoch und 1x nach rechts
 1475 D7D2  E1          	POP	HL		; Zeichenkette von Stack holen
 1476 D7D3  CD F003     	CALL	PV1
 1477 D7D6  45          	DB	ZKOUT		; anzeigen
 1478 D7D7  C3 D3D5     	JP	NL		; und neue Zeile
 1479 D7DA              TEND:	; TEMO-Ende
   50                   	INCLUDE	JEDIT.Z80	; Joystickeditor von Frank Ludwig
    1                   ;----------------------------------------------
    2                   ; JOYSTICK-EDITOR fuer KC-CAOS 4.8
    3                   ;
    4                   ; Frank Ludwig, 14.07.2011 - 14.05.2021
    5                   ;----------------------------------------------
    6                   ;
    7                   ; Anpassungen fuer CAOS-ROM: (ML = Mario Leubner, FL = Frank Ludwig)
    8                   ;
    9                   ; 27.07.2013, ML:
   10                   ;		- Code von EDAS zu CP/M konvertiert (M -> HL, Marken mit :,
   11                   ;		  Umlaute ...)
   12                   ; 29.07.2013, ML:
KC-Debugger     							    SLR180 1.31 Page  82
JEDIT   Z80

   13                   ;		- verschieblichen Code fuer ROM-Version entfernt
   14                   ;		- Prologbyte muss nicht gemerkt werden, da Aufruf nur von
   15                   ;		  7Fh aus moeglich ist und damit Rueckkehr direkt zu 7Fh.
   16                   ; 04.08.2013, ML:
   17                   ;		- Codeverschiebungen und weitere Kommentare
   18                   ; 09.08.2013, ML:
   19                   ;		- Abschalten USER-ROM bei EXIT
   20                   ;		- %JEDIT fuehrt sofort zum Menu, nicht zum Editor
   21                   ;
   22                   ; 12.08.2013, FL:
   23                   ;		- Probleme mit Stackpointer bei Menue-Aufruf behoben
   24                   ;		  Prolog und Prompt werden erst nach Parameteruebernahme eingestellt
   25                   ;		- beim Beenden wird der USER-ROM abgeschalten
   26                   ;		- %JEDIT springt immer gleich in das Menue
   27                   ;		- Arbeitsbereich in den Kassettenpuffer ab B740H verschoben (Marke JWORK),
   28                   ;		  *.JOY-Files werden ab 0180H geladen (Marke JFILE)
   29                   ;		- Meldung "unbekannte Joystick-ISR" in "fremde ..." geaendert
   30                   ;		- UP JWAIT und .ADR: Code gespart
   31                   ;
   32                   ; 14.08.2013, ML:
   33                   ;		- Auslagern des WORK-RAM vorerst auskommentiert
   34                   ;
   35                   ; 26.09.2013, FL:
   36                   ;		- Beim Aufruf von %JEDIT mit Parameter werden die Wartezyklen 
   37                   ;		  auf 2 gesetzt (Standardwert)
   38                   ;
   39                   ; 01.12.2013, ML:
   40                   ;		- SAVE-Funktion optional abschaltbar gestaltet (Schalter JSAVE)
   41                   ;
   42                   ; 15.12.2013, ML:
   43                   ;		- Schaltzustand des USER-ROM-C regenerieren mit CAOS 4.6
   44                   ;
   45                   ; 28.12.2013, FL:
   46                   ;		- UP-Vorlage fuer *.JOY-Dateien im Schalter JSAVE aufgenommen
   47                   ;		- Schaltzustand der USER-ROM wird in OUROM gespeichert
   48                   ;		- statt "geschuetzte Adresse" wird "INVALID RANGE" vom Debugger angezeigt
   49                   ;
   50                   ; 31.12.2013, ML:
   51                   ;		- Sprung zu "INVALID RANGE" als Marke definiert in TEMO
   52                   ;		- Menu-Hack "JUMP" umgestellt von PV1 auf PV3
   53                   ;
   54                   ; 02.01.2014, ML:
   55                   ;		- Versionsabfrage auf CAOS 4.6+ fuer USER-C-Schaltzustand regenerieren
   56                   ;
   57                   ; 05.01.2014, FL:
   58                   ;		- Vorschlag fuer ein gemeinsames UP mit REAS zur Eingabe des Dateinamen
   59                   ;
   60                   ; 12.01.2014, ML:
   61                   ;		- Vorschlag angenommen, REAS entsprechend modifiziert
   62                   ;
   63                   ; 26.02.2016, ML:
   64                   ;		- CRLF eingefuegt nach CSRO da das von CAOS nicht mehr enthalten ist
   65                   ;		- Menuewort CANCEL in QUIT umbenannt
   66                   ;
   67                   ; 21.03.2017, ML:
   68                   ;		- Dateiname bei SAVE uebergeben in HL
   69                   ;
   70                   ; 12.05.2017, ML:
KC-Debugger     							    SLR180 1.31 Page  83
JEDIT   Z80

   71                   ;		- Abbruch bei SAVE wenn ISRO mit CY=1 zurueck kommt
   72                   ;
   73                   ; 23.03.2018, ML:
   74                   ;		- CAOS-Versionsabfrage auskommentiert da nur fuer CAOS 4.7
   75                   ;
   76                   ; 11.07.2018, ML:
   77                   ;		- Definition JOYIRM in EQU47.INC ausgelagert
   78                   ;
   79                   ; 14.02.2021, FL:
   80                   ;		- gesperrte Arbeitszellen fuer CAOS 4.8 angepasst
   81                   ;		  (SUTAB und DEVICE-Tabelle geschuetzt)
   82                   ;		- SAVE *.JOY auf vorgegebene Adresse (JOYTAB) begrenzt
   83                   ;
   84                   ; 16.02.2021, FL:
   85                   ;		- Fehler in GETPAR behoben
   86                   ;		- Kommentaren zur Tabelle ADRSEC korrigiert.
   87                   ;
   88                   ; 28.03.2021, ML:
   89                   ;		- Code-Optimierung bei Sprung zu ERRM
   90                   ;
   91                   ; 04.04.2021, ML:
   92                   ;		- Code-Optimierung bei RHEX
   93                   ;
   94                   ; 30.04.2021, FL:
   95                   ;		- Zeichenkette CMENU vom internen Menuewort genutzt
   96                   ;		  (muss nicht auf 0 enden, ein Steuerzeichen tut es auch)
   97                   ;
   98                   ; 15.05.2021, FL:
   99                   ;		- .WAIT an die neuen CAOS-Unterprogramme RDEZ und HLDEZ angepasst
  100                   ;
  101                   ; 28.10.2022, ML:
  102                   ;		- Unterprogramm UROM eingebaut (Verwendung 5x)
  103                   ;
  104         B710      CARG	EQU	CASS+16		; Parameterbereich im Vorblock
  105         B717      CPRG	EQU	CARG+7		; Autostartcode direkt danach
  106                   ;
  107                   ; Cursor-Positionen
  108         0003      CUPOSY	EQU	3		; Cursor-Pos. oberste Taste
  109         000E      CUPOSX	EQU	14
  110         000F      CUPOSM	EQU	CUPOSY+11+1	; Anfang Menue
  111         011A      CUPOSA	EQU	011AH		; Cursor-Pos. Joytab.adresse
  112         0125      CUPOSW	EQU	0125H		; Cursor-Pos. Wartezyklen
  113                   ;
  114                   ; JEDIT Arbeitsbereich (definiert in EQU48.INC bzw. CAOS48.INC):
  115                   ;
  116         AACC      JOYADR	EQU	JWORK		; neue Adresse
  117         AACE      OADR	EQU	JWORK+2		; alte Adresse
  118         AAD0      JOYKEY	EQU	JWORK+4		; Joycodes
  119         AADC      OPRMT	EQU	JWORK+16	; Promptzeichen
  120         AADD      OUROM	EQU	JWORK+17	; User-ROM vor Aufruf von %JEDIT
  121                   ;
  122                   ; Speicherbereich fuer die *.JOY-Dateien von .SAVE : 0180H-019BH
  123         0180      JFILE	EQU	0180H
  124                   ;
  125                   ; MENU-HACK damit JUMP immer mit J abgekuerzt werden kann
  126                   ;
  127 D7DA  7F7F        PGBEG:	DW	7F7FH
  128 D7DC  4A 20       	DB	'J '
KC-Debugger     							    SLR180 1.31 Page  84
JEDIT   Z80

  129 D7DE  03          	DB	3
  130 D7DF  7D          	LD	A,L
  131 D7E0  1E 27       	LD	E,JUMP		; CAOS-Funktion JUMP
  132 D7E2  C3 F009     	JP	PV3		; anspringen ueber PV3
  133                   ;
  134                   ; .MENU
  135                   ;
  136 D7E5  A1A1        	DW	0A1A1H
  137 D7E7  4D 45 4E 55 CMENU:	DB	'MENU',1
  138 D7EC  C3 D8FB     	JP	JMENU1		; Menue anzeigen
  139                   ;
  140                   ; .ADR
  141                   ;
  142 D7EF  A1A1        	DW	0A1A1H
  143 D7F1  41 44 52 03 	DB	'ADR',3		; ein Parameter erforderlich
  144 D7F5  E5          	PUSH	HL
  145                     ;berechne: Abstand ADRSEC-Adr => HL
  146 D7F6  11 DB83     	LD	DE,ADRSEC
  147                     ;Adr innerhalb des Stack ?
  148 D7F9  ED 57       	LD	A,I
  149 D7FB  47          	LD	B,A
  150 D7FC  0E 75       	LD	C,80H-11
  151 D7FE  3E 01       	LD	A,1
  152 D800  CD DAEF     	CALL	TSTAD1
  153 D803  E1          	POP	HL
  154 D804  E5          	PUSH	HL
  155                     ;uebrige Adressbereiche pruefen
  156 D805  1A          	LD	A,(DE)		; Anzahl Tests
  157 D806  13          	INC	DE
  158 D807  CD DAE9     	CALL	TSTADR
  159 D80A  E1          	POP	HL
  160 D80B  22 AACC     	LD	(JOYADR),HL
  161 D80E  CD D81F     	CALL	MAXWD		; max. Fenster
  162 D811  CD DAD2     	CALL	JADR		; Anzeige Joyadresse
  163                   ;
  164                   ; Fenster fuer MENU
  165                   ;
  166 D814  21 1128     MINWD:	LD	HL,(32-CUPOSM)*256+40
  167 D817  22 B79E     	LD	(WINLG),HL
  168 D81A  21 0F00     	LD	HL,CUPOSM*256+0
  169 D81D  18 09       	JR	MWD1
  170                   ;
  171                   ; "Vollbild"
  172                   ;
  173 D81F  21 2028     MAXWD:	LD	HL,2028H
  174 D822  22 B79E     	LD	(WINLG),HL
  175 D825  21 0000     	LD	HL,0
  176 D828  22 B79C     MWD1:	LD	(WINON),HL
  177 D82B  C9          	RET
  178                   ;
  179                   ; .WAIT	Parameter als BCD-Zahl angeben
  180                   ;
  181 D82C  A1A1        	DW	0A1A1H
  182 D82E  57 41 49 54 	DB	'WAIT'
  183 D832  13          	DB	13H		; mindestens 1Parameter, dezimal
  184 D833  7D          	LD	A,L
  185 D834  11 FFC0     	LD	DE,-64
  186 D837  19          	ADD	HL,DE
KC-Debugger     							    SLR180 1.31 Page  85
JEDIT   Z80

  187 D838  38 0B       	JR	C,MERRM		; max.63 Zyklen
  188 D83A  32 AAD0     	LD	(JOYKEY),A	; Wartezyklen merken
  189 D83D  CD D81F     	CALL	MAXWD		; Max. Fenster
  190 D840  CD DAB4     	CALL	JWAIT		; anzeigen
  191 D843  18 CF       	JR	MINWD		; Fenster fuer Menue
  192                   ;
  193 D845  C3 D1E0     MERRM:	JP	ERR		; Sprung zu: CALL PV1, DB ERRM, RET
  194                   ;
  195                   ; .SAVE
  196                   ;
  197         0001      if jsave
  198 D848  A1A1        	DW	0A1A1H
  199 D84A  53 41 56 45 	DB	'SAVE'
  200 D84E  01          	DB	1
  201 D84F  21 DB7A     	LD	HL,CJOY		; Dateityp JOY
  202 D852  CD CAE5     	CALL	RECIN		; Dateiname abfragen und Kassettenpuffer vorbereiten
  203 D855  D8          	RET	C		; Abbruch mit BRK
  204 D856  1E 10       	LD	E,LOW(CARG)	; DE = CASS+16 = B710H
  205 D858  21 DB10     	LD	HL,SVPRG	; vorbereiteter Parameterbereich
  206 D85B  0E 14       	LD	C,SVEND-SVPRG	; B ist 0
  207 D85D  ED B0       	LDIR			; Parameter und Startprogramm danach
  208                     ;Joysticktabelle anhaengen
  209 D85F  CD DB02     	CALL	MKJTAB		; JOYTAB erzeugen in Kassettenpuffer (ab B727h)
  210                     ;Ausgabe
  211 D862  21 B700     	LD	HL,CASS		; Dateiname in Kassettenpuffer
  212 D865  DD 75 05    	LD	(IX+5),L
  213 D868  DD 74 06    	LD	(IX+6),H
  214 D86B  CD F003     	CALL	PV1
  215 D86E  08          	DB	ISRO		; Dateiausgabe starten
  216 D86F  D8          	RET	C		; Fehler (z.B. USB-Datei nicht ueberschreiben)
  217 D870  CD F003     	CALL	PV1
  218 D873  23          	DB	OSTR
  219 D874  02 30 31 00 	DB	2,'01',0	; Blocknummer
  220 D878  DD 36 05 17 	LD	(IX+5),LOW(CPRG)
  221                   ;	LD	(IX+6),HIGH(CPRG) ; unveraendert
  222 D87C  01 00A0     	LD	BC,160		; kurzer Vorton
  223 D87F  CD F003     	CALL	PV1
  224 D882  09          	DB	CSRO		; Ausgabe letzter Block
  225 D883  C3 D3D5     	JP	NL		; CR,LF	neue Zeile (CSRO macht das nicht mehr!)
  226                   endif
  227                   ;
  228                   ; .EDIT
  229                   ;
  230 D886  A1A1        	DW	0A1A1H
  231 D888  45 44 49 54 	DB	'EDIT'
  232 D88C  1F          	DB	1FH
  233 D88D  CD D9DF     	CALL	GETPAR		; Parameter auswerten
  234 D890  38 B3       MMERRM:	JR	C,MERRM		; Fehler
  235 D892  18 68       	JR	JEDIT
  236                   ;
  237                   ; %JEDIT
  238                   ;
  239 D894  7F7F        	DW	7F7FH		; CAOS-Menuewort
  240 D896  4A 45 44 49 	DB	'JEDIT'
  241 D89B  1F          	DB	1FH		; Textparameter zulaessig
  242 D89C  CD DFF3     	CALL	UROM		; Schaltzustand User-ROM merken
  243 D89F  E5          	PUSH	HL		; Ruecksprungadresse auf Stack falls Fehler
  244                   				; wenn kein Fehler einfach nur SP-2
KC-Debugger     							    SLR180 1.31 Page  86
JEDIT   Z80

  245                     ;Initialisierung
  246 D8A0  2A B7F0     	LD	HL,(JOYTAB)	; Adresse der Joytabelle
  247 D8A3  22 AACC     	LD	(JOYADR),HL	; als neue Adresse eintragen
  248 D8A6  22 AACE     	LD	(OADR),HL	; und als Originaladresse merken
  249 D8A9  CD DA1A     	CALL	CPYJOY		; Joysticktasten zur Bearbeitung kopieren
  250 D8AC  CD D9DF     	CALL	GETPAR		; Parameter auswerten
  251 D8AF  38 DF       	JR	C,MMERRM	; Fehler
  252 D8B1  3D          	DEC	A
  253 D8B2  28 05       	JR 	Z,MJE0		; Aufruf mit Parameter ?
  254 D8B4  3E 02       	LD	A,2
  255 D8B6  32 AAD0     	LD	(JOYKEY),A	; dann Wartezyklen auf default (=2)
  256 D8B9  DD 36 09 A1 MJE0:	LD	(IX+9),0A1H	; eigenes Prologbyte = A1h
  257 D8BD  21 B7EC     	LD	HL,PROMPT
  258 D8C0  7E          	LD	A,(HL)		; aktuelles Promptzeichen
  259 D8C1  32 AADC     	LD	(OPRMT),A	; merken zum regenerieren
  260 D8C4  36 2E       	LD	(HL),'.'	; eigenes Promptzeichen
  261 D8C6  ED 57       	LD	A,I		; Joystick-ISR pruefen
  262 D8C8  67          	LD	H,A
  263 D8C9  2E E1       	LD	L,0E1H		; HL=HWT JOYISR
  264 D8CB  7E          	LD	A,(HL)
  265 D8CC  FE E0       	CP	0E0H		; ISR ist im ROM ?
  266 D8CE  38 0A       	JR	C,MERRJ
  267 D8D0  21 DB7E     	LD	HL,JITAB	; Treiber starten
  268 D8D3  01 0592     	LD	BC,0592H	; falls angehalten
  269 D8D6  ED B3       	OTIR
  270 D8D8  18 21       	JR	JMENU1
  271                   ;
  272 D8DA  CD F003     MERRJ:	CALL	PV1
  273 D8DD  23          	DB	OSTR
  274 D8DE  02 66 72 65 	DB	2,'fremde Joystick-ISR!',7,CR,LF,0
  275 D8F7  CD F003     	CALL	PV1
  276 D8FA  04          	DB	KBD
  277 D8FB  AF          JMENU1:	XOR     A		; immer sofort ins Menue
  278                   ;
  279 D8FC  F5          JEDIT:	PUSH    AF
  280 D8FD  CD DA58     	CALL	ANZJOY		; Anzeige aktuelle Tastenbelegung
  281 D900  F1          	POP	AF
  282 D901  3D          	DEC	A		; Aufruf mit Parameter ?
  283 D902  3E 00       	LD	A,0		; (ARGN ist unbestimmt)
  284 D904  32 B781     	LD	(ARGN),A
  285 D907  20 6C       	JR	NZ,JMENU2	; Menue anzeigen
  286                   ;
  287                   ;Joystick-Editor
  288                   ;
  289 D909  CD F003     	CALL	PV1
  290 D90C  23          	DB	OSTR
  291 D90D  0D 0A 50 6C 	DB	CR,LF,'Please, select or press STOP',0
  292 D92C  21 DB24     	LD	HL,JOYEDI	; spez. Joytab
  293 D92F  22 B7F0     	LD	(JOYTAB),HL
  294 D932  0E 03       	LD	C,CUPOSY	; erste Zeile
  295 D934  06 00       	LD	B,0
  296 D936  79          MJE1:	LD	A,C
  297 D937  32 B7A1     	LD	(CURSO+1),A
  298 D93A  21 AACE     	LD	HL,JOYKEY+1-CUPOSY
  299 D93D  09          	ADD	HL,BC		; Adresse fuer Taste
  300 D93E  11 0900     	LD	DE,0900H	; D=CUR, E=CAOS-UP CRT
  301 D941  CD DA2D     	CALL	ANZCH1		; > < einblenden
  302 D944  E5          	PUSH	HL		; HL=Zaehler f.blinken
KC-Debugger     							    SLR180 1.31 Page  87
JEDIT   Z80

  303 D945  11 0038     	LD	DE,38H
  304 D948  19          MJE2:	ADD	HL,DE
  305 D949  30 04       	JR	NC,MJE3
  306 D94B  CD F003     	CALL	PV1
  307 D94E  25          	DB	CUCP		; CURSOR blinken
  308 D94F  CD F003     MJE3:	CALL	PV1		; Taste gedrueckt ?
  309 D952  0E          	DB	KBDZ
  310 D953  30 F3       	JR	NC,MJE2		; warten.
  311 D955  E1          	POP	HL
  312 D956  57          	LD	D,A
  313 D957  FE 13       	CP	13H		; STOP ?
  314 D959  28 2E       	JR	Z,MJE5
  315 D95B  D6 80       	SUB	80H		; Joysticktaste ?
  316 D95D  FE 0B       	CP	11
  317 D95F  38 2C       	JR	C,MJE6		; dann Cursor dorthin
  318 D961  72          	LD	(HL),D		; Taste merken
  319 D962  0C          	INC	C		; naechste Zeile
  320 D963  CD DA2A     MJE4:	CALL	ANZCHR		; Code anzeigen
  321 D966  79          	LD	A,C
  322 D967  FE 0E       	CP	CUPOSY+11	; fertig ?
  323 D969  38 CB       	JR	C,MJE1
  324 D96B  3C          	INC	A		; Infozeile loeschen
  325 D96C  32 B7A1     	LD	(CURSO+1),A
  326 D96F  3E 02       	LD	A,2
  327 D971  CD F003     	CALL	PV1
  328 D974  00          	DB	CRT
  329                   ;
  330                   ; Menue aufrufen
  331                   ;
  332 D975  21 DB30     JMENU2: LD	HL,JOYTBD	; Joyst.Standardtabelle
  333 D978  22 B7F0     	LD	(JOYTAB),HL
  334 D97B  CD D814     	CALL	MINWD		; Fenster fuer Menue
  335 D97E  26 00       	LD	H,0
  336 D980  22 B7A0     	LD	(CURSO),HL	; Position links/oben
  337 D983  E1          	POP	HL		; SP+4
  338 D984  E1          	POP	HL
  339 D985  CD F003     	CALL	PV1	
  340 D988  46          	DB	MENU		; Menueworte auflisten -> Kommandoeingabe
  341                   				; Stack sollte jetzt auf (SYSP)-2 zeigen
  342                   ;
  343                   ;STOP => Cursor auf letzte Zeile
  344 D989  0E 0E       MJE5:	LD	C,CUPOSY+11
  345 D98B  18 D6       	JR	MJE4
  346                   ;
  347                   ;Joysticktastencode=>Cursorpos.
  348 D98D  C6 03       MJE6:	ADD	A,CUPOSY
  349 D98F  4F          	LD	C,A
  350 D990  DD 7E 0D    MJE7:	LD	A,(IX+13)	; warten bis Joyst
  351 D993  3D          	DEC	A		; losgelassen (A=FFH)
  352 D994  BA          	CP	D		; oder diagonale
  353 D995  38 F9       	JR	C,MJE7		; Richtung gewaehlt
  354 D997  18 CA       	JR	MJE4		; (A>=D)
  355                   ;
  356                   ; .QUIT
  357                   ;
  358 D999  A1A1        	DW	0A1A1H
  359 D99B  51 55 49 54 	DB	'QUIT'
  360 D99F  01          	DB	1
KC-Debugger     							    SLR180 1.31 Page  88
JEDIT   Z80

  361 D9A0  2A AACE     	LD	HL,(OADR)	; Joyadr zurueck
  362 D9A3  22 B7F0     	LD	(JOYTAB),HL
  363 D9A6  CD D81F     JEXIT1:	CALL	MAXWD
  364 D9A9  3A AADC     	LD	A,(OPRMT)	; Original-Prompt zurueck
  365 D9AC  32 B7EC     	LD	(PROMPT),A
  366 D9AF  3E 7F       	LD	A,7FH		; Original-Prologbyte zurueck
  367 D9B1  DD 77 09    	LD	(IX+9),A	; wieder 7FH
  368 D9B4  11 D7E7     	LD	DE,CMENU	; "MENU"
  369 D9B7  21 C000     	LD	HL,0C000H	; Beginn Suchbereich
  370 D9BA  45          	LD	B,L		; BC=0 Laenge Suchbereich
  371 D9BB  4D          	LD	C,L
  372 D9BC  CD F003     	CALL	PV1		; suche CAOS-Kommando MENU
  373 D9BF  1D          	DB	ZSUCH
  374 D9C0  23          	INC	HL		; Epilogbyte ueberspringen
  375 D9C1  E3          	EX	(SP),HL		; als Return-Adresse auf den Stack legen
  376 D9C2  ED 5B AADC  JEXIT2:	LD	DE,(OUROM-1)	; D = urspruenglicher Schaltzustand USER-C
  377 D9C6  3E 02       JEXIT3:	LD	A,2		; USER-ROM
  378 D9C8  6F          	LD	L,A		; schalten
  379 D9C9  1E 26       	LD	E,MODU
  380 D9CB  C3 F009     	JP	PV3		; zuerst USER-ROM schalten, dann zu CAOS
  381                   ;
  382                   ; .OK
  383                   ;
  384 D9CE  A1A1        	DW	0A1A1H
  385 D9D0  4F 4B       	DB	'OK'
  386 D9D2  01          	DB	1
  387 D9D3  2A AACC     	LD	HL,(JOYADR)	; JOYADR setzen
  388 D9D6  22 B7F0     	LD	(JOYTAB),HL
  389 D9D9  EB          	EX	DE,HL
  390 D9DA  CD DB02     	CALL	MKJTAB		; neue JOYTAB erzeugen
  391 D9DD  18 C7       	JR	JEXIT1
  392                   ;
  393                   ; Parameter auswerten und in Joycode-Tabelle eintragen
  394                   ; PE:	DE=Parameter im Video-RAM
  395                   ; PA:	CY=1: Fehler, A=1: keine Parameter
  396                   ;
  397 D9DF  21 AAD1     GETPAR:	LD	HL,JOYKEY+1	; Adresse 1. Taste
  398 D9E2  06 0B       	LD	B,11		; 11 Tasten
  399 D9E4  1A          MGP1:	LD	A,(DE)
  400 D9E5  13          	INC	DE
  401 D9E6  A7          	AND	A		; keine weiteren Parameter ?
  402 D9E7  28 18       	JR	Z,MGP4
  403 D9E9  FE 20       	CP	' '
  404 D9EB  28 F7       	JR	Z,MGP1
  405 D9ED  FE 2C       	CP	','		; Komma+Zeichen ?
  406 D9EF  1A          	LD	A,(DE)		; dann Zeichen direkt aus Video-RAM
  407 D9F0  28 0A       	JR	Z,MGP2
  408 D9F2  1B          	DEC	DE
  409 D9F3  E5          	PUSH	HL
  410 D9F4  CD CF8F     	CALL	GETHEX		; ansonsten HEX-Code holen
  411 D9F7  E1          	POP	HL
  412 D9F8  D8          	RET	C		; Fehler
  413 D9F9  3A B797     	LD	A,(NUMVX)
  414 D9FC  77          MGP2:	LD	(HL),A		; Code merken
  415 D9FD  23          	INC	HL
  416 D9FE  13          	INC	DE
  417 D9FF  10 E3       	DJNZ	MGP1		; bis 11 Parameter gelesen
  418 DA01  78          MGP4:	LD	A,B
KC-Debugger     							    SLR180 1.31 Page  89
JEDIT   Z80

  419 DA02  D6 0A       	SUB	10		; A<0: mehr als 1 Parameter
  420 DA04  2B          	DEC	HL		; bei 1 Par.:HL=JOYKEY+1, A ist 0
  421 DA05  38 04       	JR	C,MGP5
  422 DA07  C0          	RET	NZ		; kein Parameter: PA: A=1, CY=0
  423 DA08  BE          	CP	(HL)		; Aufruf JEDIT 0 ?
  424 DA09  28 06       	JR	Z,SETDEF
  425 DA0B  AF          MGP5:	XOR	A		; PA: A=0, CY=0
  426 DA0C  23          MGP6:	INC	HL
  427 DA0D  77          	LD	(HL),A		; uebrige Joycodes = 0
  428 DA0E  10 FC       	DJNZ	MGP6
  429 DA10  C9          	RET
  430                   ;
  431                   ; Standardwerte kopieren
  432                   ; HL=Quelle, DE=Ziel
  433                   ; JOYHLP wird rueckwaerts abgearbeitet
  434                   ;
  435 DA11  21 AAC0     SETDEF: LD	HL,JOYIRM	; Adresse der Standard-Joysticktabelle
  436 DA14  22 AACC     	LD	(JOYADR),HL
  437 DA17  21 DB30     	LD	HL,JOYTBD	; Quelle (Standardbelegung)
  438 DA1A  D5          CPYJOY: PUSH	DE
  439 DA1B  11 AAD0     	LD	DE,JOYKEY	; Ziel
  440 DA1E  01 DB48     	LD	BC,JOYHLP+12	; Hilfstabelle zur Adressumrechnung
  441 DA21  ED A0       MDEF1:	LDI			; ein Byte kopieren
  442 DA23  0A          	LD	A,(BC)
  443 DA24  5F          	LD	E,A		; naechstes Ziel
  444 DA25  A7          	AND	A		; fertig?
  445 DA26  20 F9       	JR	NZ,MDEF1
  446 DA28  D1          	POP	DE
  447 DA29  C9          	RET			; PA(GETPAR): A=0, CY=0
  448                   ;
  449                   ; Anzeige eines Joystickcodes in > <
  450                   ; PE:	HL: Zeiger auf den Code
  451                   ; VR:	DE,AF
  452                   ;
  453 DA2A  56          ANZCHR:	LD	D,(HL)
  454 DA2B  1E 42       	LD	E,CSTBT
  455 DA2D  C5          ANZCH1:	PUSH	BC		; Aufruf mit D=CUR, E=CAOS-UP CRT
  456 DA2E  E5          	PUSH	HL
  457 DA2F  21 B7A0     	LD	HL,CURSO	; Spalte einst.
  458 DA32  36 0D       	LD	(HL),CUPOSX-1
  459 DA34  01 033C     	LD	BC,0300H+'<'	; 3 Zeichen
  460 DA37  7A          	LD	A,D
  461 DA38  A7          	AND	A		; DUMMY ?
  462 DA39  3E 3E       	LD	A,'>'
  463 DA3B  20 02       	JR	NZ,MAC1
  464 DA3D  1E 2B       	LD	E,SPACE		; dann nur Leerz.
  465 DA3F  CD F009     MAC1:	CALL	PV3
  466 DA42  7A          	LD	A,D		; naechstes Zeichen
  467 DA43  51          	LD	D,C
  468 DA44  4F          	LD	C,A
  469 DA45  10 F8       	DJNZ	MAC1
  470 DA47  7B          	LD	A,E
  471 DA48  FE 42       	CP	CSTBT		; "normales" Zeichen?
  472 DA4A  20 07       	JR	NZ,MAC2
  473 DA4C  36 13       	LD	(HL),CUPOSX+5
  474 DA4E  79          	LD	A,C
  475 DA4F  CD F003     	CALL	PV1		; dann Hexdarstellung
  476 DA52  1C          	DB	AHEX
KC-Debugger     							    SLR180 1.31 Page  90
JEDIT   Z80

  477 DA53  36 0E       MAC2:	LD	(HL),CUPOSX
  478 DA55  E1          	POP	HL
  479 DA56  C1          	POP	BC
  480 DA57  C9          	RET
  481                   ;
  482                   ; Anzeige der Joystickbelegung (mit Adresse und Waitzyklen)
  483                   ;
  484 DA58  CD D81F     ANZJOY:	CALL	MAXWD		; Fenster auf max.
  485 DA5B  CD F003     	CALL	PV1
  486 DA5E  23          	DB	OSTR
  487 DA5F  0C 0A 2A 20 	DB	CLS,LF,'* JOYSTICK-EDITOR *   Adr:      Wait:'
  488 DA86  0D 0A 0A 00 	DB	CR,LF,LF,0
  489 DA8A  21 AAD1     	LD	HL,JOYKEY+1	; Adresse der 1. Taste
  490 DA8D  E5          	PUSH	HL
  491 DA8E  21 DB49     	LD	HL,JOYTXT	; Tabelle mit Offset der Teilstrings
  492 DA91  06 0B       	LD	B,11		; fuer insgesamt 11 Codes
  493 DA93  E5          MAJ1:	PUSH	HL
  494 DA94  5E          	LD	E,(HL)		; Zeiger auf Teilstring
  495 DA95  CB 3B       	SRL	E		; Bit 1..7: Zeiger
  496 DA97  16 00       	LD	D,0
  497 DA99  19          	ADD	HL,DE
  498 DA9A  CD F003     	CALL	PV1		; Anzeige Teilstring
  499 DA9D  45          	DB	ZKOUT
  500 DA9E  E1          	POP	HL
  501 DA9F  7E          	LD	A,(HL)
  502 DAA0  23          	INC	HL		; Zeiger fuer naechsten Teilstring
  503 DAA1  0F          	RRCA			; Teilstring Bit 0: Textende
  504 DAA2  30 EF       	JR	NC,MAJ1
  505 DAA4  E3          	EX	(SP),HL		; Adresse auf Code
  506 DAA5  CD DA2A     	CALL	ANZCHR		; anzeigen
  507 DAA8  23          	INC	HL		; Adresse fuer naechsten Code
  508 DAA9  E3          	EX	(SP),HL
  509 DAAA  CD F003     	CALL	PV1		; naechste Zeile
  510 DAAD  2C          	DB	CRLF
  511 DAAE  10 E3       	DJNZ	MAJ1
  512 DAB0  E1          	POP	HL
  513 DAB1  CD DAD2     	CALL	JADR		; Anzeige Joyadresse
  514                   ;
  515                   ; Anzeige der Wartezyklen (dezimal)
  516                   ;
  517 DAB4  2A B7A0     JWAIT:	LD	HL,(CURSO)	; Cursorposition merken
  518 DAB7  E5          	PUSH	HL
  519 DAB8  21 0125     	LD	HL,CUPOSW
  520 DABB  22 B7A0     	LD	(CURSO),HL
  521 DABE  CD F003     	CALL	PV1		; alte Anzeige loeschen
  522 DAC1  23          	DB	OSTR
  523 DAC2  20 20 08 08 	DB	'  ',8,8,0
  524 DAC7  2A AAD0     	LD	HL,(JOYKEY)
  525 DACA  26 00       	LD	H,0		; nur 8 Bit
  526 DACC  CD F003     	CALL	PV1
  527 DACF  4A          	DB	HLDEZ		; dezimal anzeigen
  528 DAD0  18 10       	JR	MJA1
  529                   ;
  530                   ; Anzeige Adresse der Joysticktabelle
  531                   ;
  532 DAD2  2A B7A0     JADR:	LD	HL,(CURSO)	; Cursorposition merken
  533 DAD5  E5          	PUSH	HL
  534 DAD6  21 011A     	LD	HL,CUPOSA	; Position
KC-Debugger     							    SLR180 1.31 Page  91
JEDIT   Z80

  535 DAD9  22 B7A0     	LD	(CURSO),HL
  536 DADC  2A AACC     	LD	HL,(JOYADR)	; Adresse
  537 DADF  CD D597     	CALL	HLHEX		; anzeigen (UP im TEMO)
  538 DAE2  E1          MJA1:	POP	HL
  539 DAE3  22 B7A0     	LD	(CURSO),HL	; Cursorposition wie vor Aufruf
  540 DAE6  C9          	RET
  541                   ;
  542                   ; Gueltigkeitspruefung der neuen Adresse fuer die Joysticktabelle
  543                   ; PE:	DE=Position in ADRSEC,
  544                   ;	HL=Adr, A=Anzahl Durchlaeufe
  545                   ;	springt im Fehlerfall gleich ins Menue
  546                   ;
  547 DAE7  3D          MTA1:	DEC	A 		; weiterer Bereich ?
  548 DAE8  C8          	RET	Z
  549 DAE9  EB          TSTADR: EX	DE,HL		; hole Bereichsanfang
  550 DAEA  4E          	LD	C,(HL)
  551 DAEB  23          	INC	HL
  552 DAEC  46          	LD	B,(HL)
  553 DAED  23          	INC	HL
  554 DAEE  EB          	EX	DE,HL
  555 DAEF  A7          TSTAD1:	AND	A
  556 DAF0  ED 42       	SBC	HL,BC
  557 DAF2  EB          	EX	DE,HL		; hole Groesse
  558 DAF3  4E          	LD	C,(HL)
  559 DAF4  23          	INC	HL
  560 DAF5  46          	LD	B,(HL)
  561 DAF6  23          	INC	HL
  562 DAF7  EB          	EX	DE,HL
  563 DAF8  A7          	AND	A
  564 DAF9  ED 42       	SBC	HL,BC		; CY=1:innerhalb
  565 DAFB  30 EA       	JR	NC,MTA1
  566 DAFD  F1          	POP	AF		; Fehler: Stackkorrektur
  567 DAFE  F1          	POP	AF		; und Meldung
  568 DAFF  C3 D358     	JP	RANGE1		; Anzeige "INVALID RANGE" im KC-Debugger (TEMO)
  569                   ;
  570                   ; Erzeuge Joysticktabelle
  571                   ; PE:	DE=Zieladresse
  572                   ;
  573 DB02  01 DB48     MKJTAB:	LD	BC,JOYHLP+12	; Hilfstabelle zur Adressumrechnung
  574 DB05  21 AAD0     	LD	HL,JOYKEY
  575 DB08  ED A0       MSV1:	LDI			; Byte fuer Byte rueckwarts kopieren
  576 DB0A  0A          	LD	A,(BC)		; naechste Adresse
  577 DB0B  6F          	LD	L,A		; in HL verfuegbar machen
  578 DB0C  A7          	AND	A		; fertig?
  579 DB0D  20 F9       	JR	NZ,MSV1
  580 DB0F  C9          	RET
  581                   ;
  582                   ; UP-Vorlage fuer die *.JOY-Dateien von SAVE
  583                   ;
  584         0001      if jsave
  585 DB10  03          SVPRG:	DB	3		; 3 Adressen
  586 DB11  0180        	DW	JFILE		; Anfangsadresse
  587 DB13  0199        	DW	JFILE+SVEND-SVBEG+12 ; Endadresse
  588 DB15  0180        	DW	JFILE		; Startadresse
  589                   	;
  590 DB17  21 018D     SVBEG:	LD	HL,JFILE+SVEND-SVBEG	; Autostartroutine kopiert die Tabelle
  591 DB1A  ED 5B B7F0  	LD	DE,(JOYTAB)	; an den vorgegebenen Ort
  592 DB1E  01 000C     	LD	BC,12
KC-Debugger     							    SLR180 1.31 Page  92
JEDIT   Z80

  593 DB21  ED B0       	LDIR
  594 DB23  C9          	RET
  595 DB24              SVEND:
  596                   endif
  597                   ;
  598                   ; Joystickbelegung im Editor
  599                   ;
  600 DB24  02          JOYEDI:	DB	2
  601 DB25  83          	DB	83H
  602 DB26  82          	DB	82H
  603 DB27  8A          	DB	8AH
  604 DB28  80          	DB	80H
  605 DB29  86          	DB	86H
  606 DB2A  88          	DB	88H
  607 DB2B  85          	DB	85H
  608 DB2C  81          	DB	81H
  609 DB2D  87          	DB	87H
  610 DB2E  89          	DB	89H
  611 DB2F  84          	DB	84H
  612                   ;
  613                   ; Standardbelegung der Joysticktasten ab CAOS 4.5
  614                   ;
  615 DB30  02          JOYTBD:	DB	2		; Wartezyklen
  616 DB31  0B          	DB	0Bh		; Up
  617 DB32  0A          	DB	0Ah		; Down
  618 DB33  0D          	DB	CR		; Fire+Fire2
  619 DB34  08          	DB	08h		; Left
  620 DB35  00          	DB	0		; Up+Left
  621 DB36  00          	DB	0		; Down+Left
  622 DB37  0D          	DB	CR		; Fire
  623 DB38  09          	DB	09h		; Right
  624 DB39  00          	DB	0		; Up+Right
  625 DB3A  00          	DB	0		; Down+Right
  626 DB3B  20          	DB	' '		; Fire2
  627                   ;
  628                   ; Umsortierung JOYTAB<->JEDIT (Adresstabelle rueckwaerts)
  629                   ;
  630 DB3C  00          JOYHLP:	DB	0		; Endemarkierung
  631 DB3D  D5          	DB	LOW(JOYKEY+5)	; Fire2
  632 DB3E  DA          	DB	LOW(JOYKEY+10)	; rechts+unten
  633 DB3F  D8          	DB	LOW(JOYKEY+8)	; rechts+oben
  634 DB40  D2          	DB	LOW(JOYKEY+2)	; rechts
  635 DB41  D6          	DB	LOW(JOYKEY+6)	; fire
  636 DB42  D9          	DB	LOW(JOYKEY+9)	; links+unten
  637 DB43  D7          	DB	LOW(JOYKEY+7)	; links+oben
  638 DB44  D1          	DB	LOW(JOYKEY+1)	; links
  639 DB45  DB          	DB	LOW(JOYKEY+11)	; fire+fire2
  640 DB46  D3          	DB	LOW(JOYKEY+3)	; unten
  641 DB47  D4          	DB	LOW(JOYKEY+4)	; oben
  642 DB48  D0          	DB	LOW(JOYKEY+0)	; wait
  643                   ;
  644                   ; Tastenbezeichnungen:
  645                   ; Kombination der Teilstrings
  646                   ;
  647 DB49  25          JOYTXT:	DB	2*LOW(SLEFT-$)+1
  648 DB4A  2F          	DB	2*LOW(SRIGHT-$)+1
  649 DB4B  3B          	DB	2*LOW(SDOWN-$)+1
  650 DB4C  45          	DB	2*LOW(SUP-$)+1
KC-Debugger     							    SLR180 1.31 Page  93
JEDIT   Z80

  651 DB4D  4C 55       	DB	2*LOW(SFIRE-$),  2*LOW(SZWEI-$)+1
  652 DB4F  49          	DB	2*LOW(SFIRE-$)+1
  653 DB50  16 39       	DB	2*LOW(SLEFT-$),  2*LOW(SUP1-$)+1
  654 DB52  1E 35       	DB	2*LOW(SRIGHT-$), 2*LOW(SUP1-$)+1
  655 DB54  0E 25       	DB	2*LOW(SLEFT-$),  2*LOW(SDOWN1-$)+1
  656 DB56  16 21       	DB	2*LOW(SRIGHT-$), 2*LOW(SDOWN1-$)+1
  657 DB58  36 30 3D    	DB	2*LOW(SFIRE-$),  2*LOW(SFIRE1-$),  2*LOW(SZWEI-$)+1
  658                   ;
  659                   ; Teilstrings:
  660                   ;
  661 DB5B  6C 65 66 74 SLEFT:	DB	'left ',0
  662 DB61  72 69 67 68 SRIGHT:	DB	'right',0
  663 DB67  2B          SDOWN1:	DB	'+'
  664 DB68  64 6F 77 6E SDOWN:	DB	'down',0
  665 DB6D  2B          SUP1:	DB	'+'
  666 DB6E  75 70 00    SUP:	DB	'up',0
  667 DB71  20 2B       SFIRE1:	DB	' +'
  668 DB73  66 69 72 65 SFIRE:	DB	'fire',0
  669 DB78  32 00       SZWEI:	DB	'2',0
  670                   ;
  671 DB7A  4A 4F 59 00 CJOY:	DB	'JOY',0
  672                   ;
  673                   ; M008 in den Bitmode schalten (warten bis Taste gedrueckt)
  674                   ;
  675 DB7E  E0          JITAB:	DB	0E0H	; Interruptvektor
  676 DB7F  CF          	DB	0CFH	; Bit-Mode
  677 DB80  FF          	DB	0FFH	; Eingabe
  678 DB81  97          	DB	097H	; Int.Steuerwort
  679 DB82  C0          	DB	0C0H	; Int.Maske
  680                   ;
  681                   ; Liste der geschuetzen Adressbereiche fuer ADR
  682                   ;
  683                     ;JEDIT:Anfangsadr.(rel), Groesse
  684 DB83              ADRSEC:
  685                     ;Groesse Stack+IRQ+IX
  686 DB83  008B        	DW	80H+11
  687                     ;weitere Tests:
  688 DB85  05          	DB	5			; Anzahl Tests
  689                     ;Standard Stack+IRQ+IX, Speicher fuer *.JOY-Dateien
  690 DB86  0175        	DW	JFILE-11		; erlaubt 0000h..017Fh
  691 DB88  008B        	DW	0200H-JFILE+11		; gesperrt 0180h..01FFh
  692                     ;BWS und IRM-Arbeitszellen mit Ausnahme der Joystick-Tabelle
  693 DB8A  7DF5        	DW	08000H-0200H-11		; erlaubt 0200h..7FFFh
  694 DB8C  2ACB        	DW	JOYIRM-8000H+11		; gesperrt 8000h..AABFh
  695                     ;SHADOW
  696 DB8E  0001        	DW	JOYIRM+12-JOYIRM-11	; Joystick-Tabelle erlaubt
  697 DB90  003F        	DW	0AB00H-JOYIRM-12+11	; gesperrt AADDh..AAFFh
  698                     ;Video-RAM, Monitor-RAM, usw.
  699 DB92  01F5        	DW	0AD00H-0AB00H-11	; erlaubt AB00h..ACFFh
  700 DB94  0D0B        	DW	0BA00H-0AD00H+11	; gesperrt AD00h..B9FFh
  701                     ;ROM
  702 DB96  05F5        	DW	0C000H-0BA00H-11	; erlaubt BA00h..BFFFh
  703 DB98  400B        	DW	00000H-0C000H+11	; gesperrt C000h..FFFFh
  704 DB9A              PGEND:
  705                   ;--------------------------------------
   51         0001      IF CALC
   52                   	INCLUDE	CALC.Z80	; Taschenrechner von Frank Ludwig
    1                   ;-------------------------------------------------------------------------------
KC-Debugger     							    SLR180 1.31 Page  94
CALC    Z80

    2                   ;	CAOS-Taschenrechner
    3                   ;
    4                   ; (verwendet fuer die Arithmetik den Basic-Interpreter)
    5                   ;		ROM-Version fuer CAOS 4.3+
    6                   ;
    7                   ; Benutzt den BASIC-Speicher von 0300H bis 09EFH (ca.2 KByte), und
    8                   ; sichert/regeneriert den urspruenglichen Inhalt im versteckten IRM
    9                   ;
   10                   ; Frank Ludwig, 15.04.2012 - 15.05.2021
   11                   ;-------------------------------------------------------------------------------
   12                   ;
   13                   ; Mario Leubner 16.11.2013:
   14                   ; - Kommentare angepasst, deutsche Umlaute entfernt
   15                   ; - an Uebersetzung mit CP/M-Assembler angepasst
   16                   ; - INTPBR in INTPRB umbenannt
   17                   ; - BASZEL in WSP umbenannt
   18                   ; - CAOS-Prolog direkt als 7F7Fh geschrieben
   19                   ; - Menuewort fuer TEMO eingebaut
   20                   ;
   21                   ; Mario Leubner 18.11.2013:
   22                   ; - IY-Register retten fuer TEMO-Routine
   23                   ; - Menuewort CALC geaendert in "?"
   24                   ;
   25                   ; Frank Ludwig 24.11.2013:
   26                   ; - geaendertes Verhalten der Steuertasten im CALC-Fenster (Vorschlag von Mario)
   27                   ;    Sh+CLR : schliessen + Aufruf urspruengliche Funktion 
   28                   ;    BRK    : schliessen + Rueckgabe des Rechenergebnis
   29                   ;    ENTER in leerer Eingabezeile : schliessen
   30                   ; - UP fuer Sh+CLR auf feste Adresse 0108h gelegt, Code optimiert
   31                   ; - Programmstart (>?, %?c) Code optimiert 
   32                   ; - Stringspeicher auf 40 Byte begrenzt
   33                   ;
   34                   ; Mario Leubner 02.12.2013:
   35                   ; - neuen Code von Frank Ludwig uebernommen und angepasst
   36                   ;
   37                   ; Mario Leubner 15.12.2013:
   38                   ; - Auf die Nutzung von ARGC verzichtet, damit CAOS 4.6 dort den urspruenglichen
   39                   ;   Schaltzustand des USER-ROM uebergeben kann.
   40                   ;
   41                   ; Frank Ludwig 29.12.2013:
   42                   ; - Speicherschaltung fuer das Debugger-Segment im User-ROM optimiert
   43                   ; - keine Fehlermeldung wenn RAM0 aus oder schreibgeschuetzt ist
   44                   ; - Pruefung ob CAOS-Arbeitsbereich innerhalb des CALC-Arbeitsbereichs liegt
   45                   ;
   46                   ; Mario Leubner 31.12.2013:
   47                   ; - Abfrage von MIXIT durch Anfrage von IX ersetzt
   48                   ;
   49                   ; Mario Leubner 04.01.2014:
   50                   ; - REL-Option von TEMO-Menuewort entfernt
   51                   ;
   52                   ; Frank Ludwig 11.01.2014:
   53                   ; - UP fuer Sh+CLR geaendert, kein selbstmodifizierender Code mehr
   54                   ; - Der Ausdruck darf im CALC-Fenster ab Spalte 1 eingegeben werden
   55                   ;
   56                   ; Frank Ludwig 09.03.2014:
   57                   ; - Die zusaetzliche Eingabeaufforderung, falls CALC ohne Parameter aufgerufen
   58                   ;   wurde, ist unnoetig und wurde entfernt. 
   59                   ;
KC-Debugger     							    SLR180 1.31 Page  95
CALC    Z80

   60                   ; Frank Ludwig 10.03.2014:
   61                   ; - Hilfe bei Aufruf ohne Ausdruck eingebaut
   62                   ;
   63                   ; Frank Ludwig 23.02.2021:
   64                   ; - Ein-/Ausgabe der Hexadezimalzahlen auf 24Bit erweitert
   65                   ;
   66                   ; Frank Ludwig 27.02.2021:
   67                   ; - kuerzerer Code fuer den Aufruf der UP's im BASIC-ROM
   68                   ;
   69                   ; Mario Leubner 14.03.2021:
   70                   ; - 6stellige HEX-Ausgabe nur, wenn die ersten beiden Stellen <> 00 sind
   71                   ;
   72                   ; Mario Leubner 28.03.2021:
   73                   ; - Code-Optimierung (Mitnutzung von HLHEX aus TEMO-Ebene)
   74                   ;
   75                   ; Frank Ludwig 15.05.2021:
   76                   ; - kuerzerer Code fuer CRHEX 
   77                   ; - Sonderbehandlung fuer Zeichenfolge "DEF" (=Token 94H) eingebaut
   78                   ;
   79                   ;-------------------------------------------------------------------------------
   80                   ;
   81                   ; BASIC-Arbeitszellen:			..abweichende Bezeichnung in BASIC:
   82         0300      WSP	EQU	0300H		; BASIC-Notizspeicher
   83         0356      STDPTR	EQU	0356H		; Stackende
   84         0358      CULINO	EQU	0358H		; aktuelle Zeilennummer
   85         0362      INPBUF	EQU	0362H		; Eingabepuffer			INPBUF+1
   86         03AC      EOINPB	EQU	INPBUF+74	; Eingabepufferende
   87         03AE      DATYPE	EQU	03AEH		; Datentyp
   88         03B0      MEMSIZ	EQU	03B0H		; Speicherende
   89         03E5      WRA1	EQU	03E5H		; Arithmetikregister 1
   90         03EA      INTPRB	EQU	03EAH		; PRINT-Puffer
   91         03FC      EXTFLG	EQU	03FCH		; Flag fuer BASIC-Erweiterungen
   92                   ;
   93                   ; Startadresse Drucktasten-UP
   94         0108      DTUP    EQU	0108H   	; Zwischen 108h und 150h ist momentan eine
   95                   				; Luecke in BASEX. Das kommt daher, dass der
   96                   				; Bereich D8..108h eigentlich von SERVICE.KCC
   97                   				; kommt und der Bereich ab 150h von BASEX.KCC
   98                   
   99                   ;
  100                   ; CALC-Arbeitszellen im RAM (nach BASIC-Programm):
  101                   ;
  102         0028      BSTRSZ	EQU	40		; 40 Byte Stringspeicher
  103                   ;
  104         047F      BASSP	EQU	047FH		; Basic-Stack (bei CALC4 045FH)
  105         04A7      BASEND	EQU	BASSP+BSTRSZ	; Ende Stringspeicher
  106         04A8      MCBEG	EQU	BASEND+1	; MC-Code fuer den Sprung ins Basic
  107                   ;
  108         04EF      OMONI	EQU	MCBEG+UPEND-UPBEG	; 128 Byte Monitor-RAM gesichert
  109         051D      OSYSP	EQU	OMONI+SYSP-MONI		; Original von SYSP
  110         0528      OOUTB	EQU	OMONI+OUTAB-MONI	; Original von OUTAB
  111         052D      OUOUT	EQU	OMONI+UOUT1+1-MONI	; Original von UOUT1
  112         0540      NFTAST	EQU	OMONI+FTAST-MONI	; Neuer Wert fuer FTAST
  113                   ;
  114                   ; Hinter OMONI: Sicherung des Inhaltes des CALC-Fensters
  115         056F      OVRAM	EQU	OMONI+128	; VRAM
  116         05E7      OPXRAM	EQU	OVRAM+120	; Pixel-RAM
  117                   ;
KC-Debugger     							    SLR180 1.31 Page  96
CALC    Z80

  118         09A7      CSTACK  EQU	OPXRAM+960	; CALC-Stack 68 Bytes
  119         09EB      CALCSP	EQU	CSTACK+68
  120         09EB      OP88	EQU	CALCSP		; Port 88H Orig.
  121         09EC      NP88	EQU	OP88+1		; Port 88H Neu
  122         09ED      OSP	EQU	NP88+1		; Stack Orig.
  123         09EF      PRGEND	EQU	OSP+2		; Ende Arbeitszellen (Adr.09EFH)
  124                   ;
  125                   ; Adressen aus dem BASIC-ROM:
  126         C0BD      BRAMST	EQU	0C0BDH		; Notizspeichererstbelegung	RAMST
  127         C120      TOKTBB	EQU	0C120H		; Wortliste im BASIC		MNEMTB-1
  128         CD3A      SNALY	EQU	0CD3AH		; Arithmetik
  129         D1C9      TEXTO	EQU	0D1C9H		; Ausgabe ASCIIZ-Zeichenkette
  130         D1CC      TEXTO1	EQU	0D1CCH		; Stringausgabe
  131         C641      NEW1	EQU	0C641H		; Notizspeicher Init, NEW
  132         D6AE      SGN1	EQU	0D6AEH		; Uebernahme Zahl aus Reg. BADE nach WRA1
  133         D74B      INTMV1	EQU	0D745H+6	; Ganzzahliger Teil aus WRA1 nach CDE	       
  134         D834      NUMKON	EQU	0D834H		; Zahl formatiert in PRINT-Puffer
  135         E00C      TOKTBC	EQU	0E00CH		; Wortliste im CAOS
  136                   ;
  137                   ; CALC-Arbeitszellen:
  138         B780      MONI	EQU	ARGC	; 0B780H = Monitor-RAM (128 Byte / werden gesichert!)
  139                   ;
  140         000A      RAM0ON	EQU	0AH		; RAM0 an und Schreibschutz aus
  141                   
  142                   ; Undokumentierter Opcode als Macro:
  143                   ;	RES	BI,(IX+DISP),A
  144                   RESIXA	MACRO	BI,DISP
  145                   	 DB	0DDh,0CBh,DISP
  146                   	 DB	BI SHL 3 OR 10000111b
  147                   	ENDM
  148                   ;
  149                   ;	SET	BI,(IX+DISP),A
  150                   SETIXA	MACRO	BI,DISP
  151                   	 DB	0DDh,0CBh,DISP
  152                   	 DB	BI SHL 3 OR 11000111b
  153                   	ENDM
  154                   ;--------------------------------------
  155                   ; Programmstart:
  156                   ;--------------------------------------
  157 DB9A  FDFD        	DW	0FDFDH		; Menuewort von TEMO
  158 DB9C  3F 1F       	DB	'?',1FH		; hier ebenfalls unsichtbar
  159 DB9E  CD DD5E     CALC1:	CALL	LTRIM		; Aufruf mit Parameter ?
  160 DBA1  28 15       	JR	Z,CHELP		; nein => Fehlermeldung
  161 DBA3  CD DCA0     	CALL	RAMSAV		; Speicher freischaufeln und initialisieren
  162 DBA6  1E 19       	LD	E,ERRM
  163 DBA8  DA F009     	JP	C,PV3		; Fehler 
  164 DBAB  CD DD6B     	CALL	PRCALC		; Ausdruck berechnen
  165 DBAE  2A 051D     	LD	HL,(OSYSP)	; SYSP zurueck
  166 DBB1  22 B7AE     	LD	(SYSP),HL
  167 DBB4  CD DC95     	CALL	RAMRET		; gesicherten RAM zurueck aus verstecktem IRM
  168 DBB7  C9          	RET
  169 DBB8  CD F003     CHELP:	CALL	PV1
  170 DBBB  23          	DB	OSTR
  171 DBBC  0B 09 3F 20 	DB	0BH,9,'? Ausdruck',CR,LF,0
  172 DBCB  C9          	RET
  173                   ;
  174 DBCC  7F7F        	DW	7F7FH		; Menuewort von CAOS
  175 DBCE  3F 63 1F    	DB	'?c',1FH	; Ausdruck als Parameter moeglich
KC-Debugger     							    SLR180 1.31 Page  97
CALC    Z80

  176 DBD1  CD DB9E     	CALL	CALC1		; Funktion wie in TEMO
  177 DBD4  18 22       	JR	CEXIT		; USER-ROM abschalten!
  178                   ;
  179                   ; Initialisierung der "Drucktaste" Shift+CLR
  180                   ;--------------------------------------
  181 DBD6  7F7F        	DW	7F7FH
  182 DBD8  3F 69 01    	DB	'?i',1
  183 DBDB  2A B799     	LD	HL,(HCADR)	; alte Serviceroutine
  184 DBDE  11 0108     	LD	DE,DTUP		; neue Serviceroutine
  185 DBE1  A7          	AND	A		; (CY:=0)
  186 DBE2  ED 52       	SBC	HL,DE		; bereits installiert ?
  187 DBE4  28 12       	JR	Z,CEXIT		; dann fertig
  188 DBE6  19          	ADD	HL,DE
  189 DBE7  ED 53 B799  	LD	(HCADR),DE	; neue Routine eintragen
  190 DBEB  E5          	PUSH	HL
  191 DBEC  21 DF23     	LD	HL,DTBEG	; Vorlage im ROM
  192 DBEF  01 0028     	LD	BC,DTEND-DTBEG
  193 DBF2  ED B0       	LDIR			; Code kopieren
  194 DBF4  E1          	POP	HL
  195 DBF5  22 012C     	LD	(DTUP-DTBEG+OHCADR+1),HL ; alte Routine merken
  196                   ;--------------------------------------
  197 DBF8  ED 5B B77F  CEXIT:	LD	DE,(ARGC-1)	; D = urspruenglicher Schaltzustand USER-C
  198 DBFC  C3 D9C6     	JP	JEXIT3		; gleichen Code von JEDIT mit benutzen!
  199                   ;	LD	A,2		; USER-ROM
  200                   ;	LD	L,A		; abschalten
  201                   ;	LD	DE,MODU		; D=0, E=MODU
  202                   ;	JP	PV3		; zuerst USER-ROM ausschalten, dann zu CAOS
  203                   ;--------------------------------------
  204                   ;
  205                   ; Drucktasten Serviceroutinen: 
  206                   ;--------------------------
  207                   ; Fenster fuer die Berechnung
  208                   ;--------------------------
  209                   ;
  210 DBFF  08          DTSR:	EX	AF,AF'
  211 DC00  F5          	PUSH	AF
  212 DC01  C5          	PUSH	BC
  213 DC02  D5          	PUSH	DE
  214 DC03  E5          	PUSH	HL
  215 DC04  FD E5       	PUSH	IY
  216 DC06  CD DCA0     	CALL	RAMSAV		; Speicher freischaufeln und initialisieren
  217 DC09  38 42       	JR	C,DTEX1		; Ueberlappung mit CAOS-Arbeitsbereich
  218                   ;
  219                   ; Fenster einstellen und Inhalt retten
  220                   				; DE=OVRAM
  221 DC0B  21 DC55     	LD	HL,DTFT		; 2.Drucktasten-UP aktivieren
  222                   				; (Rueckgabe des Ergebnisses)
  223 DC0E  22 B799     	LD	(HCADR),HL
  224 DC11  DD 7E 01    	LD	A,(IX+1)	; Port 84H
  225 DC14  F5          	PUSH	AF		; sichern
  226 DC15  CB 8F       	RES	1,A		; Pixelebene
  227 DC17  CB DF       	SET	3,A		; niedrige Farbaufloesung
  228 DC19  DD 77 01    	LD	(IX+1),A	; (OUT 84 erledigt CRT)
  229 DC1C  21 B7A2     	LD	HL,STBT
  230 DC1F  36 12       	LD	(HL),12H	; ESC aktiv, schreiben COLOR-IRM aus
  231 DC21  E6 01       	AND	1		; sichtbares Fenster
  232 DC23  C6 31       	ADD	'1'		; zum Aktiven machen	CY=0
  233 DC25  CD F003     	CALL	PV1
KC-Debugger     							    SLR180 1.31 Page  98
CALC    Z80

  234 DC28  00          	DB	CRT
  235 DC29  21 0328     	LD	HL,328H		; Fenstergroesse (40x3 Zeichen)
  236 DC2C  22 B79E     	LD	(WINLG),HL
  237 DC2F  ED 62       	SBC	HL,HL		; HL:=0
  238 DC31  22 B79C     	LD	(WINON),HL	; Fensteranfang
  239 DC34  22 03EA     	LD	(INTPRB),HL	; Printpuffer loeschen
  240 DC37  CD DD2C     	CALL	CPYWND		; Pixel und VRAM vom Fenster sichern (CY ist 0)
  241 DC3A  CD F003     	CALL	PV1
  242 DC3D  23          	DB	OSTR
  243 DC3E  12 0C 00    	DB	12H,CLS,0	; Scroll-Modus,CLS
  244                   ;
  245                   ; Ausdruecke abfragen und berechnen bis BRK oder nichts eingegeben wurde
  246                   ;
  247 DC41  CD DD4D     DTLOOP:	CALL	INPUT		; Ausdruck anfordern
  248 DC44  38 15       	JR	C,DTERG		; CY=1, raus und Ergebnis zurueckgeben
  249 DC46  28 2B       	JR	Z,DTEXIT	; ZF=1, raus
  250 DC48  CD DD6B     	CALL	PRCALC		; berechnen
  251 DC4B  18 F4       	JR	DTLOOP
  252                   ;
  253 DC4D  3E 07       DTEX1:	LD	A,7		;bei Fehler in RAMSAV
  254 DC4F  CD F003     	CALL	PV1		;BEEP
  255 DC52  00          	DB	CRT
  256 DC53  18 38       	JR	DTEX2		;und raus, CY' ist 0
  257                   ;
  258                   ; Drucktaste im CALC-Fenster, Aufruf der Originalfunktion
  259                   ; (2. Drucktasten-Serviceroutine innerhalb vom CALC-Fenster)
  260                   ;---------------------------
  261                   ;
  262 DC55  31 09E9     DTFT:	LD	SP,CALCSP-2	; Stack bereinigen
  263 DC58  37          	SCF			; CY=1: Original HCADR aufrufen
  264 DC59  18 18       	JR	DTEXIT
  265                   ;
  266                   ; Rechenergebnis zurueckgeben (BRK im CALC-Fenster)
  267                   ;---------------------------
  268                   ;
  269 DC5B  11 03EA     DTERG:	LD	DE,INTPRB	; letzte Zahl aus Printpuffer
  270 DC5E  CD DD5E     	CALL	LTRIM		; fuehrende Leerzeichen entfernen (loescht CY)
  271 DC61  01 000D     	LD	BC,13		; bis zu 13 Zeichen
  272 DC64  21 B98E     	LD	HL,WNDFN-14	; an das Ende des F-Tastenspeichers kopieren
  273 DC67  70          	LD	(HL),B		; gegebenenfalls Ende von F12 abschneiden
  274 DC68  23          	INC	HL
  275 DC69  22 0540     	LD	(NFTAST),HL
  276 DC6C  EB          	EX	DE,HL
  277 DC6D  ED B0       	LDIR
  278 DC6F  DD CB 08 F6 	SET	6,(IX+8)	; als F-Taste aktivieren
  279                   	; CY ist 0: kein Aufruf der original HCADR
  280                   ;
  281                   ; Aufraeumen und Beenden
  282                   ;
  283 DC73  08          DTEXIT:	EX	AF,AF'		; Aufruf original HCADR in CY' merken
  284 DC74  21 04EF     	LD	HL,OMONI	; gesicherten
  285 DC77  11 B780     	LD	DE,MONI		; Monitor-RAM
  286 DC7A  01 0080     	LD	BC,128
  287 DC7D  ED B0       	LDIR			; zurueckschreiben
  288 DC7F  EB          	EX	DE,HL		; DE:=OVRAM
  289 DC80  37          	SCF			; Pixel und VRAM zurueck
  290 DC81  CD DD2C     	CALL	CPYWND
  291 DC84  F1          	POP	AF		; Port 84H zurueck
KC-Debugger     							    SLR180 1.31 Page  99
CALC    Z80

  292 DC85  DD 77 01    	LD	(IX+1),A
  293 DC88  D3 84       	OUT	(84H),A
  294 DC8A  CD DC95     	CALL	RAMRET		; RAM wiederherstellen
  295 DC8D  FD E1       DTEX2:	POP	IY
  296 DC8F  E1          	POP	HL
  297 DC90  D1          	POP	DE
  298 DC91  C1          	POP	BC
  299 DC92  F1          	POP	AF
  300 DC93  08          	EX	AF,AF'
  301 DC94  C9          	RET			; PA:CY Aufruf original HCADR
  302                   ;
  303                   ;--------------------------------------
  304                   ; RAM sichern/wiederherstellen
  305                   ;--------------------------------------
  306                   ; kopiert den RAM ab Adresse 300H in den
  307                   ; vom CAOS 4.3+ ungenutzen versteckten IRM Bereich
  308                   ;
  309                   ; RAMSAV: RAM sichern und initialisieren
  310                   ; PA:	CY=1: Ueberlappung mit CAOS-Arbeitsbereich
  311                   ;	bei CY=0	SP=CALCSP
  312                   ;			DE=Adresse OVRAM
  313                   ;
  314                   ; RAMRET: RAM und SP wiederherstellen
  315                   ; PE:	SP=CALCSP-2
  316                   ;
  317 DC95  FD E1       RAMRET:	POP	IY		; Ruecksprungadr. nach IY
  318 DC97  D1          	POP	DE		; OP88,NP88 nach DE
  319 DC98  7A          	LD	A,D		; CALC-Ebene
  320 DC99  53          	LD	D,E		; spaeter PIO-A wie vor Aufruf von CALC
  321 DC9A  E1          	POP	HL		; OSP nach HL
  322 DC9B  F9          	LD	SP,HL		; Stack zurueck
  323 DC9C  06 01       	LD	B,1		; RAM wiederherstellen
  324 DC9E  18 18       	JR	RAMSV2
  325                   ;
  326 DCA0  DD          RAMSAV:	DB	0DDH		; Prefix IX
  327 DCA1  7C          	LD	A,H		; (LD A,HX) CAOS-Arbeitsbereich H-Teil in A
  328                   ;	LD	A,(MIXIT)	; Fehler wenn CAOS-Arbeitsbereich...
  329 DCA2  87          	ADD	A		; im IRM
  330 DCA3  D8          	RET	C
  331 DCA4  D6 06       	SUB	HIGH(WSP)*2	; oder Ueberlappung mit CALC-Arbeitsbereich
  332 DCA6  FE 0C       	CP	(HIGH(PRGEND)-HIGH(WSP))*2
  333 DCA8  D8          	RET	C
  334 DCA9  FD E1       	POP	IY		; Ruecksprungadr. nach IY
  335 DCAB  DB 88       	IN	A,(88H)		; PIO-A
  336 DCAD  5F          	LD	E,A		; fuer OP88 merken
  337 DCAE  21 C000     	LD	HL,0-4000H	; Stack liegt im RAM0 ?
  338 DCB1  45          	LD	B,L		; RAM sichern
  339 DCB2  39          	ADD	HL,SP
  340 DCB3  30 02       	JR	NC,RAMSV1
  341 DCB5  F6 0A       	OR	A,RAM0ON	; nein, sicherstellen das RAM0 an ist
  342 DCB7  57          RAMSV1:	LD	D,A		; fuer NP88 merken
  343                   ;
  344 DCB8  D5          RAMSV2:	PUSH	DE
  345 DCB9  3D          	DEC	A		; CAOS-ROM E aus
  346 DCBA  F3          	DI
  347 DCBB  D3 88       	OUT	(88H),A		; PIO-A
  348 DCBD  DD 7E 01    	LD	A,(IX+1)
  349 DCC0  F5          	PUSH	AF
KC-Debugger     							    SLR180 1.31 Page 100
CALC    Z80

  350 DCC1  E6 F9       	AND	0F9H		; passende IRM-Ebene einstellen:
  351 DCC3  F6 02       	OR	002H		; Bild 0, COLOR-RAM
  352 DCC5  D3 84       	OUT	(84H),A
  353 DCC7  CD DD05     	CALL	RAMSV5		; Kopieren, Ruecksprung mit JP
  354 DCCA  06 06       RAMSV3:	LD	B,6		; Stack aufraeumen
  355 DCCC  F1          RAMSVL:	POP	AF		; Hilfs-MC loeschen
  356 DCCD  10 FD       	DJNZ	RAMSVL
  357 DCCF  D3 84       	OUT	(84H),A		; wie vor dem Kopieren
  358 DCD1  E1          	POP	HL
  359 DCD2  7C          	LD	A,H
  360 DCD3  D3 88       	OUT	(88H),A		; CAOS-ROM E an
  361 DCD5  FB          	EI
  362 DCD6  CB 22       	SLA	D		; CY=1: sichern (DE=IRM-Adresse)
  363 DCD8  30 19       	JR	NC,RAMSV4	; RAM ist wiederhergestellt
  364                   ;
  365                   ; nach dem Freischaufeln, Speicher initialisieren
  366                   ;-----------------------
  367 DCDA  ED 73 09ED  	LD	(OSP),SP	; Original-SP merken
  368 DCDE  31 09ED     	LD	SP,OP88+2	; Stack fuer CALC verwenden
  369 DCE1  E5          	PUSH	HL		; HL nach OP88/NP88
  370                   ;
  371                   ; kopiere UP's fuer Sprung ins Basic
  372                   ;
  373 DCE2  21 DEDC     	LD	HL,UPBEG
  374 DCE5  11 04A8     	LD	DE,MCBEG
  375 DCE8  0E 47       	LD	C,UPEND-UPBEG	; (B ist noch 0)
  376 DCEA  ED B0       	LDIR
  377                   ;
  378                   ; Monitor-RAM sichern
  379                   				; DE=OMONI
  380 DCEC  21 B780     	LD	HL,MONI		; Beginn Monitor-RAM
  381 DCEF  0E 80       	LD	C,128		; B ist noch 0
  382 DCF1  ED B0       	LDIR
  383                   ;
  384                   ; Warte bis Taste losgelassen
  385                   ; Das lange DI verursacht sonst Fehler im Tastaturtreiber.
  386 DCF3  DD 36 0D 00 RAMSV4:	LD	(IX+13),0	; bewirkt FastRepeat
  387 DCF7  3E 14       	LD	A,120/6		; 120ms warten
  388 DCF9  CD F003     	CALL	PV1
  389 DCFC  14          	DB	WAIT
  390 DCFD  CD F003     	CALL	PV1
  391 DD00  0E          	DB	KBDZ		; Taste noch gedrueckt ?
  392 DD01  38 F0       	JR	C,RAMSV4
  393 DD03  FD E9       	JP	(IY)		; RET mit DE=OVRAM und CY=0
  394                   ;
  395                   ; RAM 0300H-09EFH in/aus versteckten IRM (Color-RAM, Bild 0) kopieren
  396                   ;-------------------------
  397 DD05  21 C386     RAMSV5:	LD	HL,0C386H	; Hilfs-MC direkt auf den Stack ablegen
  398 DD08  E5          	PUSH	HL		; (SP)=RAMSV3
  399 DD09  21 D3F1     	LD	HL,0D3F1H
  400 DD0C  E5          	PUSH	HL
  401 DD0D  21 B0ED     	LD	HL,0B0EDH
  402 DD10  E5          	PUSH	HL
  403 DD11  21 86D3     	LD	HL,086D3H
  404 DD14  E5          	PUSH	HL
  405 DD15  ED 62       	SBC	HL,HL		; HL:=0 (CY ist 0)
  406 DD17  39          	ADD	HL,SP		; Startadresse Hilfs-MC
  407 DD18  DD 7E 04    	LD	A,(IX+4)	; CAOS-ROM C ist aus
KC-Debugger     							    SLR180 1.31 Page 101
CALC    Z80

  408 DD1B  F5          	PUSH	AF
  409 DD1C  F6 80       	OR	80H		; CAOS-ROM C an
  410 DD1E  E5          	PUSH	HL		; Stack-Adresse Hilfs-MC
  411 DD1F  21 0300     	LD	HL,WSP		; BASIC
  412 DD22  11 B800     	LD	DE,0B800H	; versteckte IRM-Ebene ab hier frei
  413 DD25  10 01       	DJNZ	RAMSV6
  414 DD27  EB          	EX	DE,HL		; Kopierrichtung tauschen
  415 DD28  01 06EF     RAMSV6:	LD	BC,PRGEND-WSP	; ca.2k kopieren
  416 DD2B  C9          	RET	; Sprung ins Hilfs-MC auf den Stack
  417                   ;
  418                   ; Hilfs-MC:
  419                   ; D3 86	OUT	(86H),A	; CAOS-ROM C und versteckter IRM an
  420                   ; ED B0	LDIR
  421                   ; F1	POP	AF
  422                   ; D3 86	OUT	(86H),A	; CAOS-ROM C versteckter IRM aus
  423                   ; C3	JP	RAMSV3
  424                   ;
  425                   ;--------------------------------------
  426                   ; Pixel und VRAM sichern/wiederherstellen
  427                   ;----------------------------
  428                   ; PE:	CY=0:	sichern
  429                   ;	CY=1:	wiederherstellen
  430                   ;	DE=Adresse OVRAM
  431                   ; PA:	BC=0
  432                   ;
  433 DD2C  2A B7CB     CPYWND:	LD	HL,(VRAM)	; VRAM-Adr vom aktuellen Bild, =Fensteranfang
  434 DD2F  01 0078     	LD	BC,3*40		; 3 Zeilen in voller Breite
  435 DD32  CD DD45     	CALL	CPCPY		; VRAM im Fenster sichern
  436 DD35  21 A700     	LD	HL,0A700H	; PixelRAM-Adr fuer Fenster (Spalten rueckwaerts)
  437 DD38  0E 18       CPWN1:	LD	C,3*8		; Pixel fuer 3 Zeichen
  438 DD3A  CD DD45     	CALL	CPCPY
  439 DD3D  7E          	LD	A,(HL)		; unter dem Fenster Linie zeichnen/loeschen
  440 DD3E  2F          	CPL			; durch Negieren der Pixel!
  441 DD3F  77          	LD	(HL),A
  442 DD40  68          	LD	L,B		; L:=0 (oberste Zeile)
  443 DD41  25          	DEC	H		; naechste Spalte
  444 DD42  F0          	RET	P		; bis HL<8000H
  445 DD43  18 F3       	JR	CPWN1
  446                   ;
  447 DD45  30 01       CPCPY:	JR	NC,CPCP1
  448 DD47  EB          	EX	DE,HL		; Tauschen = wiederherstellen
  449 DD48  ED B0       CPCP1:	LDIR
  450 DD4A  D0          	RET	NC
  451 DD4B  EB          	EX	DE,HL		; zuruecktauschen
  452 DD4C  C9          	RET
  453                   ;
  454                   ;--------------------------------------
  455                   ; Eingabe des Ausdrucks
  456                   ;----------------------------
  457                   ; Fordert zur Eingabe des Ausdrucks auf
  458                   ; und sucht das erste Zeichen in der Zeichenkette
  459                   ;
  460                   ; INPUT:	Ausdruck immer anfordern
  461                   ; LTRIM:	sucht das erste Nichtleerzeichen im Ausdruck
  462                   ;
  463                   ; PE (LTRIM):	DE=Zeiger auf Ausdruck, mit #0 abgeschlossen
  464                   ; PA:	CY=1	BRK gedrueckt
  465                   ;	CY=0 und ZF=0	Ausdruck vorhanden, dann 
KC-Debugger     							    SLR180 1.31 Page 102
CALC    Z80

  466                   ;	 DE=ARG9=Zeiger auf erstes Zeichen (>Space) im Ausdruck
  467                   ;
  468 DD4D  3E 3F       INPUT:	LD	A,'?'		; nein, jetzt eingeben
  469 DD4F  CD F003     	CALL	PV1
  470 DD52  24          	DB	OCHR
  471 DD53  CD F003     	CALL	PV1
  472 DD56  17          	DB	INLIN
  473 DD57  D8          	RET	C		; BRK ?
  474 DD58  1A          	LD	A,(DE)		; Fragezeichen wurde ueberschrieben ?
  475 DD59  FE 3F       	CP	'?'
  476 DD5B  20 01       	JR	NZ,LTRIM
  477 DD5D  13          INP1:	INC	DE		; suche erstes Zeichen
  478 DD5E  1A          LTRIM:	LD	A,(DE)
  479 DD5F  A7          	AND	A		; #0, dann nichts gefunden
  480 DD60  C8          	RET	Z		; CY=0, ZF=1
  481 DD61  FE 21       	CP	' '+1
  482 DD63  38 F8       	JR	C,INP1
  483 DD65  ED 53 B792  	LD	(ARG9),DE	; gefunden, Adresse merken
  484 DD69  A7          	AND	A
  485 DD6A  C9          	RET			; CY=0, ZF=0
  486                   ;
  487                   ;--------------------------------------
  488                   ; Berechnung und Anzeige des Ausdrucks
  489                   ;----------------------------
  490                   ; PE:	ARG9=Zeiger auf Ausdruck, mit #0 abgeschlossen
  491                   ;	veraendert SYSP!
  492                   ;
  493 DD6B  ED 73 B7AE  PRCALC:	LD	(SYSP),SP	; Ruecksprungadr vor Ueberschreiben 
  494                   				; durch PV4 und Co. schuetzen
  495                   ;
  496                   ; Bildschirmausgaben abfangen
  497                   ;
  498 DD6F  21 04DC     	LD	HL,NOUTAB+MCBEG-UPBEG
  499 DD72  22 B7B9     	LD	(OUTAB),HL	; Zeiger auf UP-Nummer = 02H
  500 DD75  23          	INC	HL		; Adresse NUOUT1
  501 DD76  22 B7BE     	LD	(UOUT1+1),HL	; als Sprungziel eintragen
  502                   ;
  503                   ; Initialisierung Basic-Arbeitsbereich
  504                   ;
  505 DD79  21 C0BD     	LD	HL,BRAMST	; Notizspeicher-Default-Belegung
  506 DD7C  01 0062     	LD	BC,62H		; von 0300H bis 0361H initialisieren
  507 DD7F  11 04A8     	LD	DE,BLDIR+MCBEG-UPBEG ; LDIR mit DE=0300H
  508 DD82  CD 04BF     	CALL	CBASDE+MCBEG-UPBEG
  509 DD85  21 0361     	LD	HL,WSP+61H	; Rest von 0362H bis 0400H loeschen
  510 DD88  0E 9F       	LD	C,400H-0361H
  511 DD8A  ED B0       	LDIR
  512 DD8C  21 04A7     	LD	HL,BASEND
  513 DD8F  22 03B0     	LD	(MEMSIZ),HL	; Speicherende vorgeben
  514 DD92  2E 7F       	LD	L,LOW(BASSP)
  515 DD94  22 0356     	LD	(STDPTR),HL	; Stackende davor
  516 DD97  11 C641     	LD	DE,NEW1         ; NEW
  517 DD9A  CD 04BF     	CALL	CBASDE+MCBEG-UPBEG ; PA:A=0, SP=BASIC-Stack
  518                   ;	LD	(ARGC),A	; ARGC:=CRT
  519 DD9D  3D          	DEC	A		; A=0FFh
  520 DD9E  32 03FC     	LD	(EXTFLG),A	; Basic-Erweiterungen vorhanden
  521 DDA1  32 0358     	LD	(CULINO),A	; aktuelle Zeilennummer = 0FFFFH
  522                   				; H-Teil ist bereits FF von Defaultwert...
  523                   ;
KC-Debugger     							    SLR180 1.31 Page 103
CALC    Z80

  524                   ; Ausdruck holen und verdichten
  525                   ;
  526 DDA4  2A B792     	LD	HL,(ARG9)	; Zeiger auf Ausdruck
  527 DDA7  11 0362     	LD	DE,INPBUF	; BASIC-Eingabepuffer
  528 DDAA  D5          	PUSH	DE
  529 DDAB  CD DE38     	CALL	SCANN
  530 DDAE  E1          	POP	HL
  531                   ;
  532                   ; Ausdruck berechnen
  533                   ;
  534 DDAF  11 CD3A     	LD	DE,SNALY
  535 DDB2  CD 04BF     	CALL	CBASDE+MCBEG-UPBEG ; PE: HL=Ausdruck
  536                   ;	Hier gehts nur weiter wenn kein Fehler aufgetreten ist,
  537                   ;	sonst bei PREND.
  538 DDB5  CD DE05     	CALL	OURET		; Bildschirmausgaben wieder normal
  539 DDB8  11 D1CC             LD      DE,TEXTO1       ; Voreinstellung: Anzeige Zeichenkette
  540 DDBB  3A 03AE     	LD	A,(DATYPE)	; Zeichenkette ?
  541 DDBE  A7          	AND	A
  542 DDBF  20 2F       	JR	NZ,PRTXT
  543                   ;
  544                   ; Zahl in Zeichenkette umwandeln
  545                   ;
  546 DDC1  2A 03E7     	LD	HL,(WRA1+2)	; Exponent und HWT
  547 DDC4  7C          	LD	A,H
  548 DDC5  D6 81       	SUB	81H		; Zahl<1 ?
  549 DDC7  FE 14       	CP	95H-81H		; Zahl>=2^20 ?
  550 DDC9  30 1F       	JR	NC,PRDEZ	; dann nur Dezimal
  551 DDCB  11 D74B     	LD	DE,INTMV1
  552 DDCE  CD 04BF     	CALL	CBASDE+MCBEG-UPBEG ; Ganzzahliger Teil nach CDE
  553 DDD1  22 03E7     	LD	(WRA1+2),HL	; Vorzeichen wiederherstellen
  554 DDD4  EB          	EX	DE,HL
  555 DDD5  CD F003     	CALL	PV1		; Hex-Ausgabe:
  556 DDD8  2B          	DB	SPACE
  557 DDD9  79          	LD	A,C		; oberste 2 Stellen
  558 DDDA  B7          	OR	A		; Test, ob diese leer sind
  559 DDDB  C4 F003     	CALL	NZ,PV1		; oberste 2 Stellen (nur wenn ungleich 0)
  560 DDDE  1C          	DB	AHEX	; 1CH = INC E falls PV1 nicht aufgerufen wird
  561 DDDF  CD D597     	CALL	HLHEX		; uebrige Stellen
  562 DDE2  CD F003     	CALL	PV1
  563 DDE5  23          	DB	OSTR
  564 DDE6  08 48 20 00 	DB	8,'H ',0
  565 DDEA  CD 04BC     PRDEZ:	CALL	BNUMKN+MCBEG-UPBEG ; Dezimal-Ausgabe, PA:HL=PRINT-Puffer
  566 DDED  11 D1C9     	LD	DE,TEXTO        ; ASCIIZ-Zeichenkette
  567                   ;
  568                   ; Zeichenkette anzeigen
  569                   ;
  570 DDF0  CD 04BF     PRTXT:	CALL	CBASDE+MCBEG-UPBEG
  571                   ;
  572 DDF3  ED 7B B7AE  PREND:	LD	SP,(SYSP)
  573 DDF7  3A B7A0     	LD	A,(CURSO)
  574 DDFA  A7          	AND	A		; Zeilenanfang ?
  575 DDFB  C8          	RET	Z
  576 DDFC  CD F003     	CALL	PV1
  577 DDFF  23          	DB	OSTR
  578 DE00  20 0D 0A 00 	DB	' ',CR,LF,0
  579 DE04  C9          	RET
  580                   ;
  581                   ;Ruecksetzen Ausgabeumleitung
KC-Debugger     							    SLR180 1.31 Page 104
CALC    Z80

  582                   ;----------------------------
  583                   ;
  584 DE05  E5          OURET:	PUSH	HL
  585 DE06  2A 0528     	LD	HL,(OOUTB)
  586 DE09  22 B7B9     	LD	(OUTAB),HL
  587 DE0C  2A 052D     	LD	HL,(OUOUT)
  588 DE0F  22 B7BE     	LD	(UOUT1+1),HL
  589 DE12  E1          	POP	HL
  590 DE13  C9          	RET
  591                   ;
  592                   ;--------------------------------------
  593                   ; UP zur Umwandlung des Ausdrucks in die BASIC-Token-Form
  594                   ;----------------
  595                   ; PE:	HL=Ausdruck
  596                   ;	DE=Basic-Eingabepuffer
  597                   ;
  598                   ; Verwendung Register BC:
  599                   ;	B<>0	kopiere Dezimalzahl
  600                   ;	C(0)=1	kopiere String
  601                   ;
  602 DE14  FE 41       SCANH:	CP	'A'		; Sonderzeichen ?
  603 DE16  38 57       	JR	C,SCAN4
  604 DE18  04          SCANZ:	INC	B		; B=0 ?
  605 DE19  10 54       	DJNZ	SCAN4
  606 DE1B  E5          	PUSH	HL		; Test auf Hexzahl:
  607 DE1C  D5          	PUSH	DE
  608 DE1D  C5          	PUSH	BC
  609 DE1E  EB          	EX	DE,HL
  610 DE1F  CD DEAD     	CALL	CRHEX		; Leseversuch
  611 DE22  79          	LD	A,C		; A=HWT der Hexzahl
  612 DE23  EB          	EX	DE,HL
  613 DE24  C1          	POP	BC
  614 DE25  D1          	POP	DE
  615 DE26  38 4C       	JR	C,SCAND
  616 DE28  E3          	EX	(SP),HL		; Hex => Dez:
  617 DE29  D5          	PUSH	DE
  618 DE2A  ED 5B B796  	LD	DE,(NUMNX)	; ADE=Hexzahl (Mantisse)
  619 DE2E  06 98       	LD	B,98H		; Exponent
  620 DE30  CD 04B6     	CALL	BSGN+MCBEG-UPBEG ; BADE => PRINT-Puffer
  621 DE33  D1          	POP	DE		; Zahl kopieren, dabei Vorzeichen
  622 DE34  CD DE38     	CALL	SCANN		;  in Token umwandeln
  623 DE37  E1          	POP	HL
  624                   ;
  625 DE38  01 0000     SCANN:	LD	BC,0
  626 DE3B  7B          SCAN1:	LD	A,E		; Eingabepufferende erreicht ?
  627 DE3C  FE AB       	CP	LOW(EOINPB-1)	; (03ABH)
  628 DE3E  D0          	RET	NC
  629 DE3F  7E          	LD	A,(HL)
  630 DE40  A7          	AND	A		; Ende-0?
  631 DE41  C8          	RET	Z
  632 DE42  FE 22       	CP	'"'
  633 DE44  28 28       	JR	Z,SCANS		; String?
  634 DE46  CB 41       	BIT	0,C
  635 DE48  20 25       	JR	NZ,SCAN4	; kopiere String
  636 DE4A  FE 3A       	CP	'9'+1
  637 DE4C  30 08       	JR	NC,SCAN2	; keine Dezimalziffer
  638 DE4E  FE 30       	CP	'0'
  639 DE50  30 C6       	JR	NC,SCANZ	; Zahl erkennen
KC-Debugger     							    SLR180 1.31 Page 105
CALC    Z80

  640 DE52  FE 20       	CP	' '
  641 DE54  28 15       	JR	Z,SCAN3
  642 DE56  D5          SCAN2:	PUSH	DE
  643 DE57  C5          	PUSH	BC
  644 DE58  11 C120     	LD	DE,TOKTBB	; BASIC-Wortliste im BASIC-ROM
  645 DE5B  06 80       	LD	B,80H		; Zugehoerigen Token-Nummer
  646 DE5D  CD DE81     	CALL	SCTOK
  647 DE60  ED 5B E00C  	LD	DE,(TOKTBC)	; BASIC-Wortliste im CAOS-ROM
  648 DE64  DC DE81     	CALL	C,SCTOK		; weitersuchen, falls noch nicht gefunden
  649 DE67  C1          	POP	BC
  650 DE68  D1          	POP	DE
  651                   	;JR	C,SCAN4		; <=falls Variablen erlaubt sind
  652 DE69  38 A9       	JR	C,SCANH		; kein Token, Test ob Hexzahl
  653 DE6B  06 00       SCAN3:	LD	B,0
  654 DE6D  0D          	DEC	C
  655 DE6E  0C          SCANS:	INC	C
  656 DE6F  12          SCAN4:	LD	(DE),A		; tokenisiert in BASIC-Eingabepuffer schreiben
  657 DE70  23          	INC	HL
  658 DE71  13          	INC	DE
  659 DE72  18 C7       	JR	SCAN1
  660                   ;
  661 DE74  E1          SCAND:	POP	HL		; keine Hexzahl
  662 DE75  04          	INC	B
  663 DE76  7E          	LD	A,(HL)
  664 DE77  FE 41       	CP	'A'		; Buchstabe ?
  665 DE79  38 F4       	JR	C,SCAN4
  666 DE7B  3E 80       	LD	A,80H		; dann SN-Error
  667 DE7D  12          	LD	(DE),A
  668 DE7E  C9          	RET			; und raus
  669                   ;
  670                   ; Suche Token:
  671                   ;------------
  672                   ; PE:	B =Nr. erstes Token
  673                   ;	DE=Wortliste im ROM
  674                   ;	HL=Akt.Zeichen im Ausdruck
  675                   ; PA:	B =Nr. letztes getestetes Token
  676                   ;	HL=neue Position im Ausdruck-1
  677                   ;	CY=0: Token gefunden
  678                   ;	dann: A=Token, sonst: A=(HL)
  679                   ;
  680 DE7F  04          SCT1:	INC	B		; naechstes Token
  681 DE80  E1          	POP	HL		; Eingabepuffer zurueck
  682 DE81  E5          SCTOK:	PUSH	HL		; suche Wortanfang:
  683 DE82  CD 04AE     SCT2:	CALL	BTKCHR+MCBEG-UPBEG
  684 DE85  30 FB       	JR	NC,SCT2		; Wortanfang ?
  685 DE87  28 21       	JR	Z,SCT5		; Listenende ?
  686 DE89  0F          SCT3:	RRCA
  687 DE8A  4F          	LD	C,A
  688 DE8B  7E          	LD	A,(HL)		; => Grossbuchstaben
  689 DE8C  FE 61       	CP	'a'
  690 DE8E  38 06       	JR	C,SCT4
  691 DE90  FE 7B       	CP	'z'+1
  692 DE92  30 02       	JR	NC,SCT4
  693 DE94  D6 20       	SUB	20H
  694 DE96  B9          SCT4:	CP	C		; Zeichen passt ?
  695 DE97  20 E6       	JR	NZ,SCT1
  696 DE99  23          	INC	HL		; naechstes Zeichen
  697 DE9A  CD 04AE     	CALL	BTKCHR+MCBEG-UPBEG
KC-Debugger     							    SLR180 1.31 Page 106
CALC    Z80

  698 DE9D  30 EA       	JR	NC,SCT3		; naechstes Wort?
  699 DE9F  2B          	DEC	HL		; Token gefunden
  700 DEA0  3E 94       	LD	A,94H		; Anweisung "DEF"?
  701 DEA2  B8          	CP	B
  702 DEA3  37          	SCF
  703 DEA4  28 04       	JR	Z,SCT5		; Token ignorieren
  704 DEA6  F1          	POP	AF
  705 DEA7  78          	LD	A,B
  706 DEA8  A7          	AND	A
  707 DEA9  C9          	RET
  708 DEAA  E1          SCT5:	POP	HL		; zurueck auf Wortanfang
  709 DEAB  7E          	LD	A,(HL)
  710 DEAC  C9          	RET
  711                   ;
  712                   ;--------------------------------------
  713                   ; Hexzahl erfassen (24Bit), muss mit 'H' enden
  714                   ;---------
  715                   ; PE:	DE=Position im Ausdruck
  716                   ; PA:	DE=neue Position im Ausdruck
  717                   ;	CY=0: Zahl gefunden
  718                   ;	dann: NUMNX,NUMVX=Wert der erfassten Zahl
  719                   ;	      C=HWT	
  720                   ;
  721 DEAD  06 02       CRHEX:	LD	B,'9'-'0'-7	; Endekennzeichen zunaechst inaktiv
  722 DEAF  AF          	XOR	A
  723 DEB0  21 B798     	LD	HL,NUMVX+1
  724 DEB3  77          	LD	(HL),A
  725 DEB4  2B          	DEC	HL		; HL=NUMVX
  726 DEB5  77          	LD	(HL),A
  727 DEB6  2B          	DEC	HL		; HL=NUMNX
  728 DEB7  77          	LD	(HL),A
  729 DEB8  1A          CRHX1:	LD	A,(DE)
  730 DEB9  13          	INC	DE		;	       aus: 3A..40 41..60 61..80 81..FF
  731 DEBA  D6 30       	SUB	'0'		;<'0':Fehler  wird: 0A..10 11..30 31..50 51..CF
  732 DEBC  D8          	RET	C
  733 DEBD  FE 0A       	CP	10		; Ziffer: Ok.
  734 DEBF  38 0C       	JR	C,CRHX2
  735 DEC1  D6 11       	SUB	17		; HEX-Korrektur	    F9..FF 00..1F 20..3F 40..BE
  736 DEC3  E6 DF       	AND	11011111b	; klein -> gross    D9..DF 00..1F 00..1F 40..9E
  737 DEC5  C6 0A       	ADD	10		; <'A': Fehler	    E3..E9 0A..29 0A..29 4A..A8
  738 DEC7  B8          	CP	B		; ='H': dann fertig
  739 DEC8  C8          	RET	Z
  740 DEC9  FE 10       	CP	16		; >'F': Fehler
  741 DECB  3F          	CCF
  742 DECC  D8          	RET	C
  743 DECD  ED 6F       CRHX2:	RLD			; Tetrade durchschieben
  744 DECF  23          	INC	HL
  745 DED0  ED 6F       	RLD
  746 DED2  23          	INC	HL
  747 DED3  ED 6F       	RLD
  748 DED5  4E          	LD	C,(HL)		; HWT fuer Parameterrueckgabe nach C
  749 DED6  2B          	DEC	HL
  750 DED7  2B          	DEC	HL
  751 DED8  06 11       	LD	B,'H'-'0'-7	; Endekennzeichen aktiv
  752 DEDA  18 DC       	JR	CRHX1
  753                   ;
  754                   ;--------------------------------------
  755                   ; UP's fuer den Sprung in den BASIC-ROM
KC-Debugger     							    SLR180 1.31 Page 107
CALC    Z80

  756                   ;-------------------------------------
  757 DEDC              UPBEG
  758                   ;
  759                   ; BASIC-Notizspeicher initialisieren
  760                   ;
  761 DEDC  11 0300     BLDIR:	LD	DE,WSP
  762 DEDF  ED B0       	LDIR
  763 DEE1  C9          	RET
  764                   ;
  765                   ; Zeichen aus Wortliste holen und testen
  766                   ; PE:	DE=Zeiger auf Zeichen
  767                   ; PA:	DE=DE+1
  768                   ;	A=Zeichen*2
  769                   ;	CY=1:Wortanfang
  770                   ;
  771 DEE2  CD 04D3     BTKCHR:	CALL	PON+MCBEG-UPBEG	; BASIC-Ebene ein
  772 DEE5  1A          	LD	A,(DE)
  773 DEE6  13          	INC	DE
  774 DEE7  87          	ADD	A
  775 DEE8  18 10               JR      POFF
  776                   ;
  777                   ; Zahl aus den Registern BADE nach Printpuffer
  778                   ; PE:	B=Exponent, ADE=Mantisse
  779                   ; PA:	HL=INTPRB
  780                   ;
  781 DEEA  CD 04D3     BSGN:	CALL	PON+MCBEG-UPBEG	; BASIC-Ebene ein
  782 DEED  CD D6AE     	CALL	SGN1            ; BADE => WRA1
  783 DEF0  11 D834     BNUMKN:	LD	DE,NUMKON       ; WRA1 => Printpuffer
  784                   ;
  785                   ; Aufruf eines UP im BASIC-ROM
  786                   ;  mit Einschalten der Basic-Ebene beim Aufruf
  787                   ;  und Zurueckschalten in die CALC-Ebene beim Ruecksprung
  788                   ; PE: DE=Adresse des UP im BASIC-ROM
  789                   ; VR: IY
  790                   ;
  791 DEF3  FD E1       CBASDE: POP     IY              ; fuer NEW1 (veraendert SP)
  792 DEF5  CD 04D2             CALL    PONDE+MCBEG-UPBEG ; Basic-Ebene ein und UP ausfuehren
  793 DEF8  FD E5               PUSH    IY
  794                   ;
  795 DEFA  F5          POFF:	PUSH	AF		; CALC-Ebene einschalten
  796 DEFB  3A 09EC     	LD	A,(NP88)	; IRM an
  797 DEFE  D3 88       	OUT	(88H),A		; PIO-A
  798                   	RESIXA	5,4		; RES 5,(IX+4),A  Basic => Debugger
    1 DF00  DD CB 04    	 DB	0DDh,0CBh,4
    2 DF03  AF          	 DB	5 SHL 3 OR 10000111b
  799 DF04  18 06       	JR	PO1
  800                   ;
  801 DF06  D5          PONDE:  PUSH    DE              ; Sprung in das durch DE adressierte UP
  802 DF07  F5          PON:	PUSH	AF		; BASIC-Ebene einschalten
  803                   	SETIXA	5,4		; SET 5,(IX+4),A  Debugger => Basic
    1 DF08  DD CB 04    	 DB	0DDh,0CBh,4
    2 DF0B  EF          	 DB	5 SHL 3 OR 11000111b
  804 DF0C  D3 86       PO1:	OUT	(86H),A
  805 DF0E  F1          	POP	AF
  806 DF0F  C9          	RET
  807                   ;
  808                   ; Ausgabeumleitung
  809                   ;----------------
KC-Debugger     							    SLR180 1.31 Page 108
CALC    Z80

  810                   ; Zeigt die Basic-Fehlermeldung an, verhindert aber den Wechsel in die
  811                   ; Basic-Kommandoebene.
  812                   ;
  813 DF10  02          NOUTAB:	DB	UOT1		; UP-Nummer
  814 DF11  FE 0D       NUOUT1:	CP	CR		; CR unterdruecken
  815 DF13  C4 F003     	CALL	NZ,PV1
  816 DF16  00          	DB	CRT	; wird bei CR als NOP ausgefuehrt
  817 DF17  FE 20       	CP	' '
  818 DF19  D0          	RET	NC		; Ende wenn Steuerzeichen
  819 DF1A  CD 04C6     	CALL	POFF+MCBEG-UPBEG
  820 DF1D  CD DE05     	CALL	OURET
  821 DF20  C3 DDF3     	JP	PREND
  822 DF23              UPEND:
  823                   ;
  824                   ;--------------------------------------
  825                   ; UP im RAM fuer die Reaktion auf die Drucktaste (Shift+CLR)
  826                   ;-------------------------------------
  827                   ;
  828                   ; Schaltet das Speichersegment von CALC in den Vordergrund
  829                   ; und springt dann in das Programm hinein
  830                   ;
  831 DF23  F5          DTBEG:	PUSH	AF
  832 DF24  D5          	PUSH	DE
  833 DF25  DB 88       	IN	A,(88H)		; Schaltzustand des Speichers merken
  834 DF27  5F          	LD	E,A
  835 DF28  F6 85       	OR	A,85H		; CALC in den Vordergrund
  836 DF2A  D3 88       	OUT	(88H),A		; PIO-A: USER-ROM an
  837 DF2C  DD 7E 04    	LD	A,(IX+4)
  838 DF2F  57          	LD	D,A		; Port 86H:
  839 DF30  F6 40       	OR	A,40H		; - Debugger
  840 DF32  E6 5F       	AND	A,5FH		; - CAOS-ROM C aus
  841 DF34  DD 77 04    	LD	(IX+4),A
  842 DF37  D3 86       	OUT	(86H),A
  843 DF39  CD DBFF     	CALL	DTSR		; CALC im USER-ROM aufrufen
  844 DF3C  7A          	LD	A,D		; Speicher wieder zurueck
  845 DF3D  DD 77 04    	LD	(IX+4),A	; Port 86H
  846 DF40  D3 86       	OUT	(86H),A
  847 DF42  7B          	LD	A,E
  848 DF43  D3 88       	OUT	(88H),A		; und PIO-A
  849 DF45  D1          	POP	DE
  850 DF46  DC 0000     OHCADR:	CALL	C,0		; Aufruf Original HCADR
  851 DF49  F1          	POP	AF
  852 DF4A  C9          	RET
  853 DF4B              DTEND:
  854                   ;--------------------------------------
   53                   ENDIF
   54                   	INCLUDE	BSAVE.INC	; KCB-Datei abspeichern
    1                   ;******************   PROGRAMM BSAVE	**************************************
    2                   ;									     *
    3                   ; Abspeichern von BASIC-Programmen auf MC-Ebene mit AUTO-Start		     *
    4                   ; Es wird automatisch der Dateityp .KCB vergeben, um die Files von reinen    *
    5                   ; MC-Programmen unterscheiden zu koennen.				     *
    6                   ;									     *
    7                   ; Test, ob BASIC initialisiert wurde.					     *
    8                   ;									     *
    9                   ; BASIC-Programmspeicher kann auf 7FFFH begrenzt werden, um Programme kompa- *
   10                   ; tibel zum KC85/3 zu machen.						     *
   11                   ;									     *
KC-Debugger     							    SLR180 1.31 Page 109
BSAVE   INC

   12                   ; NUR Menuewort %BSAVE							     *
   13                   ;									     *
   14                   ; 19.03.2017: Anpassungen fuer CAOS 4.7	als Include zu USER-ROM		     *
   15                   ;									     *
   16                   ;	(c) ML-Soft 26.01.1993-01.08.1997 (V 1.3) - 28.10.2022 (V 1.4)	     *
   17                   ;*****************************************************************************
   18                   
   19                   ; BASIC-Vereinbarungen
   20                   
   21                   ;WSP	EQU	0300h		; BASIC-Arbeitsspeicher
   22                   ;STDPTR	EQU	0356h		; Ende Stringspeicher (256 Byte vor Speicherende)
   23         035F      PSTBEG	EQU	035Fh		; Programmstart-Adresse
   24                   ;INPBUF	EQU	0362h		; Eingabepuffer+1
   25                   ;MEMSIZ	EQU	03B0h		; Speiucherende (MEMORY SIZE)
   26         03C4      SWAPTR	EQU	03C4h		; Zeiger fuer naechsten String
   27         03D7      SVARPT	EQU	03D7h		; Ende des BASIC-Programms
   28         03D9      DVARPT	EQU	03D9h		; Adresse der Liste der Feldvariablen
   29         03DB      FSLPTR	EQU	03DBh		; Erste freie Adresse hinter den Listen
   30         C64F      NEW2	EQU	0C64Fh		; BASIC-Programm initialisieren
   31         C854      RUNMOD	EQU	0C854h		; RUN ausfuehren
   32                   
   33                   ; CAOS-Vereinbarungen
   34                   
   35         E011      BASMEN	EQU	0E011H		; hier steht beim KC85/4+ das BASIC-Menuewort
   36         E02F      BASON	EQU	0E02FH		; BASIC aktivieren
   37                   ;
   38                   ; BASIC-Autostart:
   39                   ;
   40 DF4B  3A E011     BSTART:	LD	A,(BASMEN)
   41 DF4E  FE 7F       	CP	7FH		; KC85/4+ ?
   42 DF50  CC E02F     	CALL	Z,BASON		; ja, dann Basic einschalten
   43 DF53  DB 88       	IN	A,(PIOAD)
   44 DF55  E6 FB       	AND	0FBH		; fuer CAOS 3.1..4.22 und 5.0 IRM aus
   45 DF57  0F          	RRCA			; Bit 0 (ROM E) nach Bit 7 (BASIC) kopieren:
   46 DF58  17          	RLA			;  fuer CAOS 3.4 BASIC-ROM an
   47 DF59  17          	RLA			;  und fuer M006 CAOS-ROMF(=BASIC-ROM) aus
   48 DF5A  0F          	RRCA			;   je nach Schaltzustand vom ROM E
   49 DF5B  D3 88       	OUT	(PIOAD),A
   50 DF5D  CD C64F     	CALL	NEW2		; Basic-Programm initialisieren
   51 DF60  C3 C854     	JP	RUNMOD		; RUN ausfuehren
   52                   
   53                   ;	IN	A,(88H)
   54                   ;	OR	80H		; BASIC-ROM on
   55                   ;	AND	0FBH		; IRM off
   56                   ;	OUT	(88H),A
   57                   ;	LD	A,(IX+4)
   58                   ;	OR	60H		; BASIC-Ebene
   59                   ;	OUT	(86H),A
   60                   ;	LD	(IX+4),A
   61                   ;	LD	A,89H		; RUN
   62                   ;	LD	(INPBUF),A
   63                   ;	JP	0C41FH		; Eingabe ausfuehren
   64                   ;
   65                   ;-----------------------------------------------------------------------------
   66                   ;
   67 DF63  7F7F        STARTE:	DW	7F7FH
   68 DF65  42 53 41 56 	DB	'BSAVE',1
   69 DF6B  CD DFF3     	CALL	UROM		; Schaltzustand User-ROM merken
KC-Debugger     							    SLR180 1.31 Page 110
BSAVE   INC

   70 DF6E  E5          	PUSH	HL		; Ruecksprungadresse auf Stack legen
   71                   ;
   72                   ; Test, ob BASIC initialisiert wurde:
   73                   ;
   74 DF6F  3A 0300     	LD	A,(WSP)
   75 DF72  FE C3       	CP	0C3H		; JP RSTLOC vorhanden?
   76 DF74  20 14       	JR	NZ,NBAS		; nein, BASIC nicht initialisiert
   77 DF76  3A 0303     	LD	A,(WSP+3)
   78 DF79  FE C3       	CP	0C3H		; JP USRLOC vorhanden?
   79 DF7B  20 0D       	JR	NZ,NBAS		; nein, BASIC nicht initialisiert
   80 DF7D  21 035F     	LD	HL,PSTBEG
   81 DF80  5E          	LD	E,(HL)
   82 DF81  23          	INC	HL
   83 DF82  56          	LD	D,(HL)		; DE = Beginn BASIC-Programm
   84 DF83  21 0400     	LD	HL,0400H
   85 DF86  ED 52       	SBC	HL,DE		; muss 0401h oder hoeher sein!
   86 DF88  38 18       	JR	C,AANZ		; OK.
   87 DF8A  CD F003     NBAS:	CALL	PV1
   88 DF8D  23          	DB	OSTR		; Programm zu gross oder nicht initialisiert
   89 DF8E  42 41 53 49 	DB	'BASIC-Programm?'
   90 DF9D  07 0D 0A 00 	DB	7,CR,LF,0
   91 DFA1  C9          	RET
   92                   	;
   93 DFA2  2A 03D7     AANZ:	LD	HL,(SVARPT)	; Programmende
   94 DFA5  7C          	LD	A,H
   95 DFA6  E6 80       	AND	80H		; darf maximal bis 7FFFh gehen...
   96 DFA8  20 E0       	JR	NZ,NBAS
   97                   ;
   98                   ; Adressen anzeigen:
   99                   ;
  100 DFAA  22 B784     EOK:	LD	(ARG2),HL	; Endadresse
  101 DFAD  CD F003     	CALL	PV1
  102 DFB0  23          	DB	OSTR
  103 DFB1  0B          	DB	0Bh		; Cursor nach oben
  104 DFB2  25 42 53 41 	DB	'%BSAVE 0300 ',0
  105 DFBF  11 0370     	LD	DE,0370h	; Startadresse
  106 DFC2  ED 53 B786  	LD	(ARG3),DE
  107 DFC6  CD F003     	CALL	PV1
  108 DFC9  1B          	DB	HLDE		; End- und Startadresse anzeigen
  109 DFCA  CD D3D5     	CALL	NL		; CR+LF
  110                   ;
  111                   ; Startprogramm in Eingabepuffer kopieren:
  112                   ;
  113 DFCD  21 DF4B     	LD	HL,BSTART
  114                   ;	LD	DE,0370H	; Mitten im BASIC-Eingabepuffer
  115 DFD0  01 0018     	LD	BC,STARTE-BSTART
  116 DFD3  ED B0       	LDIR			; kopieren
  117 DFD5  21 DFEF     	LD	HL,KCB		; Dateityp *.KCB
  118 DFD8  CD CF1E     	CALL	EIZE2		; Dateiname eingeben
  119 DFDB  D8          	RET	C		; BRK
  120 DFDC  CD D3D5     	CALL	NL		; CR+LF
  121                   
  122 DFDF  21 0300     	LD	HL,WSP		; ANF-Adresse
  123 DFE2  22 B782     	LD	(ARG1),HL
  124 DFE5  7C          	LD	A,H		; 3 Argumente
  125 DFE6  32 B781     	LD	(ARGN),A
  126                   
  127                   ; Datei abspeichern:
KC-Debugger     							    SLR180 1.31 Page 111
BSAVE   INC

  128                   
  129 DFE9  EB          	EX	DE,HL		; Dateiname
  130 DFEA  CD F003     	CALL	PV1
  131 DFED  36          	DB	SAVE
  132 DFEE  C9          	RET
  133                   ;
  134 DFEF  4B 43 42 00 KCB:	DB	'KCB',0		; Dateiname *.KCB
  135                   
  136                   ;-----	end of include
   55                   ;
   56                   ; bisherigen Schaltzustand des User-ROM merken, Ruecksprungadresse vorbereiten
   57                   ; verwendet bei Menuewort CRC, JEDIT, BSAVE
   58                   ;
   59 DFF3  3A B780     UROM:	LD	A,(ARGC)	; Schaltzustand User-ROM merken
   60 DFF6  32 AADD     	LD	(OUROM),A
   61 DFF9  21 D9C2     	LD	HL,JEXIT2	; Ruecksprungadresse (USER-ROM aus)
   62 DFFC  C9          	RET
   63                   
   64                   	ABSFILL	0E000h,<USER-ROM-Ende (Debugger)>
    7 DFFD  FF FF FF    	  DS	0E000h - $,0FFh
   65                   
   66 E000              ROMEND:
   67                   	.DEPHASE
   68                   	END
 0 Error(s) Detected.
 8320 Absolute Bytes. 855 Symbols Detected.
03     	CALL	PV1
  131 DFED  36          	DB	SAVE