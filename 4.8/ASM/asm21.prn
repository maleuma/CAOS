ASM V2.1								    SLR180 1.31 Page   1
ASM21   Z80

    2                   PAGE	80
    3                   ;--------------------------------------------------------
    4                   ;	 Assemblerlisting von ASM Version 2.1		I
    5                   ;	 ------------------------------------		I
    6                   ;					(c) ML-Soft	I
    7                   ; ASM 2.1:						I
    8                   ; 02.01.2024: ORG-Fehlerpruefung nicht mehr im Pass 1	I
    9                   ; 26.03.2023: Fehlerpruefung bei MC-Ausgabe eingebaut	I
   10                   ; 18.02.2023: Adress-Ueberwachung bei Option 'O' und	I
   11                   ;	      POKE nur noch in Pass 2			I
   12                   ; 10.02.2023: bei fehlerhafter ORG-Anweisung wird	I
   13                   ;	      Adresse nicht neu gesetzt			I
   14                   ; 30.01.2023: Reihenfolge in HQTAB optimiert		I
   15                   ; 29.01.2023: EDITOR (EDAS 1.7) aus Quelltext entfernt,	I
   16                   ;	      weitere Fehlertests beim Befehl LD	I
   17                   ;	      Kurzformen von ADC und SBC implementiert	I
   18                   ; 23.01.2023: Fehlerauswertung EX verbessert		I
   19                   ;	      Befehle EX, PUSH/POP			I
   20                   ;	      LD-Befehl mit I- oder R-Register		I
   21                   ; 22.01.2023: Fehlerauswertung verbessert, weist jetzt	I
   22                   ;	      folgende Opcodes zurueck, welche bisher	I
   23                   ;	      falsch uebersetzt worden sind:		I
   24                   ;	      R, T, Y, JNZ				I
   25                   ; 18.09.2022: Code-Optimierung, z.B. Fehlerauswertung	I
   26                   ; 17.09.2021: Binaerzahlen erlaubt			I
   27                   ; ASM 2.0:						I
   28                   ; 21.03.2021: Test DEVICE=TAPE mit A=0FDH statt A=8	I
   29                   ; 07.03.2020: CLS beider Bilder bei Kaltstart ASM	I
   30                   ; 16.02.2019: F-Tasten fuer ext. Editor angepasst	I
   31                   ; 10.02.2019: QUIT mit Epilogbyte 1, damit ein normales	I
   32                   ;	      CAOS-Menu angezeigt wird			I
   33                   ; 28.07.2018: Assemblierpuffer in IRM (A880h) verlegt	I
   34                   ; 31.03.2018: Speichernutzung bis DFFFh eingebaut	I
   35                   ; 18.02.2018: ERROR bei ungueltigem DEVICE		I
   36                   ; 11.02.2018: QUIT schaltet den USER-ROM wieder ab	I
   37                   ; 29.01.2018: EDIT springt nun in MENU des ext. Editors	I
   38                   ; 19.01.2018: FIND, REPL und PRINT aus ext. Editor	I
   39                   ; 10.01.2018: Aufruf externer Editor (optional 1.7/2.0)	I
   40                   ;-------------------------------------------------------I
   41                   ; EDAS 1.7:						I
   42                   ; 03.02.2019: Anpassung wegen verlagertem Namenspuffer	I
   43                   ; 28.07.2018: Assemblierpuffer in IRM (A880h) verlegt	I
   44                   ; 05.01.2018: Code-Optimierung bei MBO/CSRO		I
   45                   ; 12.07.2017: mehrere Doppelpunkte bei Marken moeglich	I
   46                   ; 14.05.2017: Code-Optimierung bei FIND			I
   47                   ; 04.05.2017: KBD veraendert Register BC nicht		I
   48                   ; 12.04.2017: LOAD erkennt auch CP/M-Ende-Zeichen 1Ah	I
   49                   ; 10.04.2017: SAVE/LOAD angepasst fuer CAOS 4.7		I
   50                   ; 26.03.2017: CAOS-Programmteile hierher verlagert	I
   51                   ; 25.03.2017: Codeoptimierung				I
   52                   ; 11.03.2017: Code-Optimierung bei FREE/PERI		I
   53                   ; 05.05.2016: Anpassungen zu CAOS 4.7			I
   54                   ; 07.03.2014: DIR auf neues CAOS-UP umgestellt		I
   55                   ; 06.03.2014: Epilogbyte 1Fh zugelassen			I
   56                   ; 02.03.2014: IX+3 fuer erwartete Blocknummer		I
   57                   ; 16.02.2014: Marken uebernommen aus ASM1+2.ASM		I
   58                   ; 09.02.2014:						I
   59                   ;- Optionen DEP, IRM, CAOSNEU nicht mehr deaktivierbar	I
   60                   ;- Umstellung auf DEVICE-Umschaltung von CAOS 4.6	I
   61                   ;	1. Anzeige aktuelles DEVICE:		OK	I
   62                   ;	2. LOAD/SAVE ohne Unterscheidung	?	I
   63                   ;-------------------------------------------------------I
   64                   ; EDAS 1.6:						I
   65                   ; 17.11.2013: 2 Byte im Code optimiert (SBC HL,HL)	I
   66                   ; 26.07.2013: Deutsche Umlaute in Ersatzzeichen		I
   67                   ;	      konvertiert, Kommentare mit Space		I
   68                   ; 25.01.2009: Korrektur SAVE (alle 1 Block zu lang!)	I
   69                   ;	      nach Dateiende 00h im letzten Block	I
   70                   ; 27.04.1997:	Error-4 bei DB/DW..	,		I
   71                   ;							I
   72                   ;Fehlerbeseitigung:					I
   73                   ;- Arbeit mit Bild 0/1 des KC85/4 moeglich		I
   74                   ;- korrektes EDIT nach REPL und PDEL (entgegen EDAS/V4)	I
   75                   ;- BRK-Abfrage auch in PASS 1 des Assemblerlaufes	I
   76                   ;- Bei relativen Spruengen und nichtdefinierter Marke	I
   77                   ;  wird jetzt Fehler '3' statt '6' ausgegeben.		I
   78                   ;- CALL nn, JP nn und JR nn jetzt fehlerfrei		I
   79                   ;- Marken der Form "M..." bringen keine Fehler mehr	I
ASM V2.1								    SLR180 1.31 Page   2
ASM21   Z80

   80                   ;							I
   81                   ;Verbesserungen:					I
   82                   ;- Freie Wahl des Arbeitsspeichers (min. 200H bis max.	I
   83                   ;  0C000H, je nach RAM-Bestueckung) und Test auf	I
   84                   ;  korrekte Eingabewerte				I
   85                   ;- Benutzung des RAM unter IRM (wenn IRM=1!)		I
   86                   ;- automatische Disk-Erkennung und -Verwaltung		I
   87                   ;- Menueworte: KEY, LABEL, LBLIST, PSAVE, PPRINT, PDEL,	I
   88                   ;  PCOPY, REPL, (DIR, ERA, REN, DISK, TAPE, und		I
   89                   ;  DRIVE - zusaetzlich, wenn Floppy vorhanden)		I
   90                   ;- Bei Zeileneingabe jetzt auch INS moeglich		I
   91                   ;- Tape/Disk ohne Veraendern der SUTAB			I
   92                   ;- Tastatur D005 einbezogen (*KEY D5)			I
   93                   ;- BRK-Abfrage nach INLIN-Funktion vorbereitet		I
   94                   ;- Backup-Abfrage beim Abspeichern von Quelltexten auf	I
   95                   ;  Diskette						I
   96                   ;- CLEAR getrennt fuer Text und Labels (CLEAR Text	I
   97                   ;  loescht auch den gemerkten Dateinamen)		I
   98                   ;- schnelle Bildschirmroutine im EDIT-Modus		I
   99                   ;- *PRINT	Listing auf Bildschirm ausgeben		I
  100                   ;  *PRINT arg	Listing auf Drucker			I
  101                   ;		arg=Zeilen/Seite (dez.), 0=Endlosdruck	I
  102                   ;- Dateiname wird gemerkt, und als Typ wird 'ASM' bzw.	I
  103                   ;  'KCC' vorgegeben und kann ueberschrieben werden	I
  104                   ;- Beim Einlesen wird automatisch zwischen Dateien mit	I
  105                   ;  und ohne CAOS-Vorblock unterschieden			I
  106                   ;- bei LOAD von Kassette koennen Joker eingegeben	I
  107                   ;  werden: ? fuer ein beliebiges Zeichen		I
  108                   ;	   * fuer den Rest des Namens			I
  109                   ;- Bei EDIT-Funktionen CUU/CUD/Sh-CUU/Sh-CUD bleibt die	I
  110                   ;  Cursorposition erhalten bzw. geht hinter das letzte	I
  111                   ;  ASCII-Zeichen der Zeile.				I
  112                   ;- *HELP	listet Fehlermeldungen in Klartext auf	I
  113                   ;							I
  114                   ;- Assemblerlauf von Text 1 aus				I
  115                   ;- Grenze T2E/MTOP flexibel (je nach Groesse der Marken-I
  116                   ;  tabelle)						I
  117                   ;- Erzeugung selbststartender Programme ueber vordefi-	I
  118                   ;  nierte Marke 'START'					I
  119                   ;- Fehler '6' auch bei IM >3 und bei Bit >7!		I
  120                   ;- Fehler 'A' auch bei falschen Sprungbedingungen in	I
  121                   ;  relativen Spruengen und bei DJNZ			I
  122                   ;- Fehler 'C' bei Division durch Null			I
  123                   ;- Fehler 'D', an den Stellen, wo eine mehrfach defi-	I
  124                   ;  nierte Marke definiert wurde.			I
  125                   ;- Fehler 'E': Indexregister falsch verwendet		I
  126                   ;- Option '1' wenn nur Markentabelle erzeugt werde soll	I
  127                   ;- wenn Fehler bei Pass 2 auftreten, wird 'S'-Option	I
  128                   ;  des Assemblers unterdrueckt.				I
  129                   ;- Folgende Rechenoperationen zur Verknuepfung von Ope-	I
  130                   ;  randen sind zulaessig, Die Reihenfolge der Abarbei-	I
  131                   ;  tung ist dabei von links nach rechts ohne Berueck-	I
  132                   ;  sichtigung mathematischer Regeln:			I
  133                   ;  '+' Addition, '-' Subtraktion,'*' Multiplikation,	I
  134                   ;  '/' ganzzahlige Division, '%' Rest bei ganzzahliger	I
  135                   ;  Division)						I
  136                   ;- in DB koennen Bytes und Zeichenketten gemischt auf-	I
  137                   ;  treten (DB kann DEFM ersetzen)			I
  138                   ;- DEFB erzeugt immer nur ein Byte			I
  139                   ;- Bei DB und DEFB koennen mehrere mit Komma getrennte	I
  140                   ;  Argumente hintereinander aufgezaehlt werden.		I
  141                   ;- DW statt DEFW verwendbar				I
  142                   ;- neu:	DS anz		Anzahl Nullbytes		I
  143                   ;	DS anz,byte 	Anzahl Bytes			I
  144                   ;	SLS t		fehlender Rotationsbefehl	I
  145                   ;	INF		Eingabe in Flags		I
  146                   ;	OTCL		Ausgabe 0 an Adresse (BC)	I
  147                   ;	END		bewirkt Beenden der UebersetzungI
  148                   ;- 8-Bit-Indexregister (HX, HY, LX, LY) verwendbar	I
  149                   ;- erweiterte Index-Bit- und -Verschiebebefehle mit	I
  150                   ;  Transport in ein weiteres Register ueber die Befehle:I
  151                   ;	RLC (IX+off),B	...	SET n,(IY+off),A	I
  152                   ;- ASM-Option "2" loescht keine Markentabelle mehr	I
  153                   ;- bei DEP-Version ab 2.0:				I
  154                   ;	- Fehler als Klartext anzeigen			I
  155                   ;	- LW- und User-Steuerung (Menuewort *DRIVE)	I
  156                   ;--------------------------------------------------------
  157                   	.Z80
ASM V2.1								    SLR180 1.31 Page   3
ASM21   Z80

  158                   
  159                   	INCLUDE	CAOS48.INC	; CAOS-Vereinbarungen
    1                   ;-----------------------------------------------;
    2                   ;	CAOS-Vereinbarungen (bis CAOS 4.8)	;
    3                   ;	---------------------------------	;
    4                   ;						;
    5                   ; als INCLUDE fuer ASM-Quelltexte		;
    6                   ;						;
    7                   ; CAOS48.INC	ML-Soft 08.01.1994-30.05.2021	;
    8                   ;-----------------------------------------------;
    9                   
   10                   ; Portadressen im Grundgeraet:
   11                   
   12         0084      PORT1	EQU	84H	; Ausgabe-Port D08A	Merkzelle ist (IX+1)
   13                   			;	Bit 0 - Anzeige Bild 0 oder 1
   14                   			;	Bit 1 - Zugriff auf 0=Pixel- oder 1=Farbebene
   15                   			;	Bit 2 - Zugriff auf Bild 0 oder 1
   16                   			;	Bit 3 - 0=hohe Farbaufloesung oder 1=niedrige
   17                   			;	Bit 4-7 Auswahl der RAM8-Ebene (256K)
   18         0086      PORT2	EQU	86H	; Ausgabe-Port D09A	Merkzelle ist (IX+4)
   19                   			;	Bit 0 - RAM4 ein/aus
   20                   			;	Bit 1 - RAM4 Schreibschutz (1=aus)
   21                   			;	Bit 2-4 Bankauswahl fuer 2MB RAM On Board
   22                   			;	Bit 5-6 Auswahl der USER-ROM-Ebene
   23                   			;	Bit 7 - CAOS-ROM C ein/aus
   24         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
   25                   			;	Bit 0 - CAOS ROM-E ein/aus
   26                   			;	Bit 1 - RAM0 ein/aus
   27                   			;	Bit 2 - IRM ein/aus
   28                   			;	Bit 3 - Schreibschutz RAM0
   29                   			;	Bit 4 - K_OUT
   30                   			;	Bit 5 - System-LED
   31                   			;	Bit 6 - Motorschaltspannung
   32                   			;	Bit 7 - USER-ROM ein/aus
   33         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
   34                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
   35                   			;	Bit 1 \
   36                   			;	Bit 2 - Lautstaerke Tonausgabe
   37                   			;	Bit 3 - 4 Bit (Low-aktiv)
   38                   			;	Bit 4 /
   39                   			;	Bit 5 - RAM8 ein/aus
   40                   			;	Bit 6 - Schreibschutz RAM8
   41                   			;	Bit 7 - Blinken ein/aus
   42         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
   43         008B      PIOBS	EQU	8BH	; System-PIO Steuerbyte Port B
   44         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
   45         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Kassettenausgabe)
   46         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
   47         008F      CTC3	EQU	8FH	; CTC Kanal 3 (Tastatur)
   48                   
   49                   ; Portadressen des Koppel-RAM (D004):
   50                   
   51         00F1      ERRTX	EQU	000F1H	; Fehlertext			(ab DEP 2.0)
   52         80F1      STBYT2	EQU	080F1H	; 2. Steuerbyte:		(ab DEP 2.0)
   53                   			;	Bit 0 - Anforderung
   54                   			;	Bit 1 - Laufwerkswechsel
   55                   			;	Bit 2 - Userwechsel
   56                   			;	Bit 3..6 reserviert
   57                   			;	Bit 7 - Fehlerrueckmeldung
   58         81F1      LWANF	EQU	081F1H	; Laufwerk ('A', 'B', ... 'P')
   59         82F1      UANF	EQU	082F1H	; User-Bereich (00H ... 1FH)	(ab DEP 3.5 bis 31)
   60         83F1      DEPVER	EQU	083F1H	; DEP-Version BCD
   61         84F1      DATE	EQU	084F1H	; Datum BCD			(ab DEP 3.0)
   62                   			;	Jahr (00..99)
   63                   			;	Monat (1..12)
   64                   			;	Tag (1..31)
   65         87F1      TIME	EQU	087F1H	; Uhrzeit BCD			(ab DEP 3.0)
   66                   			;	Stunde (0..23)
   67                   			;	Minute (0..59)
   68                   			;	Sekunde (0..59)
   69                   
   70         80F2      FDATA	EQU	080F2H	; Daten- bzw. Sektorpuffer 128 Byte lang
   71         80F3      STBYT1	EQU	080F3H	; 1. Steuerbyte:
   72                   			;	Bit 0 - Anforderung
   73                   			;	Bit 1 - 1=schreiben/0=lesen
   74                   			;	Bit 3 - oeffnen
   75                   			;	Bit 6 - schliessen
   76                   			;	Bit 7 - Fehlerrueckmeldung
ASM V2.1								    SLR180 1.31 Page   4
CAOS48  INC

   77                   			;	Bit	5 4 2	Funktionsauswahl:
   78                   			;		0 0 0	Sektor lesen/schreiben
   79                   			;		0 0 1	DIR-Anforderung
   80                   			;		0 1 0	ERA
   81                   			;		0 1 1	STAT
   82                   			;		1 0 0	REN
   83                   			;		1 0 1	SETRO
   84                   			;		1 1 0	SETWR
   85                   			;		1 1 1	BASIC-Byte lesen/schreiben
   86         81F3      FCODE	EQU	081F3H	; Fehlercode
   87         82F3      DIRBUF	EQU	082F3H	; Puffer fuer Dateiname oder Directory
   88         8EF3      BASBYT	EQU	08EF3H	; Datenbyte fuer BASIC-Byte-Schnittstelle
   89         B3F3      UROK	EQU	0B3F3H	; Betriebsart	0 = Anfangswert
   90                   			;		1 = CP/M-System lauft
   91                   			;		2 = Not ready
   92                   			;		3 = Can't read
   93                   			;		4 = No system
   94                   			;		5 = CAOS-Betriebsart / DEP laeuft
   95                   
   96                   ; RAM0-Arbeitszellen:
   97                   
   98         01F0      SIX	EQU	1F0H	; CAOS-Belegung IX-Register
   99                   
  100                   ; Belegung der IX - Zellen:
  101                   
  102                   ; IX+0	Zeitkonstante fuer Kassettenroutinen
  103                   ; IX+1	Merkzelle fuer Ausgabeport 84H
  104                   ; IX+2	gelesene Blocknummer (Kassette)
  105                   ; IX+3	erwartete Blocknummer (Kassette)
  106                   ; IX+4	Merkzelle fuer Ausgabeport 86H
  107                   ; IX+5	Ein- Ausgabepufferadresse (low)
  108                   ; IX+6	Ein- Ausgabepufferadresse (high)
  109                   ; IX+7	Kennbyte fuer LOAD/VERIFY
  110                   ;	 BIT 0: =1 ->LOAD  =0 ->VERIFY
  111                   ;	 BIT 1: =1 kein Selbstart bei LOAD (in BASIC Kennung fuer 1. Block)
  112                   ;	 BIT 2-4 : Anzahl Argumente (bei SAVE)/ARGN>3 (Startoffset)
  113                   ;	 BIT 5-7 : BASIC: fuer CLOAD/CSAVE 
  114                   ; IX+8	Kennbyte Tastatur
  115                   ;	 BIT 0: gueltiges Byte (ASCII) in IX+13
  116                   ;	 BIT 1: Tonausgabe laeuft
  117                   ;	 BIT 2-4: aktuelles Speichergeraet
  118                   ;		  0=Kassette, 1=Diskette, 2=USB (M052), 3=Netzwerk (M052)
  119                   ;		  4=Headersave, 5..7 frei
  120                   ;	 BIT 5: Tastenclick ein/aus
  121                   ;	 BIT 6: Code kommt von F-Taste
  122                   ;	 BIT 7: 0=Shiftlock
  123                   ; IX+9	Prologbyte (normal 7FH)
  124                   ; IX+10	Autorepeatzaehler (Tastatur)
  125                   ; IX+11	Merkzelle fuer Akku (bei BWS on/off mit Stackverlagerung)
  126                   ;	und Pruefsummenberechnung fuer MB-Eingabe
  127                   ; IX+12	7-Bit-Scancode von Tastatur
  128                   ; IX+13	ASCII-Code von Tastatur
  129                   ; IX+14	Tastaturcodetabelle low
  130                   ; IX+15	Tastaturcodetabelle high
  131                   
  132                   ; IRM-Arbeitszellen:
  133                   
  134         A800      V24PL	EQU	0A800H	; Steckplatz V.24-Modul				  1 Byte
  135                   ;INTV1		0A801H	; Initialisierungsdaten V.24-Druckausgabe	  8 Byte
  136                   ;INTV2		0A809H	; Initialisierungsdaten V.24-duplex		  9 Byte
  137                   	; bis	0A811H
  138                   ;		0A820H	; urspruenglich geplant fuer Arbeitszellen Maustreiber
  139                   	; bis	0A87FH	; frei					       (96 Byte)
  140                   
  141         A880      INITU	EQU	0A880h	; Kommandoablage von INITIAL.UUU als Tastencode
  142                   	; bis	0A8FFh	; und Assemblierpuffer von EDAS/ASM
  143                   
  144         A900      DEVTAB	EQU	0A900H	; Tabelle der 8 Geraetetreiber: 8*32=256 Byte gross
  145         AA00      SULEN	EQU	0AA00H	; letzte benutzte UP-Nr. in SUTAB
  146         AA01      SUT_IRM	EQU	0AA01H	; SUTAB per Default im IRM
  147                   	; bis	0AA94h	fuer UP 00 bis 49h				148 Byte
  148                   ;		0AA95H	reserviert fuer kuenftige CAOS-Erweiterungen
  149                   	; bis	0AABEH	z.B. CAOS-UP's 4Ah bis 5Eh			 42 Byte
  150                   ; 1 Byte frei
  151         AAC0      JOYIRM	EQU	0AAC0H	; Joystick-Tabelle (noch nicht endgueltig)
  152                   	; bis	0AACBh							 12 Byte
  153                   
  154         AACC      JWORK	EQU	0AACCH	; Arbeitszellen vom Joystick-Editor
ASM V2.1								    SLR180 1.31 Page   5
CAOS48  INC

  155                   	; bis	0AADCH							 17 Byte
  156                   
  157         AADD      WIN2	EQU	0AADDH	; Schattenspeicher fuer WINNR bis WEND (Bildwechsel)
  158                   	; bis	0AAE7	; 30.09.2020 neu definiert			 11 Byte
  159                   
  160         AAE8      WTEMO	EQU	0AAE8H	; TEMO-Arbeitszellen zur Ablage von 2 Fenster-Daten
  161                   	; bis	0AAFFH							 24 Byte
  162                   
  163                   ;		0AB00H	; reserviert fuer anwenderspez. Systemerweiterungen
  164                   	; bis	0ACFFH	; z.B. Treiber UOUT1/2 oder UIN1/2		512 Byte
  165                   
  166         AD00      VRAM1	EQU	0AD00H	; ASCII-RAM Bild 1
  167                   	; bis	0B1FFH
  168         B200      VRAM0	EQU	0B200H	; ASCII-RAM Bild 0
  169                   	; bis	0B6FFh
  170         B700      CASS	EQU	0B700H	; 128 Byte Kassettenpuffer (bis	0B77FH)
  171         B780      ARGC	EQU	0B780H	; UP-Nummer fuer PV2 und PV6
  172         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  173         B782      ARG1	EQU	0B782H	; Argument 1
  174         B784      ARG2	EQU	0B784H	;    "	   2
  175         B786      ARG3	EQU	0B786H	;    "	   3
  176         B788      ARG4	EQU	0B788H	;    "	   4
  177         B78A      ARG5	EQU	0B78AH	;    "	   5
  178         B78C      ARG6	EQU	0B78CH	;    "	   6
  179         B78E      ARG7	EQU	0B78EH	;    "	   7
  180         B790      ARG8	EQU	0B790H	;    "	   8
  181         B792      ARG9	EQU	0B792H	;    "	   9
  182         B794      ARG10	EQU	0B794H	;    "	  10
  183         B796      NUMNX	EQU	0B796H	; Anzahl Zeichen einer Hex-Zahl
  184         B797      NUMVX	EQU	0B797H	; Wert HEX-Zahl
  185         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  186         B79B      WINNR	EQU	0B79BH	; Nr. des aktuellen Bildschirmfensters
  187         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  188         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
  189         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  190         B7A2      STBT	EQU	0B7A2H	; Bildschirm-Steuerbyte
  191                   		; Bit 0 = 1 Schreiben Pixel-IRM AUS
  192                   		; Bit 1 = 1 Schreiben Color-IRM AUS
  193                   		; Bit 2 = 1 Inversdarstellung EIN (ab CAOS 3.4)
  194                   		; Bit 3 = 1 Steuercode als Zeichen darstellen
  195                   		; Bit 4 = 1 ESC aktiv (ab CAOS 4.1)
  196                   		; Bit 5 = 1 IBM-Zeichensatz EIN (ab CAOS 4.3)
  197                   		; Bit 6 = 1 HRG-Modus EIN (ab CAOS 4.3)
  198                   		; Bit 7 = 1 2-Monitor-Modus aktiv (ab CAOS 4.8)
  199         B7A3      COLOR	EQU	0B7A3H	; Farbe
  200         B7A4      WEND	EQU	0B7A4H	; Reaktionsprogramm auf Bildschirmende
  201         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  202         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  203         B7AA      CCTL2	EQU	0B7AAH	;	"	 2 A0H...DFH
  204         B7AC      CCTL3	EQU	0B7ACH	;	"	 3 80H...9FH und E0H...FFH
  205         B7AE      SYSP	EQU	0B7AEH	; System Stackpointer
  206         B7B0      SUTAB	EQU	0B7B0H	; Adresse der Unterprogrammtabelle
  207         B7B2      CTAB	EQU	0B7B2H	; CRT-Steuerprogramm-Tabelle
  208         B7B4      NCAOS	EQU	0B7B4H	; Sprung in neues System ueber IRM
  209         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  210         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  211         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Drucker)
  212         B7C0      UIN1	EQU	0B7C0H	; Sprung zu USER-Eingabekanal 2
  213         B7C3      UOUT2	EQU	0B7C3H	; Sprung zu USER-Ausgabekanal 3 V.24-duplex
  214         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  215         B7C9      IOERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  216         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  217         B7CD      ZOTAB	EQU	0B7CDH	; Zwischenspeicher fuer OUTAB
  218         B7CF      ZWEND	EQU	0B7CFH	; Zwischenspeicher fuer WEND
  219         B7D1      FTAST	EQU	0B7D1H	; F-Tastenpointer
  220         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  221         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  222         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  223                   		; Bit 0=1	XOR-Funktion
  224                   		; Bit 1=1	Punkt loeschen
  225                   		; Bit 2=1	Farbebene nicht veraendern
  226                   		; Bit 3-7	Vordergrundfarbe + Blinken
  227         B7D7      MIXIT	EQU	0B7D7H	; IX-Merker (H-Teil von IX und I-Tabelle)
  228         B7D8      VORTN	EQU	0B7D8H	; Vortonlaenge fuer byteweise Kassettenausgabe
  229         B7DA      DTPTR	EQU	0B7DAH	; CASS-Pointer (Zeiger in Kassettenpuffer)
  230         B7DB      CTCMD	EQU	0B7DBH	; CTC2-Modus
  231         B7DC      BLINK	EQU	0B7DCH	; Blinkfrequenz
  232         B7DD      L3TAB	EQU	0B7DDH	; Adresse der ESC-Steuerfunktionstabelle
ASM V2.1								    SLR180 1.31 Page   6
CAOS48  INC

  233         B7DF      L3SIZ	EQU	0B7DFH	; Anzahl der ESC-Steuerfunktionenn
  234         B7E0      COUNT	EQU	0B7E0H	; Zeiteinheiten fuer 1. Autorepeat (Tastatur)
  235         B7E1      HCPZ	EQU	0B7E1H	; Steuerbyte Druckerausgabe
  236                   		; Bit 0=0	Protokollfunktion
  237                   		; Bit 0=1	Hardcopyfunktion
  238                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  239                   		; Bit 2=0/1	SIO-Kanal A oder B
  240                   		; Bit 3		-
  241                   		; Bit 4..7	Druckertyp (0 bis F)
  242                   		; Bit 7=0	Matrixdrucker
  243                   		; Bit 7=1	Schreibmaschine
  244         B7E2      INTV1	EQU	0B7E2H	; Adresse V.24-Init-Tabelle fuer Druckerausgabe
  245         B7E4      INTV1L	EQU	0B7E4H	; Laenge V.24-Initialisierungtabelle
  246         B7E5      INTV2	EQU	0B7E5H	; Adresse V.24-Init-Tabelle fuer Duplexroutine
  247         B7E7      INTV2L	EQU	0B7E7H	; Laenge V.24-Initialisierungstabelle
  248         B7E8      HCPZ2	EQU	0B7E8H	; Steuerbyte Duplexroutine
  249                   		; Bit 0		-
  250                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  251                   		; Bit 2=0/1	SIO-Kanal A oder B
  252                   		; Bit 3		WR5 Bit 3: Senden ein/aus
  253                   		; Bit 4		-
  254                   		; Bit 5,6	WR5 Bit 5,6: 5-8 Bit pro Zeichen (Senden)
  255                   		; Bit 7		WR3 Bit 7: 7/8 Bit pro Zeichen (Empfang)
  256         B7E9      OFILT	EQU	0B7E9H	; Sprung zu Druckroutine (ungefiltert)
  257         B7EC      PROMPT	EQU	0B7ECH	; Systemprompt
  258         B7ED      LINTYP	EQU	0B7EDH	; Linientyp
  259         B7EE      CUMUST	EQU	0B7EEH	; Zeiger zu Cursormuster
  260         B7F0      JOYTAB	EQU	0B7F0H	; Zeiger zu Joystick-Tastencodes
  261         B800      MODST	EQU	0B800H	; Modulsteuerbytespeicher (bis B8FFH)
  262         B900      FTASTE	EQU	0B900H	; Funktionstastenspeicher (bis B99BH)
  263         B99C      WNDFN	EQU	0B99CH	; Fenstersvektorpeicher (bis B9FFH)
  264                   
  265                   ; Sprungadressen:
  266                   
  267         E000      RESET	EQU	0E000H	; Einsprungadresse bei "RESET"
  268         EDFF      CAOSNR	EQU	0EDFFH	; Versionsnummer von CAOS
  269         F000      PWRON	EQU	0F000H	; Einsprungadresse bei "POWER ON"
  270         F003      PV1	EQU	0F003H	; Programmverteiler 1
  271         F006      PV2	EQU	0F006H	; Programmverteiler 2
  272         F008      ZEI2	EQU	0F008H	; Zeiger auf 2 = UOUT1 ab CAOS 4.7
  273         F009      PV3	EQU	0F009H	; Programmverteiler 3
  274         F00B      ZEI3	EQU	0F00BH	; Zeiger auf 3 = UOUT2 ab CAOS 4.7
  275         F00C      PV4	EQU	0F00CH	; Programmverteiler 4
  276         F00F      UREL	EQU	0F00FH	; Relativer UP-Aufruf
  277         F012      JMPADR	EQU	0F012H	; Einsprungadresse "JUMP"
  278         F015      PV5	EQU	0F015H	; Programmverteiler 5
  279         F018      IRMON	EQU	0F018H	; IRM einschalten
  280         F01B      IRMOF	EQU	0F01BH	; IRM abschalten
  281         F01E      PV6	EQU	0F01EH	; Programmverteiler 6
  282         F021      PV7	EQU	0F021H	; Programmverteiler fuer Treiberaufrufe
  283                   			; (bis CAOS 4.5 Floppy-Treiber wie SERVICE.KCC)
  284         FDF8      BITTAB	EQU	0FDF8H	; Bittabelle
  285                   
  286                   ; Bildschirm-Steuerzeichen:
  287                   
  288         0009      TAB	EQU	09H	; Tabulator
  289         000A      LF	EQU	0AH	; Zeilenvorschub
  290         000C      CLS	EQU	0CH	; Bildschirm loeschen
  291         000D      CR	EQU	0DH	; zum Zeilenanfang
  292         001B      ESC	EQU	1BH	; Steuerzeichen
  293                   
  294                   ; CAOS-Unterprogramme:
  295                   
  296         0000      CRT	EQU	00H	; Zeichenausgabe auf Bildschirm
  297         0001      MBO	EQU	01H	; Ausgabe Datenblock auf Kassette
  298         0002      UOT1	EQU	02H	; Ausgabe auf Anwenderkanal 1
  299         0003      UOT2	EQU	03H	; Ausgabe auf Anwenderkanal 2
  300         0004      KBD	EQU	04H	; Tastatureingebe mit Cursoreinblendung
  301         0005      MBI	EQU	05H	; Datenblock von Kassette einlesen
  302         0006      USIN1	EQU	06H	; Eingabe von Anwenderkanal 1
  303         0007      USIN2	EQU	07H	; Eingabe von Anwenderkanal 2
  304         0008      ISRO	EQU	08H	; Ausgabe 1. Block auf Kassette
  305         0009      CSRO	EQU	09H	; Ausgabe letzten Block auf Kassette
  306         000A      ISRI	EQU	0AH	; Einlesen 1. Block von Kassette
  307         000B      CSRI	EQU	0BH	; Abschluss Magnetbandeingabe
  308         000C      KBDS	EQU	0CH	; Tastenstatusabfrage ohne Quittung
  309         000D      BYE	EQU	0DH	; Sprung zu RESET (Warmstart)
  310         000E      KBDZ	EQU	0EH	; Tastenstatusabfrage mit Quittung
ASM V2.1								    SLR180 1.31 Page   7
CAOS48  INC

  311         000F      COLORUP	EQU	0FH	; Farbe einstellen
  312         0010      LOAD	EQU	10H	; Einlesen MC-Programm von Kassette
  313         0011      VERIF	EQU	11H	; Ueberpruefung von Kassettenaufzeichnungen
  314         0012      LOOP	EQU	12H	; Ruecksprung zu CAOS-Menueschleife
  315         0013      NORM	EQU	13H	; Rueckschalten Ein-/Ausgabe auf CRT und KBD
  316         0014      WAIT	EQU	14H	; Warteschleife
  317         0015      LARG	EQU	15H	; Register mit Argumenten laden
  318         0016      INTB	EQU	16H	; Eingabe vom aktuellen Eingabekanal
  319         0017      INLIN	EQU	17H	; Eingabe einer Zeile
  320         0018      RHEX	EQU	18H	; Erfassung HEX-Zahl aus Zeichenkette
  321         0019      ERRM	EQU	19H	; Fehlermeldung "ERROR"
  322         001A      HLHX	EQU	1AH	; Ausgabe des Wertes von HL als HEX-Zahl
  323         001B      HLDE	EQU	1BH	; Ausgabe der Werte von HL und DE als HEX-Zahlen
  324         001C      AHEX	EQU	1CH	; Ausgabe des Wertes von A als HEX-Zahl
  325         001D      ZSUCH	EQU	1DH	; Suche nach Zeichenkette (Menuewort)
  326         001E      SOUT	EQU	1EH	; Zeiger auf Ausgabetabelle setzen
  327         001F      SIN	EQU	1FH	; Zeiger auf Eingabetabelle setzen
  328         0020      NOUT	EQU	20H	; Zeiger auf Normalausgabe (CRT) setzen
  329         0021      NIN	EQU	21H	; Zeiger auf Normaleingabe (KBD) setzen
  330         0022      GARG	EQU	22H	; Erfassen von max. 10 HEX-Zahlen
  331         0023      OSTR	EQU	23H	; Ausgabe folgender Zeichenkette
  332         0024      OCHR	EQU	24H	; Zeichenausgabe ueber Ausgabetabelle
  333         0025      CUCP	EQU	25H	; Cursor komplementieren
  334         0026      MODU	EQU	26H	; Modulsteuerung
  335         0027      JUMP	EQU	27H	; Neues Betriebssystem anspringen
  336         0028      LDMA	EQU	28H	; Speicher (IRM) schreiben
  337         0029      LDAM	EQU	29H	; Speicher (IRM) lesen
  338         002A      BRKT	EQU	2AH	; Test BRK-Taste
  339         002B      SPACE	EQU	2BH	; Ausgabe Leerzeichen
  340         002C      CRLF	EQU	2CH	; Ausgabe CR und LF
  341         002D      HOME	EQU	2DH	; Ausgabe HOME
  342         002E      MODI	EQU	2EH	; Systemkommando "MODIFY"
  343         002F      PUDE	EQU	2FH	; Punkt loeschen
  344         0030      PUSE	EQU	30H	; Punkt setzen
  345         0031      SIXD	EQU	31H	; Verlagerung IX-Arbeitsbereich von CAOS
  346         0032      DABR	EQU	32H	; Berechnung VRAM-Adresse
  347         0033      TCIF	EQU	33H	; Test, ob Cursorposition im Fenster
  348         0034      PADR	EQU	34H	; Berechnen Pixel- und Farbadresse
  349         0035      TON	EQU	35H	; Tonausgabe
  350         0036      SAVE	EQU	36H	; Ausgabe MC-Programm auf Kassette
  351         0037      MBIN	EQU	37H	; Byteweise Eingabe von Kassette
  352         0038      MBOUT	EQU	38H	; Byteweise Ausgabe auf Kassette
  353         0039      KEY	EQU	39H	; Belegen einer F-Taste
  354         003A      KEYLI	EQU	3AH	; Anzeige F-Tastenbelegung
  355         003B      DISP	EQU	3BH	; Systemkommando "DISPLAY"
  356         003C      WININ	EQU	3CH	; Fenster initialisieren
  357         003D      WINAK	EQU	3DH	; Fenster ueber Nummer aufrufen
  358         003E      LINE	EQU	3EH	; Linie zeichnen
  359         003F      CIRCLE	EQU	3FH	; Kreis zeichnen
  360         0040      SQR	EQU	40H	; Quadratwurzel berechnen
  361         0041      MULT	EQU	41H	; Multiplikation
  362         0042      CSTBT	EQU	42H	; Bildschirmanzeige Steuerzeichensymbol
  363         0043      INIEA	EQU	43H	; Initialisierung E/A-Kanal
  364         0044      INIME	EQU	44H	; Initialisierung mehrerer E/A-Kanaele
  365         0045      ZKOUT	EQU	45H	; Ausgabe Zeichenkette
  366         0046      MENU	EQU	46H	; aktuelles Menue ausschreiben
  367         0047      V24OUT	EQU	47H	; Initialisierung Druckerausgabe
  368         0048      V24DUP	EQU	48H	; Initialisierung V.24-Duplexroutine
  369         0049      DEVICE	EQU	49H	; DEVICE-Funktionen ab CAOS 4.6
  370         004A      HLDEZ	EQU	4AH	; HL dezimal anzeigen ab CAOS 4.8
  371         004B      RDEZ	EQU	4BH	; Erfassung Dezimalzahl aus Zeichenkette ab CAOS 4.8
  372         004C      GARGC	EQU	4CH	; bis zu 10 Argumente mit variabler Zahlenbasis erfassen
  373                   
  374                   ; allgemeine Macros:
  375                   
  376                   MESSAGE	MACRO	MSG1,N,MSG2
  377                   	 .PRINTX MSG1 N MSG2
  378                   	ENDM
  379                   
  380                   ; Mit FF auffuellen, bis die absolute Adresse LOC erreicht ist:
  381                   ABSFILL	MACRO	LOC,WHAT
  382                   	 IF $ GT LOC
  383                   	  MESSAGE <Fehler! LOC:>,% $ - LOC,<Byte zu viel vor WHAT>
  384                   	 ELSE
  385                   	  IF2
  386                   	   MESSAGE <LOC:>,% LOC - $,<Byte frei vor WHAT>
  387                   	  ENDIF
  388                   	  DS	LOC - $,0FFh
ASM V2.1								    SLR180 1.31 Page   8
CAOS48  INC

  389                   	 ENDIF
  390                   	ENDM
  391                   
  392                   ; end of include
  160                   	INCLUDE EDAS.INC	; EDAS-Arbeitszellen (auch fuer Editor)
    1                   ;-------------------------------------------------------;
    2                   ;	EDAS Arbeitszellen (fuer EDAS 1.7 / 2.0)	;
    3                   ;	----------------------------------------	;
    4                   ;	(und CAOS-Editor, Assembler und Reassembler)	;
    5                   ;							;
    6                   ; EDAS.INC		ML-Soft 21.01.2018-27.03.2023	;
    7                   ;-------------------------------------------------------;
    8                   
    9         0000      NAME0	EQU	0000H		; Dateiname 8 Zeichen, Typ 3 Zeichen
   10                   ;MODE	EQU	000Bh		; M052: 1 Byte fuer Interrupt-Mode USB
   11                   ;DATUM	EQU	000Ch		; M052: 4 Byte fuer Datum
   12                   
   13         B7F5      NAMP	EQU	0B7F5h		; Namenspuffer der geladenen (Quell-)Textdatei
   14                   				; 11 Zeichen bis 0B7FFh
   15                   
   16         0010      RANDL	EQU	0010h		; Position linker Rand
   17         0011      RANDR	EQU	RANDL+1		; Position rechter Rand
   18         0012      MEML	EQU	RANDR+1		; Zeilennummer von Textanfang an
   19         0014      FTXT	EQU	MEML+2		; Zeiger auf Suchtext bei REPLACE
   20         0016      RTXT	EQU	FTXT+2		; Zeiger auf Ersetz-Text bei REPLACE
   21                   
   22         0018      T1A	EQU	RTXT+2		; Beginn Text 1
   23         001A      T2E	EQU	T1A+2		; nach Ende Text 2
   24         001C      T1E	EQU	T2E+2		; nach Ende Text 1
   25         001E      T2A	EQU	T1E+2		; Beginn Text 2
   26                   
   27         0020      COL	EQU	T2A+2		; EDIT-Cursor (Spalte)
   28         0021      LIN	EQU	COL+1		; EDIT-Cursor (Zeile)
   29         0022      M4A	EQU	LIN+1		; wenn ungleich 0 -> no Memory
   30         0023      STRING	EQU	M4A+1		; String-Puffer
   31         001B      LSTR	EQU	27		; max. Laenge Stringpuffer (26 Zeichen + 00)
   32         003E      STAT	EQU	STRING+LSTR	; Merkzelle fuer verschiedene Einstellungen
   33                   		;Bit 0 = 1 - Floppy vorhanden
   34                   		;Bit 1 = 1 - DEP mit LW-Steuerung
   35                   		;Bit 2 = 1 - Fehler bei MTAB-Ueberschreitung aufgetreten
   36                   		;Bit 3 = 1 - Option 'S' merken
   37                   		;Bit 4 = 1 - Ueberschreiben (0=Einfuegen)
   38                   		;Bit 5 = 1 - Zeichensatz (0=IBM, 1=deutsch)
   39                   		;Bit 6 = 1 - Zeichensatz (0=IBM, 1=CAOS)
   40                   		;Bit 7 = 1 - END-Befehl erkannt (ASM)
   41                   
   42                   ; Assembler-Arbeitszellen:
   43                   
   44         003F      OPT	EQU	STAT+1		; Assembler-Optionen
   45                   		;Bit 0	L - Listing ausgeben
   46                   		;Bit 1	P - Umschaltung Drucker
   47                   		;Bit 2	+ - Markentabelle erweitern
   48                   		;Bit 3	1 - nur PASS 1!
   49                   		;Bit 4	3 - PASS 3 laeuft (Save MC)
   50                   		;Bit 5	B - Bildschirmformat (40 Spalten)
   51                   		;Bit 6	O - MC in Speicher laden
   52                   		;Bit 7	2 - nur PASS 2
   53         0040      OFFS	EQU	OPT+1		; Assembler-Offset
   54         0042      OBJ	EQU	OFFS+2		; Beginn Maschinencode
   55         0044      MBOT	EQU	OBJ+2		; RAM-Ende+1	8000H oder C000H
   56         0046      MTOP	EQU	MBOT+2		; Marken-Tabelle (Anfang)
   57         0048      PBL	EQU	MTOP+2		; Pointer auf Byte-Liste
   58         004A      M78	EQU	PBL+2
   59         004B      M79	EQU	M78+1
   60         004C      MPC	EQU	M79+1		; Adressenzaehler fuer MC-Erzeugung
   61         004E      ERRNO	EQU	MPC+2		; Zaehler (BCD) fuer Fehler beim Assemblieren
   62         0050      MCL	EQU	ERRNO+2		; MC-Endadresse
   63         0052      NUMB	EQU	MCL+2		; + Berechneter Wert eines Ausdrucks (Operand)
   64         0054      DDFD	EQU	NUMB+2		; | DD/FD-Speicher
   65         0055      KLAM	EQU	DDFD+1		; | Klammer-Speicher
   66         0056      M84	EQU	KLAM+1		; | Merker, ob Operand gefunden wurde
   67         0057      VORZ	EQU	M84+1		; | Rechenzeichen-Speicher
   68         0058      REGNR	EQU	VORZ+1		; + Registerkennbyte
   69         0059      REGC	EQU	REGNR+1		; Registercode
   70                   	; Registerkennbyte	Registercode	DDFD
   71                   	;				Bit
   72                   	; A	00H		07H	8
   73                   	; B	01H		00H	8
ASM V2.1								    SLR180 1.31 Page   9
EDAS    INC

   74                   	; C	02H		01H	8
   75                   	; D	03H		02H	8
   76                   	; E	04H		03H	8
   77                   	; H	07H		04H	8
   78                   	; HX	07H		04H	8	DD
   79                   	; HY	07H		04H	8	FD
   80                   	; L	0BH		05H	8
   81                   	; LX	0BH		05H	8	DD
   82                   	; LY	0BH		05H	8	FD
   83                   	; I	08H		47H	8
   84                   	; R	11H		4FH	8
   85                   	; M(HL)	3AH		06H	8
   86                   	; (IX+)	3AH		06H	8	DD	
   87                   	; (IY+)	3AH		06H	8	FD
   88                   	; BC	2BH		00H	16
   89                   	; (BC)	2BH		00H	8
   90                   	; DE	2FH		10H	16
   91                   	; (DE)	2FH		10H	8
   92                   	; HL	3AH		20H	16
   93                   	; IX	3AH		20H	16	DD
   94                   	; IY	3AH		20H	16	FD
   95                   	; SP	49H		30H	16
   96                   	; AF	2DH		31H	16
   97                   
   98                   ; Hilfsprogramme fuer Speicherzugriff hinter IRM und ROM-C bis DFFFh
   99                   
  100         005A      RAMC	EQU	REGC+1		; Hilfsprogramme fuer Speicherzugriff bis DFFFh
  101                   	; 005Ch bis 00A0h	  nur bei ext. Editor erforderlich
  102                   
  103                   ; Assemblierpuffer:	(hier steht die erzeugte Quelltextzeile)
  104                   
  105         A880      NERR	EQU	0A880h		; 1 Byte Assembler-Fehlercode
  106                   				; 1 Byte "Stern" wenn Fehlercode vorhanden ist
  107         A882      ADR	EQU	NERR+2		; 4 Byte fuer Adresse
  108                   				; 10 Byte fuer Hexcodes
  109         A890      TEXT	EQU	NERR+16		; Quelltext (max. 80 Byte bei ext. Editor)
  110                   	; A880h bis A8FFh
  161                   
  162                   ;-------
  163                   IF1
  165                   ENDIF
  166                   ;-------
  167                   
  168                   ; CAOS-Vorblock:
  169 0100  41 53 4D 32 	DB	'ASM21   KCC'	; 11 Byte Dateiname
  170 010B  00 00 00 00 	DS	5,0
  171 0110  02          	DB	2		; 2 Argumente
  172 0111  C000        	DW	ROMBEG		; Anfangsadresse
  173 0113  E000        	DW	ROMEND		; Endadresse
  174 0115  0000        	DW	0
  175 0117  00 00 00 00 	DS	95,0
  176 0176  30 32 2E 30 	DB	'02.01.2024'	; Datum
  177                   ;---------------
  178                   	.PHASE	0C000H
  179                   ;
  180 C000  C00C        ROMBEG:	DW	TB		; String 1
  181 C002  18          ITAB:	DB	T1A		; Wert 1
  182 C003  C01A        	DW	TO		; String 2
  183 C005  46          	DB	MTOP		; Wert 2
  184 C006  C028        	DW	MC		; String 3
  185 C008  42          	DB	OBJ		; Wert 3
  186 C009  C036        	DW	AO		; String 4
  187 C00B  40          	DB	OFFS		; Wert 4
  188                   ;
  189 C00C  54 6F 70 20 TB:	DB	'Top of Text: ',0
  190 C01A  45 6E 64 20 TO:	DB	'End of Text: ',0
  191 C028  53 74 61 72 MC:	DB	'Start of MC: ',0
  192 C036  41 53 4D 2D AO:	DB	'ASM-Offset : ',0
  193                   ;
  194                   ; IRM, LED und USER-ROM ausschalten
  195                   ;
  196 C044  F5          IRM_OF:	PUSH	AF
  197 C045  DB 88       	IN	A,(88H)
  198 C047  E6 5B       	AND	5BH		; IRM, USER-ROM und LED off
  199 C049  D3 88       	OUT	(88H),A
  200 C04B  F1          	POP	AF
  201 C04C  C9          	RET
  202                   ;
ASM V2.1								    SLR180 1.31 Page  10
ASM21   Z80

  203                   ; Text kopieren mit LDIR
  204                   ;
  205         0063      TLDIR	EQU	$+RAMC-IRM_OF
  206 C04D  CD 005A     	CALL	RAMC		; IRM OFF
  207 C050  ED B0       	LDIR
  208 C052  18 2C       	JR	IRM_ON
  209                   ;
  210                   ; Text kopieren mit LDDR
  211                   ;
  212         006A      TLDDR	EQU	$+RAMC-IRM_OF
  213 C054  CD 005A     	CALL	RAMC		; IRM OFF
  214 C057  ED B8       	LDDR
  215 C059  18 25       	JR	IRM_ON
  216                   ;
  217                   ; Zeichen suchen mit CPIR
  218                   ;
  219         0071      TCPIR	EQU	$+RAMC-IRM_OF
  220 C05B  CD 005A     	CALL	RAMC		; IRM OFF
  221 C05E  ED B1       	CPIR
  222 C060  18 1E       	JR	IRM_ON
  223                   ;
  224                   ; Zeichen suchen mit CPDR
  225                   ;
  226         0078      TCPDR	EQU	$+RAMC-IRM_OF
  227 C062  CD 005A     	CALL	RAMC		; IRM OFF
  228 C065  ED B9       	CPDR
  229 C067  18 17       	JR	IRM_ON
  230                   ;
  231                   ; Zeichen Vergleichen mit CP (HL)
  232                   ;
  233         007F      TCPHL	EQU	$+RAMC-IRM_OF
  234 C069  CD 005A     	CALL	RAMC		; IRM OFF
  235 C06C  BE          	CP	(HL)
  236 C06D  18 11       	JR	IRM_ON
  237 C06F  00          	NOP			; Ausgleichsbyte zu CPI
  238                   ;
  239                   ; Zeichen aus Textspeicher lesen
  240                   ;
  241         0086      GET	EQU	$+RAMC-IRM_OF	; Adresse im RAM0
  242 C070  CD 005A     	CALL	RAMC		; IRM OFF
  243 C073  7E          	LD	A,(HL)
  244 C074  18 0A       	JR	IRM_ON
  245                   ;
  246                   ; Zeichen aus Textspeicher lesen
  247                   ;
  248         008C      GETDE	EQU	$+RAMC-IRM_OF	; Adresse im RAM0
  249 C076  CD 005A     	CALL	RAMC		; IRM OFF
  250 C079  1A          	LD	A,(DE)
  251 C07A  18 04       	JR	IRM_ON
  252                   ;
  253                   ; Zeichen in Textspeicher schreiben
  254                   ;
  255         0092      PUT	EQU	$+RAMC-IRM_OF
  256 C07C  CD 005A     	CALL	RAMC		; IRM OFF
  257 C07F  77          	LD	(HL),A
  258                   ;
  259                   ; IRM, LED und USER-ROM einschalten
  260                   ;
  261 C080  F5          IRM_ON:	PUSH	AF
  262 C081  DB 88       	IN	A,(88H)
  263 C083  F6 A4       	OR	0A4H		; IRM, USER-ROM und LED on
  264 C085  D3 88       	OUT	(88H),A
  265 C087  F1          	POP	AF
  266 C088  C9          	RET
  267 C089              ENDC:
  268                   ;
  269                   ; 16K oder 64K RAM suchen und einschalten
  270                   ; Hilfsprogramme in den RAM0 kopieren
  271                   ;
  272 C089  06 08       RAMSW:	LD	B,8		; ab Steckplatz 8 suchen
  273 C08B  0E 80       NEXT:	LD	C,80H		; I/O-Adresse Modulsteuerung
  274 C08D  ED 78       	IN	A,(C)		; Kennbyte lesen
  275 C08F  FE F6       	CP	0F6h		; M011 = 64K RAM ?
  276 C091  28 09       	JR	Z,FOUND
  277 C093  FE F4       	CP	0F4h		; M022 = 16K RAM ?
  278 C095  28 05       	JR	Z,FOUND
  279 C097  04          	INC	B		; naechster Steckplatz
  280 C098  20 F1       	JR	NZ,NEXT
ASM V2.1								    SLR180 1.31 Page  11
ASM21   Z80

  281 C09A  18 09       	JR	NORAM		; kein RAM-Modul gefunden
  282                   	;
  283 C09C  16 C3       FOUND:	LD	D,0C3h		; Steuerbyte fuer Adresse C000h
  284 C09E  68          	LD	L,B		; Steckplatz
  285 C09F  3E 02       	LD	A,2		; Modul "schalten"
  286 C0A1  CD F003     	CALL	PV1
  287 C0A4  26          	DB	MODU		; RAM-Modul zuschalten
  288                   ; Hilfsprogramme fuer Zugriff Textspeicher
  289 C0A5  21 C044     NORAM:	LD	HL,IRM_OF	; von hier aus dem ROM
  290 C0A8  11 005A     	LD	DE,RAMC		; in den RAM0 (hinter Assemblierpuffer)
  291 C0AB  01 0045     	LD	BC,ENDC-IRM_OF
  292 C0AE  ED B0       	LDIR			; kopieren
  293 C0B0  C9          	RET
  294                   ;---------------
  295 C0B1  7F7F        	DEFW	7F7FH
  296 C0B3  41 53 4D 1F 	DB	'ASM',1Fh
  297 C0B7  CD C308     	CALL	WIN0		; volles Fenster einstellen
  298 C0BA  CD F003     	CALL	PV1
  299 C0BD  23          	DB	OSTR
  300 C0BE  1B 33 0C    	DB	ESC,'3',CLS	; Bild 1 loeschen
  301 C0C1  1B 31 0C    	DB	ESC,'1',CLS	; Bild 0 loeschen
  302 C0C4  0A 0A 3E 3E 	DB	LF,LF,">> CAOS-Assembler 2.1  ` ML 1997-2024 <<",0
  303 C0EF  CD C089     	CALL	RAMSW		; RAM zuschalten, Hilfsprogramm kopieren
  304 C0F2  21 2808     	LD	HL,2808H	; linker Rand=8, rechter Rand=40
  305 C0F5  22 0010     	LD	(RANDL),HL	; fuer Editor setzen
  306                   ; 1. Standardwerte ermitteln
  307 C0F8  21 0200     	LD	HL,0200h	; Standardwerte fuer
  308 C0FB  22 0018     	LD	(T1A),HL	; Textspeicher Anfang
  309 C0FE  22 0042     	LD	(OBJ),HL	; Beginn MC
  310 C101  24          RAM1:	INC	H		; Jetzt ermitteln wie weit RAM vorliegt
  311 C102  7C          	LD	A,H
  312 C103  FE E0       	CP	0E0H		; E000H erreicht?
  313 C105  28 13       	JR	Z,RAM2
  314 C107  CD 0086     	CALL	GET		; Inhalt lesen
  315 C10A  4F          	LD	C,A		; merken
  316 C10B  2F          	CPL			; negieren
  317 C10C  CD 0092     	CALL	PUT		; negierten Wert einschreiben
  318 C10F  CD 0086     	CALL	GET		; und wieder zurueck lesen
  319 C112  2F          	CPL			; und nochmals negieren
  320 C113  B9          	CP	C		; wenn gleich, dann RAM
  321 C114  79          	LD	A,C
  322 C115  CD 0092     	CALL	PUT		; Originalwert zurueck schreiben
  323 C118  28 E7       	JR	Z,RAM1		; RAM vorhanden
  324 C11A  22 0044     RAM2:	LD	(MBOT),HL	; RAM-Ende
  325 C11D  22 0046     	LD	(MTOP),HL	; Textspeicher Ende
  326 C120  26 00       	LD	H,0
  327 C122  22 0040     	LD	(OFFS),HL	; Assembler-Offset
  328 C125  CD C080     	CALL	IRM_ON
  329                   ; 2. Werte anzeigen
  330 C128  CD C308     INI1:	CALL	WIN0		; grosses Fenster
  331 C12B  3E 06       	LD	A,6
  332 C12D  32 B7A1     	LD	(CURSO+1),A	; Zeile 6
  333 C130  11 C000     	LD	DE,ROMBEG
  334 C133  06 04       	LD	B,4		; 4 Zeilen
  335 C135  1A          INI2:	LD	A,(DE)
  336 C136  13          	INC	DE
  337 C137  6F          	LD	L,A
  338 C138  1A          	LD	A,(DE)
  339 C139  13          	INC	DE
  340 C13A  67          	LD	H,A		; Adresse Zeichenkette		
  341 C13B  CD F003     	CALL	PV1
  342 C13E  45          	DB	ZKOUT		; Anzeige Zeichenkette
  343 C13F  1A          	LD	A,(DE)
  344 C140  13          	INC	DE
  345 C141  6F          	LD	L,A		; HL=Adresse
  346 C142  26 00       	LD	H,0
  347 C144  7E          	LD	A,(HL)		; Wert-Low
  348 C145  23          	INC	HL
  349 C146  66          	LD	H,(HL)		; Wert-High
  350 C147  6F          	LD	L,A
  351 C148  CD CB6A     	CALL	HLCR		; Anzeige Wert hex und CR+LF
  352 C14B  10 E8       	DJNZ	INI2
  353                   ; 3. Eingabe bzw. Bestaetigung der Werte und Ablage auf ARG1-ARG4
  354 C14D  21 060D     	LD	HL,060DH	; Fenster begrenzen
  355 C150  22 B79C     	LD	(WINON),HL
  356 C153  21 0404     	LD	HL,0404H
  357 C156  22 B79E     	LD	(WINLG),HL
  358 C159  3E 11       	LD	A,11h		; PAGE-Modus
ASM V2.1								    SLR180 1.31 Page  12
ASM21   Z80

  359 C15B  CD F003     	CALL	PV1
  360 C15E  00          	DB	CRT
  361 C15F  21 0000     	LD	HL,0
  362 C162  22 B7A0     	LD	(CURSO),HL
  363 C165  CD F003     	CALL	PV1
  364 C168  17          	DB	INLIN
  365 C169  11 0000     	LD	DE,0		; Cursorposition erster Wert
  366 C16C  D5          INI3:	PUSH	DE
  367 C16D  CD F003     	CALL	PV1
  368 C170  32          	DB	DABR		; VRAM-Adresse berechnen
  369 C171  EB          	EX	DE,HL
  370 C172  CD F003     	CALL	PV1
  371 C175  18          	DB	RHEX		; Hex-Wert lesen
  372 C176  D1          	POP	DE
  373 C177  38 AF       	JR	C,INI1		; Formatfehler
  374 C179  21 B782     	LD	HL,ARG1
  375 C17C  7A          	LD	A,D		; Zeile
  376 C17D  87          	ADD	A,A		; *2
  377 C17E  85          	ADD	A,L
  378 C17F  6F          	LD	L,A
  379 C180  ED 4B B797  	LD	BC,(NUMVX)	; eingegebener Wert
  380 C184  71          	LD	(HL),C		; Low
  381 C185  2C          	INC	L
  382 C186  70          	LD	(HL),B		; High
  383 C187  14          	INC	D		; naechste Zeile
  384 C188  7A          	LD	A,D
  385 C189  FE 04       	CP	4		; letzter Adresse?
  386 C18B  20 DF       	JR	NZ,INI3		; nein
  387                   ; 4. Diese beiden Werte muessen nicht kontrolliert werden:
  388 C18D  2A B786     	LD	HL,(ARG3)
  389 C190  22 0042     	LD	(OBJ),HL	; Start of MC
  390 C193  2A B788     	LD	HL,(ARG4)
  391 C196  22 0040     	LD	(OFFS),HL	; ASM-Offset
  392                   ; 5. Test auf korrekte Werte und Uebernahme in die Arbeitszellen:
  393 C199  2A B782     	LD	HL,(ARG1)
  394 C19C  01 0200     	LD	BC,0200H
  395 C19F  A7          	AND	A
  396 C1A0  ED 42       	SBC	HL,BC		; RAM-Beginn nicht unter 200h?
  397 C1A2  DA C128     INI4:	JP	C,INI1
  398 C1A5  2A 0044     	LD	HL,(MBOT)	; ermitteltes RAM-Ende
  399 C1A8  ED 5B B784  	LD	DE,(ARG2)
  400 C1AC  ED 52       	SBC	HL,DE		; RAM-Ende nicht nach tatsaechlichem RAM-Ende?
  401 C1AE  38 F2       	JR	C,INI4
  402 C1B0  2A B782     	LD	HL,(ARG1)
  403 C1B3  EB          	EX	DE,HL
  404 C1B4  ED 52       	SBC	HL,DE		; RAM-Ende groesser als RAM-Beginn?
  405 C1B6  38 EA       	JR	C,INI4
  406 C1B8  ED 42       	SBC	HL,BC		; Textgroesse mindestens 200h?
  407 C1BA  38 E6       	JR	C,INI4
  408 C1BC  EB          	EX	DE,HL
  409 C1BD  3E 0D       	LD	A,CR		; fuer Markensuche in 1. Zeile!
  410 C1BF  CD 0092     	CALL	PUT
  411 C1C2  23          	INC	HL
  412 C1C3  22 0018     	LD	(T1A),HL	; Top of Text
  413 C1C6  22 001C     	LD	(T1E),HL	; kein Text im Teil 1
  414 C1C9  2A B784     	LD	HL,(ARG2)
  415 C1CC  22 0044     	LD	(MBOT),HL	; Speicherende neu setzen
  416 C1CF  CD C433     	CALL	MMTOP		; Textende setzen
  417                   ; EDAS vorbereiten:
  418                   ;	LD	HL,(OBJ)	; wird waehrend Assemblerlauf eingetragen...
  419                   ;	LD	(MPC),HL
  420 C1D2  ED 62       	SBC	HL,HL		; HL:=0, da CY=0 (ersetzt LD HL,0)
  421 C1D4  22 0020     	LD	(COL),HL
  422 C1D7  CD C6E7     	CALL	KEY0		; F-Tasten F1 und F2 belegen
  423 C1DA  CD C4DB     	CALL	NACLR		; Dateiname loeschen
  424 C1DD  18 0B       	JR	REEDAS
  425                   ;-------
  426 C1DF  7F7F        	DEFW	7F7FH
  427 C1E1  52 45 41 53 	DB	'REASM',1Fh
  428 C1E7  CD C089     	CALL	RAMSW		; RAM zuschalten, Hilfsprogramme kopieren
  429 C1EA  AF          REEDAS:	XOR	A
  430 C1EB  32 0022     	LD	(M4A),A		; 'no memory' ruecksetzen
  431 C1EE  01 83F1     	LD	BC,83F1H
  432 C1F1  ED 79       	OUT	(C),A		; DEP-Version ruecksetzen!
  433                   
  434                   ; Ein eventuell vorhandenes Menuewort ab 00h (z.B. FLOAD oder ASM) deaktivieren:
  435 C1F3  67          	LD	H,A
  436 C1F4  6F          	LD	L,A		; ab Adresse HL=0000H
ASM V2.1								    SLR180 1.31 Page  13
ASM21   Z80

  437 C1F5  06 FF       	LD	B,0FFH		; bis zu Adresse 00FFH
  438 C1F7  7E          REE1:	LD	A,(HL)
  439 C1F8  23          	INC	HL
  440 C1F9  FE 7F       	CP	7FH		; CAOS-Prolog?
  441 C1FB  28 04       	JR	Z,REE2		; gefunden
  442 C1FD  FE DD       	CP	0DDH		; EDAS/Editor-Prolog?
  443 C1FF  20 05       	JR	NZ,REE3
  444 C201  BE          REE2:	CP	(HL)		; 2 mal?
  445 C202  20 02       	JR	NZ,REE3
  446 C204  36 00       	LD	(HL),0		; 2. Vorkommen loeschen
  447 C206  10 EF       REE3:	DJNZ	REE1
  448                   	;
  449 C208  CD C308     	CALL	WIN0		; grosses Fenster
  450 C20B  3E 0C       	LD	A,CLS
  451 C20D  CD F003     	CALL	PV1
  452 C210  00          	DB	CRT
  453 C211  21 B7A2     	LD	HL,STBT
  454 C214  CB CE       	SET	1,(HL)		; Schreiben Farbe aus (geht schneller!)
  455 C216  21 003E     	LD	HL,STAT
  456 C219  36 40       	LD	(HL),40h	; Starte EDIT mit CAOS-Zeichensatz
  457                   
  458 C21B  01 FC80     	LD	BC,0FC80H
  459 C21E  ED 78       	IN	A,(C)
  460 C220  FE A7       	CP	0A7H		; Floppy?
  461 C222  20 0D       	JR	NZ,MAIN		; nein
  462 C224  34          	INC	(HL)		; Floppy vorhanden
  463                   
  464 C225  01 83F1     	LD	BC,83F1H
  465 C228  ED 78       	IN	A,(C)
  466 C22A  3C          	INC	A
  467 C22B  FE 21       	CP	21H		; DEP ab V2.0?
  468 C22D  38 02       	JR	C,MAIN		; nein
  469 C22F  CB CE       	SET	1,(HL)
  470 C231  01 0DA8     MAIN:	LD	BC,EDIT-0BA00H	; kurzes Menue
  471 C234  18 0B       	JR	MEN0
  472                   ;-------
  473 C236  DDDD        	DEFW	0DDDDH
  474 C238  4D 45 4E 55 	DB	'MENU',1Fh
  475 C23D  E1          MEN:	POP	HL		; Stack reinigen
  476 C23E  01 2600     	LD	BC,2600H	; langes Menue BA00 bis E000h
  477 C241  C5          MEN0:	PUSH	BC		; Menuelaenge
  478 C242  CD C308     	CALL	WIN0		; grosses Fenster
  479 C245  CD F003     	CALL	PV1
  480 C248  23          	DB	OSTR
  481 C249  0C 0A 0A 00 	DB	CLS,LF,LF,0	; Bildschirm komplett loeschen
  482 C24D  06 28       	LD	B,40
  483 C24F  CD F003     ULIN:	CALL	PV1
  484 C252  23          	DB	OSTR
  485 C253  5F 00       	DB	'_',0		; unterstreichen
  486 C255  10 F8       	DJNZ	ULIN
  487 C257  CD C335     	CALL	TNAME		; Anzeige Dateiname (oder Titel)
  488 C25A  CD C3BA     	CALL	PERI		; Anzeige DEVICE-Name
  489 C25D  CD C382     	CALL	FREE		; freier Speicher
  490 C260  3E 1C       	LD	A,28		; 28 Zeilen
  491 C262  32 B79F     	LD	(WINLG+1),A	; Fensterlaenge verkuerzen
  492 C265  CD F003     	CALL	PV1
  493 C268  2D          	DB	HOME
  494 C269  21 BA00     	LD	HL,0BA00H	; Beginn Menuewortsuche
  495 C26C  C1          	POP	BC		; Menuelaenge
  496 C26D  CD F003     MEN1:	CALL	PV1
  497 C270  23          	DB	OSTR
  498 C271  02 2A 00    	DB	2,'*',0		; Prompt
  499 C274  CD F003     	CALL	PV1
  500 C277  2A          	DB	BRKT
  501 C278  38 55       	JR	C,MEN7
  502 C27A  3E DD       	LD	A,0DDH		; EDAS-Prolog (fest codiert, nicht ueber IX+9)
  503 C27C  ED B1       MEN2:	CPIR
  504 C27E  E2 C2CF     	JP	PO,MEN7		; Suchbereich fertig
  505 C281  ED A1       	CPI
  506 C283  20 F7       	JR	NZ,MEN2		; nicht 2 * Prologbyte
  507 C285  7E          MEN3:	LD	A,(HL)
  508                   ;	CP	2		; Epilog (0..1) ?
  509 C286  FE 20       	CP	20h		; Epilog (0..1Fh)?
  510 C288  38 0F       	JR	C,MEN4		; Epilog
  511 C28A  FE 30       	CP	30H
  512 C28C  38 DF       	JR	C,MEN1		; < '0'
  513 C28E  FE 5F       	CP	5FH
  514 C290  30 DB       	JR	NC,MEN1		; > 'Z'
ASM V2.1								    SLR180 1.31 Page  14
ASM21   Z80

  515 C292  CD C562     	CALL	CHR
  516 C295  23          	INC	HL
  517 C296  0B          	DEC	BC
  518 C297  18 EC       	JR	MEN3
  519                   	;
  520 C299  CD C55D     MEN4:	CALL	LFCR
  521 C29C  18 CF       	JR	MEN1		; weitersuchen
  522                   ;
  523                   ; 26.03.2023: Fehler-Abbruch bei Ausgabe MC auf Datentraeger
  524 C29E  2A B7AE     LOOPE:	LD	HL,(SYSP)	; CAOS-Stackpointer
  525 C2A1  2B          	DEC	HL
  526 C2A2  2B          	DEC	HL		; CAOS-Return-Adresse lassen
  527 C2A3  F9          	LD	SP,HL
  528 C2A4  CD C957     	CALL	TOP		; Text an Speicherende verschieben
  529 C2A7  18 0C       	JR	LOOP1		; Sprung zu Eingabeschleife
  530                   	; Fehlerhafte Argumente
  531 C2A9  E1          NLP1:	POP	HL		; Fehler
  532                   	; Menuewort nicht gefunden
  533 C2AA  CD D97F     NLP2:	CALL	DERR		; CAOS-UP "ERRM"
  534 C2AD  18 06       	JR	LOOP1
  535                   	;
  536 C2AF  3E 0B       LOOP0:	LD	A,0BH		; Zeile hoch
  537 C2B1  CD F003     	CALL	PV1
  538 C2B4  00          	DB	CRT
  539 C2B5  3E 02       LOOP1:	LD	A,2		; Zeile loeschen
  540 C2B7  CD F003     	CALL	PV1
  541 C2BA  00          	DB	CRT
  542 C2BB  CD F003     LOOP2:	CALL	PV1
  543 C2BE  20          	DB	NOUT		; Normalausgabe
  544 C2BF  CD C335     	CALL	TNAME
  545 C2C2  CD C382     	CALL	FREE
  546 C2C5  CD C3BA     	CALL	PERI
  547 C2C8  CD F003     MEN6:	CALL	PV1
  548 C2CB  23          	DB	OSTR
  549 C2CC  0D 2A 00    	DB	CR,'*',0
  550 C2CF  CD F003     MEN7:	CALL	PV1
  551 C2D2  17          	DB	INLIN		; Eingabe im Menuebild
  552 C2D3  38 DA       	JR	C,LOOP0		; BRK
  553 C2D5  13          	INC	DE
  554 C2D6  1A          	LD	A,(DE)
  555 C2D7  FE 20       	CP	' '
  556 C2D9  28 ED       	JR	Z,MEN6		; Beginn mit Space
  557 C2DB  A7          	AND	A
  558 C2DC  28 EA       	JR	Z,MEN6
  559 C2DE  3E DD       	LD	A,0DDH		; EDAS-Prolog
  560 C2E0  21 BA00     	LD	HL,0BA00H
  561 C2E3  01 2600     	LD	BC,2600H	; bis E000H
  562 C2E6  CD F003     	CALL	PV1
  563 C2E9  1D          	DB	ZSUCH		; Menuewort suchen
  564 C2EA  30 BE       	JR	NC,NLP2		; nicht gefunden
  565 C2EC  7E          	LD	A,(HL)		; Epilog
  566 C2ED  23          	INC	HL
  567 C2EE  E5          	PUSH	HL		; Startadresse auf Stack
  568 C2EF  FE 1F       	CP	1FH
  569 C2F1  28 10       	JR	Z,MEN9		; bei Epilog 1Fh ohne Argumente
  570 C2F3  CD F003     	CALL	PV1
  571 C2F6  22          	DB	GARG		; Arg's erfassen
  572 C2F7  38 B0       	JR	C,NLP1		; Fehler in Arg's
  573 C2F9  21 C2BB     	LD	HL,LOOP2	; RET-Adresse
  574 C2FC  E3          	EX	(SP),HL
  575 C2FD  E5          	PUSH	HL
  576 C2FE  CD F003     	CALL	PV1
  577 C301  15          	DB	LARG
  578 C302  C9          	RET			; Ansprung Kommando
  579                   	;
  580 C303  21 C2BB     MEN9:	LD	HL,LOOP2	; RET-Adresse
  581 C306  E3          	EX	(SP),HL
  582 C307  E9          	JP	(HL)		; Ansprung Kommando
  583                   ;-------
  584                   ; Fenster gross (ganzer Bildschirm):
  585 C308  21 0000     WIN0:	LD	HL,0
  586 C30B  22 B79C     	LD	(WINON),HL
  587 C30E  21 2028     	LD	HL,2028H	; 32 Zeilen
  588 C311  18 09       	JR	WIN1
  589                   ;-------
  590                   ; Fenster einstellen, Normalausgabe, Scroll-Modus:
  591 C313  21 0100     WINI:	LD	HL,100H
  592 C316  22 B79C     	LD	(WINON),HL
ASM V2.1								    SLR180 1.31 Page  15
ASM21   Z80

  593 C319  21 1F28     	LD	HL,1F28H	; 31 Zeilen!
  594 C31C  22 B79E     WIN1:	LD	(WINLG),HL
  595 C31F  CD F003     	CALL	PV1
  596 C322  20          	DB	NOUT		; Normalausgabe (CRT)
  597 C323  CD F003     	CALL	PV1
  598 C326  23          	DB	OSTR
  599 C327  12 00       	DB	12H,0		; Scroll-Modus
  600 C329  C9          	RET
  601                   ;-------
  602 C32A  7E          NAME1:	LD	A,(HL)		; gemerkter Name
  603 C32B  E6 7F       	AND	7FH		; wegen BASIC UUU
  604 C32D  23          	INC	HL
  605 C32E  CD F003     	CALL	PV1
  606 C331  42          	DB	CSTBT		; zur Sicherheit!
  607 C332  10 F6       	DJNZ	NAME1
  608 C334  C9          	RET
  609                   ;-------
  610                   ; Anzeige Dateiname in Titelzeile
  611 C335  2A B7A0     TNAME:	LD	HL,(CURSO)
  612 C338  E5          	PUSH	HL		; aktuelle Cursorposition merken
  613 C339  3E 01       	LD	A,1
  614 C33B  32 B79D     	LD	(WINON+1),A	; Zeile 1
  615 C33E  21 0001     	LD	HL,0001H	; Spalte
  616 C341  22 B7A0     	LD	(CURSO),HL
  617 C344  21 B7F5     	LD	HL,NAMP		; aktueller Dateiname
  618 C347  7E          	LD	A,(HL)
  619 C348  FE 21       	CP	21h		; Dateiname vorhanden?
  620 C34A  38 1C       	JR	C,NONAM		; nein
  621 C34C  CD F003     	CALL	PV1
  622 C34F  23          	DB	OSTR
  623 C350  41 53 4D 3A 	DB	'ASM: ',0
  624 C356  06 08       	LD	B,8
  625 C358  CD C32A     	CALL	NAME1		; 8 Zeichen Dateiname
  626 C35B  3E 2E       	LD	A,'.'
  627 C35D  CD F003     	CALL	PV1
  628 C360  00          	DB	CRT
  629 C361  06 03       	LD	B,3
  630 C363  CD C32A     	CALL	NAME1		; 3 Zeichen Dateityp
  631 C366  18 48       	JR	FRE2
  632                   	;
  633 C368  CD F003     NONAM:	CALL	PV1
  634 C36B  23          	DB	OSTR
  635 C36C  3E 3E 20 4B 	DB	'>> KC-ASM 2.1 << ',CR,LF,0
  636 C380  18 2E       	JR	FRE2		; Fenster regenerieren
  637                   ;-------
  638                   ; Anzeige des freien Speicherplatzes,
  639                   ; Ausgabekanal und Menue-Fenster einstellen:
  640 C382  2A B7A0     FREE:	LD	HL,(CURSO)
  641 C385  E5          	PUSH	HL		; aktuelle Cursorposition merken
  642 C386  3E 01       	LD	A,1
  643 C388  32 B79D     	LD	(WINON+1),A	; Zeile 1
  644 C38B  21 001D     	LD	HL,001DH	; Spalte
  645 C38E  22 B7A0     	LD	(CURSO),HL
  646 C391  CD F003     	CALL	PV1
  647 C394  23          	DB	OSTR
  648 C395  46 72 65 69 	DB	'Frei:',0
  649 C39B  2A 001E     	LD	HL,(T2A)	; Beginn Teiltext 2
  650 C39E  ED 5B 001C  	LD	DE,(T1E)	; Ende Teiltext 1
  651 C3A2  AF          	XOR	A
  652 C3A3  ED 52       	SBC	HL,DE		; das was dazwischen liegt, ist frei
  653 C3A5  CD F003     	CALL	PV1
  654 C3A8  1A          	DB	HLHX		; hexadezimal anzeigen
  655 C3A9  CD F003     	CALL	PV1
  656 C3AC  23          	DB	OSTR
  657 C3AD  08 48 00    	DB	8,'H',0		; HEX-Kennung anhaengen
  658 C3B0  3E 04       FRE2:	LD	A,4
  659 C3B2  32 B79D     	LD	(WINON+1),A
  660 C3B5  E1          	POP	HL		; aktuelle Cursorposition
  661 C3B6  22 B7A0     	LD	(CURSO),HL	; regenerieren
  662 C3B9  C9          	RET
  663                   ;-------
  664                   ; Anzeige des aktuellen Devices von CAOS 4.6+:
  665 C3BA              PERI:	;LD	A,(CAOSNR)	; CAOS-Version
  666                   	;CP	46h		; CAOS 4.6 oder hoeher?
  667                   	;RET	C		; bis CAOS 4.5 gab es das noch nicht...
  668 C3BA  2A B7A0     	LD	HL,(CURSO)
  669 C3BD  E5          	PUSH	HL		; aktuelle Cursorposition merken
  670 C3BE  3E 01       	LD	A,1
ASM V2.1								    SLR180 1.31 Page  16
ASM21   Z80

  671 C3C0  32 B79D     	LD	(WINON+1),A	; Zeile 1
  672 C3C3  21 0013     	LD	HL,0013H
  673 C3C6  22 B7A0     	LD	(CURSO),HL	; Pos. fuer Anzeige des DEVICE
  674 C3C9  3E 28       	LD	A,'('
  675 C3CB  CD F003     	CALL	PV1
  676 C3CE  00          	DB	CRT
  677 C3CF  06 09       	LD	B,9
  678 C3D1  CD F003     PER1:	CALL	PV1
  679 C3D4  2B          	DB	SPACE		; alte Anzeige loeschen
  680 C3D5  10 FA       	DJNZ	PER1
  681 C3D7  3E 14       	LD	A,14H
  682 C3D9  32 B7A0     	LD	(CURSO),A	; Position regenerieren
  683 C3DC  3E FE       	LD	A,0FEh		; aktuellen Treiber anzeigen
  684 C3DE  CD F003     	CALL	PV1
  685 C3E1  49          	DB	DEVICE		; 49H - neue Funktion ab CAOS 4.6
  686                   
  687                   ; falls Diskette und DEP 2.0 dann Laufwerk anzeigen...
  688                   
  689 C3E2  11 0014     	LD	DE,14H		; Cursorposition von DEVICE-Name
  690 C3E5  CD F003     	CALL	PV1		; umrechnen in VRAM-Adresse
  691 C3E8  32          	DB	DABR		; HL = VRAM
  692 C3E9  11 C42C     	LD	DE,DISKN	; Vergleichsname DISK
  693 C3EC  01 0004     	LD	BC,4		; 4 Zeichen kontrollieren
  694 C3EF  1A          LWA0:	LD	A,(DE)
  695 C3F0  13          	INC	DE
  696 C3F1  ED A1       	CPI			; Diskette?
  697 C3F3  20 2F       	JR	NZ,LWA3		; nein
  698 C3F5  EA C3EF     	JP	PE,LWA0
  699 C3F8  21 003E     	LD	HL,STAT
  700 C3FB  CB 4E       	BIT	1,(HL)		; DEP ab Version 2.0?
  701 C3FD  28 25       	JR	Z,LWA3		; nein
  702 C3FF  CD F003     	CALL	PV1
  703 C402  23          	DB	OSTR
  704 C403  3A 00       	DB	':',0
  705 C405  3E 01       	LD	A,1		; Lw anfordern
  706 C407  01 80F1     	LD	BC,80F1H
  707 C40A  ED 79       	OUT	(C),A
  708 C40C  ED 78       LWA1:	IN	A,(C)
  709 C40E  CB 47       	BIT	0,A		; Rueckmeldung?
  710 C410  20 FA       	JR	NZ,LWA1		; nein, warten
  711 C412  04          	INC	B		; 81F1H
  712 C413  ED 78       	IN	A,(C)		; Laufwerk
  713 C415  CD C562     	CALL	CHR
  714 C418  04          	INC	B		; 82F1H
  715 C419  ED 78       	IN	A,(C)		; akt. User
  716 C41B  C6 90       	ADD	A,90H
  717 C41D  27          	DAA			; Hex-Umrechnung
  718 C41E  CE 40       	ADC	A,40H
  719 C420  27          	DAA
  720 C421  CD C562     	CALL	CHR		; Userbereich
  721 C424  3E 29       LWA3:	LD	A,')'
  722 C426  CD F003     	CALL	PV1
  723 C429  00          	DB	CRT
  724 C42A  18 84       	JR	FRE2		; Fenster regenerieren
  725                   	;
  726 C42C  44 49 53 4B DISKN:	DB	'DISK'
  727                   ;-------
  728                   ; MTOP und Text-2-Grenzen aktuell setzen
  729                   ;
  730 C430  2A 0044     MMEND:	LD	HL,(MBOT)	; Speicherende
  731 C433  22 0046     MMTOP:	LD	(MTOP),HL	; Beginn Markentabelle
  732 C436  2B          	DEC	HL
  733 C437  22 001A     	LD	(T2E),HL	; Textende direkt vor MTAB
  734 C43A  22 001E     	LD	(T2A),HL	; kein Text im Teil 2
  735 C43D  3E 03       	LD	A,3
  736 C43F  C3 0092     	JP	PUT		; Ende-Kennung
  737                   ;-------
  738 C442  DDDD        	DEFW	0DDDDH
  739 C444  51 55 49 54 	DB	'QUIT',1
  740 C449  CD C308     	CALL	WIN0		; grosses Fenster
  741 C44C  21 B7A1     	LD	HL,CURSO+1
  742 C44F  7E          	LD	A,(HL)
  743 C450  C6 04       	ADD	A,4		; Zeile korrigieren
  744 C452  77          	LD	(HL),A
  745 C453  23          	INC	HL		; STBT
  746 C454  CB 8E       	RES	1,(HL)		; Schreiben Farbe ein
  747 C456  E1          	POP	HL		; Stack reinigen
  748                   
ASM V2.1								    SLR180 1.31 Page  17
ASM21   Z80

  749                   ; Beenden und USER-ROM abschalten
  750                   
  751 C457  ED 5B B77F  EXIT2:	LD	DE,(ARGC-1)	; D = urspruenglicher Schaltzustand USER-C
  752 C45B  3E 02       	LD	A,2		; USER-ROM
  753 C45D  6F          	LD	L,A		; schalten
  754 C45E  1E 26       	LD	E,MODU
  755 C460  C3 F009     	JP	PV3		; zuerst USER-ROM schalten, dann RET zu CAOS
  756                   ;-------
  757 C463  DDDD        	DEFW	0DDDDH
  758 C465  43 4C 45 41 	DB	'CLEAR',1Fh
  759 C46B  2A 001C     	LD	HL,(T1E)
  760 C46E  ED 5B 0018  	LD	DE,(T1A)
  761 C472  A7          	AND	A
  762 C473  ED 52       	SBC	HL,DE
  763 C475  44          	LD	B,H
  764 C476  4D          	LD	C,L
  765 C477  2A 001A     	LD	HL,(T2E)
  766 C47A  ED 5B 001E  	LD	DE,(T2A)
  767 C47E  ED 52       	SBC	HL,DE
  768 C480  09          	ADD	HL,BC		; Laenge Text 1 + 2
  769 C481  7C          	LD	A,H
  770 C482  B5          	OR	L
  771 C483  28 2B       	JR	Z,CLEA1		; kein Text
  772 C485  CD F003     	CALL	PV1
  773 C488  23          	DB	OSTR
  774 C489  0D 44 65 6C 	DB	CR,'Delete Text',0
  775 C496  CD C834     	CALL	YESNO
  776 C499  38 15       	JR	C,CLEA1		; nein
  777 C49B  CD C4DB     	CALL	NACLR		; Dateiname loeschen
  778 C49E  2A 0018     	LD	HL,(T1A)
  779 C4A1  22 001C     	LD	(T1E),HL	; Text 1 loeschen
  780 C4A4  2A 001A     	LD	HL,(T2E)
  781 C4A7  22 001E     	LD	(T2A),HL	; Text 2 loeschen
  782 C4AA  CD C382     	CALL	FREE		; Free aktualisieren
  783 C4AD  CD C4E6     	CALL	HOM		; EDIT-Cursor Home
  784 C4B0  2A 0044     CLEA1:	LD	HL,(MBOT)	; Speicherende
  785 C4B3  ED 5B 0046  	LD	DE,(MTOP)
  786 C4B7  A7          	AND	A
  787 C4B8  ED 52       	SBC	HL,DE
  788 C4BA  C8          	RET	Z		; keine Labels vorhanden
  789 C4BB  CD F003     	CALL	PV1
  790 C4BE  23          	DB	OSTR
  791 C4BF  0D 44 65 6C 	DB	CR,'Delete Labels',0
  792 C4CE  CD C834     	CALL	YESNO
  793 C4D1  D8          	RET	C		; nein
  794 C4D2  CD C910     	CALL	TXANF		; Text an Speicheranfang
  795 C4D5  CD C430     	CALL	MMEND		; Textende auf Speicherende setzen
  796 C4D8  C3 C957     	JP	TOP		; Text an Speicherende
  797                   ;
  798                   ; Dateiname loeschen:
  799                   ;
  800 C4DB  21 B7F5     NACLR:	LD	HL,NAMP		; Namenpuffer
  801 C4DE  06 0B       	LD	B,11		; 11 Zeichen lang
  802 C4E0  36 20       NACL1:	LD	(HL),' '	; Leerzeichen eintragen
  803 C4E2  23          	INC	HL
  804 C4E3  10 FB       	DJNZ	NACL1
  805 C4E5  C9          	RET
  806                   ;-------
  807 C4E6  11 0000     HOM:	LD	DE,0
  808 C4E9  ED 53 0020  	LD	(COL),DE	; EDIT-Cursor home
  809 C4ED  C9          	RET
  810                   ;-------
  811 C4EE  DDDD        	DEFW	0DDDDH
  812 C4F0  53 41 56 45 	DB	'SAVE',1Fh
  813 C4F5  CD C957     	CALL	TOP		; Text an Speicherende
  814 C4F8  ED 5B 001E  SAV1:	LD	DE,(T2A)
  815 C4FC  2A 001A     	LD	HL,(T2E)	; Ende Text 2
  816 C4FF  AF          	XOR	A
  817 C500  ED 52       	SBC	HL,DE		; Text vorhanden?
  818 C502  C8          	RET	Z		; nein
  819 C503  CD C8AF     	CALL	NA_ASM		; Dateiname *.ASM eingeben
  820 C506  D8          	RET	C		; BRK
  821 C507  CD C55D     	CALL	LFCR
  822 C50A  CD C8FC     	CALL	KPINI		; Kassettenpuffer initialisieren
  823                   	;
  824 C50D  21 0000     	LD	HL,NAME0	; Dateiname
  825 C510  CD F003     	CALL	PV1
  826 C513  08          	DB	ISRO		; Vorblock ausgeben
ASM V2.1								    SLR180 1.31 Page  18
ASM21   Z80

  827 C514  D8          	RET	C		; Fehler -> Abbruch
  828 C515  ED 5B 001E  	LD	DE,(T2A)	; Beginn
  829 C519  21 B780     SAV2:	LD	HL,CASS+80H
  830 C51C  45          	LD	B,L		; 1 Block
  831 C51D  3E 1A       	LD	A,1Ah		; Puffer mit 1Ah vorbelegen (Endezeichen CP/M)
  832 C51F  2D          SAV3:	DEC	L
  833 C520  77          	LD	(HL),A		; Kassettenpuffer loeschen (mit 1Ah)
  834 C521  20 FC       	JR	NZ,SAV3
  835 C523  CD 008C     SAV4:	CALL	GETDE		; Datenbyte aus Textspeicher holen
  836 C526  13          	INC	DE
  837 C527  77          	LD	(HL),A		; in IRM (Kassettenpuffer) ablegen
  838 C528  FE 03       	CP	3
  839 C52A  28 03       	JR	Z,SAV5		; Ende-Kennung erkannt
  840 C52C  23          	INC	HL
  841 C52D  10 F4       	DJNZ	SAV4
  842 C52F  DD 7E 02    SAV5:	LD	A,(IX+2)	; Blocknummer
  843 C532  CD F003     	CALL	PV1
  844 C535  1C          	DB	AHEX		; Blocknr. anzeigen
  845 C536  CD F003     	CALL	PV1
  846 C539  23          	DB	OSTR
  847 C53A  08 08 00    	DB	8,8,0		; Cursor zurueck vor Blocknr.
  848 C53D  CD F003     	CALL	PV1
  849 C540  2A          	DB	BRKT
  850 C541  01 00A0     	LD	BC,160		; kurzer Vorton
  851 C544  38 10       	JR	C,SAV8		; BRK
  852 C546  2A 001A     	LD	HL,(T2E)	; Textende
  853 C549  ED 52       	SBC	HL,DE		; letzter Block?
  854 C54B  38 09       	JR	C,SAV8
  855 C54D  D5          	PUSH	DE		; Textpointer
  856 C54E  CD F003     	CALL	PV1
  857 C551  01          	DB	MBO		; Daten-Block ausgeben
  858 C552  D1          	POP	DE
  859 C553  D8          	RET	C		; Error -> Abbruch
  860 C554  18 C3       	JR	SAV2		; naechster Block
  861                   	;
  862 C556  CD F003     SAV8:	CALL	PV1
  863 C559  09          	DB	CSRO		; Close (Ausgabe letzter Block)
  864 C55A  D4 C621     	CALL	NC,LOA13	; Dateiname uebernehmen
  865 C55D  CD F003     LFCR:	CALL	PV1
  866 C560  2C          	DB	CRLF
  867 C561  C9          	RET
  868                   ;-------
  869 C562  CD F003     CHR:	CALL	PV1
  870 C565  24          	DB	OCHR
  871 C566  C9          	RET
  872                   ;-------
  873 C567  DDDD        	DEFW	0DDDDH
  874 C569  4C 4F 41 44 	DB	'LOAD',1Fh
  875 C56E  3E FD       	LD	A,0FDH		; Treiber abfragen
  876 C570  CD F003     	CALL	PV1
  877 C573  49          	DB	DEVICE		; Kassette?
  878 C574  28 07       	JR	Z,CON0		; bei Kassette Dateiname nicht abfragen
  879 C576  CD C8AF     	CALL	NA_ASM		; Dateiname *.ASM eingeben -> NAME0
  880 C579  D8          	RET	C		; BRK
  881 C57A  CD C55D     	CALL	LFCR
  882 C57D  CD C4E6     CON0:	CALL	HOM		; EDIT-Cursor Home
  883 C580  21 B700     	LD	HL,CASS		; Kassettenpuffer
  884 C583  DD 75 05    	LD	(IX+5),L
  885 C586  DD 74 06    	LD	(IX+6),H
  886 C589  DD CB 07 C6 	SET	0,(IX+7)	; Read, nicht Verify
  887 C58D  21 0000     	LD	HL,NAME0	; Name an ISRI uebergeben
  888 C590  CD F003     	CALL	PV1
  889 C593  0A          	DB	ISRI
  890 C594  30 01       	JR	NC,LOA0		; kein Fehler
  891 C596  C9          	RET
  892                   	;
  893 C597  AF          LOA0:	XOR	A		; Z=1 (Daten aus Puffer entnehmen!)
  894 C598  CD C633     LOA1:	CALL	BLRD		; (Vor-) Block lesen
  895 C59B  38 76       	JR	C,LOA9		; BRK oder Fehler
  896 C59D  3E FD       	LD	A,0FDH		; Treiber abfragen
  897 C59F  CD F003     	CALL	PV1
  898 C5A2  49          	DB	DEVICE
  899 C5A3  20 1C       	JR	NZ,LOA4D	; nicht Kassette
  900                   ; Bei Kassette, Name aus Vorblock anzeigen und speichern:
  901 C5A5  3E 02       	LD	A,2		; Zeile loeschen
  902 C5A7  CD C562     	CALL	CHR
  903 C5AA  11 0000     	LD	DE,NAME0	; Name hier zwischenspeichern
  904 C5AD  21 B700     	LD	HL,CASS
ASM V2.1								    SLR180 1.31 Page  19
ASM21   Z80

  905 C5B0  01 000B     	LD	BC,11
  906 C5B3  7E          LOA3A:	LD	A,(HL)		; Zeichen aus Kassettenpuffer
  907 C5B4  FE 20       	CP	' '
  908 C5B6  D4 C562     	CALL	NC,CHR		; anzeigen
  909 C5B9  ED A0       	LDI			; und in Puffer kopieren
  910 C5BB  EA C5B3     	JP	PE,LOA3A	; bis alle 11 Zeichen abgearbeitet sind
  911 C5BE  CD C55D     	CALL	LFCR
  912 C5C1  DD 36 03 02 LOA4D:	LD	(IX+3),2	; Block Nr. 2 erwarten (1. Datenblock)
  913 C5C5  ED 5B 001C  	LD	DE,(T1E)	; Ladebeginn
  914 C5C9  2A 001E     LOA5:	LD	HL,(T2A)	; max. Endadresse
  915 C5CC  A7          	AND	A
  916 C5CD  ED 52       	SBC	HL,DE
  917 C5CF  28 5C       	JR	Z,LOA10		; no Memory
  918 C5D1  E5          	PUSH	HL
  919 C5D2  CD C633     	CALL	BLRD		; Block lesen
  920 C5D5  E1          	POP	HL
  921 C5D6  38 25       	JR	C,LOA8		; BRK oder Fehler
  922 C5D8  01 0080     	LD	BC,128
  923 C5DB  ED 42       	SBC	HL,BC
  924 C5DD  30 02       	JR	NC,LOA6		; voller Block
  925 C5DF  09          	ADD	HL,BC
  926                   ;	LD	B,H		; B ist bereits 0
  927 C5E0  4D          	LD	C,L		; BC=restliche Anzahl
  928 C5E1  21 B700     LOA6:	LD	HL,CASS
  929 C5E4  7E          LOA7:	LD	A,(HL)		; Zeichen aus Puffer entnehmen
  930 C5E5  FE 03       	CP	3		; CAOS-Ende?
  931 C5E7  28 14       	JR	Z,LOA8		; ja
  932 C5E9  FE 1A       	CP	1Ah		; CP/M-Ende?
  933 C5EB  28 10       	JR	Z,LOA8		; ja
  934 C5ED  7E          	LD	A,(HL)		; aus IRM
  935 C5EE  23          	INC	HL
  936 C5EF  EB          	EX	DE,HL
  937 C5F0  CD 0092     	CALL	PUT		; Datenbyte in Textspeicher schreiben
  938 C5F3  EB          	EX	DE,HL
  939 C5F4  13          	INC	DE
  940 C5F5  0D          	DEC	C		; Anzahl-1
  941 C5F6  20 EC       	JR	NZ,LOA7
  942 C5F8  DD 34 03    	INC	(IX+3)		; naechste Blocknummer
  943 C5FB  18 CC       	JR	LOA5
  944                   	;
  945 C5FD  2A 001C     LOA8:	LD	HL,(T1E)	; Textende vor Laden
  946 C600  EB          	EX	DE,HL
  947 C601  CD C99B     	CALL	TXE5		; Text verschieben
  948 C604  2A 001A     	LD	HL,(T2E)
  949 C607  2B          	DEC	HL
  950 C608  3E 0A       	LD	A,LF
  951 C60A  CD 0092     	CALL	PUT
  952 C60D  2B          	DEC	HL
  953 C60E  3E 0D       	LD	A,CR
  954 C610  CD 0092     	CALL	PUT
  955 C613              LOA9:	;POP	HL		; Name vergessen
  956 C613  CD F003     	CALL	PV1
  957 C616  0B          	DB	CSRI		; Datei schliessen
  958 C617  CD C55D     	CALL	LFCR		; CAOS 4.6: Zeilenvorschub nicht mehr in CSRI
  959 C61A  3A 0022     LOA11:	LD	A,(M4A)
  960 C61D  B7          	OR	A
  961 C61E  C2 C816     	JP	NZ,MEM		; no Memory
  962                   ; nach erfolgreichem LOAD/SAVE: Dateiname jetzt uebernehmen
  963 C621  21 0000     LOA13:	LD	HL,NAME0	; benutzter Dateiname
  964 C624  11 B7F5     	LD	DE,NAMP		; als aktuelle Datei
  965 C627  01 000B     	LD	BC,11		; im Format 8.3
  966 C62A  ED B0       	LDIR			; jetzt uebernehmen
  967 C62C  C9          	RET
  968                   ;
  969 C62D  3C          LOA10:	INC	A
  970 C62E  32 0022     	LD	(M4A),A
  971 C631  18 CA       	JR	LOA8
  972                   ;-------
  973                   ; Block einlesen:
  974                   ; PE:	(IX+3)	erwarteter Block
  975                   ;	Z=1	1. Block (nur Puffer entnehmen!)
  976                   ;	Z=0	folgenden Block lesen
  977                   ; PA:	CY=1	BRK betaetigt oder Fehler bei Diskette
  978                   ; VR:	HL,AF
  979 C633  2E 04       BLRD:	LD	L,4		; 4 Versuche
  980 C635  20 06       	JR	NZ,BLRD1
  981 C637  DD CB 07 FE 	SET	7,(IX+7)	; Init merken, wenn Vorblock
  982 C63B  18 26       	JR	BLRD2		; Daten uebernehmen
ASM V2.1								    SLR180 1.31 Page  20
ASM21   Z80

  983                   	;
  984 C63D  CD F003     BLRD1:	CALL	PV1
  985 C640  2A          	DB	BRKT
  986 C641  D8          	RET	C		; BRK
  987 C642  DD 7E 03    	LD	A,(IX+3)	; 1. Datenblock erwartet?
  988 C645  FE 02       	CP	2
  989 C647  20 15       	JR	NZ,BLRD0	; nein
  990 C649  DD CB 07 7E 	BIT	7,(IX+7)	; war vorher Init?
  991 C64D  28 0F       	JR	Z,BLRD0		; nein
  992 C64F  DD CB 07 BE 	RES	7,(IX+7)	; Init ruecksetzen
  993 C653  3A B710     	LD	A,(CASS+10H)
  994 C656  A7          	AND	A		; echter CAOS-Vorblock?
  995 C657  28 05       	JR	Z,BLRD0		; ja
  996 C659  DD 35 03    	DEC	(IX+3)		; Blocknummer wie vorher
  997 C65C  18 05       	JR	BLRD2		; als Daten einlesen!
  998                   	;
  999 C65E  CD F003     BLRD0:	CALL	PV1
 1000 C661  05          	DB	MBI		; Block einlesen
 1001 C662  D8          	RET	C		; Fehler
 1002 C663  3E 01       BLRD2:	LD	A,1
 1003 C665  3D          	DEC	A		; Z=1, CY unveraendert!
 1004 C666  DD 7E 02    	LD	A,(IX+2)	; Blocknummer
 1005 C669  F5          	PUSH	AF
 1006 C66A  DD BE 03    	CP	(IX+3)		; richtige Blocknummer?
 1007 C66D  28 08       	JR	Z,BLRD3		; ja
 1008 C66F  3C          	INC	A		; Z=0
 1009 C670  20 21       	JR	NZ,BLRD5	; nicht Block FF
 1010 C672  7D          	LD	A,L
 1011 C673  FE 04       	CP	4		; Block FF im 1. Versuch?
 1012 C675  20 1C       	JR	NZ,BLRD5	; nein
 1013 C677  F1          BLRD3:	POP	AF
 1014 C678  38 08       	JR	C,BLRD4		; Lesefehler
 1015 C67A  F5          	PUSH	AF
 1016 C67B  3E 02       	LD	A,2
 1017 C67D  CD F003     	CALL	PV1		; Zeile loeschen
 1018 C680  00          	DB	CRT
 1019 C681  F1          	POP	AF
 1020 C682  F5          BLRD4:	PUSH	AF
 1021 C683  CD F003     	CALL	PV1
 1022 C686  1C          	DB	AHEX		; Blocknr.
 1023 C687  F1          	POP	AF
 1024 C688  38 0F       	JR	C,BLRD6		; Lesefehler
 1025 C68A  CD F003     	CALL	PV1
 1026 C68D  23          	DB	OSTR
 1027 C68E  3E 20 00    	DB	'> ',0		; ok
 1028 C691  A7          	AND	A		; CY=0
 1029 C692  C9          	RET
 1030                   	;
 1031 C693  F1          BLRD5:	POP	AF
 1032 C694  37          	SCF			; CY=1, Lesefehler setzen
 1033 C695  2C          	INC	L
 1034 C696  2D          	DEC	L		; Z=0, falscher Block
 1035 C697  18 E9       	JR	BLRD4
 1036                   	;
 1037 C699  28 0B       BLRD6:	JR	Z,BLRD7		; Blocknr. richtig
 1038 C69B  CD F003     	CALL	PV1
 1039 C69E  23          	DB	OSTR
 1040 C69F  2A 08 08 08 	DB	'*',8,8,8,0	; falsche Blocknr.
 1041 C6A4  18 97       	JR	BLRD1		; weiterversuchen
 1042                   	;
 1043 C6A6  67          BLRD7:	LD	H,A
 1044 C6A7  2D          	DEC	L		; Leseversuche zaehlen
 1045 C6A8  28 0A       	JR	Z,BLRD8		; letzter Versuch
 1046 C6AA  CD F003     	CALL	PV1
 1047 C6AD  23          	DB	OSTR
 1048 C6AE  3F 20 07 00 	DB	'? ',7,0	; Lesefehler!
 1049 C6B2  18 89       	JR	BLRD1
 1050                   	;
 1051 C6B4  CD F003     BLRD8:	CALL	PV1
 1052 C6B7  23          	DB	OSTR
 1053 C6B8  21 0A 0D 00 	DB	'!',LF,CR,0	; Block fehlerhaft uebernommen
 1054 C6BC  A7          	AND	A		; CY=0
 1055 C6BD  C9          	RET
 1056                   ;-------
 1057 C6BE  DDDD        	DEFW	0DDDDH
 1058 C6C0  56 45 52 49 	DB	'VERIFY',1Fh
 1059 C6C7  CD F003     	CALL	PV1
 1060 C6CA  11          	DB	VERIF
ASM V2.1								    SLR180 1.31 Page  21
ASM21   Z80

 1061 C6CB  C9          	RET
 1062                   ;-------
 1063                   ; KEY		KEYLIST
 1064                   ; KEY 0		Defaultbelegung fuer KC-Tastatur
 1065                   ; KEY D5	Defaultbelegung fuer D005-Tastatur
 1066                   ; KEY 1-F	F-Taste belegen
 1067                   ;
 1068 C6CC  DDDD        	DEFW	0DDDDH
 1069 C6CE  4B 45 59 01 	DB	'KEY',1
 1070 C6D2  B7          	OR	A
 1071 C6D3  20 05       	JR	NZ,KEYL
 1072 C6D5  CD F003     	CALL	PV1
 1073 C6D8  3A          	DB	KEYLI		; KEYLIST
 1074 C6D9  C9          	RET
 1075                   	;
 1076 C6DA  7D          KEYL:	LD	A,L
 1077 C6DB  B7          	OR	A
 1078 C6DC  28 09       	JR	Z,KEY0		; KEY 0
 1079 C6DE  FE D5       	CP	0D5H
 1080 C6E0  28 0C       	JR	Z,KEYD5		; KEY D5
 1081 C6E2  CD F003     	CALL	PV1
 1082 C6E5  39          	DB	KEY		; F-Taste belegen
 1083 C6E6  C9          	RET
 1084                   	;
 1085 C6E7  21 C713     KEY0:	LD	HL,KEB		; KC-Tastatur
 1086 C6EA  06 03       	LD	B,3		; 3 Tasten bei ext. Editor
 1087 C6EC  18 05       	JR	KEYBEL
 1088                   	;
 1089 C6EE  21 C708     KEYD5:	LD	HL,KEA		; D005-Tastatur
 1090 C6F1  06 0B       	LD	B,11		; 11 Tasten
 1091 C6F3  11 B900     KEYBEL:	LD	DE,FTASTE	; 0B900H
 1092 C6F6  AF          	XOR	A
 1093 C6F7  12          KEYNEU:	LD	(DE),A		; Trennung
 1094 C6F8  13          	INC	DE
 1095 C6F9  ED A0       	LDI			; Tastencode
 1096 C6FB  03          	INC	BC		; BC unveraendert
 1097 C6FC  10 F9       	DJNZ	KEYNEU
 1098 C6FE  EB          	EX	DE,HL
 1099 C6FF  36 00       KCL:	LD	(HL),0		; Rest loeschen
 1100 C701  23          	INC	HL
 1101 C702  7D          	LD	A,L
 1102 C703  FE 9C       	CP	9CH
 1103 C705  20 F8       	JR	NZ,KCL
 1104 C707  C9          	RET
 1105                   ;
 1106                   ; Funktionstastencodes:
 1107                   ;
 1108 C708  5B          KEA:	DB	'['	; F1	D005-Tastatur
 1109 C709  5C          	DB	'\'	; F2
 1110 C70A  5D          	DB	']'	; F3
 1111 C70B  7E          	DB	'~'	; F4
 1112 C70C  05          	DB	5	; F5	TAB
 1113 C70D  06          	DB	6	; F6	weitersuchen
 1114 C70E  7B          	DB	'{'	; F7
 1115 C70F  7C          	DB	'|'	; F8
 1116 C710  7D          	DB	'}'	; F9
 1117 C711  60          	DB	'`'	; F10
 1118 C712  7F          	DB	''	; F11
 1119                   ;
 1120 C713  1B          KEB:	DB	ESC	; F1	ESC
 1121 C714  05          	DB	5	; F2	TAB
 1122 C715  06          	DB	6	; F3	weitersuchen
 1123                   ;-------
 1124                   ;	Bit	 76543210	Bit-Position in Speicherzelle OPT
 1125 C716  32 4F 42 53 OPTAB:	DB	'2OBS1+PL'	; Assembler-Optionen
 1126                   ;
 1127 C71E  DDDD        	DEFW	0DDDDH
 1128 C720  41 53 4D 1F 	DB	'ASM',1Fh
 1129 C724  CD F003     ASM:	CALL	PV1
 1130 C727  23          	DB	OSTR
 1131 C728  4F 70 74 69 	DB	'Options(+,1,2,B,L,O,P,S)?:',0
 1132 C743  01 1A22     	LD	BC,1A22H
 1133 C746  CD C85C     	CALL	INPUT
 1134 C749  D8          	RET	C		; wenn BRK-Taste
 1135 C74A  11 C716     	LD	DE,OPTAB
 1136 C74D  06 08       	LD	B,8		; 8 Bit
 1137 C74F  E5          ASM1:	PUSH	HL		; eingeg. Optionen
 1138 C750  C5          	PUSH	BC
ASM V2.1								    SLR180 1.31 Page  22
ASM21   Z80

 1139 C751  1A          	LD	A,(DE)		; OPTAB
 1140 C752  13          	INC	DE
 1141 C753  01 0009     	LD	BC,9		; Breite Eingabefenster
 1142 C756  ED B1       	CPIR			; Option dabei?
 1143 C758  37          	SCF			; setzen
 1144 C759  28 01       	JR	Z,ASM2		; ja
 1145 C75B  3F          	CCF			; ruecksetzen
 1146 C75C  21 003F     ASM2:	LD	HL,OPT		; Speicherzelle fuer die Assembler-Optionen
 1147 C75F  CB 16       	RL	(HL)		; Bit einschieben
 1148 C761  C1          	POP	BC
 1149 C762  E1          	POP	HL
 1150 C763  10 EA       	DJNZ	ASM1		; fuer 8 Bit wiederholen
 1151 C765  CD C55D     	CALL	LFCR
 1152 C768  3A 003F     	LD	A,(OPT)
 1153 C76B  E6 88       	AND	88H		; nur Option '1' und '2' testen
 1154 C76D  FE 88       	CP	88H		; beide dabei?
 1155 C76F  CA D97F     	JP	Z,DERR		; ja (Unsinn!) -> ERROR
 1156 C772  CD C4E6     	CALL	HOM
 1157 C775  CD C910     	CALL	TXANF		; an Textanfang verschieben
 1158 C778  21 C957     	LD	HL,TOP
 1159 C77B  E5          	PUSH	HL		; RET-Adresse nach ASM!
 1160 C77C  CD C55D     	CALL	LFCR
 1161 C77F  2A 001C     	LD	HL,(T1E)	; Ende Quelltext
 1162 C782  3E 03       	LD	A,3		; Textende markieren
 1163 C784  CD 0092     	CALL	PUT
 1164 C787  2A 0018     	LD	HL,(T1A)	; Beginn Quelltext
 1165 C78A  E5          	PUSH	HL		; Anfangsadresse merken
 1166 C78B  21 003F     	LD	HL,OPT
 1167 C78E  7E          	LD	A,(HL)
 1168 C78F  CB A6       	RES	4,(HL)		; Option '3' ruecksetzen
 1169 C791  BE          	CP	(HL)
 1170 C792  2B          	DEC	HL		; HL=STAT
 1171 C793  CB 9E       	RES	3,(HL)		; Option 'S' ruecksetzen
 1172 C795  28 02       	JR	Z,ASM4		; 'S' war auch nicht dabei
 1173 C797  CB DE       	SET	3,(HL)		; Option 'S' setzen
 1174 C799  E6 84       ASM4:	AND	84H		; Option '+' oder '2'?
 1175 C79B  CC C430     	CALL	Z,MMEND		; nein, Textende auf Speicherende setzen
 1176 C79E  C3 CD74     	JP	ASMII
 1177                   ;-------
 1178                   ;
 1179                   ; Umschaltroutine zu ext. Editor und zurueck
 1180                   ;
 1181 C7A1  DDDD        	DEFW	0DDDDH
 1182 C7A3  45 44 49 54 	DB	'EDIT',1Fh
 1183 C7A8  21 C7B5     EDIT:	LD	HL,SWITCH	; Hilfsprogramme
 1184 C7AB  11 BFCC     	LD	DE,0C000H-SWI2+SWITCH
 1185 C7AE  D5          	PUSH	DE
 1186 C7AF  01 0034     	LD	BC,SWI2-SWITCH
 1187 C7B2  ED B0       	LDIR			; Umschaltroutine in den IRM kopieren
 1188 C7B4  C9          	RET			; und dort abarbeiten
 1189                   ;
 1190 C7B5  21 C55A     SWITCH:	LD	HL,0C55AH	; Einsprungadresse Editor
 1191 C7B8  16 F1       	LD	D,0F1h		; zu Editor-Ebene
 1192 C7BA  18 13       	JR	SWI1
 1193                   ;-------
 1194                   ; Menuewort im Editor, wird aus EDAS kopiert bei Wechsel von ASM zu EDIT
 1195                   ; (steht im IRM, deshalb vor dem gleichnamigen Menuewort im Editor)
 1196                   ;
 1197 C7BC  DDDD        QM:	DW	0DDDDH
 1198 C7BE  51 55 49 54 	DB	'QUIT ',1	; nicht sichtbar durch Leerzeichen am Ende
 1199 C7C4  21 C7E9     	LD	HL,SWI2		; RET-Adresse
 1200 C7C7  32 BFD3     SWI0:	LD	(0C000H+QM-SWI2),A	; Menuewort QUIT im IRM loeschen
 1201 C7CA  32 BFF5     	LD	(0C000H+AM-SWI2),A	; Menuewort ASM im IRM loeschen
 1202 C7CD  16 E1       	LD	D,0E1h		; zu EDAS-Ebene
 1203 C7CF  E3          SWI1:	EX	(SP),HL		; RET-Adresse austauschen
 1204 C7D0  3E 02       	LD	A,2		; schalten
 1205 C7D2  6F          	LD	L,A		; Steckplatz 2
 1206 C7D3  CD F003     	CALL	PV1
 1207 C7D6  26          	DB	MODU
 1208 C7D7  21 BFF5     	LD	HL,0C000H+AM-SWI2	; Menuewort ASM im IRM
 1209 C7DA  7E          	LD	A,(HL)		; Prologbyte Low
 1210 C7DB  23          	INC	HL		; Prologbyte High
 1211 C7DC  77          	LD	(HL),A		; Menuewort im IRM aktivieren
 1212 C7DD  C9          	RET
 1213                   ;-------
 1214                   ; Menuewort im Editor, wird aus EDAS kopiert bei Wechsel von ASM zu EDIT
 1215                   ;
 1216 C7DE  00DD        AM:	DW	0DDH		; Prolog wird erst im RAM komplett aktiviert
ASM V2.1								    SLR180 1.31 Page  23
ASM21   Z80

 1217 C7E0  41 53 4D 1F 	DB	'ASM',1FH
 1218 C7E4  21 C7EF     	LD	HL,SWI3		; RET-Adresse zu ASM
 1219 C7E7  18 DE       	JR	SWI0		; Ebene umschalten
 1220                   	;
 1221 C7E9  CD C0A5     SWI2:	CALL	NORAM		; Hilfsprogramme fuer EDAS regenerieren
 1222 C7EC  C3 C231     	JP	MAIN		; zum kurzen Menu
 1223                   	;
 1224 C7EF  CD C0A5     SWI3:	CALL	NORAM		; Hilfsprogramme fuer EDAS regenerieren
 1225 C7F2  CD C724     	CALL	ASM		; Kommando ASM direkt aufrufen
 1226 C7F5  C3 C2BB     	JP	LOOP2		; dann zum Menu
 1227                   ;-------
 1228                   ; Abfrage BRK und STOP (bei STOP auf naechste Taste warten):
 1229                   ; PA:	CY=1	BRK betaetigt
 1230 C7F8  CD F003     BRKS:	CALL	PV1
 1231 C7FB  0C          	DB	KBDS
 1232 C7FC  D0          	RET	NC		; keine Taste gedrueckt
 1233 C7FD  FE 03       	CP	3		; BRK?
 1234 C7FF  37          	SCF
 1235 C800  C8          	RET	Z
 1236 C801  FE 13       STOP:	CP	13H		; STOP?
 1237 C803  37          	SCF
 1238 C804  3F          	CCF
 1239 C805  C0          	RET	NZ		; nicht STOP
 1240 C806  CD C80C     	CALL	KEYB		; auf Taste warten
 1241 C809  D8          	RET	C		; BRK
 1242 C80A  18 F5       	JR	STOP
 1243 C80C  CD F003     KEYB:	CALL	PV1
 1244 C80F  04          	DB	KBD		; Eingabe abwarten
 1245 C810  FE 03       	CP	3
 1246 C812  37          	SCF			; BRK -> CY=1
 1247 C813  C8          	RET	Z
 1248 C814  3F          	CCF
 1249 C815  C9          	RET
 1250                   ;-------
 1251                   ; Anzeige "no Memory":
 1252 C816  CD F003     MEM:	CALL	PV1
 1253 C819  23          	DB	OSTR
 1254 C81A  0D 3E 3E 3E 	DB	CR,'>>> No Memory <<<',7,LF,0
 1255 C82F  AF          	XOR	A
 1256 C830  32 0022     	LD	(M4A),A		; Fehler loeschen
 1257 C833  C9          	RET
 1258                   ;-------
 1259                   ; Abfrage ja/nein:
 1260                   ; PA:	CY=1	BRK oder 'N' gedrueckt
 1261                   ;	CY=0	'Y' gedrueckt
 1262 C834  CD F003     YESNO:	CALL	PV1
 1263 C837  23          	DB	OSTR
 1264 C838  20 28 59 2F 	DB	' (Y/N) ? ',0	; Entscheidung
 1265 C842  CD C80C     YES1:	CALL	KEYB
 1266 C845  38 0C       	JR	C,YES2		; BRK
 1267 C847  CD D863     	CALL	LETTR
 1268 C84A  FE 59       	CP	'Y'
 1269 C84C  28 05       	JR	Z,YES2
 1270 C84E  FE 4E       	CP	'N'
 1271 C850  20 F0       	JR	NZ,YES1
 1272 C852  37          	SCF			; nein -> CY=1
 1273 C853  F5          YES2:	PUSH	AF
 1274 C854  CD C562     	CALL	CHR
 1275 C857  CD C55D     	CALL	LFCR
 1276 C85A  F1          	POP	AF
 1277 C85B  C9          	RET
 1278                   ;-------
 1279                   ; Tastatureingabe in einer Zeile:
 1280                   ; (bei CR wird kein Zeilenvorschub ausgegeben)
 1281                   ; PE:	BC=min./max. Cursorspalte!
 1282                   ; PA:	CY=1	BRK gedrueckt (und LF,CR ausgegeben)
 1283                   ;	CY=0	Enter, HL=Adresse des Zeilenanfangs
 1284                   ; VR:	AF,DE,HL
 1285 C85C  78          INPUT:	LD	A,B
 1286 C85D  32 B7A0     	LD	(CURSO),A
 1287 C860  CD C80C     INP1:	CALL	KEYB		; Tasteneingabe
 1288 C863  30 05       	JR	NC,INP0		; nicht BRK
 1289 C865  CD C55D     	CALL	LFCR
 1290 C868  37          	SCF
 1291 C869  C9          	RET
 1292                   	;
 1293 C86A  FE 2E       INP0:	cp	'.'
 1294 C86C  28 1F       	jr	z,inp9		; Punkt trennt Dateiname + Typ
ASM V2.1								    SLR180 1.31 Page  24
ASM21   Z80

 1295 C86E  FE 05       	cp	5		; TAB
 1296 C870  28 20       	jr	z,inpp		; geht zu Dateityp
 1297 C872  FE 20       	CP	' '
 1298 C874  30 26       	JR	NC,INP2		; darstellbares Zeichen
 1299 C876  FE 08       	CP	8		; CUL
 1300 C878  28 22       	JR	Z,INP2
 1301 C87A  FE 09       	CP	9		; CUR
 1302 C87C  28 1E       	JR	Z,INP2
 1303 C87E  FE 0D       	CP	CR
 1304 C880  20 DE       	JR	NZ,INP1
 1305                   ; Eingabe beenden
 1306 C882  3A B7A1     INP7:	LD	A,(CURSO+1)
 1307 C885  57          	LD	D,A
 1308 C886  58          	LD	E,B
 1309 C887  CD F003     	CALL	PV1
 1310 C88A  32          	DB	DABR		; Berechnen VRAM-Adresse
 1311 C88B  A7          	AND	A		; CY=0
 1312 C88C  C9          	RET
 1313                   	;
 1314 C88D  79          INP9:	LD	A,C		; max. Spalte
 1315 C88E  FE 10       	CP	10h		; sind wir bei der Eingabe Dateiname?
 1316 C890  20 08       	JR	NZ,INP10	; nein, dann als normales Zeichen zulassen
 1317                   ; gehe zu Spalte von Dateityp
 1318 C892  78          inpp:	ld	a,b
 1319 C893  C6 08       	add	a,8
 1320 C895  32 B7A0     	ld	(curso),a
 1321 C898  18 06       	jr	INP3
 1322                   ; Zeichen anzeigen
 1323 C89A  3E 2E       INP10:	LD	A,'.'
 1324 C89C  CD F003     INP2:	CALL	PV1
 1325 C89F  00          	DB	CRT		; Zeichen anzeigen
 1326 C8A0  21 B7A0     INP3:	LD	HL,CURSO
 1327 C8A3  7E          	LD	A,(HL)
 1328 C8A4  B8          	CP	B		; zu klein?
 1329 C8A5  30 01       	JR	NC,INP4
 1330 C8A7  78          	LD	A,B
 1331 C8A8  B9          INP4:	CP	C		; zu gross?
 1332 C8A9  38 01       	JR	C,INP5
 1333 C8AB  79          	LD	A,C
 1334 C8AC  77          INP5:	LD	(HL),A
 1335 C8AD  18 B1       	JR	INP1
 1336                   ;-------
 1337                   ; Name (mit Typ) eingeben und zur Benutzung ablegen:
 1338                   ; PE:	DE	Zeiger auf Zeichenkette, die Dateityp vorgibt. (LOAD/SAVE)
 1339                   ;	E=0	nichts vorgeben und nicht eintragen (LABEL)
 1340                   ; PA:	HL=NAME0 (eingegebener Dateiname dort abgelegt)
 1341                   ;	CY=1	BRK
 1342 C8AF  11 C8F4     NA_ASM:	LD	DE,ASMTXT	; Dateityp fuer LOAD/SAVE
 1343 C8B2  CD F003     NAME:	CALL	PV1
 1344 C8B5  23          	DB	OSTR
 1345 C8B6  0A 0B 4E 61 	DB	LF,0BH,'Name :',0
 1346 C8BF  7B          	LD	A,E
 1347 C8C0  A7          	AND	A		; CY=0
 1348 C8C1  0E 11       	LD	C,11H
 1349 C8C3  28 13       	JR	Z,NAMI		; nichts vorgeben
 1350 C8C5  0D          	DEC	C
 1351 C8C6  21 B7F5     	LD	HL,NAMP		; aktueller Dateiname
 1352 C8C9  06 08       	LD	B,8		; 8 Zeichen Dateiname
 1353 C8CB  7E          NAMRE:	LD	A,(HL)		; gemerkter Name
 1354 C8CC  23          	INC	HL
 1355 C8CD  CD F003     	CALL	PV1
 1356 C8D0  42          	DB	CSTBT		; zur Sicherheit!
 1357 C8D1  10 F8       	DJNZ	NAMRE
 1358 C8D3  EB          	EX	DE,HL
 1359 C8D4  CD F003     	CALL	PV1
 1360 C8D7  45          	DB	ZKOUT		; Typ vorgeben
 1361 C8D8  06 06       NAMI:	LD	B,6
 1362 C8DA  D5          	PUSH	DE
 1363 C8DB  CD C85C     	CALL	INPUT		; Eingabe
 1364 C8DE  D1          	POP	DE
 1365 C8DF  D8          	RET	C		; BRK
 1366 C8E0  7B          	LD	A,E
 1367 C8E1  A7          	AND	A
 1368 C8E2  28 0A       	JR	Z,NACU		; Name nicht eintragen
 1369 C8E4  E5          	PUSH	HL
 1370 C8E5  11 0000     	LD	DE,NAME0	; Dateiname hier ablegen
 1371 C8E8  01 000B     	LD	BC,11		; 8.3
 1372 C8EB  ED B0       	LDIR			; Zur Verwendung kopieren
ASM V2.1								    SLR180 1.31 Page  25
ASM21   Z80

 1373 C8ED  E1          	POP	HL
 1374 C8EE  3E 13       NACU:	LD	A,13H
 1375 C8F0  32 B7A0     	LD	(CURSO),A	; zum Weiterschreiben
 1376 C8F3  C9          	RET
 1377 C8F4  41 53 4D 00 ASMTXT:	DB	'ASM',0
 1378 C8F8  4B 43 43 00 KCCTXT:	DB	'KCC',0
 1379                   ;-------
 1380                   ; Kassettenpuffer initialisieren, Dateiname eintragen:
 1381                   ; PE:	HL=Dateiname, 11 Zeichen lang
 1382                   ; PA:	A=0
 1383 C8FC  11 B780     KPINI:	LD	DE,CASS+80h	; Ende Kassettenpuffer+1
 1384 C8FF  AF          	XOR	A
 1385 C900  1D          KPIN2:	DEC	E		; rueckwaerts B77FH bis B700H
 1386 C901  12          	LD	(DE),A		; Kassettenpuffer loeschen
 1387 C902  20 FC       	JR	NZ,KPIN2	; 00H noch nicht erreicht
 1388 C904  DD 73 05    	LD	(IX+5),E	; DE=0B700h
 1389 C907  DD 72 06    	LD	(IX+6),D
 1390 C90A  01 000B     	LD	BC,11		; 11 Zeichen (Name und Typ)
 1391 C90D  ED B0       	LDIR			; Name eintragen
 1392 C90F  C9          	RET
 1393                   ;-------
 1394                   ; Text an Speicheranfang verschieben:
 1395                   ; PE:	DE=Zeilenzahl, 0=gesamter Text
 1396                   ;
 1397 C910  2A 001A     TXANF:	LD	HL,(T2E)	; Ende Teiltext 2
 1398 C913  ED 4B 001E  	LD	BC,(T2A)	; Anfang Teiltext 2
 1399 C917  AF          	XOR	A		; CY=0
 1400 C918  ED 42       	SBC	HL,BC
 1401 C91A  44          	LD	B,H
 1402 C91B  4D          	LD	C,L		; Laenge Text 2
 1403 C91C  C8          	RET	Z		; kein Text 2
 1404                   ;	LD	HL,(MEML)	; Zeilennummer
 1405                   ;	PUSH	HL
 1406 C91D  2A 001E     	LD	HL,(T2A)	; von hier verschieben
 1407 C920  3E 0D       TXA1:	LD	A,CR
 1408 C922  CD 0071     	CALL	TCPIR		; Zeilenende suchen
 1409 C925  20 10       	JR	NZ,TXA2		; ausgesucht, aber CR nicht gefunden
 1410 C927  1B          	DEC	DE		; rueckwaerts zaehlen
 1411                   ;	EX	(SP),HL
 1412                   ;	INC	HL		; Zeilennummer +1
 1413                   ;	EX	(SP),HL
 1414 C928  E2 C937     	JP	PO,TXA2		; ausgesucht und CR gefunden
 1415 C92B  7A          	LD	A,D
 1416 C92C  B3          	OR	E		; gewuenschte Anzahl erreicht?
 1417 C92D  20 F1       	JR	NZ,TXA1
 1418 C92F  CD 0086     	CALL	GET
 1419 C932  FE 0A       	CP	LF		; folgt LF?
 1420 C934  20 01       	JR	NZ,TXA2		; nein
 1421 C936  23          	INC	HL		; LF noch mitnehmen
 1422 C937  CD C93B     TXA2:	CALL	TXA		; Text verschieben
 1423 C93A              TXA4:	;POP	HL
 1424                   ;	LD	(MEML),HL	; neue Zeilennummer
 1425 C93A  C9          	RET
 1426                   	;
 1427 C93B  ED 5B 001E  TXA:	LD	DE,(T2A)	; Anfang Text 2
 1428 C93F  D5          	PUSH	DE
 1429 C940  AF          	XOR	A
 1430 C941  ED 52       	SBC	HL,DE
 1431 C943  44          	LD	B,H
 1432 C944  4D          	LD	C,L		; BC=Laenge des zu verschiebenden Textes
 1433 C945  E1          	POP	HL		; HL=Quelle
 1434 C946  ED 5B 001C  	LD	DE,(T1E)	; DE=Ziel
 1435 C94A  28 03       	JR	Z,TXA3		; nichts zu verschieben
 1436 C94C  CD 0063     	CALL	TLDIR		; an Text 1 anhaengen
 1437 C94F  ED 53 001C  TXA3:	LD	(T1E),DE
 1438 C953  22 001E     	LD	(T2A),HL
 1439 C956  C9          	RET
 1440                   ;
 1441                   ; Text an Speicherende verschieben:
 1442                   ; PE:	DE=Zeilenzahl, 0=gesamter Text
 1443                   ; PA:	Z=1 es wurde kein Text verschoben (Position ist bereits Textanfang)
 1444                   ;
 1445 C957  CD C4E6     TOP:	CALL	HOM
 1446 C95A  2A 001C     TXEND:	LD	HL,(T1E)	; Ende Teiltext 1
 1447 C95D  ED 4B 0018  	LD	BC,(T1A)	; Anfang Teiltext 1
 1448 C961  AF          	XOR	A		; CY=0
 1449 C962  ED 42       	SBC	HL,BC
 1450 C964  44          	LD	B,H
ASM V2.1								    SLR180 1.31 Page  26
ASM21   Z80

 1451 C965  4D          	LD	C,L		; Laenge Text 1
 1452 C966  C8          	RET	Z		; kein Text 1
 1453 C967  03          	INC	BC		; bis zum CR am Textanfang suchen
 1454                   ;	LD	HL,(MEML)	; Zeilennummer
 1455                   ;	PUSH	HL
 1456 C968  2A 001C     	LD	HL,(T1E)	; von hier verschieben
 1457 C96B  2B          	DEC	HL		; letztes Zeichen
 1458 C96C  CD 0086     	CALL	GET		; Zeichen aus Textspeicher
 1459 C96F  FE 0A       	CP	LF		; LF am Zeilenende?
 1460 C971  20 02       	JR	NZ,TXE0
 1461 C973  2B          	DEC	HL		; vor das LF gehen fuer Suchen
 1462 C974  0B          	DEC	BC		; und Suchanzahl verringern
 1463 C975  CD 0086     TXE0:	CALL	GET		; Zeichen aus Textspeicher
 1464 C978  FE 0D       	CP	CR		; davor noch ein CR?
 1465 C97A  20 02       	JR	NZ,TXE1
 1466 C97C  2B          	DEC	HL		; das auch uebergehen
 1467 C97D  0B          	DEC	BC
 1468 C97E  3E 0D       TXE1:	LD	A,CR
 1469 C980  CD 0078     	CALL	TCPDR		; Zeilenende suchen
 1470 C983  1B          	DEC	DE		; rueckwaerts zaehlen
 1471                   ;	EX	(SP),HL
 1472                   ;	DEC	HL		; Textzeile -1
 1473                   ;	EX	(SP),HL
 1474 C984  20 08       	JR	NZ,TXE2		; ausgesucht, aber CR nicht gefunden
 1475 C986  E2 C98D     	JP	PO,TXE2a	; ausgesucht und CR gefunden
 1476 C989  7A          	LD	A,D
 1477 C98A  B3          	OR	E		; gewuenschte Anzahl erreicht?
 1478 C98B  20 F1       	JR	NZ,TXE1
 1479 C98D  23          TXE2a:	INC	HL		; auf CR gehen
 1480 C98E  23          TXE2:	INC	HL		; auf LF gehen
 1481 C98F  CD 0086     	CALL	GET		; Zeichen aus Textspeicher
 1482 C992  FE 0A       	CP	LF		; folgt LF?
 1483 C994  20 01       	JR	NZ,TXE3
 1484 C996  23          	INC	HL		; das LF auch noch ubergehen
 1485 C997  EB          TXE3:	EX	DE,HL		; DE=Beginn Verschiebebereich
 1486                   ;	POP	HL
 1487                   ;	LD	(MEML),HL	; neue Zeilennummer
 1488 C998  2A 001C     TXE4:	LD	HL,(T1E)	; HL=Ende Verschiebebereich
 1489 C99B  E5          TXE5:	PUSH	HL
 1490 C99C  AF          	XOR	A		; CY=0
 1491 C99D  ED 52       	SBC	HL,DE
 1492 C99F  44          	LD	B,H
 1493 C9A0  4D          	LD	C,L		; BC=Laenge des zu verschiebenden Textes
 1494 C9A1  E1          	POP	HL
 1495 C9A2  ED 5B 001E  	LD	DE,(T2A)
 1496 C9A6  1B          	DEC	DE		; DE=Quelle
 1497 C9A7  2B          	DEC	HL		; HL=Ziel
 1498 C9A8  C4 006A     	CALL	NZ,TLDDR	; Text verschieben
 1499 C9AB  13          	INC	DE
 1500 C9AC  ED 53 001E  	LD	(T2A),DE
 1501 C9B0  23          	INC	HL
 1502 C9B1  22 001C     	LD	(T1E),HL
 1503 C9B4  C9          	RET
 1504                   
 1505                   ;====================
 1506                   ; HILFE-Funktion:
 1507                   ;	*HELP	listet alle Fehlercodes auf
 1508                   ;	*HELP <code> zeigt nur den einen Fehlercode
 1509                   ;====================
 1510                   ;
 1511 C9B5  DDDD        	DW	0DDDDH
 1512 C9B7  48 45 4C 50 	DB	'HELP',1Fh
 1513 C9BC  21 C9FA     	ld	hl,htab		; Liste der Fehler-Erklaerungen
 1514 C9BF  1A          help:	ld	a,(de)		; eingegebener Parameter
 1515 C9C0  B7          	or	a
 1516 C9C1  28 0F       	jr	z,help3		; nichts angegeben
 1517 C9C3  CD D863     	CALL	LETTR		; upcase
 1518 C9C6  BE          	cp	(hl)		; Fehlercode in Liste gefunden?
 1519 C9C7  28 18       	jr	z,help1		; ja, diesen Fehler anzeigen
 1520 C9C9  AF          	xor	a
 1521 C9CA  47          	ld	b,a
 1522 C9CB  4F          	ld	c,a
 1523 C9CC  ED B1       	cpir			; Stringende-Null suchen
 1524 C9CE  7E          	ld	a,(hl)
 1525 C9CF  B7          	or	a		; Ende der Tabelle?
 1526 C9D0  20 ED       	jr	nz,help		; nein, weitersuchen
 1527 C9D2  CD F003     help3:	call	pv1
 1528 C9D5  2D          	db	home		; HOME-Position
ASM V2.1								    SLR180 1.31 Page  27
ASM21   Z80

 1529 C9D6  21 C9ED     	ld	hl,httl		; mit Titelzeile beginnen
 1530 C9D9  06 10       	ld	b,16		; 15 Fehlercodes + Titelzeile
 1531 C9DB  CD C9E1     help2:	call	help1		; einzeln anzeigen
 1532 C9DE  10 FB       	djnz	help2
 1533 C9E0  C9          	ret
 1534                   	;
 1535 C9E1  3E 02       help1:	ld	a,2		; aktuelle Zeile loeschen
 1536 C9E3  CD C562     	call	chr
 1537 C9E6  CD F003     	call	pv1		; Text ausgeben
 1538 C9E9  45          	db	zkout
 1539 C9EA  C3 C55D     	jp	lfcr		; naechste Zeile
 1540                   	;
 1541 C9ED  46 65 68 6C HTTL:	DB	'Fehlercodes:',0
 1542 C9FA  31 2D 53 65 HTAB:	DB	'1-Semikolon?'0
 1543 CA07  32 2D 6D 65 	DB	'2-mehrfach definierte Marke benutzt',0
 1544 CA2B  33 2D 4D 61 	DB	'3-Marke fehlt',0
 1545 CA39  34 2D 66 61 	DB	'4-falsche Mnemonik',0
 1546 CA4C  35 2D 5A 61 	DB	'5-Zahlenformat?',0
 1547 CA5C  36 2D 61 75 	DB	'6-au~erhalb zul{ssiger Bereich',0
 1548 CA7B  37 2D 45 51 	DB	'7-EQU ohne Marke',0
 1549 CA8C  38 2D 5A 65 	DB	'8-Zeichenkette fehlerhaft',0
 1550 CAA6  39 2D 4F 70 	DB	'9-Operandenfehler',0
 1551 CAB8  41 2D 66 61 	DB	'A-falsche Flagbedingung',0
 1552 CAD0  42 2D 52 65 	DB	'B-Rechenzeichen oder Komma fehlt',0
 1553 CAF1  43 2D 44 69 	DB	'C-Division/0',0
 1554 CAFE  44 2D 4D 61 	DB	'D-Marke mehrfach definiert',0
 1555 CB19  45 2D 49 6E 	DB	'E-Indexregister',0
 1556 CB29  4D 2D 41 64 	DB	'M-Adresse unzul{ssig bei Option O',0
 1557 CB4B  00          	DB	0	; zweite Null kennzeichnet Tabellenende
 1558                   
 1559                   ;-------
 1560 CB4C  DDDD        	DEFW	0DDDDH
 1561 CB4E  4C 41 42 45 	DB	'LABEL',1Fh
 1562 CB54  1E 00       	LD	E,0		; keine Vorgabe anzeigen
 1563 CB56  CD C8B2     	CALL	NAME		; Eingabe
 1564 CB59  D8          	RET	C		; BRK
 1565 CB5A  11 0023     	LD	DE,STRING	; Suchpuffer
 1566 CB5D  01 0008     	LD	BC,8		; max. sign. Laenge
 1567 CB60  ED B0       	LDIR
 1568 CB62  21 0023     	LD	HL,STRING	; Assemblierpuffer
 1569 CB65  CD D837     	CALL	LSUCH		; suchen in MTAB
 1570 CB68  38 07       	JR	C,LAB1		; nicht gefunden
 1571 CB6A  CD F003     HLCR:	CALL	PV1
 1572 CB6D  1A          	DB	HLHX
 1573 CB6E  C3 C55D     LAB2:	JP	LFCR
 1574                   	;
 1575 CB71  CD F003     LAB1:	CALL	PV1
 1576 CB74  23          	DB	OSTR
 1577 CB75  6E 6F 74 20 	DB	'not found',0
 1578 CB7F  18 ED       	JR	LAB2
 1579                   ;-------
 1580 CB81  DDDD        	DEFW	0DDDDH
 1581 CB83  4C 42 4C 49 	DB	'LBLIST',1
 1582 CB8A  B7          	OR	A		; ARG angegeben?
 1583 CB8B  0E 03       	LD	C,3		; Standardbreite
 1584 CB8D  28 01       	JR	Z,LBL1
 1585 CB8F  4D          	LD	C,L		; eingegebene Spaltenzahl
 1586 CB90  2A 0046     LBL1:	LD	HL,(MTOP)
 1587 CB93  C5          LBL2:	PUSH	BC
 1588 CB94  EB          LBL3:	EX	DE,HL
 1589 CB95  2A 0044     	LD	HL,(MBOT)	; Speicherende
 1590 CB98  37          	SCF
 1591 CB99  ED 52       	SBC	HL,DE
 1592 CB9B  38 46       	JR	C,LBL9		; MTAB zu Ende
 1593 CB9D  EB          	EX	DE,HL
 1594 CB9E  CD 0086     	CALL	GET
 1595 CBA1  5F          	LD	E,A		; Wert low
 1596 CBA2  23          	INC	HL
 1597 CBA3  CD 0086     	CALL	GET
 1598 CBA6  57          	LD	D,A		; Wert high
 1599 CBA7  23          	INC	HL
 1600 CBA8  EB          	EX	DE,HL
 1601 CBA9  CD F003     	CALL	PV1
 1602 CBAC  1A          	DB	HLHX		; Wert
 1603 CBAD  CD 008C     	CALL	GETDE
 1604 CBB0  13          	INC	DE
 1605 CBB1  3D          	DEC	A		; doppelt def.?
 1606 CBB2  20 07       	JR	NZ,LBL4		; nein
ASM V2.1								    SLR180 1.31 Page  28
ASM21   Z80

 1607 CBB4  CD F003     	CALL	PV1
 1608 CBB7  23          	DB	OSTR
 1609 CBB8  08 2A 00    	DB	8,'*',0		; nicht eindeutige Marke
 1610 CBBB  EB          LBL4:	EX	DE,HL
 1611 CBBC  06 08       	LD	B,8		; max. 8 Zeichen lang
 1612 CBBE  CD 0086     LBL5:	CALL	GET		; Zeichen
 1613 CBC1  23          	INC	HL
 1614 CBC2  FE 3A       	CP	':'		; Marke zu Ende?
 1615 CBC4  28 0F       	JR	Z,LBL7		; ja
 1616 CBC6  CD C562     	CALL	CHR		; anzeigen
 1617 CBC9  10 F3       	DJNZ	LBL5
 1618 CBCB  CD 0086     LBL6:	CALL	GET
 1619 CBCE  23          	INC	HL
 1620 CBCF  FE 3A       	CP	':'		; jetzt zu Ende?
 1621 CBD1  20 F8       	JR	NZ,LBL6		; nein, Rest weglassen
 1622 CBD3  18 06       	JR	LBL8
 1623                   	;
 1624 CBD5  CD F003     LBL7:	CALL	PV1
 1625 CBD8  2B          	DB	SPACE		; Rest mit Space formatieren
 1626 CBD9  10 FA       	DJNZ	LBL7
 1627 CBDB  CD C7F8     LBL8:	CALL	BRKS		; BRK/STOP abfragen
 1628 CBDE  38 03       	JR	C,LBL9		; BRK
 1629 CBE0  0D          	DEC	C		; Anzahl Spalten
 1630 CBE1  20 B1       	JR	NZ,LBL3
 1631 CBE3  C1          LBL9:	POP	BC
 1632 CBE4  F5          	PUSH	AF
 1633 CBE5  CD C55D     	CALL	LFCR		; neue Zeile
 1634 CBE8  F1          	POP	AF
 1635 CBE9  30 A8       	JR	NC,LBL2		; weiter, wenn nicht BRK
 1636 CBEB  C9          	RET
 1637                   
 1638                   ;	*************************************************
 1639                   ;	*	ENDE - EDITOR	BEGINN ASSEMBLER	*
 1640                   ;	*************************************************
 1641                   ;
 1642                   ;		(C) J.Schwarz, Leipzig
 1643                   ;		erweitert, korregiert &
 1644                   ;		dokumentiert:
 1645                   ;		(C) F.Klemm, Gera
 1646                   ;
 1647                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1648                   ;
 1649                   ; Ueberlesen von Leerzeichen
 1650                   ;
 1651 CBEC  CD 0086     SPCTB:	CALL	GET
 1652 CBEF  FE 20       	CP	' '		; Space?
 1653 CBF1  28 03       	JR	Z,SPCT1
 1654 CBF3  FE 09       	CP	TAB		; CUR?
 1655 CBF5  C0          	RET	NZ
 1656 CBF6  23          SPCT1:	INC	HL
 1657 CBF7  18 F3       	JR	SPCTB
 1658                   ;
 1659                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1660                   ;
 1661                   ; zwei Marken vergleichen
 1662                   ;
 1663                   ; PE:	HL	Markentabellen-Adresse
 1664                   ;	DE	Quelltextadresse
 1665                   ; PA:	CY=0	Marke gefunden
 1666                   ;	DE	Adresse nach Marke
 1667                   ; VR:	AF, DE
 1668 CBF9  CD 0086     LOOK:	CALL	GET
 1669 CBFC  FE 20       	CP	' '		; Anfang einer Marke?
 1670 CBFE  30 2B       	JR	NC,LOOK5	; nein -> Error
 1671 CC00  23          	INC	HL
 1672 CC01  E5          LOOK1:	PUSH	HL
 1673 CC02  D5          	PUSH	DE
 1674 CC03  C5          	PUSH	BC
 1675 CC04  23          LOOK2:	INC	HL		; Marken-Pointer
 1676 CC05  13          	INC	DE		; Quelltext-Pointer
 1677 CC06  CD 008C     	CALL	GETDE
 1678 CC09  CD D84F     	CALL	LABEL		; gueltiges Zeichen?
 1679 CC0C  38 0C       	JR	C,LOOK3		; nein
 1680 CC0E  47          	LD	B,A
 1681 CC0F  CD 0086     	CALL	GET
 1682 CC12  CD D84F     	CALL	LABEL		; gueltiges Zeichen?
 1683 CC15  B8          	CP	B
 1684 CC16  20 0F       	JR	NZ,LOOK4	; ungleich -> Error
ASM V2.1								    SLR180 1.31 Page  29
ASM21   Z80

 1685 CC18  18 EA       	JR	LOOK2		; weiter
 1686                   ;
 1687 CC1A  CD 0086     LOOK3:	CALL	GET
 1688 CC1D  CD D84F     	CALL	LABEL		; gueltiges Zeichen?
 1689 CC20  30 05       	JR	NC,LOOK4	; weiteres guelt. Zeichen -> Error
 1690 CC22  C1          	POP	BC
 1691 CC23  E1          	POP	HL
 1692 CC24  E1          	POP	HL
 1693 CC25  B7          	OR	A		; CY=0
 1694 CC26  C9          	RET
 1695                   ;
 1696 CC27  C1          LOOK4:	POP	BC
 1697 CC28  D1          	POP	DE
 1698 CC29  E1          	POP	HL
 1699 CC2A  2B          	DEC	HL
 1700 CC2B  37          LOOK5:	SCF			; Error
 1701 CC2C  C9          	RET
 1702                   ;
 1703                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1704                   ;
 1705                   ; Anzeige der assemblierten Zeile auf Bildschirm oder Drucker
 1706                   ;
 1707 CC2D  3A A880     OUTLN:	LD	A,(NERR)
 1708 CC30  FE 20       	CP	' '		; Fehler?
 1709 CC32  28 0C       	JR	Z,OUTL1
 1710 CC34  3E 2A       	LD	A,'*'
 1711 CC36  32 A881     	LD	(NERR+1),A	; 1. Zeichen
 1712 CC39  2A 004E     	LD	HL,(ERRNO)
 1713 CC3C  23          	INC	HL		; Fehler zaehlen
 1714 CC3D  22 004E     	LD	(ERRNO),HL	; neue Fehlerzahl
 1715 CC40  21 A880     OUTL1:	LD	HL,NERR		; aufbereitete Assemblerzeile
 1716 CC43  11 6000     	LD	DE,96*256	; max. 96 Spalten bei 'Drucker'
 1717 CC46  3A 003F     	LD	A,(OPT)
 1718 CC49  E6 20       	AND	20H		; Option 'B' ?
 1719 CC4B  28 02       	JR	Z,OUTL2		; nein
 1720 CC4D  16 27       	LD	D,39		; max. 39 Spalten bei 'Bildschirm'
 1721 CC4F  7E          OUTL2:	LD	A,(HL)
 1722 CC50  23          	INC	HL
 1723 CC51  FE 0D       	CP	CR		; Zeilenende?
 1724 CC53  28 07       	JR	Z,OUTL3
 1725 CC55  CD D874     	CALL	PRCHR		; anzeigen
 1726 CC58  7B          	LD	A,E
 1727 CC59  BA          	CP	D		; Zeilenende erreicht?
 1728 CC5A  38 F3       	JR	C,OUTL2
 1729 CC5C  3E 0D       OUTL3:	LD	A,CR
 1730 CC5E  CD D874     	CALL	PRCHR		; neue Zeile
 1731 CC61  21 A880     OUTL4:	LD	HL,NERR
 1732 CC64  06 10       	LD	B,16
 1733 CC66  36 20       OUTL5:	LD	(HL),' '
 1734 CC68  23          	INC	HL
 1735 CC69  10 FB       	DJNZ	OUTL5		; Assemblierpuffer loeschen
 1736 CC6B  36 0D       	LD	(HL),CR
 1737 CC6D  C9          	RET
 1738                   ;
 1739                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1740                   ;
 1741                   ; HEX-Zahlen in Puffer eintragen
 1742                   ; Wandlung Hex-Zahl in ASCII-Format (4 Zeichen) und in Puffer ab ADR eintragen:
 1743                   ;
 1744                   ; PE:	DE	Hex-Zahl
 1745                   ;
 1746 CC6E  21 A882     PDEHX:	LD	HL,ADR		; Puffer fuer Ablage der Hex-Zahl
 1747 CC71  7A          	LD	A,D		; High
 1748 CC72  CD CC76     	CALL	PAHEX
 1749 CC75  7B          	LD	A,E		; Low
 1750 CC76  F5          PAHEX:	PUSH	AF
 1751 CC77  1F          	RRA
 1752 CC78  1F          	RRA
 1753 CC79  1F          	RRA
 1754 CC7A  1F          	RRA
 1755 CC7B  CD CC7F     	CALL	PTETR
 1756 CC7E  F1          	POP	AF
 1757 CC7F  E6 0F       PTETR:	AND	0FH
 1758 CC81  C6 90       	ADD	A,90H
 1759 CC83  27          	DAA			; Hex-Korrektur
 1760 CC84  CE 40       	ADC	A,40H
 1761 CC86  27          	DAA
 1762 CC87  77          	LD	(HL),A		; Ablage
ASM V2.1								    SLR180 1.31 Page  30
ASM21   Z80

 1763 CC88  23          	INC	HL
 1764 CC89  C9          	RET
 1765                   ;
 1766                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1767                   ;
 1768                   ; MAIN INTERPRET LOOP
 1769                   ; Eigentlicher Assemblerlauf, Start auf ASSEM:
 1770                   ; (BRK-Abfrage nach jeder uebersetzten Zeile)
 1771                   ;
 1772                   ; PE:	HL	Zeiger auf Quelltextbeginn
 1773                   ;	(OPT)	Optionen
 1774 CC8A  CD CDA4     INT00:	CALL	ASLN		; Zeile uebersetzen
 1775 CC8D  3A 003E     ASSEM:	LD	A,(STAT)
 1776 CC90  CB 57       	BIT	2,A		; NO-MEMORY - Error?
 1777 CC92  28 04       	JR	Z,INT01		; nein
 1778 CC94  E1          	POP	HL		; Stack reinigen
 1779 CC95  C3 C55D     	JP	LFCR		; -> Menue
 1780                   	;
 1781 CC98  3A 003F     INT01:	LD	A,(OPT)
 1782 CC9B  17          	RLA			; Pass '2'?
 1783 CC9C  30 36       	JR	NC,INT03	; nein, nichts anzeigen
 1784 CC9E  E5          	PUSH	HL		; akt. Quelltextadresse merken
 1785 CC9F  F5          	PUSH	AF
 1786 CCA0  1F          	RRA
 1787 CCA1  1F          	RRA
 1788 CCA2  DC CC2D     	CALL	C,OUTLN		; Anzeige bei Option 'L'
 1789 CCA5  F1          	POP	AF
 1790 CCA6  CB 6F       	BIT	5,A		; Option '3'?
 1791 CCA8  20 08       	JR	NZ,INT02	; ja -> nicht nochmal anzeigen
 1792 CCAA  3A A880     	LD	A,(NERR)
 1793 CCAD  FE 20       	CP	' '		; Fehler?
 1794 CCAF  C4 CC2D     	CALL	NZ,OUTLN	; ja -> Zeile anzeigen
 1795 CCB2  CD CC61     INT02:	CALL	OUTL4		; Assemblierpuffer loeschen
 1796 CCB5  ED 5B 004C  	LD	DE,(MPC)	; akt. MC-Adresse
 1797 CCB9  CD CC6E     	CALL	PDEHX		; Wandlung in ASCII
 1798 CCBC  23          	INC	HL
 1799 CCBD  22 0048     	LD	(PBL),HL	; Pointer (Byte-Liste)
 1800 CCC0  E1          	POP	HL
 1801 CCC1  E5          	PUSH	HL		; akt. Quelltextadresse
 1802 CCC2  11 A890     	LD	DE,TEXT
 1803 CCC5  06 50       	LD	B,80		; Quelltextzeile kann max. 80 Zeichen breit sein
 1804 CCC7  CD 0086     INT02a:	CALL	GET
 1805 CCCA  12          	LD	(DE),A		; Quelltext in Puffer umladen
 1806 CCCB  FE 0D       	CP	CR
 1807 CCCD  28 04       	JR	Z,INT02b
 1808 CCCF  13          	INC	DE
 1809 CCD0  23          	INC	HL
 1810 CCD1  10 F4       	DJNZ	INT02a
 1811 CCD3  E1          INT02b:	POP	HL
 1812 CCD4  CD F003     INT03:	CALL	PV1
 1813 CCD7  2A          	DB	BRKT
 1814 CCD8  30 09       	JR	NC,INT04	; kein BRK
 1815 CCDA  3A 003F     	LD	A,(OPT)
 1816 CCDD  CB 67       	BIT	4,A		; Option '3'?
 1817 CCDF  20 6F       	JR	NZ,INTSV	; Beenden MB-Ausgabe
 1818 CCE1  E1          	POP	HL		; Stack reinigen
 1819 CCE2  C9          	RET			; -> Menue
 1820                   ;
 1821 CCE3  CD 0086     INT04:	CALL	GET		; 1. Zeichen der neuen Zeile
 1822 CCE6  FE 03       	CP	3		; Textende?
 1823 CCE8  20 A0       	JR	NZ,INT00	; nein -> weiteruebersetzen
 1824 CCEA  CD CC61     	CALL	OUTL4		; Assemblierpuffer loeschen
 1825 CCED  21 003F     	LD	HL,OPT
 1826 CCF0  7E          	LD	A,(HL)
 1827 CCF1  17          	RLA			; war das Pass 2?
 1828 CCF2  30 68       	JR	NC,PASS2	; nein, dann jetzt Pass 2
 1829 CCF4  E6 20       	AND	20H		; Option '3'?
 1830 CCF6  20 58       	JR	NZ,INTSV	; ja -> Close
 1831                   
 1832 CCF8  CD F003     	CALL	PV1
 1833 CCFB  23          	DB	OSTR
 1834 CCFC  0D 0A 45 72 	DB	CR,LF,'Errors: ',0
 1835 CD07  2A 004E     	LD	HL,(ERRNO)	; Anzahl Fehler
 1836 CD0A  E5          	PUSH	HL
 1837 CD0B  CD F003     	CALL	PV1
 1838 CD0E  4A          	DB	HLDEZ		; dezimal anzeigen
 1839                   
 1840 CD0F  CD D829     	CALL	TSTART		; Startadresse?
ASM V2.1								    SLR180 1.31 Page  31
ASM21   Z80

 1841 CD12  38 13       	JR	C,INT05
 1842 CD14  CD F003     	CALL	PV1
 1843 CD17  23          	DB	OSTR
 1844 CD18  0D 0A       	DB	CR,LF
 1845 CD1A  53 74 61 72 VERGL:	DB	'Start : ',0
 1846 CD23  CD F003     	CALL	PV1
 1847 CD26  1A          	DB	HLHX		; Startadresse hexadezimal anzeigen
 1848 CD27  CD F003     INT05:	CALL	PV1
 1849 CD2A  23          	DB	OSTR
 1850 CD2B  0D 0A 45 6E 	DB	CR,LF,'End+1 : ',0
 1851 CD36  FD E5       	PUSH	IY
 1852 CD38  E1          	POP	HL		; akt. Befehlszaehler
 1853                   ;	LD	HL,(MPC)	; akt. Adresse
 1854 CD39  CD CB6A     	CALL	HLCR		; Endadresse hexadezimal anzeigen
 1855 CD3C  E1          	POP	HL		; Anzahl Fehler
 1856 CD3D  7C          	LD	A,H
 1857 CD3E  B5          	OR	L
 1858 CD3F  20 19       	JR	NZ,INTEN	; bei Fehler kein Save!
 1859 CD41  21 003E     	LD	HL,STAT
 1860 CD44  CB 5E       	BIT	3,(HL)		; Option 'S'?
 1861 CD46  28 12       	JR	Z,INTEN		; nein -> Ende
 1862 CD48  23          	INC	HL		; OPT
 1863 CD49  36 90       	LD	(HL),90H	; Setzen Optionen '2'und '3'
 1864 CD4B  CD D8AB     	CALL	SHEAD		; Name eingeben, Vorblock erzeugen
 1865 CD4E  18 24       	JR	PASS3		; Pass 3 einleiten, Kassettenausgabe
 1866                   
 1867                   ; MB-Ausgabe beenden:
 1868 CD50  01 00A0     INTSV:	LD	BC,160		; kurzer Vorton
 1869 CD53  CD F003     	CALL	PV1
 1870 CD56  09          	DB	CSRO		; Close (Ausgabe letzter Block)
 1871 CD57  CD C55D     	CALL	LFCR
 1872 CD5A  E1          INTEN:	POP	HL		; Stack reinigen
 1873 CD5B  C9          	RET
 1874                   ;-------
 1875 CD5C  CB FE       PASS2:	SET	7,(HL)		; Pass 2 setzen
 1876 CD5E  CD F003     	CALL	PV1
 1877 CD61  23          	DB	OSTR
 1878 CD62  45 6E 64 20 	DB	'End Pass 1',CR,LF,LF,0
 1879 CD70  CB 5E       	BIT	3,(HL)		; nur Pass 1?
 1880 CD72  20 B3       	JR	NZ,INT05	; ja, dann Endadresse noch anzeigen
 1881 CD74              PASS3:
 1882 CD74  21 003E     ASMII:	LD	HL,STAT
 1883 CD77  CB BE       	RES	7,(HL)		; END-Bit ruecksetzen
 1884 CD79  CB 96       	RES	2,(HL)		; Error-Bit ruecksetzen
 1885 CD7B  CD CC61     	CALL	OUTL4		; Assemblierpuffer loeschen
 1886 CD7E  21 0000     	LD	HL,0
 1887 CD81  22 004E     	LD	(ERRNO),HL	; Fehlerzahl und
 1888 CD84  22 0050     	LD	(MCL),HL	; MC-Laenge ebenfalls ruecksetzen
 1889 CD87  3A 003F     	LD	A,(OPT)
 1890 CD8A  E6 82       	AND	82H
 1891 CD8C  FE 82       	CP	82H		; Option 'P' und Pass 2?
 1892 CD8E  20 07       	JR	NZ,INT06	; nein
 1893 CD90  21 F008     	LD	HL,ZEI2
 1894 CD93  CD F003     	CALL	PV1		; Zeichenausgabe auf
 1895 CD96  1E          	DB	SOUT		; Drucker umstellen
 1896 CD97  E1          INT06:	POP	HL		; Anfangsadresse
 1897 CD98  E5          	PUSH	HL		; regenerieren
 1898 CD99  FD 2A 0042  	LD	IY,(OBJ)
 1899 CD9D  FD 22 004C  	LD	(MPC),IY	; akt. MC-Adresse voreinstellen
 1900 CDA1  C3 CC8D     	JP	ASSEM		; Start Assemblerlauf
 1901                   ;
 1902                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 1903                   ;
 1904                   ; Assemblieren einer Quelltextzeile
 1905                   ;
 1906                   ; PE:	HL	Anfangsadresse der Zeile
 1907                   ;
 1908 CDA4  3A 003E     ASLN:	LD	A,(STAT)
 1909 CDA7  A7          	AND	A
 1910 CDA8  FA CEFF     	JP	M,ASSEN		; END erkannt
 1911 CDAB  CD 0086     	CALL	GET		; 1. Zeichen
 1912 CDAE  0E FF       	LD	C,0FFH
 1913 CDB0  CD D863     	CALL	LETTR		; Buchstabe?
 1914 CDB3  30 18       	JR	NC,ASSL		; ja (Marke)
 1915                   
 1916                   ; Hier war Inline-Assembler fuer TEMO...
 1917                   
 1918 CDB5  CD CBEC     ASS2:	CALL	SPCTB		; naechstes ASCII-Zeichen
ASM V2.1								    SLR180 1.31 Page  32
ASM21   Z80

 1919 CDB8  FE 0D       	CP	CR
 1920 CDBA  28 0E       	JR	Z,ASS3		; Zeilenende
 1921 CDBC  FE 3B       	CP	';'
 1922 CDBE  28 0A       	JR	Z,ASS3		; Kommentar
 1923 CDC0  CD D863     	CALL	LETTR		; Buchstabe?
 1924 CDC3  D2 CE5D     	JP	NC,ASS8		; ja -> Op-Code analysieren
 1925 CDC6  CD D19F     	CALL	ERRX
 1926 CDC9  31          	DB	'1'		; Fehler 1 (Syntax-Error), da ungueltiges Zeichen gefunden
 1927 CDCA  C3 CEFF     ASS3:	JP	ASSEN		; zum Zeilenende
 1928                   
 1929                   ; Marke behandeln:
 1930 CDCD  0C          ASSL:	INC	C		; C=0 (Marke vorhanden, fuer EQU)
 1931 CDCE  54          	LD	D,H
 1932 CDCF  5D          	LD	E,L
 1933 CDD0  CD CC01     	CALL	LOOK1		; Marke uebergehen
 1934 CDD3  EB          	EX	DE,HL
 1935 CDD4  FE 3A       ASSP:	CP	':'		; Doppelpunkte nach Markenname ueberlesen
 1936 CDD6  20 06       	JR	NZ,ASS4
 1937 CDD8  23          	INC	HL
 1938 CDD9  CD 0086     	CALL	GET
 1939 CDDC  18 F6       	JR	ASSP
 1940                   	;
 1941 CDDE  E5          ASS4:	PUSH	HL		; Quelltext nach Marke
 1942 CDDF  D5          	PUSH	DE		; Zeilenanfang
 1943 CDE0  A7          	AND	A		; CY=0
 1944 CDE1  ED 52       	SBC	HL,DE		; HL=Markenlaenge
 1945 CDE3  23          	INC	HL		; + 1 Byte Kennung
 1946 CDE4  23          	INC	HL		; + 2 Byte Wert
 1947 CDE5  23          	INC	HL
 1948 CDE6  E5          	PUSH	HL
 1949 CDE7  2A 001E     	LD	HL,(T2A)
 1950 CDEA  ED 5B 001C  	LD	DE,(T1E)
 1951 CDEE  ED 52       	SBC	HL,DE		; HL=FREE
 1952 CDF0  D1          	POP	DE
 1953 CDF1  37          	SCF			; 1 Byte fuer Doppelpunkt
 1954 CDF2  ED 52       	SBC	HL,DE		; FREE-Markenlaenge
 1955 CDF4  E1          	POP	HL		; Zeilenanfang
 1956 CDF5  30 0C       	JR	NC,ASL1
 1957 CDF7  CD C816     	CALL	MEM		; no Memory
 1958 CDFA  21 003E     	LD	HL,STAT
 1959 CDFD  CB D6       	SET	2,(HL)		; Fehler setzen
 1960 CDFF  E1          	POP	HL		; Quelltextpointer (nach Marke)
 1961 CE00  C3 CEFF     	JP	ASSEN
 1962                   ;
 1963 CE03  C5          ASL1:	PUSH	BC
 1964 CE04  CD D807     	CALL	MARKE		; Marke suchen
 1965 CE07  C1          	POP	BC
 1966 CE08  D1          	POP	DE		; Quelltextpointer (nach Marke)
 1967 CE09  38 1B       	JR	C,ASS5		; noch nicht vorhanden
 1968 CE0B  2B          	DEC	HL
 1969 CE0C  3A 003F     	LD	A,(OPT)
 1970 CE0F  17          	RLA			; Option '2'?
 1971 CE10  30 0C       	JR	NC,ASL2		; nein
 1972 CE12  CD 0086     	CALL	GET
 1973 CE15  3D          	DEC	A		; doppelt definiert?
 1974 CE16  20 0B       	JR	NZ,ASL3		; nein
 1975 CE18  CD D19F     	CALL	ERRX
 1976 CE1B  44          	DB	'D'		; Fehler 'D'
 1977 CE1C  18 05       	JR	ASL3
 1978                   ;
 1979 CE1E  3E 01       ASL2:	LD	A,1		; Kennung fuer doppelt definierte Marken
 1980 CE20  CD 0092     	CALL	PUT
 1981 CE23  EB          ASL3:	EX	DE,HL		; HL = Quelltextpointer
 1982 CE24  18 8F       	JR	ASS2		; weiter
 1983                   
 1984                   ; Marke eintragen, in PASS 1:
 1985 CE26  3A 003F     ASS5:	LD	A,(OPT)
 1986 CE29  17          	RLA			; Option '2'?
 1987 CE2A  38 F7       	JR	C,ASL3		; ja
 1988 CE2C  D5          	PUSH	DE		; Quelltextpointer (nach Marke)
 1989 CE2D  3E 3A       	LD	A,':'		; einen Doppelpunkt eintragen
 1990 CE2F  CD 0092     	CALL	PUT		; als Trennung Marke/Wert
 1991 CE32  2B          	DEC	HL
 1992 CE33  1B          ASS6:	DEC	DE		; letztes Zeichen der Marke
 1993 CE34  CD 008C     	CALL	GETDE
 1994 CE37  FE 3A       	CP	':'		; mit Doppelpunkt(en) beendet?
 1995 CE39  28 F8       	JR	Z,ASS6		; ja, davor gehen
 1996 CE3B  CD D863     ASS7:	CALL	LETTR		; Wandlung gross
ASM V2.1								    SLR180 1.31 Page  33
ASM21   Z80

 1997 CE3E  CD 0092     	CALL	PUT		; Zeichen in Markentabelle eintragen
 1998 CE41  2B          	DEC	HL
 1999 CE42  FE 20       	CP	' '		; Steuerzeichen?
 2000 CE44  30 ED       	JR	NC,ASS6		; nein, weitermachen
 2001 CE46  ED 5B 004C  	LD	DE,(MPC)	; akt. Adresse
 2002 CE4A  7A          	LD	A,D	; Adresse High
 2003 CE4B  CD 0092     	CALL	PUT		; Quelltextadresse der Marke
 2004 CE4E  2B          	DEC	HL
 2005 CE4F  7B          	LD	A,E	; Adresse Low
 2006 CE50  CD 0092     	CALL	PUT
 2007 CE53  CD C433     	CALL	MMTOP		; MTOP neu setzen mit HL
 2008 CE56  CD C382     	CALL	FREE		; FREE aktualisieren
 2009 CE59  E1          	POP	HL		; Quelltextpointer (nach Marke)
 2010 CE5A  C3 CDB5     	JP	ASS2		; Marke eingetragen
 2011                   ;
 2012                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2013                   ;
 2014                   ; Befehl suchen, Op-Code analysieren (neue Variante, 22.01.2023):
 2015                   ; PE:	HL	Zeiger auf Quelltext
 2016                   ;
 2017                   
 2018                   ; 1. Hochsumme und Quersumme ueber die Zeichen eines Befehls berechnen
 2019                   ;    dabei alles -40H, weil es nur Buchstaben sind
 2020                   
 2021 CE5D  11 0000     ASS8:	LD	DE,0
 2022 CE60  D6 40       ASS9:	SUB	40H
 2023 CE62  47          	LD	B,A
 2024 CE63  83          	ADD	A,E
 2025 CE64  5F          	LD	E,A		; E:= Summe der Zeichen
 2026 CE65  7A          	LD	A,D
 2027 CE66  82          	ADD	A,D		; D:= Hochsumme:
 2028 CE67  80          	ADD	A,B		;	1 * letztes Zeichen
 2029 CE68  57          	LD	D,A		;	2 * vorletztes Zeichen
 2030 CE69  23          	INC	HL		;	4 * vorvorletztes Zeichen ...
 2031 CE6A  CD 0086     	CALL	GET		; naechstes Zeichen aus Quelltext
 2032 CE6D  CD D863     	CALL	LETTR		; Buchstabe?
 2033 CE70  30 EE       	JR	NC,ASS9		; ja, weiter
 2034 CE72  E5          	PUSH	HL		; Quelltextpointer
 2035 CE73  FE 20       	CP	' '
 2036 CE75  28 0C       	JR	Z,ASS10		; Leerzeichen
 2037 CE77  FE 09       	CP	TAB
 2038 CE79  28 08       	JR	Z,ASS10		; Tabulator
 2039 CE7B  FE 3B       	CP	';'
 2040 CE7D  28 04       	JR	Z,ASS10		; Kommentar
 2041 CE7F  FE 0D       	CP	CR
 2042 CE81  20 3F       	JR	NZ,ERR4		; anderes Zeichen -> Fehler 4
 2043                   
 2044                   ; 2. separater Test auf EQU
 2045                   
 2046 CE83  A7          ASS10:	AND	A
 2047 CE84  21 4B2B     	LD	HL,4B2BH	; EQU?
 2048 CE87  ED 52       	SBC	HL,DE
 2049 CE89  20 24       	JR	NZ,ASN		; nein
 2050                   
 2051                   ; EQU-Markenwertaenderung:
 2052 CE8B  79          ASS16:	LD	A,C		; Marke vorhanden?
 2053 CE8C  B7          	OR	A
 2054 CE8D  28 06       	JR	Z,ASS20
 2055 CE8F  CD D19F     	CALL	ERRX
 2056 CE92  37          	DB	'7'		; Fehler 7
 2057 CE93  18 30       	JR	ASS21		; nicht vorhanden!
 2058                   	;
 2059 CE95  E1          ASS20:	POP	HL
 2060 CE96  CD D434     	CALL	ARITH		; Wert der Marke berechnen
 2061 CE99  3A 003F     	LD	A,(OPT)
 2062 CE9C  17          	RLA			; Option '2'?
 2063 CE9D  38 60       	JR	C,ASSEN		; ja
 2064 CE9F  E5          	PUSH	HL
 2065 CEA0  2A 0046     	LD	HL,(MTOP)
 2066 CEA3  7B          	LD	A,E
 2067 CEA4  CD 0092     	CALL	PUT		; Aenderung der
 2068 CEA7  23          	INC	HL		; Adresse der Marke
 2069 CEA8  7A          	LD	A,D		; in der Markentabelle
 2070 CEA9  CD 0092     	CALL	PUT
 2071 CEAC  E1          	POP	HL
 2072 CEAD  18 50       	JR	ASSEN
 2073                   
 2074                   ; 22.01.2023
ASM V2.1								    SLR180 1.31 Page  34
ASM21   Z80

 2075                   ; Befehl pruefen durch Vergleich der Hoch- und Quersumme anhand
 2076                   ; der hinterlegten Vergleichstabelle (mit Kontrolle beider Summen!)
 2077                   ; PE:	D=Hochsumme, E=Quersumme
 2078 CEAF  21 D6AF     ASN:	LD	HL,HQTAB-3	; Vergleichstabelle der Befehlssummen
 2079 CEB2  06 50       	LD	B,(HQTABE-HQTAB)/4	; Anzahl Befehle
 2080 CEB4  23          ASN1:	INC	HL
 2081 CEB5  23          	INC	HL		; Zeiger vor auf
 2082 CEB6  23          	INC	HL		; naechsten Befehlscode
 2083 CEB7  7E          	LD	A,(HL)
 2084 CEB8  23          	INC	HL
 2085 CEB9  BA          	CP	D		; Hochsumme korrekt?
 2086 CEBA  20 04       	JR	NZ,ASN2		; nein
 2087 CEBC  7E          	LD	A,(HL)
 2088 CEBD  BB          	CP	E		; Quersumme auch korrekt?
 2089 CEBE  28 08       	JR	Z,ASN3		; gefunden
 2090 CEC0  10 F2       ASN2:	DJNZ	ASN1		; weitersuchen
 2091 CEC2  CD D13F     ERR4:	CALL	ERR_4		; Fehler 4 (Befehlscode unbekannt)
 2092 CEC5  E1          ASS21:	POP	HL		; Quelltextpointer
 2093 CEC6  18 37       	JR	ASSEN		; bei Fehler
 2094                   
 2095                   ; Befehl in Vergleichstabelle gefunden:
 2096 CEC8  23          ASN3:	INC	HL
 2097 CEC9  46          	LD	B,(HL)		; vorbereiteter Opcode
 2098 CECA  23          	INC	HL
 2099 CECB  4E          	LD	C,(HL)		; Kontrollbyte
 2100                   
 2101 CECC  E1          	POP	HL		; Quelltextpointer
 2102 CECD  C5          	PUSH	BC		; Tabellenwerte (B=Opcode / C=Kontrollbyte)
 2103 CECE  AF          	XOR	A
 2104 CECF  32 004A     	LD	(M78),A		; Index ruecksetzen
 2105 CED2  79          	LD	A,C		; Kontrollbyte
 2106 CED3  E6 0F       	AND	0FH		; UP-Nummer (Bit 0-3)
 2107 CED5  FE 0D       	CP	13		; DB,DEFB,DEFS,DEFW,DS,DW... ?
 2108 CED7  28 1D       	JR	Z,ASS22		; ja
 2109 CED9  FE 0E       	CP	14		; DEFM?
 2110 CEDB  28 19       	JR	Z,ASS22
 2111 CEDD  E5          	PUSH	HL		; Quelltextpointer
 2112 CEDE  CD D3E9     	CALL	TFLAG		; Bedingungscode holen
 2113 CEE1  DC D320     	CALL	C,EDU40		; wenn keine Bedingung, dann als Operand analysieren
 2114 CEE4  2B          	DEC	HL
 2115 CEE5  CD 0086     	CALL	GET
 2116 CEE8  23          	INC	HL
 2117 CEE9  FE 2C       	CP	','		; Komma?
 2118 CEEB  CC D320     	CALL	Z,EDU40		; nach Komma weiteren Operanden analysieren
 2119 CEEE  3A 004A     	LD	A,(M78)
 2120 CEF1  B7          	OR	A		; Indexbefehl?
 2121 CEF2  C4 D369     	CALL	NZ,A_OUT	; Vorbyte fuer Indexbefehl ausgeben
 2122 CEF5  E1          	POP	HL		; Quelltextpointer
 2123 CEF6  F1          ASS22:	POP	AF		; A=B, F=C!
 2124 CEF7  F5          	PUSH	AF
 2125 CEF8  FC D352     	CALL	M,ED_OUT	; Vorbyte ED ausgeben, wenn (C)7=1
 2126 CEFB  C1          	POP	BC		; Tabellenwerte (B=Opcode / C=Kontrollbyte)
 2127 CEFC  CD CF16     	CALL	OPPV		; PV (Code verarbeiten)
 2128 CEFF  FD 22 004C  ASSEN:	LD	(MPC),IY	; akt. Adresse (Ende ueberlesen)
 2129 CF03  3E 0D       	LD	A,CR
 2130 CF05  C5          	PUSH	BC
 2131 CF06  01 0100     	LD	BC,100H
 2132 CF09  CD 0071     	CALL	TCPIR		; Zeilenende (CR) suchen
 2133 CF0C  CD 0086     	CALL	GET
 2134 CF0F  FE 0A       	CP	LF		; LF uebergehen
 2135 CF11  20 01       	JR	NZ,ASS24
 2136 CF13  23          	INC	HL
 2137 CF14  C1          ASS24:	POP	BC
 2138 CF15  C9          	RET
 2139                   ;-------
 2140                   ; Programmverteiler:
 2141                   ; PE:	C	UP-Nummer 0-15 in Bit 0..3
 2142                   ;	B	Befehlsbyte in vorbereiteter Form
 2143                   ; VR:	DE, AF
 2144 CF16  E5          OPPV:	PUSH	HL
 2145 CF17  C5          	PUSH	BC
 2146 CF18  3E 0F       	LD	A,0FH		; max. 00..0FH
 2147 CF1A  A1          	AND	C
 2148 CF1B  21 CF30     	LD	HL,UP0		; 1. Adresse
 2149 CF1E  11 D674     	LD	DE,UPTAB	; Adressdifferenz-Tabelle
 2150 CF21  3C          	INC	A
 2151 CF22  06 00       	LD	B,0
 2152 CF24  F5          OPPV1:	PUSH	AF
ASM V2.1								    SLR180 1.31 Page  35
ASM21   Z80

 2153 CF25  1A          	LD	A,(DE)		; Abstand zu naechster Routine
 2154 CF26  13          	INC	DE
 2155 CF27  4F          	LD	C,A
 2156 CF28  09          	ADD	HL,BC		; Adresse naechster Routine
 2157 CF29  F1          	POP	AF
 2158 CF2A  3D          	DEC	A
 2159 CF2B  20 F7       	JR	NZ,OPPV1	; wdh. bis A=0
 2160 CF2D  C1          	POP	BC
 2161 CF2E  E3          	EX	(SP),HL		; Ansprung
 2162 CF2F  C9          	RET
 2163                   ;-------
 2164                   ; 16 Unterprogramme ueber Programmverteiler:
 2165                   ;
 2166                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2167                   ;
 2168                   ; END
 2169                   ;
 2170 CF30  3A 003E     UP0:	LD	A,(STAT)
 2171 CF33  CB FF       	SET	7,A		; END erkannt
 2172 CF35  32 003E     	LD	(STAT),A
 2173 CF38  C9          	RET
 2174                   ;
 2175                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2176                   ;
 2177                   ; BIT, RES, SET
 2178                   ;
 2179 CF39  3E CB       UP1:	LD	A,0CBH		; Vorbyte 'CB' ausgeben
 2180 CF3B  CD D369     	CALL	A_OUT		; Code ausgeben
 2181 CF3E  CD D320     	CALL	EDU40		; 1. Operand analysieren
 2182 CF41  7B          	LD	A,E		; Bitnummer
 2183 CF42  FE 08       	CP	8
 2184 CF44  D2 D021     	JP	NC,UP50		; Bit > 7
 2185 CF47  07          	RLCA
 2186 CF48  07          	RLCA
 2187 CF49  07          	RLCA
 2188 CF4A  80          	ADD	A,B		; + Code
 2189 CF4B  47          	LD	B,A
 2190 CF4C  CD D320     BIT1:	CALL	EDU40		; 2. Operand analysieren
 2191 CF4F  28 2B       	JR	Z,BIT2		; kein Register erkannt!
 2192 CF51  4F          	LD	C,A		; Registercode
 2193 CF52  CD D33E     	CALL	IOFFS		; Offset fuer Indexbefehl
 2194 CF55  30 28       	JR	NC,BIT3	; kein Indexbefehl
 2195 CF57  3E 06       	LD	A,6
 2196 CF59  B9          	CP	C		; Register M
 2197 CF5A  20 20       	JR	NZ,BIT2	; nein
 2198 CF5C  78          	LD	A,B		; vorber. Befehlsbyte
 2199 CF5D  E6 C0       	AND	0C0H
 2200 CF5F  FE 40       	CP	40H
 2201 CF61  28 1C       	JR	Z,BIT3		; BIT-Befehl
 2202 CF63  2B          	DEC	HL
 2203 CF64  CD 0086     	CALL	GET
 2204 CF67  23          	INC	HL
 2205 CF68  FE 2C       	CP	','
 2206 CF6A  20 13       	JR	NZ,BIT3	; kein weiterer Operand
 2207 CF6C  CD D320     	CALL	EDU40		; 3. Operand analysieren
 2208 CF6F  28 0B       	JR	Z,BIT2		; kein Register
 2209 CF71  FE 06       	CP	6
 2210 CF73  28 07       	JR	Z,BIT2		; nochmal M
 2211 CF75  4F          	LD	C,A		; Registercode
 2212 CF76  3A 0054     	LD	A,(DDFD)
 2213 CF79  A7          	AND	A
 2214 CF7A  28 03       	JR	Z,BIT3		; nicht noch mal Indexreg.
 2215 CF7C  CD D232     BIT2:	CALL	ERR_E		; sonst Fehler 'E'
 2216 CF7F  79          BIT3:	LD	A,C		; Registercode
 2217 CF80  C3 D35D     	JP	ABOUT		; einarbeiten und ausgeben
 2218                   ;-------
 2219                   ; Fehlertest fuer Ladebefehle mit 2x Register M bzw. (HL):
 2220 CF83  3E 06       MM:	ld	a,6
 2221 CF85  B9          	cp	c		; 1. Register = M/(HL)?
 2222 CF86  C0          	RET	nz
 2223 CF87  BB          	cp	e		; 2. Register auch M/(HL)?
 2224 CF88  C0          	ret	nz
 2225 CF89  CD D19F     ERR_9:	CALL	ERRX		; Fehlercode eintragen
 2226 CF8C  39          	DB	'9'		; Operandenfehler (waere sonst HALT)
 2227 CF8D  C9          	RET
 2228                   ;
 2229                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2230                   ;
ASM V2.1								    SLR180 1.31 Page  36
ASM21   Z80

 2231                   ; CCF, NEG, SCF, DAA, RLA, DI, EI, RLD, LDD, LDDR, CPD, POP, PUSH ...
 2232                   ;
 2233 CF8E  C5          UP2:	PUSH	BC
 2234 CF8F  CD D320     EDU14:	CALL	EDU40		; Operand analysieren
 2235 CF92  28 13       	JR	Z,UP31		; kein Register erkannt
 2236 CF94  FE 31       	CP	31H		; AF?
 2237 CF96  28 10       	JR	Z,UP32		; Korrektur 31H -> 30H
 2238 CF98  FE 30       	CP	30H		; SP?
 2239 CF9A  20 0D       	JR	NZ,UCBEB	; anderes Register erkannt!
 2240 CF9C  C1          	POP	BC
 2241 CF9D  78          	LD	A,B		; vorbereiteter Opcode
 2242 CF9E  E6 FB       	AND	0FBH
 2243 CFA0  FE C1       	CP	0C1H		; PUSH oder POP?
 2244 CFA2  28 E5       	JR	Z,ERR_9		; nicht mit SP erlaubt!
 2245 CFA4  C5          	PUSH	BC
 2246 CFA5  1E 31       	LD	E,31H		; ergibt wieder A=30H fuer Register SP
 2247 CFA7  7B          UP31:	LD	A,E		; Wert
 2248 CFA8  3D          UP32:	DEC	A		; -1 (fuer RST n)
 2249 CFA9  C1          UCBEB:	POP	BC
 2250 CFAA  C3 D35D     	JP	ABOUT		; einarbeiten und ausgeben
 2251                   ;
 2252                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2253                   ;
 2254                   ; Logik- und Arithmetikbefehle
 2255                   ; CP, ADC, ADD, DEC, AND, SBC, INC, OR, XOR, SUB
 2256                   ;
 2257 CFAD  CD D320     UP3:	CALL	EDU40		; Operand analysieren
 2258 CFB0  20 0E       	JR	NZ,EDU11	; Register erkannt
 2259                   ; Wert direkt nach Logikbefehl, also
 2260                   ; CP n, ADC n, ADD n, DEC n, AND n, SBC n, INC n, OR n, XOR n, SUB n
 2261 CFB2  78          	LD	A,B		; vorbereiteter OpCode
 2262 CFB3  FE 80       	CP	80H
 2263 CFB5  DA CF89     	JP	C,ERR_9		; INC n oder DEC n nicht zulaessig
 2264 CFB8  C6 46       	ADD	A,46H		; Offset zu Code CP n, ADC n, usw.
 2265 CFBA  CD D369     	CALL	A_OUT		; Code ausgeben
 2266 CFBD  C3 D048     	JP	E_OUT		; 8-Bit-Wert in E ausgeben
 2267                   	;
 2268 CFC0  FE 31       EDU11:	CP	31H		; AF?
 2269 CFC2  30 C5       	JR	NC,ERR_9	; keine Logikbefehle mit Register AF, I oder R
 2270 CFC4  FE 06       	CP	6		; (HL)?
 2271 CFC6  28 07       	JR	Z,EDU12		; als 8-Bit-Register behandeln
 2272 CFC8  3A 0058     	LD	A,(REGNR)	; Registerkennbyte
 2273 CFCB  FE 0C       	CP	12
 2274 CFCD  30 1C       	JR	NC,EDU13	; 16Bit-Register oder Register I
 2275 CFCF  2B          EDU12:	DEC	HL
 2276 CFD0  CD 0086     	CALL	GET
 2277 CFD3  23          	INC	HL
 2278 CFD4  FE 2C       	CP	','
 2279 CFD6  28 D5       	JR	Z,UP3		; Komma danach, dann 2. Operanden benutzen
 2280 CFD8  3E 05       	LD	A,5
 2281 CFDA  B8          	CP	B
 2282 CFDB  3A 0059     	LD	A,(REGC)	; Registercode
 2283 CFDE  38 05       	JR	C,EDU15
 2284 CFE0  CD D35A     	CALL	ASBOT
 2285 CFE3  18 03       	JR	EDU34
 2286                   ;
 2287 CFE5  CD D35D     EDU15:	CALL	ABOUT
 2288 CFE8  C3 D33E     EDU34:	JP	IOFFS		; Offset fuer Indexbefehl
 2289                   
 2290                   ; 16Bit-Logikbefehle
 2291 CFEB  EB          EDU13:	EX	DE,HL		; Quelltextpointer in DE merken
 2292 CFEC  21 D65A     	LD	HL,TABARI	; Arithmetikbefehle
 2293 CFEF  78          	LD	A,B		; vorbereiteter 8Bit-Opcode (ADC=88H, ADD=80H, usw.)
 2294 CFF0  ED B1       	CPIR			; in Tabelle suchen
 2295 CFF2  46          	LD	B,(HL)		; vorbereiteter 16Bit-Opcode
 2296 CFF3  EB          	EX	DE,HL		; Quelltext zurueck nach HL
 2297 CFF4  2B          	DEC	HL
 2298 CFF5  CD 0086     	CALL	GET
 2299 CFF8  23          	INC	HL
 2300 CFF9  FE 2C       	CP	','		; Komma danach?
 2301 CFFB  20 10       	JR	NZ,EDUX1	; nein, Kurzform
 2302                   ; Langform
 2303 CFFD  3A 0059     	LD	A,(REGC)
 2304 D000  FE 20       	CP	20H		; dann muss es mit HL beginnen!
 2305 D002  C2 CF89     	JP	NZ,ERR_9
 2306 D005  78          	LD	A,B		; vorbereiteter OpCode
 2307 D006  FE 40       	CP	40H		; SBC=42H, ADC=4AH
 2308 D008  D4 D352     	CALL	NC,ED_OUT	; Vorbyte ED ausgeben bei ADC und SBC
ASM V2.1								    SLR180 1.31 Page  37
ASM21   Z80

 2309 D00B  18 81       	JR	UP2
 2310                   ; Kurzform
 2311 D00D  78          EDUX1:	LD	A,B		; vorbereiteter OpCode
 2312 D00E  FE 40       	CP	40H		; INC=03H, ADD=09H, DEC=0BH
 2313 D010  D4 D352     	CALL	NC,ED_OUT	; Vorbyte ED ausgeben, ausser bei ADD, INC, DEC
 2314 D013  3A 0059     	LD	A,(REGC)	; Registercode mitgeben
 2315 D016  C3 D35D     	JP	ABOUT
 2316                   ;
 2317                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2318                   ;
 2319                   ; IM
 2320                   ;
 2321 D019  CD D434     UP4:	CALL	ARITH		; Wert berechnen (IM 0 ... 2)
 2322 D01C  7B          	LD	A,E
 2323 D01D  FE 03       	CP	3
 2324 D01F  38 07       	JR	C,UP51
 2325 D021  CD D19F     UP50:	CALL	ERRX
 2326 D024  36          	DB	'6'		; IM 3 und groesser!
 2327 D025  AF          	XOR	A
 2328 D026  18 21       	JR	EDU17
 2329                   	;
 2330 D028  11 D657     UP51:	LD	DE,IMTAB	; Codes fuer IM-Befehle
 2331 D02B  83          	ADD	A,E
 2332 D02C  5F          	LD	E,A
 2333 D02D  1A          	LD	A,(DE)
 2334 D02E  18 19       	JR	EDU17		; Code ausgeben
 2335                   ;
 2336                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2337                   ;
 2338                   ; IN
 2339                   ;
 2340 D030  CD D320     UP5:	CALL	EDU40		; 1. Operand analysieren
 2341 D033  4F          	LD	C,A		; Registercode fuer ED-Befehl
 2342 D034  3A 0059     	LD	A,(REGC)	; Registercode
 2343 D037  3C          	INC	A		; Register erkannt?
 2344 D038  28 09       	JR	Z,EDU16		; nein, Wert direkt angegeben
 2345 D03A  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2346 D03D  3A 0059     	LD	A,(REGC)	; Registercode
 2347 D040  3C          	INC	A		; Register erkannt?
 2348 D041  20 0A       	JR	NZ,EDU19	; IN r,(C)
 2349 D043  3E DB       EDU16:	LD	A,0DBH		; IN A,n
 2350 D045  CD D369     	CALL	A_OUT		; Code ausgeben
 2351 D048  7B          E_OUT:	LD	A,E
 2352 D049  C3 D369     EDU17:	JP	A_OUT		; Code ausgeben
 2353                   ;
 2354 D04C  4B          EDU18:	LD	C,E
 2355 D04D  CD D352     EDU19:	CALL	ED_OUT		; Vorbyte ED ausgeben
 2356 D050  79          	LD	A,C		; Registercode
 2357 D051  C3 D35A     	JP	ASBOT		; einbauen und ausgeben
 2358                   ;
 2359                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2360                   ;
 2361                   ; OUT
 2362                   ;
 2363 D054  CD D320     UP6:	CALL	EDU40		; 1. Operand analysieren
 2364 D057  3A 0059     	LD	A,(REGC)	; Registercode
 2365 D05A  FE FF       	CP	0FFH		; Register erkannt?
 2366 D05C  F5          	PUSH	AF
 2367 D05D  4B          	LD	C,E
 2368 D05E  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2369 D061  5F          	LD	E,A		; Registercode fuer ED-Befehl
 2370 D062  F1          	POP	AF
 2371 D063  20 E7       	JR	NZ,EDU18	; OUT (C),r
 2372 D065  3E D3       	LD	A,0D3H		; OUT n,A
 2373 D067  CD D369     	CALL	A_OUT		; Code ausgeben
 2374 D06A  79          	LD	A,C
 2375 D06B  C3 D369     	JP	A_OUT		; ausgeben
 2376                   ;
 2377                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2378                   ;
 2379                   ; RLC, RRC, RL, RR, SLA, SRA, SLS, SRL
 2380                   ;
 2381 D06E  3E CB       UP7:	LD	A,0CBH		; Vorbyte CB
 2382 D070  CD D369     	CALL	A_OUT		; Code ausgeben
 2383 D073  C3 CF4C     	JP	BIT1		; weiter wie bei Bitbefehle
 2384                   ;
 2385                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2386                   ;
ASM V2.1								    SLR180 1.31 Page  38
ASM21   Z80

 2387                   ; EX	EX AF,AF'	EX DE,HL
 2388                   ;	EX (SP),HL	EX (SP),IX	EX (SP),IY
 2389                   ;
 2390 D076  CD D320     UP8:	CALL	EDU40		; 1. Operand analysieren
 2391 D079  FE 28       	CP	'('		; Klammer erkannt?
 2392 D07B  20 13       	JR	NZ,UP91		; nein
 2393 D07D  3A 0059     	LD	A,(REGC)	; Register in der Klammer
 2394 D080  FE 30       	CP	30H		; SP?
 2395 D082  20 09       	JR	NZ,ERR9		; Registerfehler
 2396 D084  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2397 D087  06 E3       	LD	B,0E3H		; EX (SP),HL
 2398 D089  FE 20       	CP	20H		; HL, IX oder IY?
 2399 D08B  28 22       	JR	Z,EDU1C
 2400 D08D  C3 CF89     ERR9:	JP	ERR_9		; Registerfehler
 2401                   ;
 2402 D090  FE 10       UP91:	CP	10H		; DE?
 2403 D092  20 0B       	JR	NZ,UP92		; nein
 2404 D094  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2405 D097  FE 20       	CP	20H		; HL?
 2406 D099  06 EB       	LD	B,0EBH		; EX DE,HL
 2407 D09B  28 12       	JR	Z,EDU1C
 2408 D09D  18 EE       	JR	ERR9
 2409                   	;
 2410 D09F  FE 31       UP92:	CP	31H		; AF?
 2411 D0A1  20 EA       	JR	NZ,ERR9		; sonst Fehler 9
 2412 D0A3  CD D320     	CALL	EDU40		; 2. Operand?
 2413 D0A6  06 08       	LD	B,8		; EX AF,AF'
 2414 D0A8  3C          	INC	A
 2415 D0A9  28 04       	JR	Z,EDU1C		; EX AF (Kurzform)
 2416 D0AB  FE 32       	CP	32H		; nochmals AF?
 2417 D0AD  20 DE       	JR	NZ,ERR9
 2418 D0AF  C3 D368     EDU1C:	JP	B_OUT		; Code in B ausgeben
 2419                   ;
 2420                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2421                   ;
 2422                   ; JP, CALL
 2423                   ;
 2424 D0B2  CD D3E9     UP9:	CALL	TFLAG		; Bedingungscode holen
 2425 D0B5  38 11       	JR	C,SKIP1		; nicht gefunden
 2426 D0B7  FE 07       	CP	7		; M?
 2427 D0B9  20 22       	JR	NZ,SKIP4	; nein
 2428 D0BB  2B          	DEC	HL
 2429 D0BC  4F          	LD	C,A		; merken
 2430 D0BD  CD 0086     	CALL	GET
 2431 D0C0  23          	INC	HL
 2432 D0C1  FE 2C       	CP	','		; M, ?
 2433 D0C3  79          	LD	A,C
 2434 D0C4  28 17       	JR	Z,SKIP4		; ja
 2435 D0C6  18 0C       	JR	SKIP2		; JP M
 2436                   ;
 2437 D0C8  CD D320     SKIP1:	CALL	EDU40		; Operand analysieren
 2438 D0CB  28 19       	JR	Z,SKIP5		; kein Register
 2439 D0CD  3A 0058     	LD	A,(REGNR)	; Registerkennbyte
 2440 D0D0  FE 3A       	CP	3AH		; M, (HL), (IX) oder (IY)?
 2441 D0D2  20 04       	JR	NZ,ERR_A
 2442 D0D4  06 E9       SKIP2:	LD	B,0E9H		; JP (HL)
 2443 D0D6  18 D7       	JR	EDU1C
 2444                   ;
 2445 D0D8  CD D19F     ERR_A:	CALL	ERRX		; in (NERR) eintragen
 2446 D0DB  41          	DB	'A'		; Fehler 'A'
 2447 D0DC  C9          	RET
 2448                   ;
 2449 D0DD  CD D35A     SKIP4:	CALL	ASBOT		; Bedingungscode einarbeiten
 2450 D0E0  CD D434     	CALL	ARITH		; Wert berechnen
 2451 D0E3  C3 D360     	JP	BCOUT		; Wert ausgeben
 2452                   ;
 2453 D0E6  78          SKIP5:	LD	A,B
 2454 D0E7  06 C3       	LD	B,0C3H		; JP (cc),nn
 2455 D0E9  FE C2       	CP	0C2H
 2456 D0EB  28 02       	JR	Z,SKIP6
 2457 D0ED  06 CD       	LD	B,0CDH		; CALL
 2458 D0EF  78          SKIP6:	LD	A,B
 2459 D0F0  C3 D25A     	JP	EDU30
 2460                   ;
 2461                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2462                   ;
 2463                   ; RET, RET (cc)
 2464                   ;
ASM V2.1								    SLR180 1.31 Page  39
ASM21   Z80

 2465 D0F3  CD D3E9     UP10:	CALL	TFLAG		; Bedingungscode holen
 2466 D0F6  D2 D35A     	JP	NC,ASBOT	; einschieben und ausgeben
 2467 D0F9  CD D434     	CALL	ARITH		; Wert berechnen
 2468 D0FC  20 DA       	JR	NZ,ERR_A	; Fehler 'A', da Wert gefunden!
 2469 D0FE  3E C9       	LD	A,0C9H		; unbedingtes RET
 2470 D100  C3 D369     	JP	A_OUT		; Code ausgeben
 2471                   ;
 2472                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2473                   ;
 2474                   ; JR, DJNZ
 2475                   ;
 2476 D103  CD D3E9     UP11:	CALL	TFLAG		; Bedingungscode holen
 2477 D106  30 05       	JR	NC,JR1		; gueltiger Bedingungscode
 2478 D108  CD D368     	CALL	B_OUT		; unbedingten Code ausgeben
 2479 D10B  18 0D       	JR	JR2
 2480                   ;
 2481 D10D  CB 57       JR1:	BIT	2,A
 2482 D10F  20 C7       	JR	NZ,ERR_A	; Fehler 'A', weil falsche Sprungbed.
 2483 D111  CB 58       	BIT	3,B
 2484 D113  28 C3       	JR	Z,ERR_A		; Fehler 'A', weil DJNZ mit Sprungbed.
 2485 D115  06 20       	LD	B,20H
 2486 D117  CD D35A     	CALL	ASBOT		; Bedingung einbauen
 2487 D11A  CD D320     JR2:	CALL	EDU40		; Operand analysieren
 2488 D11D  20 B9       	JR	NZ,ERR_A	; Fehler 'A' (Register erkannt)
 2489 D11F  E5          	PUSH	HL
 2490 D120  FD E5       	PUSH	IY
 2491 D122  EB          	EX	DE,HL
 2492 D123  D1          	POP	DE		; Adresspointer
 2493 D124  37          	SCF
 2494 D125  ED 52       	SBC	HL,DE		; Differenz berechnen
 2495 D127  5D          	LD	E,L
 2496 D128  7C          	LD	A,H
 2497 D129  CB 03       	RLC	E
 2498 D12B  CE 00       	ADC	A,0
 2499 D12D  28 04       	JR	Z,JR3		; Sprungweite zu gross?
 2500 D12F  CD D19F     	CALL	ERRX		; Fehlercode eintragen
 2501 D132  36          	DB	'6'		; Fehler 6
 2502 D133  7D          JR3:	LD	A,L
 2503 D134  E1          	POP	HL
 2504 D135  C3 D369     	JP	A_OUT		; Code ausgeben
 2505                   ;
 2506                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2507                   ;
 2508                   ; DEFB, DEFW, DEFS, DB, DW, DS
 2509                   ;
 2510 D138  CD CBEC     UP12:	call	SPCTB		; naechstes Zeichen holen
 2511 D13B  FE 20       	cp	' '
 2512 D13D  30 05       	jr	nc,DB1
 2513 D13F  CD D19F     ERR_4:	CALL	ERRX		; in (NERR) eintragen
 2514 D142  34          	DB	'4'		; Syntexfehler
 2515 D143  C9          	RET
 2516                   ;
 2517 D144  C5          DB1:	PUSH	BC
 2518 D145  05          	DEC	B
 2519 D146  20 0F       	JR	NZ,DEFWS	; nicht DB
 2520 D148  FE 27       	CP	27H		; Zeichenkette?
 2521 D14A  20 0B       	JR	NZ,DEFWS	; nein
 2522 D14C  CD D1AF     	CALL	STR		; String bearbeiten
 2523 D14F  C1          	POP	BC
 2524 D150  D8          	RET	C		; Fehler
 2525 D151  FE 2C       DB2:	CP	','		; folgt Operand?
 2526 D153  C0          	RET	NZ		; nein
 2527 D154  23          	INC	HL		; nach Komma
 2528 D155  18 E1       	JR	UP12		; und noch einmal
 2529                   ;
 2530 D157  CD D320     DEFWS:	CALL	EDU40		; Operand analysieren
 2531 D15A  C1          	POP	BC
 2532 D15B  78          	LD	A,B
 2533 D15C  FE 04       	CP	4
 2534 D15E  28 13       	JR	Z,DEFS		; DS/DEFS
 2535 D160  C5          	PUSH	BC
 2536 D161  05          	DEC	B
 2537 D162  20 01       	JR	NZ,DB3
 2538 D164  04          	INC	B		; DB bleibt 1!
 2539 D165  7B          DB3:	LD	A,E		; Low
 2540 D166  CD D369     DB4:	CALL	A_OUT		; Code ausgeben
 2541 D169  7A          	LD	A,D		; High
 2542 D16A  10 FA       	DJNZ	DB4		; nur bei DW/DEFW
ASM V2.1								    SLR180 1.31 Page  40
ASM21   Z80

 2543 D16C  C1          	POP	BC
 2544 D16D  2B          	DEC	HL
 2545 D16E  CD 0086     	CALL	GET
 2546 D171  18 DE       	jr	DB2		; Kommatest
 2547                   ;
 2548 D173  42          DEFS:	LD	B,D
 2549 D174  4B          	LD	C,E		; Anzahl
 2550 D175  2B          	DEC	HL
 2551 D176  CD 0086     	CALL	GET
 2552 D179  23          	INC	HL
 2553 D17A  FE 2C       	CP	','		; Komma?
 2554 D17C  1E 00       	LD	E,0
 2555 D17E  20 03       	JR	NZ,DS0
 2556 D180  CD D320     	CALL	EDU40		; Operanden analysieren
 2557 D183  7B          DS0:	LD	A,E		; Low = Code
 2558 D184  CD D369     	CALL	A_OUT		; Code ausgeben
 2559 D187  0B          	DEC	BC
 2560 D188  78          	LD	A,B
 2561 D189  B1          	OR	C
 2562 D18A  20 F7       	JR	NZ,DS0		; wiederholen
 2563 D18C  C9          	RET
 2564                   ;
 2565                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2566                   ;
 2567                   ; DEFM
 2568                   ;
 2569 D18D  CD CBEC     UP13:	CALL	SPCTB		; naechstes ASCII-Zeichen
 2570 D190  FE 27       	CP	27H
 2571 D192  20 06       	JR	NZ,ERR_8
 2572 D194  CD D1AF     	CALL	STR		; String auswerten
 2573 D197  FE 2C       	CP	','
 2574 D199  C0          	RET	NZ
 2575 D19A  CD D19F     ERR_8:	CALL	ERRX
 2576 D19D  38          	DB	'8'		; Fehler 8
 2577 D19E  C9          	RET
 2578                   ;
 2579                   ; Eintragen Fehlercode
 2580                   ; PE:	Fehlercode direkt nach CALL ERRX als DB ..
 2581                   ; PA:	Z=0
 2582                   ;
 2583 D19F  E3          ERRX:	EX	(SP),HL		; HL auf Stack, Fehlercode in (HL)
 2584 D1A0  3A A880     	LD	A,(NERR)
 2585 D1A3  FE 20       	CP	' '		; bereits ein Fehlercode eingetragen?
 2586 D1A5  20 04       	JR	NZ,ERRY		; ja
 2587 D1A7  7E          	LD	A,(HL)		; Fehlercode holen
 2588 D1A8  32 A880     	LD	(NERR),A	; und eintragen
 2589 D1AB  23          ERRY:	INC	HL		; Fehlercode uebergehen
 2590 D1AC  E3          	EX	(SP),HL		; HL regenerieren
 2591 D1AD  B7          	OR	A		; Z=0
 2592 D1AE  C9          	RET
 2593                   ;
 2594                   ; Sting auswerten
 2595                   ;
 2596 D1AF  23          STR:	INC	HL		; nach '
 2597 D1B0  CD 0086     STR1:	CALL	GET
 2598 D1B3  FE 20       	CP	' '		; Steuerzeichen?
 2599 D1B5  38 E3       	JR	C,ERR_8		; ja -> Fehler
 2600 D1B7  23          	INC	HL
 2601 D1B8  FE 27       	CP	27H
 2602 D1BA  28 05       	JR	Z,STR2
 2603 D1BC  CD D369     	CALL	A_OUT		; Code ausgeben
 2604 D1BF  18 EF       	JR	STR1
 2605                   ;
 2606 D1C1  CD CBEC     STR2:	CALL	SPCTB
 2607 D1C4  FE 2C       	CP	','
 2608 D1C6  C8          	RET	Z
 2609 D1C7  FE 3B       	CP	';'
 2610 D1C9  C8          	RET	Z
 2611 D1CA  FE 0D       	CP	CR
 2612 D1CC  C8          	RET	Z
 2613 D1CD  37          	SCF			; Fehler
 2614 D1CE  18 CA       	JR	ERR_8
 2615                   ;
 2616                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2617                   ;
 2618                   ; ORG
 2619                   ;
 2620 D1D0  CD D434     UP14:	CALL	ARITH		; Wert berechnen
ASM V2.1								    SLR180 1.31 Page  41
ASM21   Z80

 2621                   ;02.01.2024: Fehlerpruefung nicht mehr in Pass 1
 2622 D1D3  3A 003F     	LD	A,(OPT)
 2623 D1D6  17          	RLA			; Pass '2'?
 2624 D1D7  30 06       	JR	NC,UP14A	; nein, Fehler noch nicht auswerten
 2625 D1D9  3A A880      	LD	A,(NERR)
 2626 D1DC  FE 20       	CP	' '		; Fehler?
 2627 D1DE  C0          	RET	NZ		; ja, Abbruch
 2628 D1DF  D5          UP14A:	PUSH	DE		; ermittelter Wert
 2629 D1E0  FD E1       	POP	IY		; als neuer Befehlszaehlerstand
 2630 D1E2  C9          	RET
 2631                   ;
 2632                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2633                   ;
 2634                   ; LD
 2635                   ;
 2636 D1E3  E5          UP15:	PUSH	HL
 2637 D1E4  AF          	XOR	A		; Indexspeicher
 2638 D1E5  32 004A     	LD	(M78),A
 2639 D1E8  CD D320     	CALL	EDU40		; 1. Operand analysieren
 2640 D1EB  28 4A       	JR	Z,EDU1		; Klammer oder kein Register
 2641 D1ED  4F          	LD	C,A		; 1. Register merken
 2642 D1EE  3A 0054     	LD	A,(DDFD)
 2643 D1F1  47          	LD	B,A		; Index merken
 2644 D1F2  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2645 D1F5  28 7E       	JR	Z,EDU2		; Klammer oder kein Register
 2646 D1F7  5F          	LD	E,A		; 2. Register
 2647 D1F8  81          	ADD	A,C		; + 1. Register
 2648 D1F9  FE 0F       	CP	0FH
 2649 D1FB  D2 D2E9     	JP	NC,EDU31	; Doppelregister oder Register I bzw. R dabei!
 2650 D1FE  E1          	POP	HL
 2651 D1FF  7B          	LD	A,E		; 2. Register
 2652 D200  C6 40       	ADD	A,40H		; Befehle ab 40H
 2653 D202  C5          	PUSH	BC		; Index
 2654 D203  47          	LD	B,A		; vorbereiteter Befehl
 2655 D204  79          	LD	A,C		; Register einbauen
 2656 D205  CD D35A     	CALL	ASBOT		; und ausgeben
 2657 D208  C1          	POP	BC
 2658 D209  CD CF83     	CALL	MM		; Test auf 2x Register M/(HL)?
 2659 D20C  3A 004A     	LD	A,(M78)
 2660 D20F  B7          	OR	A		; Indexbefehl?
 2661 D210  C8          	RET	Z		; nein
 2662 D211  3E 06       	LD	A,6
 2663 D213  BB          	CP	E
 2664 D214  28 03       	JR	Z,LD02		; Register M/(HL) dabei
 2665 D216  B9          	CP	C
 2666 D217  20 05       	JR	NZ,LD03		; Register M/(HL) nicht dabei
 2667 D219  3A 004B     LD02:	LD	A,(M79)		; Offset fuer Indexbefehl
 2668 D21C  18 6C       	JR	EDU3		; Code ausgeben
 2669                   ;-------
 2670                   ; Fehlertest fuer Ladebefehle mit 8-Bit-Indexregistern:
 2671 D21E  3A 0054     LD03:	LD	A,(DDFD)
 2672 D221  90          	SUB	B
 2673 D222  C8          	RET	Z		; 2* der selbe Index
 2674 D223  E6 0F       	AND	0FH
 2675 D225  28 0B       	JR	Z,ERR_E		; 2 versch. Indexregister!
 2676 D227  79          	LD	A,C
 2677 D228  AB          	XOR	E
 2678 D229  E6 04       	AND	4
 2679 D22B  C0          	RET	NZ		; nur 1* H oder L
 2680 D22C  3E 07       	LD	A,7
 2681 D22E  B9          	CP	C		; Akku dabei
 2682 D22F  C8          	RET	Z
 2683 D230  BB          	CP	E		; Akku dabei
 2684 D231  C8          	RET	Z
 2685 D232  CD D19F     ERR_E:	CALL	ERRX
 2686 D235  45          	DB	'E'		; Fehler 'E'
 2687 D236  C9          	RET
 2688                   ;
 2689 D237  D1          EDU1:	POP	DE
 2690 D238  3A 0059     	LD	A,(REGC)	; Registercode
 2691 D23B  3C          	INC	A		; Register erkannt?
 2692 D23C  28 03       	JR	Z,EDU4		; nein
 2693 D23E  3C          	INC	A
 2694 D23F  18 49       	JR	EDU3		; Code ausgeben
 2695                   ;
 2696 D241  3A 0055     EDU4:	LD	A,(KLAM)
 2697 D244  FE 28       	CP	'('		; Wert in Klammern?
 2698 D246  C2 CF89     	JP	NZ,ERR_9
ASM V2.1								    SLR180 1.31 Page  42
ASM21   Z80

 2699 D249  ED 4B 0052  	LD	BC,(NUMB)	; Wert des 1. Operanden
 2700 D24D  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2701 D250  ED 43 0052  	LD	(NUMB),BC
 2702 D254  FE 07       	CP	7		; Register A?
 2703 D256  20 07       	JR	NZ,EDU5
 2704 D258  3E 32       	LD	A,32H		; LD (nn),A
 2705 D25A  CD D369     EDU30:	CALL	A_OUT		; Code ausgeben
 2706 D25D  18 47       	JR	EDU6		; Wert ausgeben
 2707                   ;
 2708 D25F  FE 31       EDU5:	CP	31H		; AF?
 2709 D261  CA CF89     	JP	Z,ERR_9
 2710 D264  FE 20       	CP	20H		; (HL)?
 2711 D266  06 22       	LD	B,22H		; LD (nn),HL
 2712 D268  28 06       	JR	Z,EDU7
 2713 D26A  CD D352     	CALL	ED_OUT		; Vorbyte ED ausgeben
 2714 D26D  C6 43       	ADD	A,43H
 2715 D26F  47          	LD	B,A
 2716 D270  CD D368     EDU7:	CALL	B_OUT		; Code ausgeben
 2717 D273  18 31       	JR	EDU6		; Wert ausgeben
 2718                   
 2719                   ; LD Register,n
 2720                   ; LD Register,(nn)
 2721                   ; LD Register,(dd)
 2722                   ; LD Doppelregister,nn
 2723                   ; LD Doppelregister,(nn)
 2724 D275  E1          EDU2:	POP	HL
 2725 D276  FE 28       	CP	'('		; Klammer?
 2726 D278  20 13       	JR	NZ,EDU8
 2727 D27A  32 004A     	LD	(M78),A
 2728 D27D  3A 0059     	LD	A,(REGC)	; Registercode
 2729 D280  FE FF       	CP	0FFH		; Register erkannt?
 2730 D282  28 09       	JR	Z,EDU8		; nein
 2731 D284  FE 20       	CP	20H
 2732 D286  30 7C       	JR	NC,ERRR
 2733 D288  C6 0A       	ADD	A,0AH		; LD A,(BC) oder LD A,(DE)
 2734 D28A  C3 D369     EDU3:	JP	A_OUT		; Code ausgeben
 2735                   
 2736                   ; LD Register,n
 2737                   ; LD Doppelregister,nn
 2738 D28D  CD D434     EDU8:	CALL	ARITH		; Wert berechnen
 2739 D290  3A 0059     	LD	A,(REGC)	; Registercode
 2740 D293  FE 07       	CP	7		; A?
 2741 D295  20 12       	JR	NZ,EDU9		; nein
 2742 D297  3A 004A     	LD	A,(M78)
 2743 D29A  FE 28       	CP	28H		; "("
 2744 D29C  20 0B       	JR	NZ,EDU9
 2745 D29E  3E 3A       	LD	A,3AH		; LD A,(nn)
 2746 D2A0  CD D369     	CALL	A_OUT		; Code ausgeben
 2747 D2A3  CD D434     	CALL	ARITH		; Wert berechnen
 2748 D2A6  C3 D360     EDU6:	JP	BCOUT		; Wert ausgeben
 2749                   ;
 2750 D2A9  FE 31       EDU9:	CP	31H		; AF?
 2751 D2AB  28 57       	JR	Z,ERRR
 2752 D2AD  FE 06       	CP	6		; M?
 2753 D2AF  28 0A       	JR	Z,EDU0A
 2754 D2B1  3A 0058     	LD	A,(REGNR)	; Registerkennbyte
 2755 D2B4  FE 12       	CP	12H
 2756 D2B6  3A 0059     	LD	A,(REGC)	; Registercode
 2757 D2B9  30 0E       	JR	NC,EDU0B
 2758 D2BB  06 06       EDU0A:	LD	B,6
 2759 D2BD  CD D35A     	CALL	ASBOT
 2760 D2C0  CD CFE8     	CALL	EDU34
 2761 D2C3  CD D434     	CALL	ARITH		; Wert berechnen
 2762 D2C6  7B          	LD	A,E
 2763 D2C7  18 C1       EDU33:	JR	EDU3		; Code ausgeben
 2764                   	;
 2765 D2C9  F5          EDU0B:	PUSH	AF
 2766 D2CA  CD D320     	CALL	EDU40		; Operand analysieren
 2767 D2CD  FE 28       	CP	28H
 2768 D2CF  0E 01       	LD	C,1
 2769 D2D1  20 0F       	JR	NZ,EDU0C
 2770 D2D3  0E 4B       	LD	C,4BH
 2771 D2D5  F1          	POP	AF
 2772 D2D6  F5          	PUSH	AF
 2773 D2D7  FE 20       	CP	20H
 2774 D2D9  20 04       	JR	NZ,EDU0D
 2775 D2DB  0E 0A       	LD	C,0AH
 2776 D2DD  18 03       	JR	EDU0C
ASM V2.1								    SLR180 1.31 Page  43
ASM21   Z80

 2777                   ;
 2778 D2DF  CD D352     EDU0D:	CALL	ED_OUT		; Vorbyte ED ausgeben
 2779 D2E2  79          EDU0C:	LD	A,C
 2780 D2E3  C1          	POP	BC
 2781 D2E4  CD D35D     	CALL	ABOUT
 2782 D2E7  18 BD       	JR	EDU6		; Wert ausgeben
 2783                   
 2784                   ; Doppelregister oder I oder R bei LD-Befehl dabei:
 2785 D2E9  E1          EDU31:	POP	HL		; nochmals von vorn beginnen
 2786 D2EA  CD D320     	CALL	EDU40		; 1. Operand analysieren
 2787 D2ED  FE 30       	CP	30H		; Register SP?
 2788 D2EF  20 0B       	JR	NZ,EDU0E	; nein
 2789 D2F1  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2790 D2F4  FE 20       	CP	20H		; Register HL?
 2791 D2F6  20 0C       	JR	NZ,ERRR		; Operandenfehler
 2792 D2F8  3E F9       	LD	A,0F9H		; LD SP,HL
 2793 D2FA  18 CB       	JR	EDU33		; Code ausgeben
 2794                   
 2795                   ; Ladebefehl mit I- oder R-Register:
 2796 D2FC  FE 07       EDU0E:	CP	7		; A-Register?
 2797 D2FE  28 07       	JR	Z,EDUNA		; 1. Operand = Register A
 2798 D300  CB 77       	BIT	6,A		; R- oder I-Register?
 2799 D302  20 11       	JR	NZ,EDU0F	; 1. Operand = Register R oder I
 2800 D304  C3 CF89     ERRR:	JP	ERR_9		; alles andere sind Fehler
 2801                   
 2802                   ; LD A,I und LD A,R
 2803 D307  CD D320     EDUNA:	CALL	EDU40		; 2. Operand analysieren
 2804 D30A  CB 77       	BIT	6,A		; R- oder I-Register?
 2805 D30C  28 F6       	JR	Z,ERRR		; nein -> Fehler 9
 2806 D30E  C6 10       	ADD	A,10H		; 47H -> 57H	4FH -> 5FH
 2807 D310  CD D352     EDU1F:	CALL	ED_OUT		; Vorbyte ED ausgeben
 2808 D313  18 B2       EDU10:	JR	EDU33		; Code ausgeben
 2809                   
 2810                   ; LD I,A und LD R,A
 2811 D315  4F          EDU0F:	LD	C,A		; 1. Operand
 2812 D316  CD D320     	CALL	EDU40		; 2. Operand analysieren
 2813 D319  FE 07       	CP	7		; A?
 2814 D31B  20 E7       	JR	NZ,ERRR
 2815 D31D  79          	LD	A,C		; Code 47 oder 4FH
 2816 D31E  18 F0       	JR	EDU1F		; mit Vorbyte ED ausgeben
 2817                   ;
 2818                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2819                   ;
 2820                   ; Operanden analysieren
 2821                   ;
 2822                   ; PE:	HL	Quelltextadresse
 2823                   ; PA:	Z=1	wenn Klammer oder kein Reg. erkannt
 2824                   ;	Z=0	Register erkannt, dann:
 2825                   ;	A	Registercode oder '('
 2826                   ;	HL	Quelltextadresse nach dem Operanden
 2827                   ;	DE	Wert eines Ausdrucks
 2828                   ; VR:	AF, DE, HL
 2829                   ;
 2830 D320  CD D434     EDU40:	CALL	ARITH		; Wert berechnen
 2831 D323  3A 0054     	LD	A,(DDFD)
 2832 D326  B7          	OR	A		; Index-Befehl?
 2833 D327  28 09       	JR	Z,EDR1		; nein
 2834 D329  32 004A     	LD	(M78),A
 2835 D32C  3A 0052     	LD	A,(NUMB)	; Offset fuer Index-Befehl
 2836 D32F  32 004B     	LD	(M79),A
 2837 D332  3A 0055     EDR1:	LD	A,(KLAM)
 2838 D335  FE 28       	CP	'('		; Klammer?
 2839 D337  C8          	RET	Z		; ja
 2840 D338  3A 0059     	LD	A,(REGC)	; Registercode
 2841 D33B  FE FF       	CP	-1		; Register erkannt?
 2842 D33D  C9          	RET
 2843                   ;-------
 2844                   ; Offset fuer Indexbefehl ausgeben:
 2845                   ; PA:	CY=0	kein Indexbefehl
 2846 D33E  3A 0054     IOFFS:	LD	A,(DDFD)
 2847 D341  B7          	OR	A		; Index-Befehl?
 2848 D342  C8          	RET	Z		; nein (CY=0)
 2849 D343  3A 0059     	LD	A,(REGC)
 2850 D346  FE 06       	CP	6		; (IX) oder (IY)?
 2851 D348  37          	SCF			; Indexbefehl
 2852 D349  C0          	RET	NZ		; nein
 2853 D34A  3A 0052     	LD	A,(NUMB)	; Offset fuer Index-Befehl
 2854 D34D  CD D369     	CALL	A_OUT		; ausgeben
ASM V2.1								    SLR180 1.31 Page  44
ASM21   Z80

 2855 D350  37          	SCF			; Indexbefehl
 2856 D351  C9          	RET
 2857                   ;-------
 2858                   ; Vorbyte 0EDH ausgeben
 2859 D352  F5          ED_OUT:	PUSH	AF
 2860 D353  3E ED       	LD	A,0EDH
 2861 D355  CD D369     	CALL	A_OUT
 2862 D358  F1          	POP	AF
 2863 D359  C9          	RET
 2864                   ;-------
 2865                   ; Code in Bits 3 bis 5 einschieben und ausgeben
 2866                   ; PE:	A	Code
 2867                   ;	B	Rest des Befehlsbytes
 2868                   ; VR:	AF,IY
 2869 D35A  07          ASBOT:	RLCA
 2870 D35B  07          	RLCA
 2871 D35C  07          	RLCA
 2872 D35D  80          ABOUT:	ADD	A,B
 2873 D35E  18 09       	JR	A_OUT		; Code ausgeben
 2874                   ;-------
 2875                   ; Wert mit 2 Bytes ausgeben:
 2876 D360  ED 4B 0052  BCOUT:	LD	BC,(NUMB)
 2877 D364  79          	LD	A,C
 2878 D365  CD D369     	CALL	A_OUT		; Code ausgeben
 2879 D368  78          B_OUT:	LD	A,B
 2880                   ;
 2881                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2882                   ;
 2883                   ; Ausgabe eines assemblierten Bytes auf die versch.
 2884                   ; Ausgabekanaele (RAM, Kassette, Anzeigezeile):
 2885                   ; PE:	A	Byte
 2886                   ;	IY	Adresse
 2887                   ; PA:	IY	naechste Adresse
 2888                   ; VR:	AF,IY
 2889                   ;
 2890 D369  D9          A_OUT:	EXX
 2891 D36A  4F          	LD	C,A		; Datenbyte
 2892 D36B  3A 003F     	LD	A,(OPT)
 2893 D36E  CB 67       	BIT	4,A		; Pass 3 = Save?
 2894 D370  20 69       	JR	NZ,OUT2	; ja
 2895 D372  17          	RLA			; Pass 2?
 2896 D373  30 69       	JR	NC,OUTE	; nein, im Pass 1 nichts machen
 2897 D375  17          	RLA			; Option 'O'?
 2898 D376  30 52       	JR	NC,OUT1	; nein, nur Anzeigezeile erzeugen
 2899                   	; in MC in Speicher schreiben (Pass 2)
 2900 D378  FD E5       	PUSH	IY		; Befehlszaehler
 2901 D37A  D1          	POP	DE
 2902 D37B  2A 0040     	LD	HL,(OFFS)	; Assembleroffset
 2903 D37E  19          	ADD	HL,DE		; HL=Adresse+Offset
 2904 D37F  EB          	EX	DE,HL		; DE=Adresse, wo MC geschrieben wird
 2905 D380  21 8000     	LD	HL,8000H
 2906 D383  37          	SCF
 2907 D384  ED 52       	SBC	HL,DE
 2908 D386  38 1F       	JR	C,POKE1		; groesser als 7FFFH, also IRM
 2909                   ; im RAM zugelassen:
 2910                   ;	0000H bis 00FFH
 2911                   ;	0200H bis T1A		(T1A bis MBOT von ASM genutzt)
 2912                   ;	MBOT  bis 7FFFH
 2913 D388  21 00FF     	LD	HL,0FFH
 2914 D38B  ED 52       	SBC	HL,DE
 2915 D38D  30 39       	JR	NC,POKE		; kleiner als 100H > OK
 2916 D38F  21 0200     	LD	HL,0200H
 2917 D392  ED 52       	SBC	HL,DE
 2918 D394  30 2D       	JR	NC,MERR		; kleiner als 200H > Error
 2919 D396  2A 0018     	LD	HL,(T1A)	; Quelltextbeginn
 2920 D399  2B          	DEC	HL
 2921 D39A  ED 52       	SBC	HL,DE
 2922 D39C  30 2A       	JR	NC,POKE		; kleiner als T1A > OK
 2923 D39E  2A 0044     	LD	HL,(MBOT)
 2924 D3A1  ED 52       	SBC	HL,DE
 2925 D3A3  30 1E       	JR	NC,MERR		; kleiner als MBOT > Error
 2926 D3A5  18 21       	JR	POKE
 2927                   ; im IRM zugelassen:
 2928                   ;	AB00H bis ACFFH		anwenderspezifische Systemerweiterungen
 2929                   ;	BA00H bis BFFFH		Anwender-IRM
 2930 D3A7  21 AB00     POKE1:	LD	HL,0AB00H
 2931 D3AA  ED 52       	SBC	HL,DE
 2932 D3AC  30 15       	JR	NC,MERR		; kleiner als AB00H > Error
ASM V2.1								    SLR180 1.31 Page  45
ASM21   Z80

 2933 D3AE  21 AD00     	LD	HL,0AD00H
 2934 D3B1  ED 52       	SBC	HL,DE
 2935 D3B3  30 13       	JR	NC,POKE		; kleiner als AD00H > OK
 2936 D3B5  21 BA00     	LD	HL,0BA00H
 2937 D3B8  ED 52       	SBC	HL,DE
 2938 D3BA  30 07       	JR	NC,MERR		; kleiner als BA00H > Error
 2939 D3BC  21 C000     	LD	HL,0C000H
 2940 D3BF  ED 52       	SBC	HL,DE
 2941 D3C1  30 05       	JR	NC,POKE		; kleiner als C000H > OK
 2942 D3C3  CD D19F     MERR:	CALL	ERRX		; Fehlercode eintragen
 2943 D3C6  4D          	DB	'M'		; Quelltext wuerde ueberschrieben
 2944 D3C7  21          	DB	21H	; LD HL,nn
 2945 D3C8  EB          POKE:	EX	DE,HL
 2946 D3C9  71          	LD	(HL),C		; MC poken (IRM ist dabei EIN)
 2947                   	; Anzeigezeile (Pass 2)
 2948 D3CA  2A 0048     OUT1:	LD	HL,(PBL)	; Zeiger auf Byte-Liste
 2949 D3CD  3E 8F       	LD	A,Low(ADR+13)	; Stelle nach 3 Bytes Code
 2950 D3CF  BD          	CP	L		; Byteliste voll?
 2951 D3D0  28 0C       	JR	Z,OUTE	; ja, nichts weiter eintragen
 2952 D3D2  79          	LD	A,C		; Datenbyte
 2953 D3D3  CD CC76     	CALL	PAHEX		; HEX-Zeichen in Puffer eintragen
 2954 D3D6  22 0048     	LD	(PBL),HL	; neuer Zeiger
 2955 D3D9  18 03       	JR	OUTE
 2956                   	; Datentraeger (Pass 3)
 2957 D3DB  CD D8D5     OUT2:	CALL	BLWR		; Byte auf Kass/Disk ausgeben
 2958 D3DE  2A 0050     OUTE:	LD	HL,(MCL)
 2959 D3E1  23          	INC	HL		; Programmlaenge +1
 2960 D3E2  22 0050     	LD	(MCL),HL
 2961 D3E5  FD 23       	INC	IY		; naechste Adresse
 2962 D3E7  D9          	EXX
 2963 D3E8  C9          	RET
 2964                   ;
 2965                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 2966                   ;
 2967                   ; Code der Sprungbedingung holen (Flagtest):
 2968                   ; PE:	HL	Quelltextadresse
 2969                   ; PA:	HL	Quelltextadresse (nach Bedingung, wenn Komma, dann danach)
 2970                   ;	A	cc-Code
 2971                   ;	CY=1	ohne Bedingung (nichts gefunden)
 2972                   ; VR:	AF, DE, (HL nur wenn Sprungbedingung, dann danach)
 2973                   ;
 2974 D3E9  C5          TFLAG:	PUSH	BC
 2975 D3EA  E5          	PUSH	HL
 2976 D3EB  CD CBEC     	CALL	SPCTB		; naechstes ASCII-Zeichen
 2977 D3EE  CD D863     	CALL	LETTR		; Buchstabe?
 2978 D3F1  38 3D       	JR	C,TFL6		; nein -> Fehler
 2979 D3F3  57          	LD	D,A
 2980 D3F4  1E 20       	LD	E,' '
 2981 D3F6  23          	INC	HL
 2982 D3F7  CD 0086     	CALL	GET		; naechstes Zeichen
 2983 D3FA  CD D84F     	CALL	LABEL		; weiteres gueltiges Zeichen?
 2984 D3FD  38 0A       	JR	C,TFL1		; nein, Bedingung aus nur 1 Zeichen
 2985 D3FF  5F          	LD	E,A		; zweites Zeichen
 2986 D400  23          	INC	HL
 2987 D401  CD 0086     	CALL	GET		; naechstes Zeichen
 2988 D404  CD D84F     	CALL	LABEL		; weiteres gueltiges Zeichen?
 2989 D407  30 27       	JR	NC,TFL6		; ja, 3 Zeichen -> Fehler
 2990 D409  CD CBEC     TFL1:	CALL	SPCTB		; naechstes ASCII-Zeichen
 2991 D40C  FE 2C       	CP	','
 2992 D40E  20 01       	JR	NZ,TFL2		; kein Komma
 2993 D410  23          	INC	HL		; Komma uebergehen
 2994 D411  E5          TFL2:	PUSH	HL
 2995 D412  21 D673     	LD	HL,TAB_F+15	; Ende Bedingungstabelle
 2996 D415  01 0010     	LD	BC,16		; Laenge
 2997 D418  7B          TFL3:	LD	A,E		; 2. Zeichen
 2998 D419  ED B9       	CPDR			; suchen
 2999 D41B  20 12       	JR	NZ,TFL5		; nicht gefunden -> Fehler
 3000 D41D  7A          	LD	A,D		; 1. Zeichen
 3001 D41E  BE          	CP	(HL)		; Vergleich
 3002 D41F  28 04       	JR	Z,TFL4		; richtig
 3003 D421  79          	LD	A,C
 3004 D422  B7          	OR	A		; Null?
 3005 D423  20 F3       	JR	NZ,TFL3		; nein, weitersuchen
 3006 D425  CB 39       TFL4:	SRL	C		; /2
 3007 D427  30 06       	JR	NC,TFL5		; zwischen den Zeilen!
 3008 D429  79          	LD	A,C		; Bedingungscode
 3009 D42A  E1          	POP	HL		; neue Adresse
 3010 D42B  D1          	POP	DE		; alte Adresse in DE!
ASM V2.1								    SLR180 1.31 Page  46
ASM21   Z80

 3011 D42C  C1          	POP	BC
 3012 D42D  3F          	CCF			; CY=0 (gefunden)
 3013 D42E  C9          	RET
 3014                   	;
 3015 D42F  E1          TFL5:	POP	HL		; neue Adresse
 3016 D430  E1          TFL6:	POP	HL		; alte Adresse
 3017 D431  C1          	POP	BC
 3018 D432  37          	SCF			; Fehler setzen
 3019 D433  C9          	RET
 3020                   ;
 3021                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 3022                   ;
 3023                   ; Arithmetikroutine (EDAS-Arithmetik mit Registererkennung)
 3024                   ; Berechnen des Wertes eines Operanden:
 3025                   ;
 3026                   ; PE:	HL	Pointer auf Operanden
 3027                   ; PA:	Z=1	wenn kein Operator gelesen wurde
 3028                   ;	DE	Wert
 3029                   ;	HL	nach Operand
 3030                   ; VR:	AF,DE,HL
 3031                   ;
 3032 D434  C5          ARITH:	PUSH	BC
 3033 D435  AF          	XOR	A
 3034 D436  D9          	EXX
 3035 D437  06 08       	LD	B,8
 3036 D439  21 0051     	LD	HL,NUMB-1
 3037 D43C  23          ARI01:	INC	HL
 3038 D43D  77          	LD	(HL),A
 3039 D43E  10 FC       	DJNZ	ARI01		; loeschen NUMB...REGNR
 3040 D440  35          	DEC	(HL)		; Registercode=-1
 3041 D441  D9          	EXX
 3042 D442  3E 2B       	LD	A,'+'
 3043 D444  32 0057     	LD	(VORZ),A	; Rechenzeichen-Speicher
 3044 D447  2B          	DEC	HL
 3045                   ;
 3046 D448  23          ARI02:	INC	HL
 3047 D449  CD CBEC     ARI03:	CALL	SPCTB		; naechstes ASCII-Zeichen
 3048 D44C  FE 3B       	CP	';'		; Kommentar?
 3049 D44E  28 3C       	JR	Z,ARI06		; ja
 3050 D450  FE 20       	CP	' '		; Steuerzeichen?
 3051 D452  38 38       	JR	C,ARI06		; ja
 3052 D454  32 0056     	LD	(M84),A		; Zeichen merken
 3053 D457  FE 27       	CP	27H		; Hochkomma?
 3054 D459  CA D508     	JP	Z,ZAHL8		; Zeichenkette
 3055 D45C  FE 2C       	CP	','
 3056 D45E  28 2B       	JR	Z,ARI05		; Komma beendet Operanden
 3057 D460  FE 28       	CP	'('
 3058 D462  28 32       	JR	Z,ARI07		; Klammer auf merken
 3059 D464  FE 29       	CP	')'
 3060 D466  28 E0       	JR	Z,ARI02		; Klammer zu uebergehen
 3061 D468  FE 2D       	CP	'-'
 3062 D46A  28 2F       	JR	Z,ARI08		; Rechenzeichen merken
 3063 D46C  FE 2B       	CP	'+'
 3064 D46E  28 2B       	JR	Z,ARI08		; Rechenzeichen merken
 3065 D470  FE 2A       	CP	'*'
 3066 D472  28 27       	JR	Z,ARI08		; Rechenzeichen merken
 3067 D474  FE 2F       	CP	'/'
 3068 D476  28 23       	JR	Z,ARI08		; Rechenzeichen merken
 3069 D478  FE 25       	CP	'%'
 3070 D47A  28 1F       	JR	Z,ARI08		; Rechenzeichen merken
 3071 D47C  FE 24       	CP	'$'
 3072 D47E  28 04       	JR	Z,ARI04		; '$'='#'
 3073 D480  FE 23       	CP	'#'		; Befehlszaehlerstand
 3074 D482  20 1C       	JR	NZ,ARINX	; anderes Zeichen
 3075 D484  ED 4B 004C  ARI04:	LD	BC,(MPC)	; akt. Adresse
 3076 D488  C3 D528     	JP	ZAHL11
 3077                   
 3078                   ; Operand zu Ende:
 3079 D48B  23          ARI05:	INC	HL
 3080 D48C  ED 5B 0052  ARI06:	LD	DE,(NUMB)	; Berechneter Wert
 3081 D490  C1          	POP	BC
 3082 D491  3A 0056     	LD	A,(M84)		; Operator gefunden?
 3083 D494  B7          	OR	A
 3084 D495  C9          	RET
 3085                   
 3086                   ; Klammer auf:
 3087 D496  32 0055     ARI07:	LD	(KLAM),A	; Klammer-Speicher
 3088 D499  18 AD       	JR	ARI02
ASM V2.1								    SLR180 1.31 Page  47
ASM21   Z80

 3089                   
 3090                   ; Rechenzeichen merken:
 3091 D49B  32 0057     ARI08:	LD	(VORZ),A	; Rechenzeichen-Speicher
 3092 D49E  18 A8       	JR	ARI02
 3093                   
 3094                   ; Jedes andere ASCII-Zeichen:
 3095 D4A0  CD D863     ARINX:	CALL	LETTR		; Buchstabe?
 3096 D4A3  D2 D5BE     	JP	NC,REG		; ja (Marke oder Register)
 3097 D4A6  E5          	PUSH	HL
 3098                   ; zunaechst Test, ob erste Stelle eine Ziffer 0-9 ist:
 3099 D4A7  0E 0A       	LD	C,10		; Dezimalsystem
 3100 D4A9  CD D7F2     	CALL	DIGIT		; erstes Zeichen dezimal?
 3101 D4AC  38 07       	JR	C,ZAHL1		; OK
 3102 D4AE  E1          	POP	HL
 3103 D4AF  23          	INC	HL		; 1. Zeichen uebergehen
 3104 D4B0  E5          	PUSH	HL
 3105 D4B1  CD D19F     	CALL	ERRX
 3106 D4B4  35          	DB	'5'		; Fehler 5 "Zahl beginnt nicht mit Ziffer"
 3107                   ; Bis zum Ende der Zahl und Test ob Hex- oder Binaer-Zahl:
 3108 D4B5  0E 10       ZAHL1:	LD	C,16		; zunaechst Hexadezimalsystem annehmen
 3109 D4B7  CD D7F2     ZAHL2:	CALL	DIGIT		; Test Hexzahl
 3110 D4BA  30 12       zahl21:	jr	nc,zahl20	; keine Hex-Zahl
 3111 D4BC  FE 0B       zahl22:	cp	0Bh
 3112 D4BE  20 F7       	jr	nz,ZAHL2	; nicht 'B', dann weiter testen
 3113 D4C0  CD D7F2     	call	digit		; war 'B' das letzte Zeichen der Zahl?
 3114 D4C3  38 F7       	jr	c,ZAHL22	; nein, es folgen weitere HEX-Zahlen
 3115 D4C5  FE 11       	CP	11h		; folgt danach  ein 'H'?
 3116 D4C7  E1          	pop	hl
 3117 D4C8  28 0B       	jr	z,zahl3		; dann ist es eine Hexzahl
 3118 D4CA  0E 02       	ld	c,2		; ansonsten ist es eine Binaerzahl!
 3119 D4CC  18 07       	jr	zahl3
 3120                   	;
 3121 D4CE  E1          zahl20:	POP	HL
 3122 D4CF  FE 11       	CP	11H		; folgt noch ein Suffix 'H'?
 3123 D4D1  28 02       	JR	Z,ZAHL3		; ja, dann bleibt es beim Hex-System
 3124 D4D3  0E 0A       	LD	C,10		; kein Suffix -> Dezimalsystem
 3125 D4D5  E5          ZAHL3:	PUSH	HL
 3126                   ; jetzt die Zahl berechnen auf Zahlenbasis in Register C:
 3127 D4D6  21 0000     	LD	HL,0		; Startwert=0
 3128 D4D9  E3          ZAHL4:	EX	(SP),HL		; Zahl auf Stack / HL=Zeiger
 3129 D4DA  CD D7F2     	CALL	DIGIT		; Test/Konvertierung Zahl
 3130 D4DD  E3          	EX	(SP),HL		; HL=Zahl / Zeiger auf Stack
 3131 D4DE  38 1C       	JR	C,ZAHL6		; OK, Zahl aufsummieren
 3132                   
 3133 D4E0  47          	ld	b,a		; Zeichen merken, welches folgt
 3134 D4E1  79          	ld	a,c		; Zahlenbasis
 3135 D4E2  FE 0A       	cp	10		; Dezimalzahl?
 3136 D4E4  28 0F       	jr	z,zahld		; ja, dann kein Suffix
 3137 D4E6  FE 02       	cp	2		; Binaerzahl?
 3138 D4E8  20 0E       	JR	NZ,ZAHL5	; Suffix 'H' gehoert noch mit zur Zahl
 3139 D4EA  78          	ld	a,b
 3140 D4EB  FE 0B       	cp	0Bh		; Suffix 'B'?
 3141 D4ED  28 09       	jr	z,ZAHL5		; ja, dieses gehoert noch mit zur Zahl
 3142 D4EF  CD D19F     	CALL	ERRX		; Fehler Zahlenformat bei Binaerzahlen!
 3143 D4F2  35          	DB	'5'
 3144 D4F3  18 03       	JR	ZAHL5
 3145                   	;
 3146 D4F5  E3          zahld:	EX	(SP),HL
 3147 D4F6  2B          	DEC	HL		; zurueck zum letzten Zeichen
 3148 D4F7  E3          	EX	(SP),HL
 3149 D4F8  D5          ZAHL5:	PUSH	DE		; neu berechneter Wert
 3150 D4F9  C1          	POP	BC		; in BC an CALC uebergeben
 3151 D4FA  18 5B       	JR	CALC
 3152                   ;-------
 3153                   ; Zahl berechnen: (Hex.- oder Dez.)
 3154                   ; PE:	HL	alter Wert
 3155                   ;	A	zu addierender Wert
 3156                   ;	C	Basis des Zahlensystems
 3157                   ; PA:	HL = C * (HL+A)
 3158 D4FC  5F          ZAHL6:	LD	E,A		; zu addierender Wert
 3159 D4FD  AF          	XOR	A
 3160 D4FE  57          	LD	D,A		; DE = zu addierender Wert
 3161 D4FF  19          	ADD	HL,DE		; HL = alter Wert + neuer Wert
 3162 D500  EB          	EX	DE,HL
 3163 D501  6F          	LD	L,A		; HL=0
 3164 D502  41          	LD	B,C		; Zahlenbasis
 3165 D503  19          ZAHL7:	ADD	HL,DE
 3166 D504  10 FD       	DJNZ	ZAHL7
ASM V2.1								    SLR180 1.31 Page  48
ASM21   Z80

 3167 D506  18 D1       	JR	ZAHL4
 3168                   
 3169                   ; Zeichenkette:
 3170 D508  01 0000     ZAHL8:	LD	BC,0
 3171 D50B  3A 0058     	LD	A,(REGNR)	; Registerkennbyte
 3172 D50E  FE 2D       	CP	2DH
 3173 D510  CA D448     	JP	Z,ARI02
 3174 D513  23          ZAHL9:	INC	HL
 3175 D514  CD 0086     	CALL	GET
 3176 D517  FE 27       	CP	27H		; Ende Zeichenkette?
 3177 D519  28 0D       	JR	Z,ZAHL11	; ja
 3178 D51B  FE 20       	CP	' '		; Steuerzeichen?
 3179 D51D  38 04       	JR	C,ZAHL10	; ja -> Fehler 8
 3180 D51F  41          	LD	B,C
 3181 D520  4F          	LD	C,A
 3182 D521  18 F0       	JR	ZAHL9
 3183                   ;
 3184 D523  CD D19A     ZAHL10:	CALL	ERR_8		; Fehler 8
 3185 D526  18 01       	JR	ZAHL12
 3186                   ;
 3187 D528  23          ZAHL11:	INC	HL
 3188 D529  E5          ZAHL12:	PUSH	HL
 3189 D52A  18 2B       	JR	CALC
 3190                   ;-------
 3191                   ; Markensuche:
 3192 D52C  F1          MRK_2:	POP	AF
 3193 D52D  1B          	DEC	DE
 3194 D52E  1B          MRK_4:	DEC	DE
 3195 D52F  EB          	EX	DE,HL
 3196 D530  CD D807     	CALL	MARKE		; Marke suchen
 3197 D533  D5          	PUSH	DE
 3198 D534  2B          	DEC	HL
 3199 D535  CD 0086     	CALL	GET
 3200 D538  3D          	DEC	A		; doppelt definiert?
 3201 D539  20 04       	JR	NZ,MRK_5
 3202 D53B  CD D19F     	CALL	ERRX
 3203 D53E  32          	DB	'2'		; Fehler 2
 3204 D53F  2B          MRK_5:	DEC	HL
 3205 D540  CD 0086     	CALL	GET
 3206 D543  47          	LD	B,A
 3207 D544  2B          	DEC	HL
 3208 D545  CD 0086     	CALL	GET
 3209 D548  4F          	LD	C,A		; BC = Wert der Marke
 3210 D549  30 0C       	JR	NC,CALC		; nicht definiert?
 3211 D54B  E1          	POP	HL
 3212 D54C  CD CC01     	CALL	LOOK1
 3213 D54F  D5          	PUSH	DE
 3214 D550  CD D19F     	CALL	ERRX
 3215 D553  33          	DB	'3'		; Fehler 3
 3216 D554  01 0000     	LD	BC,0		; Wert = 0
 3217 D557  21 0057     CALC:	LD	HL,VORZ		; Rechenzeichen-Speicher
 3218 D55A  7E          	LD	A,(HL)
 3219 D55B  36 00       	LD	(HL),0		; loeschen
 3220 D55D  2A 0052     	LD	HL,(NUMB)	; mit bisherigen Wert
 3221 D560  FE 2B       	CP	'+'		; verrechnen:
 3222 D562  28 1B       	JR	Z,PLUS
 3223 D564  FE 2D       	CP	'-'
 3224 D566  28 1A       	JR	Z,MINUS
 3225 D568  FE 2A       	CP	'*'
 3226 D56A  28 1A       	JR	Z,MULTI
 3227 D56C  FE 2F       	CP	'/'
 3228 D56E  28 31       	JR	Z,DIVG		; ganzzahlige Division
 3229 D570  FE 25       	CP	'%'
 3230 D572  28 32       	JR	Z,DIVR		; Rest der Divsion
 3231 D574  CD D19F     	CALL	ERRX
 3232 D577  42          	DB	'B'		; Fehler 'B'
 3233 D578  22 0052     CALCP:	LD	(NUMB),HL	; neuberechneter Wert
 3234 D57B  E1          	POP	HL
 3235 D57C  C3 D449     	JP	ARI03
 3236                   ;
 3237 D57F  09          PLUS:	ADD	HL,BC
 3238 D580  18 F6       	JR	CALCP
 3239                   ;
 3240 D582  ED 42       MINUS:	SBC	HL,BC
 3241 D584  18 F2       	JR	CALCP
 3242                   ;
 3243 D586  EB          MULTI:	EX	DE,HL
 3244 D587  21 0000     	LD	HL,0
ASM V2.1								    SLR180 1.31 Page  49
ASM21   Z80

 3245 D58A  3E 10       	LD	A,10H
 3246 D58C  CB 1A       	RR	D
 3247 D58E  CB 1B       	RR	E
 3248 D590  30 01       MULT1:	JR	NC,MULT2
 3249 D592  09          	ADD	HL,BC
 3250 D593  CB 1C       MULT2:	RR	H
 3251 D595  CB 1D       	RR	L
 3252 D597  CB 1A       	RR	D
 3253 D599  CB 1B       	RR	E
 3254 D59B  3D          	DEC	A
 3255 D59C  20 F2       	JR	NZ,MULT1
 3256 D59E  EB          MULT3:	EX	DE,HL
 3257 D59F  18 D7       	JR	CALCP
 3258                   ;
 3259 D5A1  CD D5AB     DIVG:	CALL	DIV16
 3260 D5A4  18 F8       	JR	MULT3
 3261                   ;
 3262 D5A6  CD D5AB     DIVR:	CALL	DIV16
 3263 D5A9  18 CD       	JR	CALCP
 3264                   ;
 3265                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 3266                   ;
 3267                   ; Division:
 3268                   ; PE:	HL	Divident
 3269                   ;	BC	Divisor
 3270                   ; PA:	HL	Rest
 3271                   ;	DE	Quotient
 3272                   ;
 3273 D5AB  11 FFFF     DIV16:	LD	DE,-1
 3274 D5AE  78          	LD	A,B
 3275 D5AF  B1          	OR	C
 3276 D5B0  28 07       	JR	Z,ERR_C		; Division / 0
 3277 D5B2  13          DIV1:	INC	DE
 3278 D5B3  ED 42       	SBC	HL,BC
 3279 D5B5  30 FB       	JR	NC,DIV1
 3280 D5B7  09          	ADD	HL,BC
 3281 D5B8  C9          	RET
 3282                   	;
 3283 D5B9  CD D19F     ERR_C:	CALL	ERRX
 3284 D5BC  43          	DB	'C'		; Fehler 'C' (Div/0)
 3285 D5BD  C9          	RET
 3286                   ;-------
 3287                   ; Registererkennung:
 3288                   ; PE:	A	erstes Zeichen
 3289                   ;	HL	Zeiger auf Quelltext (Folgezeichen)
 3290                   ; PA:	(REGC)	Registercode
 3291                   ;	(REGNR)	Registerkennbyte	3AH = HL
 3292                   ;
 3293 D5BE  F5          REG:	PUSH	AF		; 1. Zeichen retten
 3294 D5BF  23          	INC	HL
 3295 D5C0  CD 0086     	CALL	GET		; Folgezeichen
 3296 D5C3  EB          	EX	DE,HL
 3297 D5C4  CD D84F     	CALL	LABEL		; gueltiges Zeichen?
 3298 D5C7  30 24       	JR	NC,REG_2	; ja, Test Doppelregister
 3299 D5C9  F1          	POP	AF		; 1. Zeichen
 3300 D5CA  FE 4D       	CP	'M'
 3301 D5CC  20 10       	JR	NZ,REG_1	; Test Einzelregister
 3302 D5CE  CD 008C     	CALL	GETDE
 3303 D5D1  FE 30       	CP	'0'		; folgt Steuerbyte?
 3304 D5D3  D2 D52E     	JP	NC,MRK_4	; nein -> Marke?
 3305 D5D6  3E 28       	LD	A,'('		; M -> (HL)
 3306 D5D8  32 0055     	LD	(KLAM),A	; Klammerspeicher
 3307 D5DB  EB          	EX	DE,HL
 3308 D5DC  18 75       	JR	REG_7		; (HL) erzeugen
 3309                   
 3310                   ;Test auf Einzelregister:
 3311 D5DE  21 D684     REG_1:	LD	HL,RGTAB1	; Registertabelle
 3312 D5E1  01 0009     	LD	BC,9		; 9 Einzelregister
 3313 D5E4  ED B1       	CPIR
 3314 D5E6  C2 D52E     	JP	NZ,MRK_4	; nicht gefunden -> Marke?
 3315 D5E9  CB 21       	SLA	C		; *2
 3316 D5EB  18 29       	JR	REG_3
 3317                   
 3318                   ; Test auf Doppelregister:
 3319 D5ED  13          REG_2:	INC	DE
 3320 D5EE  21 D69B     	LD	HL,RGTAB2	; Registertabelle von hinten
 3321 D5F1  01 0016     	LD	BC,22		; 11 Doppelregisterpaare
 3322 D5F4  ED A9       REG1:	CPD			; Suche 2. Zeichen
ASM V2.1								    SLR180 1.31 Page  50
ASM21   Z80

 3323 D5F6  28 07       	JR	Z,REG2		; gefunden
 3324 D5F8  ED A9       REG4:	CPD
 3325 D5FA  E2 D52C     	JP	PO,MRK_2	; Tabellenende, Marke?
 3326 D5FD  18 F5       	JR	REG1
 3327                   ;
 3328 D5FF  47          REG2:	LD	B,A		; 2. Zeichen
 3329 D600  CD 008C     	CALL	GETDE		; 2. Folgezeichen
 3330 D603  CD D84F     	CALL	LABEL		; gueltiges Zeichen?
 3331 D606  D2 D52C     	JP	NC,MRK_2	; ja, (3 Zeichen), Marke?
 3332 D609  F1          	POP	AF		; 1. Zeichen
 3333 D60A  BE          	CP	(HL)		; auch richtig?
 3334 D60B  28 06       	JR	Z,REG3		; ja
 3335 D60D  F5          	PUSH	AF		; 1. Zeichen
 3336 D60E  78          	LD	A,B		; 2. Zeichen
 3337 D60F  06 00       	LD	B,0
 3338 D611  18 E5       	JR	REG4		; weitersuchen
 3339                   	;
 3340 D613  80          REG3:	ADD	A,B		; Erzeugen eines Doppel-
 3341 D614  D6 19       	SUB	19H		; Registerkennbytes
 3342 D616  D6 41       REG_3:	SUB	41H
 3343 D618  06 00       	LD	B,0
 3344 D61A  EB          	EX	DE,HL
 3345 D61B  32 0058     REG_4:	LD	(REGNR),A	; Registerkennbyte
 3346 D61E  FE 3A       	CP	3AH		; (HL)?
 3347 D620  20 14       	JR	NZ,REG_6	; nein, kodieren
 3348 D622  3A 0055     	LD	A,(KLAM)
 3349 D625  B7          	OR	A		; Klammer?
 3350 D626  3E 20       	LD	A,20H
 3351 D628  28 06       	JR	Z,REG_5		; nein (HL, IX, IY ohne Klammer)
 3352 D62A  AF          	XOR	A
 3353 D62B  32 0055     	LD	(KLAM),A	; Klammer loeschen
 3354 D62E  3E 06       	LD	A,6
 3355 D630  32 0059     REG_5:	LD	(REGC),A	; Registercode
 3356 D633  C3 D449     	JP	ARI03
 3357                   	;
 3358 D636  E5          REG_6:	PUSH	HL
 3359 D637  21 D69C     	LD	HL,RGTAB3	; Registercodierungen
 3360 D63A  09          	ADD	HL,BC
 3361 D63B  7E          	LD	A,(HL)		; Registercode
 3362 D63C  E1          	POP	HL
 3363 D63D  B7          	OR	A		; Bit 7 gesetzt?
 3364 D63E  F2 D630     	JP	P,REG_5		; nein
 3365 D641  F5          	PUSH	AF
 3366 D642  F6 0D       	OR	0DH		; DD oder FD erzeugen
 3367 D644  32 0054     	LD	(DDFD),A	; und eintragen
 3368 D647  F1          	POP	AF
 3369 D648  E6 0F       	AND	0FH
 3370 D64A  FE 0D       	CP	0DH		; IX oder IY?
 3371 D64C  28 05       	JR	Z,REG_7		; ja
 3372 D64E  F6 40       	OR	40H		; H oder L erzeugen
 3373 D650  EB          	EX	DE,HL
 3374 D651  18 8B       	JR	REG_1		; Test Einzelregister
 3375                   	;
 3376 D653  3E 3A       REG_7:	LD	A,3AH		; HL erzeugen
 3377 D655  18 C4       	JR	REG_4
 3378                   
 3379                   ;-------
 3380                   ; Tabelle fuer IM-Befehl:
 3381 D657  46          IMTAB:	DB	46H	; IM 0
 3382 D658  56          	DB	56H	; IM 1
 3383 D659  5E          	DB	5EH	; IM 2
 3384                   
 3385                   ;-------
 3386                   ; Tabelle fuer arithmet. Befehle:
 3387 D65A  05          TABARI:	DB	5		; DEC B
 3388 D65B  0B          	DB	0BH		; DEC BC
 3389                   
 3390 D65C  04          	DB	4		; INC B
 3391 D65D  03          	DB	3		; INC BC
 3392                   
 3393 D65E  80          	DB	80H		; ADD A,B
 3394 D65F  09          	DB	9		; 09 ist OpCode fuer ADD HL,BC
 3395                   
 3396 D660  88          	DB	88H		; ADC A,B
 3397 D661  4A          	DB	4AH		; ED 4A ist OpCode fuer ADC HL,BC
 3398                   
 3399 D662  98          	DB	98H		; SBC A,B
 3400 D663  42          	DB	42H		; ED 42 ist Opcode fuer SBC HL,BC
ASM V2.1								    SLR180 1.31 Page  51
ASM21   Z80

 3401                   
 3402                   ;-------
 3403                   ; Sprungbedingungen:
 3404 D664  4E 5A       TAB_F:	DB	'NZ'	; A=0
 3405 D666  5A 20       	DB	'Z '	; A=1
 3406 D668  4E 43       	DB	'NC'	; A=2
 3407 D66A  43 20       	DB	'C '	; A=3
 3408 D66C  50 4F       	DB	'PO'	; A=4
 3409 D66E  50 45       	DB	'PE'	; A=5
 3410 D670  50 20       	DB	'P '	; A=6
 3411 D672  4D 20       	DB	'M '	; A=7
 3412                   
 3413                   ;-------
 3414                   ; Adressdifferenztabelle:		alt: TAB_3
 3415 D674  00          UPTAB:	DB	UP0-UP0		; 0	END
 3416 D675  09          	DB	UP1-UP0		; 1	BIT, RES, SET
 3417 D676  55          	DB	UP2-UP1		; 2	CCF, NEG, SCF, DAA, RLA, DI, EI, RLD, LDD, LDDR, CPD, ...
 3418 D677  1F          	DB	UP3-UP2		; 3	CP, ADC, ADD, DEC, AND, SBC, INC, OR, XOR, SUB
 3419 D678  6C          	DB	UP4-UP3		; 4	IM
 3420 D679  17          	DB	UP5-UP4		; 5	IN
 3421 D67A  24          	DB	UP6-UP5		; 6	OUT
 3422 D67B  1A          	DB	UP7-UP6		; 7	RLC, RRC, RL, RR, SLA, SRA, SLS, SRL
 3423 D67C  08          	DB	UP8-UP7		; 8	EX
 3424 D67D  3C          	DB	UP9-UP8		; 9	JP, CALL
 3425 D67E  41          	DB	UP10-UP9	; 10	RET, RET cc
 3426 D67F  10          	DB	UP11-UP10	; 11	JR, DJNZ
 3427 D680  35          	DB	UP12-UP11	; 12	DEFB, DEFW, DEFS, DB, DW, DS
 3428 D681  55          	DB	UP13-UP12	; 13	DEFM
 3429 D682  43          	DB	UP14-UP13	; 14	ORG
 3430 D683  13          	DB	UP15-UP14	; 15	LD
 3431                   
 3432                   ;-------
 3433                   ; Registertabelle:
 3434 D684  49 52 42 43 RGTAB1:	DB	'IRBCDEHLAFSPIXIYHXHYLXLY'
 3435         D69B      RGTAB2	EQU	$-1
 3436                   
 3437                   ;-------
 3438                   ; Tabelle der Registercodierungen:
 3439 D69C  07          RGTAB3:	DB	7	; 00=A		alt: TAB_7
 3440 D69D  00          	DB	0	; 01=BC
 3441 D69E  05          	DB	5	; 02=L
 3442 D69F  10          	DB	10H	; 03=DE
 3443 D6A0  04          	DB	4	; 04=H
 3444 D6A1  20          	DB	20H	; 05=HL
 3445 D6A2  03          	DB	3	; 06=E
 3446 D6A3  31          	DB	31H	; 07=AF
 3447 D6A4  02          	DB	2	; 08=D
 3448 D6A5  30          	DB	30H	; 09=SP
 3449 D6A6  01          	DB	1	; 0A=C
 3450 D6A7  DD          	DB	0DDH	; 0B=IX
 3451 D6A8  00          	DB	0	; 0C=B
 3452 D6A9  FD          	DB	0FDH	; 0D=IY
 3453 D6AA  4F          	DB	4FH	; 0E=R
 3454 D6AB  D8          	DB	0D8H	; 0F=HX
 3455 D6AC  47          	DB	47H	; 10=I
 3456 D6AD  F8          	DB	0F8H	; 11=HY
 3457 D6AE  FF          	DB	0FFH	; 12 frei
 3458 D6AF  DC          	DB	0DCH	; 13=LX
 3459 D6B0  FF          	DB	0FFH	; 14 frei
 3460 D6B1  FC          	DB	0FCH	; 15=LY
 3461                   
 3462                   ; Hoch/Quersummentabelle aller Befehle (4x80 Byte)
 3463                   ; zuerst die Befehle mit der haeufigsten Verwendung, der Rest alphabetisch
 3464                   ;		Hochsumme
 3465                   ;		 |   Quersumme
 3466                   ;		 |	|  vorbereiteter OpCode
 3467                   ;		 |	|   |   UP-Nummer (Bit 0-3), Vorbyte ED (Bit 7=1)
 3468 D6B2  1C 10 00 0F HQTAB:	DB	 1CH, 10H, 00H, 15	; 40 LD		2522
 3469 D6B6  0A 06 01 0C 	DB	 0AH, 06H, 01H, 12	; 14 DB		1414
 3470 D6BA  40 1C C4 09 	DB	 40H, 1CH,0C4H,  9	; 05 CALL	1265
 3471 D6BE  26 1C 18 0B 	DB	 26H, 1CH, 18H, 11	; 39 JR		1193
 3472 D6C2  43 1A 04 03 	DB	 43H, 1AH, 04H,  3	; 32 INC	 655
 3473 D6C6  16 13 B8 03 	DB	 16H, 13H,0B8H,  3	; 07 CP		 491
 3474 D6CA  66 2B C0 0A 	DB	 66H, 2BH,0C0H, 10	; 58 RET	 452
 3475 D6CE  4B 2B 00 00 	DB	 4BH, 2BH, 00H,  0	; 26 EQU	 450
 3476 D6D2  2E 1F 40 01 	DB	 2EH, 1FH, 40H,  1	; 04 BIT	 431
 3477 D6D6  02 40 C5 02 	DB	 02H, 40H,0C5H,  2	; 56 PUSH	 463
 3478 D6DA  6E 2F C1 02 	DB	 6EH, 2FH,0C1H,  2	; 55 POP	 417
ASM V2.1								    SLR180 1.31 Page  52
ASM21   Z80

 3479 D6DE  1F 1B 03 0C 	DB	 1FH, 1BH, 03H, 12	; 23 DW		 284
 3480 D6E2  24 13 A0 03 	DB	 24H, 13H,0A0H,  3	; 03 AND	 237
 3481 D6E6  24 1A C2 09 	DB	 24H, 1AH,0C2H,  9	; 38 JP		 221
 3482                   ; ab hier in alphabetischer Reihenfolge
 3483 D6EA  0F 08 88 03 	DB	 0FH, 08H, 88H,  3	; 01 ADC
 3484 D6EE  10 09 80 03 	DB	 10H, 09H, 80H,  3	; 02 ADD
 3485 D6F2  18 0C 40 02 	DB	 18H, 0CH, 40H,  2	; 06 CCF
 3486 D6F6  30 17 AA 82 	DB	 30H, 17H,0AAH,  2+80H	; 08 CPD
 3487 D6FA  72 29 BA 82 	DB	 72H, 29H,0BAH,  2+80H	; 09 CPDR
 3488 D6FE  38 1F 30 02 	DB	 38H, 1FH, 30H,  2	; 10 CPL
 3489 D702  35 1C A2 82 	DB	 35H, 1CH,0A2H,  2+80H	; 11 CPI
 3490 D706  7C 2E B2 82 	DB	 7CH, 2EH,0B2H,  2+80H	; 12 CPIR
 3491 D70A  13 06 28 02 	DB	 13H, 06H, 28H,  2	; 13 DAA
 3492 D70E  1D 0C 05 03 	DB	 1DH, 0CH, 05H,  3	; 15 DEC
 3493 D712  42 11 02 0C 	DB	 42H, 11H, 02H, 12	; 16 DEFB
 3494 D716  4D 1C 00 0D 	DB	 4DH, 1CH, 00H, 13	; 17 DEFM
 3495 D71A  53 22 04 0C 	DB	 53H, 22H, 04H, 12	; 18 DEFS
 3496 D71E  57 26 03 0C 	DB	 57H, 26H, 03H, 12	; 19 DEFW
 3497 D722  11 0D F4 02 	DB	 11H, 0DH,0F4H,  2	; 20 DI
 3498 D726  7E 36 10 0B 	DB	 7EH, 36H, 10H, 11	; 21 DJNZ
 3499 D72A  1B 17 04 0C 	DB	 1BH, 17H, 04H, 12	; 22 DS
 3500 D72E  13 0E FC 02 	DB	 13H, 0EH,0FCH,  2	; 24 EI
 3501 D732  34 17 00 00 	DB	 34H, 17H, 00H,  0	; 25 END
 3502 D736  22 1D 00 08 	DB	 22H, 1DH, 00H,  8	; 27 EX
 3503 D73A  5C 35 DA 02 	DB	 5CH, 35H,0DAH,  2	; 28 EXX
 3504 D73E  70 29 77 02 	DB	 70H, 29H, 77H,  2	; 29 HALT
 3505 D742  1F 16 47 84 	DB	 1FH, 16H, 47H,  4+80H	; 30 IM
 3506 D746  20 17 40 05 	DB	 20H, 17H, 40H,  5	; 31 IN
 3507 D74A  44 1B AB 82 	DB	 44H, 1BH,0ABH,  2+80H	; 33 IND
 3508 D74E  9A 2D BB 82 	DB	 9AH, 2DH,0BBH,  2+80H	; 34 INDR
 3509 D752  46 1D 71 82 	DB	 46H, 1DH, 71H,  2+80H	; 35 INF
 3510 D756  49 20 A3 82 	DB	 49H, 20H,0A3H,  2+80H	; 36 INI
 3511 D75A  A4 32 B3 82 	DB	0A4H, 32H,0B3H,  2+80H	; 37 INIR
 3512 D75E  3C 14 A9 82 	DB	 3CH, 14H,0A9H,  2+80H	; 41 LDD
 3513 D762  8A 26 B9 82 	DB	 8AH, 26H,0B9H,  2+80H	; 42 LDDR
 3514 D766  41 19 A1 82 	DB	 41H, 19H,0A1H,  2+80H	; 43 LDI
 3515 D76A  94 2B B1 82 	DB	 94H, 2BH,0B1H,  2+80H	; 44 LDIR
 3516 D76E  49 1A 45 82 	DB	 49H, 1AH, 45H,  2+80H	; 45 NEG
 3517 D772  66 2D 01 02 	DB	 66H, 2DH, 01H,  2	; 46 NOP
 3518 D776  30 21 B0 03 	DB	 30H, 21H,0B0H,  3	; 47 OR
 3519 D77A  67 28 00 0E 	DB	 67H, 28H, 00H, 14	; 48 ORG
 3520 D77E  DA 32 72 82 	DB	0DAH, 32H, 72H,  2+80H	; 49 OTCL
 3521 D782  7A 38 41 06 	DB	 7AH, 38H, 41H,  6	; 50 OUT
 3522 D786  F8 3C AC 82 	DB	0F8H, 3CH,0ACH,  2+80H	; 51 OUTD
 3523 D78A  FD 41 A4 82 	DB	0FDH, 41H,0A4H,  2+80H	; 52 OUTI
 3524 D78E  E2 39 BC 82 	DB	0E2H, 39H,0BCH,  2+80H	; 53 OTDR
 3525 D792  EC 3E B4 82 	DB	0ECH, 3EH,0B4H,  2+80H	; 54 OTIR
 3526 D796  65 2A 80 01 	DB	 65H, 2AH, 80H,  1	; 57 RES
 3527 D79A  D5 34 4E 82 	DB	0D5H, 34H, 4EH,  2+80H	; 59 RETI
 3528 D79E  DA 39 46 82 	DB	0DAH, 39H, 46H,  2+80H	; 60 RETN
 3529 D7A2  30 1E 10 07 	DB	 30H, 1EH, 10H,  7	; 61 RL
 3530 D7A6  61 1F 18 02 	DB	 61H, 1FH, 18H,  2	; 62 RLA
 3531 D7AA  63 21 00 07 	DB	 63H, 21H, 00H,  7	; 63 RLC
 3532 D7AE  C7 22 08 02 	DB	0C7H, 22H, 08H,  2	; 64 RLCA
 3533 D7B2  64 22 70 82 	DB	 64H, 22H, 70H,  2+80H	; 65 RLD
 3534 D7B6  36 24 18 07 	DB	 36H, 24H, 18H,  7	; 66 RR
 3535 D7BA  6D 25 20 02 	DB	 6DH, 25H, 20H,  2	; 67 RRA
 3536 D7BE  6F 27 08 07 	DB	 6FH, 27H, 08H,  7	; 68 RRC
 3537 D7C2  DF 28 10 02 	DB	0DFH, 28H, 10H,  2	; 69 RRCA
 3538 D7C6  70 28 68 82 	DB	 70H, 28H, 68H,  2+80H	; 70 RRD
 3539 D7CA  82 39 C8 02 	DB	 82H, 39H,0C8H,  2	; 71 RST
 3540 D7CE  53 18 98 03 	DB	 53H, 18H, 98H,  3	; 72 SBC
 3541 D7D2  58 1C 38 02 	DB	 58H, 1CH, 38H,  2	; 73 SCF
 3542 D7D6  6A 2C C0 01 	DB	 6AH, 2CH,0C0H,  1	; 74 SET
 3543 D7DA  65 20 20 07 	DB	 65H, 20H, 20H,  7	; 75 SLA
 3544 D7DE  77 32 30 07 	DB	 77H, 32H, 30H,  7	; 76 SLS
 3545 D7E2  71 26 28 07 	DB	 71H, 26H, 28H,  7	; 77 SRA
 3546 D7E6  7C 31 38 07 	DB	 7CH, 31H, 38H,  7	; 78 SRL
 3547 D7EA  78 2A 90 03 	DB	 78H, 2AH, 90H,  3	; 79 SUB
 3548 D7EE  90 39 A8 03 	DB	 90H, 39H,0A8H,  3	; 80 XOR
 3549 D7F2              HQTABE:
 3550                   ;-------
 3551                   ; Test auf ASCII-Zeichen eines Zahlensystems:
 3552                   ; PE:	C	Basis des Zahlensystems (2, 10 oder 16)
 3553                   ;	HL	Zeiger auf ASCII-Zeichen
 3554                   ; PA:	CY=1	OK
 3555                   ;	A	Zahlenwert
 3556                   ;	HL	HL+1
ASM V2.1								    SLR180 1.31 Page  53
ASM21   Z80

 3557 D7F2  CD 0086     DIGIT:	CALL	GET		; Zeichen holen
 3558 D7F5  CD D863     	CALL	LETTR		; Wandlung gross
 3559 D7F8  23          	INC	HL		; naechstes Zeichen
 3560 D7F9  FE 3A       	CP	'0'+10		; Ziffer?
 3561 D7FB  30 02       	JR	NC,DIG_1	; nein
 3562 D7FD  D6 30       	SUB	'0'		; wenn ja
 3563 D7FF  FE 41       DIG_1:	CP	'A'		; Buchstabe?
 3564 D801  38 02       	JR	C,DIG_2
 3565 D803  D6 37       	SUB	37H		; Hex-Korrektur
 3566 D805  B9          DIG_2:	CP	C		; Zahlensystem?
 3567 D806  C9          	RET
 3568                   ;-------
 3569                   ; Suchen einer Marke in der Markentabelle:
 3570                   ; PE	HL	Adresse der Marke im Quelltext
 3571                   ; PA:	HL	Adresse der Marke in Markentabelle
 3572                   ;	DE	das, was vorher HL war
 3573                   ;	CY=0	Marke gefunden
 3574                   ;	CY=1	Marke nicht gefunden
 3575                   ; VR:	AF,BC,DE,HL
 3576 D807  E5          MARKE:	PUSH	HL
 3577 D808  2A 0044     	LD	HL,(MBOT)	; Ende Markentabelle
 3578 D80B  E5          	PUSH	HL
 3579 D80C  ED 5B 0046  	LD	DE,(MTOP)	; Anfang Markentabelle
 3580 D810  1B          	DEC	DE
 3581 D811  B7          	OR	A
 3582 D812  ED 52       	SBC	HL,DE
 3583 D814  44          	LD	B,H
 3584 D815  4D          	LD	C,L		; Laenge Markentabelle
 3585 D816  E1          	POP	HL		; Pointer auf Ende Markentabelle
 3586 D817  D1          	POP	DE		; Pointer auf Quelltext
 3587 D818  CD 008C     UD023:	CALL	GETDE		; 1. Zeichen
 3588 D81B  CD D863     	CALL	LETTR		; Wandlung gross
 3589 D81E  CD 0078     	CALL	TCPDR		; suchen rueckwaerts
 3590 D821  37          	SCF
 3591 D822  E0          	RET	PO		; nicht gefunden
 3592 D823  CD CBF9     	CALL	LOOK		; Vergleich gesamte Marke
 3593 D826  38 F0       	JR	C,UD023		; stimmt nicht ueberein
 3594 D828  C9          	RET
 3595                   ;-------
 3596                   ; Suchen der Marke 'START' und Wertuebergabe
 3597                   ; (Bei Ansprung auf LSUCH, beliebige Marke!)
 3598                   ; PE:	HL	Zeichenkette bzw. Markenname
 3599                   ; PA:	CY=0	Marke gefunden
 3600                   ;	CY=1	Marke nicht gefunden
 3601                   ;	HL	Wert der Marke
 3602                   ; VR:	AF,HL
 3603 D829  21 CD1A     TSTART:	LD	HL,VERGL	; Vergleichskette "Start" im ROM
 3604 D82C  11 0023     	LD	DE,STRING	; in den Suchpuffer
 3605 D82F  01 0006     	LD	BC,6		; mit der Laenge 6 Byte
 3606 D832  ED B0       	LDIR			; kopieren
 3607 D834  21 0023     	LD	HL,STRING
 3608 D837  CD D807     LSUCH:	CALL	MARKE		; Marke suchen
 3609 D83A  D8          	RET	C		; nicht gefunden
 3610 D83B  2B          	DEC	HL		; Adresse der Marke
 3611 D83C  CD 0086     	CALL	GET
 3612 D83F  3D          	DEC	A		; doppelt definiert?
 3613 D840  37          	SCF
 3614 D841  C8          	RET	Z		; ja (Fehler)
 3615 D842  2B          	DEC	HL
 3616 D843  CD 0086     	CALL	GET		; A=H-Teil
 3617 D846  F5          	PUSH	AF
 3618 D847  2B          	DEC	HL
 3619 D848  CD 0086     	CALL	GET
 3620 D84B  E1          	POP	HL		; H=A
 3621 D84C  6F          	LD	L,A		; HL = Wert der Marke
 3622 D84D  A7          	AND	A		; CY=0
 3623 D84E  C9          	RET
 3624                   ;-------
 3625                   ; Test Register A auf ASCII-Zeichen (ist dieses Zeichen in Labels erlaubt?):
 3626                   ; PE:	A	Zeichencode
 3627                   ; PA:	CY=0	wenn in Marke zulaessiges Zeichen
 3628                   ;	CY=1	Fehler
 3629 D84F  CD D863     LABEL:	CALL	LETTR		; Buchstabe?
 3630 D852  D0          	RET	NC		; ja
 3631 D853  FE 30       	CP	'0'
 3632 D855  38 04       	JR	C,LABL1		; keine Ziffer
 3633 D857  FE 3A       	CP	':'
 3634 D859  3F          	CCF
ASM V2.1								    SLR180 1.31 Page  54
ASM21   Z80

 3635 D85A  D0          	RET	NC		; Ziffer 0..9
 3636 D85B  FE 2E       LABL1:	CP	'.'
 3637 D85D  C8          	RET	Z		; Punkt
 3638 D85E  FE 5F       	CP	'_'
 3639 D860  C8          	RET	Z		; Underline
 3640 D861  37          	SCF
 3641 D862  C9          	RET
 3642                   ;
 3643                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
 3644                   ;
 3645                   ; Test auf gueltiges Zeichen (Buchstabe):
 3646                   ; PE:	A	Zeichen
 3647                   ; PA:	A	Zeichen (Kleinbuchstaben -> gross)
 3648                   ;	CY=1	kein Buchstabe
 3649 D863  FE 41       LETTR:	CP	'A'
 3650 D865  D8          	RET	C		; 00...40H
 3651 D866  FE 5B       	CP	'Z'+1
 3652 D868  3F          	CCF
 3653 D869  D0          	RET	NC		; A...Z
 3654 D86A  FE 61       	CP	'a'
 3655 D86C  D8          	RET	C		; 5BH...60H
 3656 D86D  FE 7B       	CP	'z'+1
 3657 D86F  3F          	CCF
 3658 D870  D8          	RET	C		; 7BH...
 3659 D871  E6 DF       	AND	0DFH		; klein -> gross
 3660 D873  C9          	RET
 3661                   ;-------
 3662                   ; Zeichenausgabe zum eingestellten Ausgabekanal (Bildschirm oder Drucker):
 3663                   ; - 0Dh sendet CR+LF
 3664                   ; - 0Ch ist Seitenwechsel
 3665                   ; - 09h Tabulatoren werden in Leerzeichen gewandelt
 3666                   ; - alle anderen Steuerzeichen werden ignoriert
 3667                   ; PE:	A	Zeichen
 3668                   ;	D	max. Spaltenbreite
 3669                   ;	E	Zeichenzaehler
 3670                   ; PA:	E	Zeichenzaehler entsprechend um Zeichenzahl
 3671                   ;	CY=1	BRK gedrueckt
 3672                   ; VR:	AF, E
 3673                   ;
 3674 D874  C5          PRCHR:	PUSH	BC		; B retten (Zeilenzaehler)
 3675 D875  06 01       	LD	B,1		; zunaechst 1 Zeichen annehmen
 3676 D877  FE 20       	CP	' '
 3677 D879  30 21       	JR	NC,PRC5		; kein Steuerzeichen
 3678 D87B  FE 0C       	CP	CLS
 3679 D87D  28 09       	JR	Z,PRC1		; Blattwechsel/Seitenwechsel
 3680 D87F  FE 0D       	CP	CR
 3681 D881  20 09       	JR	NZ,PRC2
 3682                   ; CR druckt CR+LF
 3683 D883  CD C562     	CALL	CHR		; CR zum Drucker
 3684 D886  3E 0A       	LD	A,LF
 3685 D888  1E FF       PRC1:	LD	E,-1		; Zeilenzaehler ruecksetzen
 3686 D88A  18 10       	JR	PRC5		; CLS
 3687                   	;
 3688 D88C  FE 09       PRC2:	CP	9		; Tab ?
 3689 D88E  20 16       	JR	NZ,PRC6		; alle anderen Steuerzeichen ignorieren!
 3690                   ; TAB in Leerzeichen umwandeln
 3691 D890  3E 08       	LD	A,8		; TAB-Schrittweite
 3692 D892  93          	SUB	E		; minus Zeichenposition
 3693 D893  E6 07       	AND	7		; modulo 8
 3694 D895  20 02       	JR	NZ,PRC3
 3695 D897  3E 08       	LD	A,8		; kompletter TAB-Schritt
 3696 D899  47          PRC3:	LD	B,A		; Anzahl Leerzeichen
 3697 D89A  3E 20       PRC4:	LD	A,' '
 3698 D89C  CD C562     PRC5:	CALL	CHR		; ausgeben an eingestellten Ausgabekanal
 3699 D89F  1C          	INC	E		; Zeichen mit zaehlen
 3700 D8A0  7B          	LD	A,E
 3701 D8A1  BA          	CP	D		; Zeilenende erreicht?
 3702 D8A2  28 02       	JR	Z,PRC6
 3703 D8A4  10 F4       	DJNZ	PRC4
 3704 D8A6  CD C7F8     PRC6:	CALL	BRKS		; BRK/STOP abfragen
 3705 D8A9  C1          	POP	BC
 3706 D8AA  C9          	RET
 3707                   
 3708                   ;-------
 3709                   ; Vorbereitungen fuer Kassettenausgabe MC-Programm:
 3710                   ; PA:	Iinitialisierter Kassettenpuffer (B700)
 3711 D8AB  CD F003     SHEAD:	CALL	PV1
 3712 D8AE  20          	DB	NOUT
ASM V2.1								    SLR180 1.31 Page  55
ASM21   Z80

 3713 D8AF  11 C8F8     	LD	DE,KCCTXT	; Dateityp .KCC vorgeben
 3714 D8B2  CD C8B2     	CALL	NAME		; Name eingeben
 3715 D8B5  30 03       	JR	NC,SHEAD1	; nicht BRK
 3716 D8B7  E1          	POP	HL		; Stack reinigen
 3717 D8B8  E1          	POP	HL
 3718 D8B9  C9          	RET			; zum Menue!
 3719                   	;
 3720 D8BA  CD C8FC     SHEAD1:	CALL	KPINI		; Kassettenpuffer initialisieren
 3721 D8BD  3E 02       	LD	A,2
 3722 D8BF  32 B710     	LD	(CASS+10H),A	; 2 Argumente eintragen
 3723 D8C2  2A 0050     	LD	HL,(MCL)	; MC-Laenge eintragen statt
 3724 D8C5  22 B713     	LD	(CASS+13H),HL	; Endadresse
 3725 D8C8  CD D829     	CALL	TSTART		; Startadresse?
 3726 D8CB  D8          	RET	C		; nein
 3727 D8CC  3E 03       	LD	A,3
 3728 D8CE  32 B710     	LD	(CASS+10H),A	; 3 Argumente
 3729 D8D1  22 B715     	LD	(CASS+15H),HL	; Startadresse
 3730 D8D4  C9          	RET
 3731                   ;-------
 3732                   ; Ausgabe eines erzeugten MC-Bytes auf Kassette/Diskette:
 3733                   ; nach 80H Bytes wird ein Block abgespeichert
 3734                   ; PE:	C	Byte
 3735                   ;	(STAT)	Bit3 = 1 -> Init. ('S'-Option)
 3736                   ; PA:	-
 3737                   ; VR:	AF, AF', DE (nur bei Init.), HL 
 3738                   ;
 3739 D8D5  C5          BLWR:	PUSH	BC
 3740 D8D6  21 003E     	LD	HL,STAT
 3741 D8D9  CB 5E       	BIT	3,(HL)		; Init?
 3742 D8DB  28 48       	JR	Z,BLWR6		; nein
 3743 D8DD  CB 9E       	RES	3,(HL)		; 'S'-Option ruecksetzen
 3744                   ;	LD	HL,CASS		; Kassettenpuffer
 3745                   ;	LD	(IX+5),L	; ist bereits eingestellt
 3746                   ;	LD	(IX+6),H	; durch KPINI
 3747 D8DF  FD E5       	PUSH	IY		; Befehlszaehler erstes Byte
 3748 D8E1  D1          	POP	DE		; als Anfangsadresse verwenden
 3749 D8E2  2A B713     	LD	HL,(CASS+13H)	; MC-Laenge von Pass 1
 3750 D8E5  19          	ADD	HL,DE
 3751 D8E6  ED 53 B711  	LD	(CASS+11H),DE	; Anfangsadresse
 3752 D8EA  22 B713     	LD	(CASS+13H),HL	; Endadresse
 3753 D8ED  EB          	EX	DE,HL
 3754 D8EE  CD F003     	CALL	PV1
 3755 D8F1  1B          	DB	HLDE		; Adressen anzeigen
 3756 D8F2  3A B710     	LD	A,(CASS+10H)	; Args
 3757 D8F5  FE 03       	CP	3
 3758 D8F7  38 07       	JR	C,BLWR1		; keine Startadresse
 3759 D8F9  2A B715     	LD	HL,(CASS+15H)
 3760 D8FC  CD F003     	CALL	PV1
 3761 D8FF  1A          	DB	HLHX		; Startadresse
 3762 D900  CD C55D     BLWR1:	CALL	LFCR
 3763 D903  21 B700     	LD	HL,CASS		; Dateiname aus Vorblock benutzen
 3764 D906  CD F003     	CALL	PV1
 3765 D909  08          	DB	ISRO		; Vorblock ausgeben
 3766 D90A  DA C29E     	JP	C,LOOPE		; Fehler -> Abbruch
 3767 D90D  08          BLWR3:	 EX	AF,AF'
 3768 D90E  21 B780     BLWR4:	 LD	HL,CASS+80H	; Ende Kassettenpuffer+1
 3769 D911  AF          	 XOR	A		; A'=0 (Bytezaehler)
 3770 D912  2D          BLWR5:	 DEC	L
 3771 D913  77          	 LD	(HL),A		; Puffer loeschen
 3772 D914  20 FC       	 JR	NZ,BLWR5
 3773 D916  08          	 EX	AF,AF'
 3774 D917  DD 7E 02    	LD	A,(IX+2)
 3775 D91A  CD F003     	CALL	PV1
 3776 D91D  1C          	DB	AHEX		; Blocknummer anzeigen
 3777 D91E  CD F003     	CALL	PV1
 3778 D921  23          	DB	OSTR
 3779 D922  08 08 00    	DB	8,8,0
 3780 D925  21 B700     BLWR6:	LD	HL,CASS
 3781 D928  08          	 EX	AF,AF'
 3782 D929  FE 80       	 CP	80H		; Block voll?
 3783 D92B  20 0C       	 JR	NZ,BLWR7	; nein
 3784 D92D  01 00A0     	 LD	BC,160		; kurzer Vorton
 3785 D930  CD F003     	 CALL	PV1
 3786 D933  01          	 DB	MBO		; Daten-Block ausgeben
 3787 D934  DA C29E     	 JP	C,LOOPE		; Fehler -> Abbruch
 3788 D937  18 D5       	 JR	BLWR4		; weiter mit neuem Block
 3789                   	;
 3790 D939  6F          BLWR7:	 LD	L,A
ASM V2.1								    SLR180 1.31 Page  56
ASM21   Z80

 3791 D93A  3C          	 INC	A		; Bytes zaehlen
 3792 D93B  08          	 EX	AF,AF'
 3793 D93C  C1          	POP	BC
 3794 D93D  71          	LD	(HL),C
 3795 D93E  C9          	RET
 3796                   
 3797                   ;=======	eigentliches ENDE von EDAS	=======
 3798         D93F      DEVEX	EQU	$
 3799                   ;=======	DEVICE-Kommandos (CAOS 4.8) 	=======
 3800                   
 3801 D93F  DDDD        	DEFW	0DDDDH
 3802 D941  44 49 52    	DEFM	'DIR'
 3803 D944  1F          	DB	1Fh		; In Register DE Maske uebergeben
 3804 D945  CD F021     	CALL	PV7		; neue Funktion ab CAOS 4.7
 3805 D948  08          	DB	8		; Verzeichnis anzeigen
 3806 D949  C9          	RET
 3807                   
 3808 D94A  DDDD        	DEFW	0DDDDH
 3809 D94C  43 44       	DEFM	'CD'
 3810 D94E  1F          	DB	1Fh		; neues Laufwerk in Register DE uebergeben
 3811 D94F  CD F021     	CALL	PV7		; neue Funktion ab CAOS 4.7
 3812 D952  09          	DB	9		; Laufwerk wechseln
 3813 D953  C9          	RET
 3814                   
 3815 D954  DDDD        	DEFW	0DDDDH
 3816 D956  52 45 4E    	DEFM	'REN'
 3817 D959  1F          	DB	1Fh		; Textargument zulaessig (2 Dateinamen)
 3818 D95A  CD F021     	CALL	PV7
 3819 D95D  0B          	DB	11		; Datei umbenennen
 3820 D95E  C9          	RET
 3821                   
 3822 D95F  DDDD        	DEFW	0DDDDH
 3823 D961  45 52 41    	DB	'ERA'
 3824 D964  1F          	DB	1Fh		; Textargument zulaessig (Dateiname)
 3825 D965  CD F021     	CALL	PV7
 3826 D968  0A          	DB	10		; Datei loeschen
 3827 D969  C9          	RET
 3828                   
 3829                   ;-------
 3830                   ; Geraeteumschaltung und Anzeige
 3831                   ; DEVICE	Auflisten der installierten Treiber
 3832                   ; DEVICE n	Umschaltung Geraet n (0..7)
 3833                   ;
 3834 D96A  DDDD        	DW	0DDDDH
 3835 D96C  44 45 56 49 	DB	'DEVICE',1
 3836 D973  A7          	AND	A		; Parameter angegeben?
 3837 D974  28 0E       	JR	Z,DRLIST	; nein, Treiber auflisten
 3838 D976  7D          	LD	A,L
 3839 D977  FE 08       	CP	8
 3840 D979  30 04       	JR	NC,DERR		; n > 8
 3841 D97B  CD D986     	CALL	SETDRV		; Treiber einstellen
 3842 D97E  D0          	RET	NC		; kein Fehler
 3843 D97F  CD F003     DERR:	CALL	PV1
 3844 D982  19          	DB	ERRM		; Treiber nicht aktiv
 3845 D983  C9          	RET
 3846                   	;
 3847 D984  3E FF       DRLIST:	LD	A,0FFh		; Treiber auflisten
 3848 D986  CD F003     SETDRV:	CALL	PV1
 3849 D989  49          	DB	DEVICE		; 49H - neue Funktion seit CAOS 4.6
 3850 D98A  C9          	RET
 3851                   
 3852                   ; hier noch ein paar ausgelagerte CAOS-Programmteile:
 3853                   
 3854                   	INCLUDE	CAOSEX.INC	; SETRO, SETWR, TIME, PRINT
    1                   ;*****************************************
    2                   ;**	CAOS 4.7	Erweiterungen	**
    3                   ;**					**
    4                   ;** Kommandos:				**
    5                   ;**	SETRO, SETWR, TIME, PRINT	**
    6                   ;**					**
    7                   ;**	in USER-ROM (EDAS-Ebene)	**
    8                   ;**					**
    9                   ;**	letzte Aenderung: 27.01.2023	**
   10                   ;*****************************************
   11                   
   12 D98B  7F7F        	DW	7F7FH
   13 D98D  53 45 54 52 	DB	'SETRO'
   14 D992  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
ASM V2.1								    SLR180 1.31 Page  57
CAOSEX  INC

   15 D993  21 C457     	LD	HL,EXIT2	; Ruecksprungadresse
   16 D996  E5          	PUSH	HL
   17 D997  CD D9F2     	CALL	DISK		; D004 bereit?
   18 D99A  CD DA33     	CALL	FNAME		; Dateiname abfragen und ausgeben zum D004
   19 D99D  3E 25       	LD	A,25H		; Setro
   20 D99F  18 14       	JR	DOUT
   21                   
   22 D9A1  7F7F        SWR7F:	DW	7F7FH
   23 D9A3  53 45 54 57 	DB	'SETWR'
   24 D9A8  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
   25 D9A9  21 C457     	LD	HL,EXIT2	; Ruecksprungadresse
   26 D9AC  E5          	PUSH	HL
   27 D9AD  CD D9F2     	CALL	DISK		; D004 bereit?
   28 D9B0  CD DA33     	CALL	FNAME		; Dateiname abfragen und ausgeben zum D004
   29 D9B3  3E 31       	LD	A,31H		; Setwr
   30 D9B5  D8          DOUT:	RET	C		; BRK
   31                   ;	JP	STEUER		; Kommando ausgeben
   32                   ;
   33                   ; DEP-Steuerbyte 1 ausgeben, bei Fehler: Fehlercode/-text anzeigen
   34                   ; PE:	A	Kommando-Steuerbyte
   35                   ; PA:	A	Antwort von DEP
   36                   ;	CY=1	Fehler aufgetreten
   37                   ; VR:	AF,BC
   38                   ;
   39 D9B6  01 80F3     STEUER:	LD	BC,STBYT1	; 80F3H
   40 D9B9  ED 79       STEU0:	OUT	(C),A
   41 D9BB  C5          STEU1:	PUSH	BC
   42 D9BC  3E 01       	LD	A,1		; 6ms
   43 D9BE  CD F003     	CALL	PV1
   44 D9C1  14          	DB	WAIT		; warten
   45 D9C2  C1          	POP	BC
   46 D9C3  ED 78       	IN	A,(C)
   47 D9C5  A7          	AND	A		; CY-Flag=0
   48 D9C6  CB 47       	BIT	0,A
   49 D9C8  20 F1       	JR	NZ,STEU1	; fertig?
   50 D9CA  CB 7F       	BIT	7,A		; Bit 7 gesetzt?
   51 D9CC  C8          	RET	Z		; kein Fehler
   52 D9CD  01 83F1     FLERR:	LD	BC,DEPVER	; 83F1H
   53 D9D0  ED 78       	IN	A,(C)
   54 D9D2  FE 20       	CP	20H		; DEP ab 2.0?
   55 D9D4  30 0E       	JR	NC,FLER1	; ja
   56 D9D6  01 81F3     	LD	BC,FCODE	; 81F3H
   57 D9D9  ED 78       	IN	A,(C)		; Fehlernummer
   58 D9DB  CD F003     	CALL	PV1
   59 D9DE  1C          	DB	AHEX		; anzeigen
   60 D9DF  CD D97F     	CALL	DERR		; Aufruf CAOS-UP "ERRM"
   61 D9E2  37          FLER3:	SCF			; CY=1: Fehler
   62 D9E3  C9          	RET
   63                   	;
   64 D9E4  06 00       FLER1:	LD	B,HIGH(ERRTX)	; 00F1H = Fehlertext von DEP 2.0
   65 D9E6  ED 78       FLER2:	IN	A,(C)
   66 D9E8  04          	INC	B
   67 D9E9  A7          	AND	A
   68 D9EA  28 F6       	JR	Z,FLER3		; 00=Ende
   69 D9EC  CD F003     	CALL	PV1
   70 D9EF  24          	DB	OCHR
   71 D9F0  18 F4       	JR	FLER2
   72                   
   73                   ; Test ob Floppy arbeitet (fuer SETWR, SETRO, time)
   74                   
   75 D9F2  01 FC80     DISK:	LD	BC,0FC80H	; Modulsteckplatz FC
   76 D9F5  ED 78       	IN	A,(C)
   77 D9F7  FE A7       	CP	0A7H		; Floppy vorhanden?
   78 D9F9  28 14       	JR	Z,DISK1
   79 D9FB  CD F003     	CALL	PV1
   80 D9FE  23          	DB	OSTR
   81 D9FF  4B 65 69 6E 	DB	'Kein D004!'
   82 DA09  07 0D 0A 00 	DB	7,CR,LF,0
   83 DA0D  E1          	POP	HL		; RET-Adresse vom Stack nehmen
   84 DA0E  C9          	RET			; und Kommando beenden!
   85                   	;
   86 DA0F  01 B3F3     DISK1:	LD	BC,UROK		; 0B3F3H
   87 DA12  ED 78       	IN	A,(C)
   88 DA14  FE 05       	CP	5		; CAOS-Betriebsart?
   89 DA16  C8          	RET	Z
   90 DA17  CD F003     	CALL	PV1
   91 DA1A  23          	DB	OSTR
   92 DA1B  43 41 4F 53 	DB	'CAOS-Disk starten!'
ASM V2.1								    SLR180 1.31 Page  58
CAOSEX  INC

   93 DA2D  07 0D 0A 00 	DB	7,CR,LF,0
   94 DA31  E1          	POP	HL		; RET-Adresse vom Stack nehmen
   95 DA32  C9          	RET			; und Kommando beenden!
   96                   ;
   97                   ; Name ein-, ausgeben: (fuer SETRO, SETWR)
   98                   ; PE:	DE	Zeiger auf Dateinamen, wenn 0 dann Eingabe
   99                   ; PA:	CY=1	BRK
  100                   ;	DE	Zeiger auf Zeichen nach Dateinamen (2. Name bei REN)
  101                   ;
  102 DA33  EB          FNAME:	EX	DE,HL
  103 DA34  7E          	LD	A,(HL)		; Zeichen nach Menuewort holen
  104 DA35  E6 DF       	AND	0DFH
  105 DA37  20 14       	JR	NZ,FNAM2	; Argument angegeben, als Dateiname nutzen!
  106 DA39  21 0006     	LD	HL,6
  107 DA3C  CD F003     	CALL	PV1
  108 DA3F  23          	DB	OSTR
  109 DA40  4E 61 6D 65 	DB	'Name :',0
  110 DA47  CD F003     	CALL	PV1
  111 DA4A  17          	DB	INLIN		; Dateiname abfragen
  112 DA4B  D8          	RET	C		; BRK
  113 DA4C  19          	ADD	HL,DE		; Beginn Name
  114 DA4D  1E 0C       FNAM2:	LD	E,12		; Dateiname 8.3 = max. 12 Zeichen
  115 DA4F  01 82F3     	LD	BC,DIRBUF	; 082F3H
  116 DA52  7E          FNAM3:	LD	A,(HL)
  117 DA53  ED 79       	OUT	(C),A		; Zeichen in DIRBUF eintragen
  118 DA55  E6 DF       	AND	0DFH		; war das ein Leerzeichen oder 0?
  119 DA57  28 01       	JR	Z,FNAM4
  120 DA59  23          	INC	HL		; ansonsten weiter zum naechsten Zeichen
  121 DA5A  04          FNAM4:	INC	B
  122 DA5B  1D          	DEC	E
  123 DA5C  20 F4       	JR	NZ,FNAM3
  124 DA5E  EB          	EX	DE,HL		; Zeiger jetzt wieder in DE
  125 DA5F  13          	INC	DE		; Trennzeichen uebergehen
  126 DA60  C9          	RET
  127                   
  128 DA61  7F7F        	DW	7F7FH
  129 DA63  54 49 4D 45 	DB	'TIME',1
  130 DA68  21 C457     	LD	HL,EXIT2	; Ruecksprungadresse
  131 DA6B  E5          	PUSH	HL
  132 DA6C  CD D9F2     	CALL	DISK		; D004 bereit?
  133 DA6F  01 83F1     	LD	BC,DEPVER	; 083F1H
  134 DA72  ED 78       	IN	A,(C)
  135 DA74  FE 30       	CP	30H		; DEP ab 3.0?
  136 DA76  30 14       	JR	NC,UHR
  137 DA78  CD F003     	CALL	PV1
  138 DA7B  23          	DB	OSTR
  139 DA7C  4B 65 69 6E 	DB	'Kein DEP 3!'
  140 DA87  07 0D 0A 00 	DB	7,CR,LF,0
  141 DA8B  C9          	RET
  142                   
  143 DA8C  3E 19       UHR:	LD	A,19H		; Cursor ganz nach links
  144 DA8E  CD F003     	CALL	PV1
  145 DA91  24          	DB	OCHR
  146 DA92  1E 02       	LD	E,2
  147 DA94  01 86F1     	LD	BC,DATE+200H
  148 DA97  ED 78       UHR1:	IN	A,(C)		; Datum aus Koppel-RAM
  149 DA99  CD F003     	CALL	PV1
  150 DA9C  1C          	DB	AHEX
  151 DA9D  3E 2E       	LD	A,'.'
  152 DA9F  CD F003     	CALL	PV1
  153 DAA2  24          	DB	OCHR
  154 DAA3  05          	DEC	B
  155 DAA4  1D          	DEC	E
  156 DAA5  20 F0       	JR	NZ,UHR1
  157 DAA7  ED 78       	IN	A,(C)		; Jahr
  158 DAA9  FE 78       	CP	78H
  159 DAAB  3E 19       	LD	A,19H		; 1978-1999
  160 DAAD  CE 00       	ADC	A,0
  161 DAAF  27          	DAA			; 2000-2077
  162 DAB0  CD F003     	CALL	PV1
  163 DAB3  1C          	DB	AHEX		; Jahrhundert
  164 DAB4  ED 78       	IN	A,(C)
  165 DAB6  CD F003     	CALL	PV1
  166 DAB9  1C          	DB	AHEX		; Jahr
  167 DABA  01 87F1     	LD	BC,TIME
  168 DABD  1E 03       	LD	E,3
  169 DABF  3E 20       	LD	A,' '		; Trenner zwischen Datum und Uhrzeit
  170 DAC1  CD F003     UHR2:	CALL	PV1
ASM V2.1								    SLR180 1.31 Page  59
CAOSEX  INC

  171 DAC4  24          	DB	OCHR
  172 DAC5  ED 78       	IN	A,(C)		; Uhrzeit aus Koppel-RAM
  173 DAC7  CD F003     	CALL	PV1
  174 DACA  1C          	DB	AHEX
  175 DACB  3E 3A       	LD	A,':'
  176 DACD  04          	INC	B
  177 DACE  1D          	DEC	E
  178 DACF  20 F0       	JR	NZ,UHR2
  179 DAD1  3A B781     	LD	A,(ARGN)	; Parameter angegeben?
  180 DAD4  A7          	AND	A		; =Dauerlauf?
  181 DAD5  28 06       	JR	Z,UHR3		; nein!
  182 DAD7  CD F003     	CALL	PV1
  183 DADA  2A          	DB	BRKT		; BRK?
  184 DADB  30 AF       	JR	NC,UHR
  185 DADD  CD F003     UHR3:	CALL	PV1
  186 DAE0  2C          	DB	CRLF
  187 DAE1  C9          	RET
  188                   
  189                   ; Druckereinstellungen
  190                   
  191 DAE2  7F7F        	DW	7F7FH
  192 DAE4  50 52 49 4E 	DB	'PRINT',1FH
  193 DAEA  21 C457     	LD	HL,EXIT2	; Ruecksprungadresse
  194 DAED  E5          	PUSH	HL
  195 DAEE  1A          PRI:	LD	A,(DE)
  196 DAEF  A7          	AND	A
  197 DAF0  C8          	RET	Z		; fertig
  198 DAF1  FE 20       	CP	' '
  199 DAF3  28 15       	JR	Z,PRINC
  200 DAF5  FE 2C       	CP	','
  201 DAF7  28 14       	JR	Z,PRK		; Zeichen
  202 DAF9  FE 27       	CP	27H
  203 DAFB  28 14       	JR	Z,PRSTR		; String
  204 DAFD  CD F003     	CALL	PV1
  205 DB00  18          	DB	RHEX
  206 DB01  DA D97F     	JP	C,DERR		; Bei Fehler -> CAOS-UP "ERRM"
  207 DB04  3A B797     	LD	A,(NUMVX)
  208 DB07  CD B7E9     PRIC:	CALL	OFILT		; Druckerausgabe ungefiltert
  209 DB0A  13          PRINC:	INC	DE
  210 DB0B  18 E1       	JR	PRI
  211                   	;
  212 DB0D  13          PRK:	INC	DE
  213 DB0E  1A          	LD	A,(DE)		; Zeichen
  214 DB0F  18 F6       	JR	PRIC
  215                   	;
  216 DB11  13          PRSTR:	INC	DE
  217 DB12  1A          	LD	A,(DE)
  218 DB13  A7          	AND	A
  219 DB14  C8          	RET	Z		; Ende-0
  220 DB15  FE 27       	CP	27H
  221 DB17  28 F1       	JR	Z,PRINC		; Stringende
  222 DB19  CD B7E9     	CALL	OFILT		; Druckerausgabe ungefiltert
  223 DB1C  18 F3       	JR	PRSTR
  224                   
  225                   ; nachfolgender Code wird aus Assembler-Teil mitbenutzt.
  226                   ;
  227                   ; Kommando beenden und USER-ROM abschalten
  228                   ;
  229                   ;EXIT2:	LD	DE,(ARGC-1)	; D = urspruenglicher Schaltzustand USER-C
  230                   ;	LD	A,2		; USER-ROM
  231                   ;	LD	L,A		; schalten
  232                   ;	LD	E,MODU
  233                   ;	JP	PV3		; zuerst USER-ROM schalten, dann zu CAOS
 3855                   
 3856                   	ABSFILL	0E000h,<USER-ROM-Ende (ASM)>
    7 DB1E  FF FF FF FF 	  DS	0E000h - $,0FFh
 3857                   
 3858 E000              ROMEND:
 3859                   	.DEPHASE
 3860                   	END
 0 Error(s) Detected.
 8320 Absolute Bytes. 715 Symbols Detected.
     	CP	27H
  221 DB17 