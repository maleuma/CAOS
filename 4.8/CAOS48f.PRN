SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   1
NORMAL  Z80

    1         0000      DUENN	EQU	0	; 0 = Zeichensatz klassisch, 1 = Zeichensatz duenn
    2                   INCLUDE	CAOS48.Z80
    1                   ;*************************************************
    2                   ;**						**
    3                   ;**	CAOS 4.8   (c) KC-Club 2021-2023	**
    4                   ;**						**
    5                   ;*************************************************
    6                   ;**						**
    7                   ;**	Entwickler:				**
    8                   ;**		Mario Leubner			**
    9                   ;**		Daniel Elstner (CAOS 4.5)	**
   10                   ;**		Frank Ludwig (Teile in CAOS 4.8)**
   11                   ;**						**
   12                   ;**	CAOS-Versionen:				**
   13                   ;**	13.04.1994 - CAOS 4.2 Reassemblierung	**
   14                   ;**	17.02.1995 - CAOS 4.3			**
   15                   ;**	09.02.2003 - CAOS 4.4			**
   16                   ;**	06.09.2010 - CAOS 4.5			**
   17                   ;**	05.03.2016 - CAOS 4.6 beta2 (KC-Labor)	**
   18                   ;**	04.12.2018 - CAOS 4.7 final		**
   19                   ;**	03.02.2018 - CAOS 4.7 final & EDIT 0.4	**
   20                   ;**	10.04.2019 - CAOS 4.7 Patch 1		**
   21                   ;**	24.03.2020 - CAOS 4.8 beta1 (KC-Labor)	**
   22                   ;**	08.10.2020 - CAOS 4.8 beta2 (KC-Labor)	**
   23                   ;**	20.12.2020 - CAOS 4.8 beta3 (KC-Labor)	**
   24                   ;**	04.04.2021 - CAOS 4.8 beta4 (KC-Labor)	**
   25                   ;**	22.05.2021 - CAOS 4.8 beta5 (KC-Labor)	**
   26                   ;**	20.06.2021 - CAOS 4.8 final (KC-Labor)	**
   27                   ;**	12.09.2021 - CAOS 4.8 Patch 1		**
   28                   ;**	01.01.2022 - CAOS 4.8 Patch 2		**
   29                   ;**	21.05.2022 - CAOS 4.8 Patch 3		**
   30                   ;**	20.02.2023 - CAOS 4.8 Patch 4		**
   31                   ;**	25.09.2023 - CAOS 4.8 Patch 5		**
   32                   ;**	07.10.2023 - CAOS 4.8 Patch 6		**
   33                   ;**	05.01.2024 - CAOS 4.8 Patch 7		**
   34                   ;**						**
   35                   ;*************************************************
   36                   
   37                   ; !!! Versionsdatum nur noch in VORBLOCK.INC eintragen !!!
   38                   
   39         0000      BETA	equ	0		; 0 fuer Vollversion, 1 fuer beta-Version
   40                   	;benoetigt 1 Byte im ROM C
   41                   
   42                   ; Die Bits 2, 3 und 4 von Port2 (86h) sind beim KC85/4 nicht benutzt worden.
   43                   ; Fuer eine Nutzung beim KC85/5 gibt es mehrere Ideen/Optionen. Diese sind
   44                   ; untereinander nicht kompatibel. CAOS 4.8 ist zur Nutzung des 512K-Flash-ROM
   45                   ; mit Zeichensatz-Umschaltung vorbereitet. Die Erweiterung des RAM bzw. USER-ROM
   46                   ; ist dadurch nicht mehr vorgesehen. Wenn kein Flash-ROM installiert ist, kann
   47                   ; aber trotzdem durch nachgeladene Treiber z.B. der RAM mit 1 oder 2 MByte
   48                   ; genutzt werden. Die einzelnen Optionen nutzen folgende Bits:
   49                   ;
   50                   ; Option  234	Beschreibung
   51                   ; RAM1MB  xx-	Erweiterung des internen RAM auf 1MByte
   52                   ; RAM2MB  xxx	Erweiterung des internen RAM auf 2MByte
   53                   ; USER8   --x	Erweiterung des USER-ROM von 4 auf 8 Ebenen
   54                   ; CAOS2   --x	Zeichensatz-Umschaltung durch zweite CAOS-ROM-Ebene
   55                   ; SYSROM  xx-	Ansteuerung eines 512K Flash-ROM mit 8 CAOS-Versionen
   56                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   2
CAOS48  Z80

   57         0001      CAOS2	EQU	1		; Erweiterung zur Umschaltung des Zeichensatzes
   58                   	;benoetigt 8 Byte im ROM C
   59                   ; Diese Erweiterung setzt einen 16K grossen CAOS-ROM-C und einen 16K grossen
   60                   ; CAOS-ROM-E voraus. In der ersten Haelfte der ROM's wird das System mit dem
   61                   ; duennen Zeichensatz gebrannt, in der zweiten Haelfte der Standard-Zeichensatz.
   62                   ; Umgeschaltet wird mit Bit 4 von Port 86h (IX+4) bzw. SWITCH 5 10
   63                   
   64         0001      SYSROM	EQU	1		; Erweiterung fuer 8 Ebenen System-ROM
   65                   	;benoetigt 29 Byte im ROM C
   66                   	;benoetigt 5 Byte im ROM F
   67                   ; Diese Erweiterung setzt je einen Flash-ROM mit 8 CAOS-Versionen voraus.
   68                   ; Ueber die Bits 2 und 3 des Port 86h wird ein Zaehler initiiert, welcher die
   69                   ; aktuelle Ebene speichert und diese als Adresse an den Flash-ROM weiter gibt.
   70                   ; Ein H-Impuls an Bit 3 (86h) bei Bit 2=High setzt den Zaehler zurueck
   71                   ; Ein H-Impuls an Bit 3 (86h) bei Bit 2=Low zaehlt den Zaehler vorwaerts
   72                   ;
   73                   ; Umgeschalten werden die System-Ebenen mit JUMP 0 bis 7
   74                   
   75         0000      RAM1MB	EQU	0		; RAM8 mit 1MB verwalten?
   76                   	;benoetigt 26 Byte im ROM C
   77                   ; Diese Erweiterung setzt 1MByte RAM statt des 256K RAM im Grundgeraet voraus.
   78                   ; Die Idee dazu stammt von Frank Dachselt und war im Original sogar 2MByte gross
   79                   ; und zusaetzlich noch auf Moduladresse 06 mit dem zweiten Megabyte praesent.
   80                   ; Hardware: Die zusaetzlichen beiden RAM-Adressen werden auf Bit 2 und 3 des
   81                   ; Port2 (86h) gelegt (Bei 2MB war das Bit 4 auch noch mit genutzt)
   82                   ;
   83                   ; Diese Erweiterung kann nicht genutzt werden, wenn die Option SYSROM aktiv ist.
   84                   
   85         0000      USER8	EQU	0		; Erweiterung des USER-ROM in 8 Ebenen
   86                   	;benoetigt 2 Byte im ROM C
   87                   ; Diese Erweiterung setzt einen 64K ROM an Stelle des 32K USER-ROM voraus.
   88                   ;
   89                   ; Umgeschalten werden die 8 USER-ROM Ebenen mit Bit 4, 5 und 6 des Port 86h
   90                   ; SWITCH 2 nn ergibt dann:
   91                   ; nn=C1	Ebene 0	BASIC
   92                   ; nn=C9 Ebene 1
   93                   ; nn=D1	Ebene 2	DEBUGGER
   94                   ; nn=D9 Ebene 3
   95                   ; nn=E1	Ebene 4	ASM
   96                   ; nn=E9 Ebene 5
   97                   ; nn=F1	Ebene 6	EDIT
   98                   ; nn=F9 Ebene 7
   99                   ;
  100                   ; Diese Erweiterung kann nicht genutzt werden, wenn die Option CAOS2 aktiv ist.
  101                   
  102                   ; Uebersetzen ohne Erzeugen eines Listings:
  103                   ;	SLRZ80 CAOS48.@@Z/F
  104                   ; oder:	Z80ASM CAOS48.@@Z/F
  105                   ;	REN CAOS48.COM CAOS48.KCC
  106                   
  107                   ; Uebersetzen mit Erzeugen eines Listings:
  108                   ;	SLRZ80 CAOS48/F
  109                   ; oder:	Z80ASM CAOS48/F
  110                   ;	REN CAOS48.COM CAOS48.KCC
  111                   
  112                   ; Hardware:	(KC85/5+)
  113                   ;
  114                   ;256 KByte interner RAM (RAM0,RAM4,RAM8)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   3
CAOS48  Z80

  115                   ; 64 KByte IRM (2 unabhaengige Bilder)
  116                   ; 16 KByte CAOS-ROM C000-FFFF
  117                   ; 32 KByte USER-ROM C000-DFFF (4 Ebenen)
  118                   ; Statt der einzelnen ROMs kann auch die 512K Flash-ROM-Erweiterung von
  119                   ; Andreas Schlechte verwendet werden. Dann stehen gleichzeitig 8 verschiedene
  120                   ; CAOS-Versionen zur Verfuegung und auch beide Zeichensaetze von CAOS 4.8
  121                   ;---------------------------------------------------------------------
  122                   
  123                   ;**	Speicheruebersicht, Belegung der CAOS-ROMs	**
  124                   
  125                   ;Inhalt ROM-C:
  126                   ;C000	IRM-Defaulttabelle
  127                   ;C051	System-Initialisierung, Erzeugung Device-Treibertabellen
  128                   ;C1C0	SYSTEM-Check, Modulcheck
  129                   ;C349	Module lesen und schalten (SWITCH)
  130                   ;C488	F-Tastenbelegung (KEY, KEYLIST)
  131                   ;C57E	Farben setzen (COLOR)
  132                   ;C5BA	Fensterfunktionen (WINDOW, WINAK, WININ)
  133                   ;C64D	JUMP-Erweiterung 0-7 fuer FLASH-ROM-Baenke
  134                   ;C66A	Grafikfunktionen (LINE, PUSE, CIRCLE, PUDE)
  135                   ;C832	Speicherfunktionen (DISPLAY, MODIFY)
  136                   ;C8DE	Druckertreiber, V.24-Duplexbetrieb (Protokoll, Screen- oder Hardcopy)
  137                   ;CD22	Byteweise Ein-/Ausgaberoutinen (MBOUT, MBIN)
  138                   ;CE93	Tabelle der Modulnamen
  139                   
  140                   ;Inhalt ROM-D:
  141                   ;D003	TAPE-Treiber = Kassettenausgabe, Kassetteneingabe Standard
  142                   ;D0F9	DISK-Treiber = D004/D008 Floppy-Routinen
  143                   ;D1B6	Pixelausgabe, Fensterscrolling, Zeile loeschen
  144                   ;D2D0	Wurzelberechnung (SQR)
  145                   ;D2DE	Speichercheck VIEW
  146                   ;D320	Unterprogramme fuer Modulcheck
  147                   ;D34D	DISK: DIR, STAT, ERA, REN
  148                   ;D497	TYPE, DUMP, INIT
  149                   ;D5D6	DEVICE-Treiber umschalten, auflisten
  150                   ;D641	DISK: Laufwerk wechseln mit DRIVE
  151                   ;D6F5	TAPE: Kassetteninhalt auflisten mit TAPELIST
  152                   ;D7CC	Grafiksequenzen fuer die Drucker
  153                   ;D82B	V.24-Initialisierungstabellen
  154                   ;D858	Original der Unterprogrammtabelle SUTAB
  155                   ;D8F3	Treibertabellen fuer TAPE und DISK
  156                   ;D933	Portinittabellen
  157                   ;D959	M001-Initialisierungstabelle fuer Centronics
  158                   ;D965	Defaulttabelle fuer Joystick-Belegung
  159                   ;D971	ISRTAB	Interrupttabelle
  160                   ;D991	IBM-Codierungen fuer Druckerausgabe
  161                   ;D99F	CAOS-Versionsanzeige (HELP)
  162                   ;DAB8	IBM-Zeichensatz
  163                   
  164                   ;Inhalt ROM-E:
  165                   ;E000	RESET, BASIC-Verteiler
  166                   ;E055	CRT-Treiber (PADR, DABR, CRT-Grundprogramm)
  167                   ;E1D3	Routinen der Steuercodes
  168                   ;E2F2	Tastaturtreiber mit ISR CTC Kanal 3, PIO-B, SIO-B
  169                   ;E3E9	Joysticktreiber fuer M008/M021
  170                   ;E461	Kassetten-Routinen Eingabe/Ausgabe
  171                   ;E4DD	Programmverteiler PV7 fuer DEVICE-Umleitungen
  172                   ;E577	Interruptroutinen fuer Kassetten-Ein/Ausgabe
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   4
CAOS48  Z80

  173                   ;E599	BASIC-Erweiterungen
  174                   ;ED44	Sprung aus CAOS-ROM-C in ROM-Modul (z.B. M052-USB)
  175                   ;ED72	Initialisierungstabelle fuer M021
  176                   ;ED81	Interruptroutine fuer Tonlaenge (CTC2)
  177                   ;ED8A	Reaktionsprogramm auf Shift+CLR
  178                   ;EDA0	Dezimalausgabe
  179                   ;EDB0	Tabelle der ESC-Funktionen
  180                   ;EDE1	Autostart-Kommando und Dateiname fuer DISK/USB
  181                   ;EDF7	Zuordnungstabelle der BASIC-Kanaele
  182                   ;EDFF	CAOS-Versionsnummer
  183                   ;EE00	Zeichenbildtabelle Grossbuchstaben
  184                   
  185                   ;Inhalt ROM-F:
  186                   ;F000	Power-ON, Sprungverteiler PV1-7, IRMON, IRMOF, RCALL
  187                   ;F0B4	Zeichenkette anzeigen (OSTR)
  188                   ;F0BA	Kommandos SWITCH und JUMP
  189                   ;F153	Systemstart mit Autostart ROM-Modul oder Floppy
  190                   ;F1DD	Kommandointerpreter, MENU, LOOP, ZSUCH
  191                   ;F363	Umschaltung Ein-/Ausgabe (NORM, NOUT, SOUT, NIN, SIN)
  192                   ;F390	Zeichenaus-/eingabe (HLHX, AHEX, OCHR, INTB, ...)
  193                   ;F3D9	Tastatureingabe KBD, INLIN
  194                   ;F4A3	Kommando go
  195                   ;F4CA	Hex- oder Dezimalzahlen/Argumente erfassen (RHEX, RDEZ, GARG)
  196                   ;F54A	Ports initialisieren (INIEA, INIMEX)
  197                   ;F562	Device-Kommandos (SAVE, VERIFY, LOAD)
  198                   ;F7B3	Kommandos COLOR, DISPLAY, MODIFY
  199                   ;F7E7	Kommandos WINDOW, KEY (mit Keylist)
  200                   ;F819	Cursordarstellung, Grafikroutinen (PUSE, PUDE, CIRCL, LINE)
  201                   ;F87B	BASIC-I/O-Verteiler
  202                   ;F8F4	Zeichenkette anzeigen (ZKOUT)
  203                   ;F8FD	Tonausgabe (TON)
  204                   ;F949	ESC-Programme
  205                   ;F9CA	Druckerinitialisierung (LSTDEV) und Duplexinitialisierung (V24DUP)
  206                   ;F9FF	Druckroutinen (M001, M021, V.24-Modul)
  207                   ;FA8C	SIO-Empfangsinterrupt (Tastatur, ESC...)
  208                   ;FB8E	CAOS-Arbeitsbereich verlagern (SIXD)
  209                   ;FB90	Aufruf eines UP im CAOS-ROM-C, CAOS-ROM C ein/aus schalten
  210                   ;FBAB	Multiplikation (MULT)
  211                   ;FBBB	Menuewort DEVICE
  212                   ;FBE3	Versteckte Menueworte DIR, CD, ERA, REN
  213                   ;FC12	DEVICE-Routinen MBO, MBI, ISRO, CSRO, ISRI, CSRI
  214                   ;FC30	Warteschleife (WAIT)
  215                   ;FC38	Tastencodetabelle KTAB
  216                   ;FCB8	CRTTAB	Steuerfunktionstabelle
  217                   ;FCF8	TOKTAB	BASIC-Token mit Sprungtabelle
  218                   ;FDB2	BASIC-Unterprogrammtabelle
  219                   ;FDF8	Bittabelle fuer Punktroutinen
  220                   ;FE00	Zeichenbildtabelle Kleinbuchstaben
  221                   
  222                   ;---------------------------------------------------------------------
  223                   
  224                   VB_NAME	MACRO
  225                   	DB	'CAOS48  KCC'	; Dateiname im Vorblock
  226                   	ENDM
  227         4000      AADR	EQU	4000H		; AADR
  228         8000      EADR	EQU	8000H		; EADR+1
  229                   
  230                   	INCLUDE	VORBLOCK.INC	; CAOS-Vorblock
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   5
VORBLOCKINC

    1                   ; Erzeugen des CAOS-Vorblock fuer CAOS 4.8 und USER-ROM:
    2                   
    3                   DATUM	MACRO
    4                   	DB	'05.01.2024'	; Versionsdatum nur hier aendern!
    5                   	ENDM
    6                   
    7                   	VB_NAME			; Dateiname
    1 0100  43 41 4F 53 	DB	'CAOS48  KCC'	; Dateiname im Vorblock
    8 010B  00 00 00 00 	DS	5,0
    9 0110  02          	DB	2		; 2 Adressen
   10 0111  4000        	DW	AADR		; Anfangsadresse
   11 0113  8000        	DW	EADR		; Endadresse+1
   12 0115  00 00 00 00 	DS	75,0
   13 0160  4B 43 2D 43 	DB	'KC-Club, M. Leubner:  '
   14                   	DATUM			; Versionsdatum
    1 0176  30 35 2E 30 	DB	'05.01.2024'	; Versionsdatum nur hier aendern!
  231                   
  232                   	INCLUDE	EQU48.INC	; Vereinbarungen, Uebersicht
    1                   ;*****************************************
    2                   ;**	CAOS 4.8			**
    3                   ;**					**
    4                   ;**	Macros und Vereinbarungen	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 28.08.2021	**
    7                   ;*****************************************
    8                   
    9                   MESSAGE	MACRO	MSG1,N,MSG2
   10                   	 .PRINTX MSG1 N MSG2
   11                   	ENDM
   12                   
   13                   ; Mit FF auffuellen, bis die absolute Adresse LOC erreicht ist:
   14                   ABSFILL	MACRO	LOC,WHAT
   15                   	 IF $ GT LOC
   16                   	  MESSAGE <Fehler! LOC:>,% $ - LOC,<Byte zu viel vor WHAT>
   17                   	 ELSE
   18                   	  IF2
   19                   	   MESSAGE <LOC:>,% LOC - $,<Byte frei vor WHAT>
   20                   	  ENDIF
   21                   	  DS	LOC - $,0FFh
   22                   	 ENDIF
   23                   	ENDM
   24                   
   25                   ; Undokumentierter Opcode:
   26                   ;	IN	F,(C)
   27                   INFC	MACRO
   28                   	 DB	0EDh,70h
   29                   	ENDM
   30                   
   31                   ; Undokumentierter Opcode:
   32                   ;	RES	BI,(IX+DISP),A
   33                   RESIXA	MACRO	BI,DISP
   34                   	 DB	0DDh,0CBh,DISP
   35                   	 DB	BI SHL 3 OR 10000111b
   36                   	ENDM
   37                   
   38                   ; Undokumentierter Opcode:
   39                   ;	SET	BI,(IX+DISP),A
   40                   SETIXA	MACRO	BI,DISP
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   6
EQU48   INC

   41                   	 DB	0DDh,0CBh,DISP
   42                   	 DB	BI SHL 3 OR 11000111b
   43                   	ENDM
   44                   
   45                   ; Setze Bit 7 des ersten Zeichens fuer BASIC-Token:
   46                   TOKEN	MACRO	STRING
   47                   Y	 DEFL	80h
   48                   	 IRPC	X,STRING
   49                   	  DB	'&X' + Y
   50                   Y	  DEFL	0
   51                   	 ENDM
   52                   	ENDM
   53                   
   54                   ;---------------------------------------
   55                   
   56                   ; Steuerzeichen:
   57                   
   58         000A      LF	EQU	0AH
   59         000D      CR	EQU	0DH
   60         001B      ESC	EQU	1BH
   61                   
   62                   ;---------------------------------------
   63                   
   64                   ; Portadressen im Grundgeraet:
   65                   
   66         0084      PORT1	EQU	84H	; Ausgabe-Port D08A	Merkzelle ist (IX+1)
   67                   			;	Bit 0 - Anzeige Bild 0 oder 1
   68                   			;	Bit 1 - Zugriff auf 0=Pixel- oder 1=Farbebene
   69                   			;	Bit 2 - Zugriff auf Bild 0 oder 1
   70                   			;	Bit 3 - 0=hohe Farbaufloesung oder 1=niedrige
   71                   			;	Bit 4-7 Auswahl der RAM8-Ebene (256K)
   72         0086      PORT2	EQU	86H	; Ausgabe-Port D09A	Merkzelle ist (IX+4)
   73                   			;	Bit 0 - RAM4 ein/aus
   74                   			;	Bit 1 - RAM4 Schreibschutz (1=aus)
   75                   			;	Bit 2 - Flash: Systemumschaltung, Reset-Impuls
   76                   			;	Bit 3 - Flash: Systemumschaltung, Zaehl-Impuls
   77                   			;	Bit 4 - Flash: Umschaltung Zeichensatz
   78                   			;	Bit 5-6 Auswahl der USER-ROM-Ebene
   79                   			;	Bit 7 - CAOS-ROM C ein/aus
   80         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
   81                   			;	Bit 0 - CAOS ROM-E ein/aus
   82                   			;	Bit 1 - RAM0 ein/aus
   83                   			;	Bit 2 - IRM ein/aus
   84                   			;	Bit 3 - Schreibschutz RAM0
   85                   			;	Bit 4 - K_OUT
   86                   			;	Bit 5 - System-LED
   87                   			;	Bit 6 - Motorschaltspannung
   88                   			;	Bit 7 - USER-ROM ein/aus
   89         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
   90                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
   91                   			;	Bit 1 \
   92                   			;	Bit 2 - Lautstaerke Tonausgabe
   93                   			;	Bit 3 - 4 Bit (Low-aktiv)
   94                   			;	Bit 4 /
   95                   			;	Bit 5 - RAM8 ein/aus
   96                   			;	Bit 6 - Schreibschutz RAM8
   97                   			;	Bit 7 - Blinken ein/aus
   98         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   7
EQU48   INC

   99         008B      PIOBS	EQU	8BH	; System-PIO Steuerbyte Port B
  100         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
  101         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Kassettenausgabe)
  102         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
  103         008F      CTC3	EQU	8FH	; CTC Kanal 3 (Tastatur)
  104                   
  105                   ; Portadressen des Koppel-RAM (D004):
  106                   
  107         00F1      ERRTX	EQU	000F1H	; Fehlertext			(ab DEP 2.0)
  108         80F1      STBYT2	EQU	080F1H	; 2. Steuerbyte:		(ab DEP 2.0)
  109                   			;	Bit 0 - Anforderung
  110                   			;	Bit 1 - Laufwerkswechsel
  111                   			;	Bit 2 - Userwechsel
  112                   			;	Bit 3..6 reserviert
  113                   			;	Bit 7 - Fehlerrueckmeldung
  114         81F1      LWANF	EQU	081F1H	; Laufwerk ('A', 'B', ... 'P')
  115         82F1      UANF	EQU	082F1H	; User-Bereich (00H ... 0FH)
  116         83F1      DEPVER	EQU	083F1H	; DEP-Version BCD
  117         84F1      DATE	EQU	084F1H	; Datum BCD			(ab DEP 3.0)
  118                   			;	Jahr (00..99)
  119                   			;	Monat (1..12)
  120                   			;	Tag (1..31)
  121         87F1      TIME	EQU	087F1H	; Uhrzeit BCD			(ab DEP 3.0)
  122                   			;	Stunde (0..23)
  123                   			;	Minute (0..59)
  124                   			;	Sekunde (0..59)
  125                   
  126         80F2      FDATA	EQU	080F2H	; Daten- bzw. Sektorpuffer 128 Byte lang
  127         80F3      STBYT1	EQU	080F3H	; 1. Steuerbyte:
  128                   			;	Bit 0 - Anforderung
  129                   			;	Bit 1 - 1=schreiben/0=lesen
  130                   			;	Bit 3 - oeffnen
  131                   			;	Bit 6 - schliessen
  132                   			;	Bit 7 - Fehlerrueckmeldung
  133                   			;	Bit	5 4 2	Funktionsauswahl:
  134                   			;		0 0 0	Sektor lesen/schreiben
  135                   			;		0 0 1	DIR-Anforderung
  136                   			;		0 1 0	ERA
  137                   			;		0 1 1	STAT
  138                   			;		1 0 0	REN
  139                   			;		1 0 1	SETRO
  140                   			;		1 1 0	SETWR
  141                   			;		1 1 1	BASIC-Byte lesen/schreiben
  142         81F3      FCODE	EQU	081F3H	; Fehlercode
  143         82F3      DIRBUF	EQU	082F3H	; Puffer fuer Dateiname oder Directory
  144         8EF3      BASBYT	EQU	08EF3H	; Datenbyte fuer BASIC-Byte-Schnittstelle
  145         B3F3      UROK	EQU	0B3F3H	; Betriebsart	0 = Anfangswert
  146                   			;		1 = CP/M-System lauft
  147                   			;		2 = Not ready
  148                   			;		3 = Can't read
  149                   			;		4 = No system
  150                   			;		5 = CAOS-Betriebsart / DEP laeuft
  151                   
  152                   ;---------------------------------------
  153                   
  154                   ; Belegung Systembereich im RAM0:
  155                   
  156                   ; 0000-000Ah	Dateiname
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   8
EQU48   INC

  157                   ; 000Bh		Interrupt-Mode fuer USB (von M052-Software verwaltet)
  158                   ; 000C-000Fh	Datums-Stempel fuer Dateifunktion von USB (MS-DOS-Format)
  159                   ; 0010-00ADh	Arbeitszellen Systemsoftware
  160                   ; 00AE-00E0h	Interrupt-Routine von USB-Modul
  161                   ; 00E1-0107h	Arbeitszellen Systemsoftware
  162                   ; 0108-012Fh	Tasten-UP von CALC (bei Aktivierung mit %?i)
  163                   ; 0180-019Ch	temporaere Ladeadresse der Datei *.JOY ab CAOS 4.6
  164                   ; 0180-01C3h	Systemstack
  165                   
  166         01C4      STACK	EQU	01C4H	; Systemstack
  167                   
  168                   ; 01C4-01EFh	Interrupttabelle
  169                   ; 01F0-01FFh	IX-Arbeitszellen (Standard: IX=01F0h)
  170                   
  171                   ; Belegung der IX - Zellen:
  172                   
  173                   ; IX+0	Zeitkonstante fuer Kassettenroutinen
  174                   ; IX+1	Merkzelle fuer Ausgabeport 84H
  175                   ; IX+2	gelesene Blocknummer (Kassette)
  176                   ; IX+3	erwartete Blocknummer (Kassette)
  177                   ; IX+4	Merkzelle fuer Ausgabeport 86H
  178                   ; IX+5	Ein- Ausgabepufferadresse (low)
  179                   ; IX+6	Ein- Ausgabepufferadresse (high)
  180                   ; IX+7	Kennbyte fuer LOAD/VERIFY
  181                   ;	 BIT 0: =1 ->LOAD  =0 ->VERIFY
  182                   ;	 BIT 1: =1 kein Selbstart bei LOAD (in BASIC Kennung fuer 1. Block)
  183                   ;	 BIT 2-4 : Anzahl Argumente (bei SAVE)/ARGN>3 (Startoffset)
  184                   ;	 BIT 5-7 : BASIC: fuer CLOAD/CSAVE 
  185                   ; IX+8	Kennbyte Tastatur
  186                   ;	 BIT 0: gueltiges Byte (ASCII) in IX+13
  187                   ;	 BIT 1: Tonausgabe laeuft
  188                   ;	 BIT 2-4: aktuelles Speichergeraet
  189                   ;		  0=Kassette, 1=Diskette, 2=USB (M052), 3=Netzwerk (M052)
  190                   ;		  4=Headersave, 5..7 frei
  191                   ;	 BIT 5: Tastenclick ein/aus
  192                   ;	 BIT 6: Code kommt von F-Taste
  193                   ;	 BIT 7: 0=Shiftlock
  194                   ; IX+9	Prologbyte (normal 7FH)
  195                   ; IX+10	Autorepeatzaehler (Tastatur)
  196                   ; IX+11	Merkzelle fuer Akku (bei BWS on/off mit Stackverlagerung)
  197                   ;	und Pruefsummenberechnung fuer MB-Eingabe
  198                   ; IX+12	7-Bit-Scancode von Tastatur
  199                   ; IX+13	ASCII-Code von Tastatur
  200                   ; IX+14	Tastaturcodetabelle low
  201                   ; IX+15	Tastaturcodetabelle high
  202                   
  203                   ; von den BASIC-Erweiterungen genutzte Arbeitszellen im RAM:
  204                   
  205         0307      IOCHNL	EQU	0307H	; Ein-/Ausgabekanal
  206         0309      ININD	EQU	0309H	; IN-Index
  207         031B      RNDVR3	EQU	031BH	; Zufallszahl
  208         034E      ANF	EQU	034EH	; erste Zeilennummer
  209         0350      ENDE	EQU	0350H	; letzte Zeilennummer
  210         0352      NANF	EQU	0352H	; neue erste Zeilennummer
  211         0354      DISTAN	EQU	0354H	; Zeilennummernabstand
  212         035E      DATFLG	EQU	035EH	; List-, Editierschutz wenn <> 0
  213         035F      PSTBEG	EQU	035FH	; Programmstartadresse (Standardwert = 0401H)
  214         037E      COLRET	EQU	037EH	; Ablage Farbbyte
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   9
EQU48   INC

  215         03C0      STRDAT	EQU	03C0H	; 4 Byte: Laenge und Adresse des aktuellen Strings
  216         03D7      SVARPT	EQU	03D7H	; Adresse der Liste der einfachen und Stringvariablen
  217         03EA      INTPRB	EQU	03EAH	; Druckpuffer=Dateiname
  218         03FD      PRTFLG	EQU	03FDH	; PRINT-Erweiterung
  219                   
  220                   ; IRM-Belegung:
  221                   
  222         A800      V24PL	EQU	0A800H	; Steckplatz V.24-Modul				  1 Byte
  223                   ;INTV1		0A801H	; Initialisierungsdaten V.24-Druckausgabe	  8 Byte
  224                   ;INTV2		0A809H	; Initialisierungsdaten V.24-duplex		  9 Byte
  225                   	; bis	0A811H
  226                   ;		0A820H	; urspruenglich geplant fuer Arbeitszellen Maustreiber
  227                   	; bis	0A87FH	; frei					       (96 Byte)
  228                   
  229         A880      INITU	EQU	0A880h	; Kommandoablage von INITIAL.UUU als Tastencode
  230                   	; bis	0A8FFh	; und Assemblierpuffer von EDAS/ASM
  231                   
  232         A900      DEVTAB	EQU	0A900H	; Tabelle der 8 Geraetetreiber: 8*32=256 Byte gross
  233         AA00      SULEN	EQU	0AA00H	; letzte benutzte UP-Nr. in SUTAB
  234         AA01      SUT_IRM	EQU	0AA01H	; SUTAB per Default im IRM
  235                   	; bis	0AA9Ah	fuer UP 00 bis 4Ch				154 Byte
  236                   ;		0AA9BH	reserviert fuer kuenftige CAOS-Erweiterungen
  237                   	; bis	0AABEH	z.B. CAOS-UP's bis 5Eh				 36 Byte
  238                   ; 0AABFH		; frei						  1 Byte
  239         AAC0      JOYIRM	EQU	0AAC0H	; Joystick-Tabelle
  240                   	; bis	0AACBh							 12 Byte
  241                   
  242         AACC      JWORK	EQU	0AACCH	; Arbeitszellen vom Joystick-Editor
  243                   	; bis	0AADCH							 17 Byte
  244                   
  245         AADD      WIN2	EQU	0AADDH	; Schattenspeicher fuer WINNR bis WEND (Bildwechsel)
  246                   	; bis	0AAE7	; 30.09.2020 neu definiert			 11 Byte
  247                   
  248         AAE8      WTEMO	EQU	0AAE8H	; TEMO-Arbeitszellen zur Ablage von 2 Fenster-Daten
  249                   	; bis	0AAFFH							 24 Byte
  250                   
  251                   ;		0AB00H	; reserviert fuer anwenderspez. Systemerweiterungen
  252                   	; bis	0ACFFH	; z.B. Treiber UOUT1/2 oder UIN1/2		512 Byte
  253                   
  254         AD00      VRAM1	EQU	0AD00H	; ASCII-RAM Bild 1
  255                   	; bis	0B1FFH
  256         B200      VRAM0	EQU	0B200H	; ASCII-RAM Bild 0
  257                   	; bis	0B6FFh
  258         B700      CASS	EQU	0B700H	; 128 Byte Kassettenpuffer (bis	0B77FH)
  259         B780      ARGC	EQU	0B780H	; UP-Nummer fuer PV2 und PV6
  260         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  261         B782      ARG1	EQU	0B782H	; Argument 1
  262         B784      ARG2	EQU	0B784H	;    "	   2
  263         B786      ARG3	EQU	0B786H	;    "	   3
  264         B788      ARG4	EQU	0B788H	;    "	   4
  265         B78A      ARG5	EQU	0B78AH	;    "	   5
  266         B78C      ARG6	EQU	0B78CH	;    "	   6
  267         B78E      ARG7	EQU	0B78EH	;    "	   7
  268         B790      ARG8	EQU	0B790H	;    "	   8
  269         B792      ARG9	EQU	0B792H	;    "	   9
  270         B794      ARG10	EQU	0B794H	;    "	  10
  271         B796      NUMNX	EQU	0B796H	; Anzahl Zeichen einer Hex-Zahl
  272         B797      NUMVX	EQU	0B797H	; Wert HEX-Zahl
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  10
EQU48   INC

  273         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  274         B79B      WINNR	EQU	0B79BH	; Nr. des aktuellen Bildschirmfensters
  275         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  276         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
  277         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  278         B7A2      STBT	EQU	0B7A2H	; Bildschirm-Steuerbyte
  279                   		; Bit 0 = 1 Schreiben Pixel-IRM AUS
  280                   		; Bit 1 = 1 Schreiben Color-IRM AUS
  281                   		; Bit 2 = 1 Inversdarstellung EIN (ab CAOS 3.4)
  282                   		; Bit 3 = 1 Steuercode als Zeichen darstellen
  283                   		; Bit 4 = 1 ESC aktiv (ab CAOS 4.1)
  284                   		; Bit 5 = 1 IBM-Zeichensatz EIN (ab CAOS 4.3)
  285                   		; Bit 6 = 1 HRG-Modus EIN (ab CAOS 4.3)
  286                   		; Bit 7 = 1 2-Monitor-Modus aktiv (ab CAOS 4.8)
  287         B7A3      COLOR	EQU	0B7A3H	; Farbe
  288         B7A4      WEND	EQU	0B7A4H	; Reaktionsprogramm auf Bildschirmende
  289         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  290         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  291         B7AA      CCTL2	EQU	0B7AAH	;	"	 2 A0H...DFH
  292         B7AC      CCTL3	EQU	0B7ACH	;	"	 3 80H...9FH und E0H...FFH
  293         B7AE      SYSP	EQU	0B7AEH	; System Stackpointer
  294         B7B0      SUTAB	EQU	0B7B0H	; Adresse der Unterprogrammtabelle
  295         B7B2      CTAB	EQU	0B7B2H	; CRT-Steuerprogramm-Tabelle
  296         B7B4      NCAOS	EQU	0B7B4H	; Sprung in neues System ueber IRM
  297         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  298         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  299         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Drucker)
  300         B7C0      UIN1	EQU	0B7C0H	; Sprung zu USER-Eingabekanal 2
  301         B7C3      UOUT2	EQU	0B7C3H	; Sprung zu USER-Ausgabekanal 3 V.24-duplex
  302         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  303                   ;IOERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  304         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  305         B7CD      ZOTAB	EQU	0B7CDH	; Zwischenspeicher fuer OUTAB
  306         B7CF      ZWEND	EQU	0B7CFH	; Zwischenspeicher fuer WEND
  307         B7D1      FTAST	EQU	0B7D1H	; F-Tastenpointer
  308         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  309         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  310         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  311                   		; Bit 0=1	XOR-Funktion
  312                   		; Bit 1=1	Punkt loeschen
  313                   		; Bit 2=1	Farbebene nicht veraendern
  314                   		; Bit 3-7	Vordergrundfarbe + Blinken
  315         B7D7      MIXIT	EQU	0B7D7H	; IX-Merker (H-Teil von IX und I-Tabelle)
  316         B7D8      VORTN	EQU	0B7D8H	; Vortonlaenge fuer byteweise Kassettenausgabe
  317         B7DA      DTPTR	EQU	0B7DAH	; CASS-Pointer (Zeiger in Kassettenpuffer)
  318         B7DB      CTCMD	EQU	0B7DBH	; CTC2-Modus
  319         B7DC      BLINK	EQU	0B7DCH	; Blinkfrequenz
  320         B7DD      L3TAB	EQU	0B7DDH	; Adresse der ESC-Steuerfunktionstabelle
  321         B7DF      L3SIZ	EQU	0B7DFH	; Anzahl der ESC-Steuerfunktionenn
  322         B7E0      COUNT	EQU	0B7E0H	; Zeiteinheiten fuer 1. Autorepeat (Tastatur)
  323         B7E1      HCPZ	EQU	0B7E1H	; Steuerbyte Druckerausgabe
  324                   		; Bit 0=0	Protokollfunktion
  325                   		; Bit 0=1	Hardcopyfunktion
  326                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  327                   		; Bit 2=0/1	SIO-Kanal A oder B
  328                   		; Bit 3		-
  329                   		; Bit 4..7	Druckertyp (0 bis F)
  330                   		; Bit 7=0	Matrixdrucker
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  11
EQU48   INC

  331                   		; Bit 7=1	Schreibmaschine
  332         B7E2      INTV1	EQU	0B7E2H	; Adresse V.24-Init-Tabelle fuer Druckerausgabe
  333         B7E4      INTV1L	EQU	0B7E4H	; Laenge V.24-Initialisierungtabelle
  334         B7E5      INTV2	EQU	0B7E5H	; Adresse V.24-Init-Tabelle fuer Duplexroutine
  335         B7E7      INTV2L	EQU	0B7E7H	; Laenge V.24-Initialisierungstabelle
  336         B7E8      HCPZ2	EQU	0B7E8H	; Steuerbyte Duplexroutine
  337                   		; Bit 0		-
  338                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  339                   		; Bit 2=0/1	SIO-Kanal A oder B
  340                   		; Bit 3		WR5 Bit 3: Senden ein/aus
  341                   		; Bit 4		-
  342                   		; Bit 5,6	WR5 Bit 5,6: 5-8 Bit pro Zeichen (Senden)
  343                   		; Bit 7		WR3 Bit 7: 7/8 Bit pro Zeichen (Empfang)
  344         B7E9      OFILT	EQU	0B7E9H	; Sprung zu Druckroutine (ungefiltert)
  345         B7EC      PROMPT	EQU	0B7ECH	; Systemprompt
  346         B7ED      LINTYP	EQU	0B7EDH	; Linientyp
  347         B7EE      CUMUST	EQU	0B7EEH	; Zeiger zu Cursormuster
  348         B7F0      JOYTAB	EQU	0B7F0H	; Zeiger zu Joystick-Tastencodes
  349                   ;		0B7F2H
  350                   ;		bis	; reservicert fuer Arbeitszellen von REAS und TEMO
  351                   ;		0B7F4H
  352         B7F5      FNAME	EQU	0B7F5H	; 11 Byte Dateiname+Typ fuer DEVICE-Routinen
  353         B800      MODST	EQU	0B800H	; Modulsteuerbytespeicher
  354                   	; bis	0B8FFH
  355         B900      FTASTE	EQU	0B900H	; Funktionstastenspeicher
  356                   	; bis	0B99BH
  357         B99C      WNDFN	EQU	0B99CH	; Fenstersvektorpeicher
  358                   	; bis	0B9FFH
  359                   
  360                   ; von den BASIC-Erweiterungen genutzte Routinen aus dem BASIC-ROM:
  361                   
  362         C00D      PRIST	EQU	0C00DH	; BASIC-Interpreter Kaltstart
  363         C08C      SECST	EQU	0C08CH	; BASIC-Interpreter Warmstart
  364         C327      TMEMO	EQU	0C327H	; Test, ob RAM fuer naechste Operationen reicht
  365         C348      SNER	EQU	0C348H	; Sprung zu SN-ERROR
  366         C356      ERROO	EQU	0C356H	; Ausgabe Fehlercode
  367         C442      LIN13	EQU	0C442H	; Zeiger auf Zeile mit naechstgroesserer Nummer stellen
  368         C44D      ULER	EQU	0C44DH	; Sprung zu UL-ERROR
  369         C450      LIN6	EQU	0C450H	; Zeile in Programm einsortieren	
  370         C48A      LIN10	EQU	0C48AH
  371         C493      LIN11	EQU	0C493H
  372         C4BB      ZPOIT	EQU	0C4BBH	; Zeiger auf Anfang naechste Zeile stellen
  373         C4BE      ZPOIT1	EQU	0C4BEH
  374         C641      NEW1	EQU	0C641H	; BASIC-Programm loeschen
  375         C689      CPREG	EQU	0C689H
  376         C8B7      DLI22	EQU	0C8B7H	; Ansprung Tokenverarbeitung
  377         C8BD      TCHAR	EQU	0C8BDH	; naechstes Zeichen holen
  378         C8BE      TCHAR1	EQU	0C8BEH
  379         C8CC      CPSTX	EQU	0C8CCH	; erwartetes Zeichen folgt als DB ..
  380         C8D6      CPCOMM	EQU	0C8D6H	; Komma?
  381         C8DB      CPBRGT	EQU	0C8DBH	; Klammer zu?
  382         C967      FCER	EQU	0C967H	; Sprung zu FC-ERROR
  383         C96F      EPRVL3	EQU	0C96FH	; Wert bestimmen
  384         C96C      EPRVL4	EQU	0C96CH
  385         C986      DCHEX	EQU	0C986H	; Zeilennummer pruefen und in Hexzahl wandeln
  386         C987      DCHEX1	EQU	0C987H
  387         CB03      PRINT2	EQU	0CB03H
  388         CD36      SNALY6	EQU	0CD36H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  12
EQU48   INC

  389         CD3A      SNALY	EQU	0CD3AH
  390         CDE1      SNLY14	EQU	0CDE1H	; Syntax-Check '('
  391         CDF3      SNLY16	EQU	0CDF3H	; Syntax-Check ')'
  392         D0C0      POS1	EQU	0D0C0H
  393         D17B      STADTB	EQU	0D17BH
  394         D17E      SADTB1	EQU	0D17EH
  395         D1A9      SLEN3	EQU	0D1A9H
  396         D1E1      STROP	EQU	0D1E1H	; String-Arithmetik
  397         D2F2      STRMV1	EQU	0D2F2H
  398         D302      STRZS3	EQU	0D302H
  399         D330      LEN1	EQU	0D330H	; Laenge holen
  400         D33F      ASC1	EQU	0D33FH
  401         D421      ARGVL1	EQU	0D421H	; Parameter abholen
  402         D424      ARGVL2	EQU	0D424H
  403         D6AE      SGN1	EQU	0D6AEH
  404         D834      NUMKON	EQU	0D834H
  405         DC82      IOERR	EQU	0DC82H	; Sprung zu ?IO ERROR
  406         DCB2      CASS1	EQU	0DCB2H	; Dateiname aufbereiten
  407         DDC8      TESTCO	EQU	0DDC8H
  408         DDD5      CO	EQU	0DDD5H	; Ausgabe eines Zeichens (ASCII)
  409         DDE4      CI	EQU	0DDE4H	; Eingabe eines Zeichens (ASCII)
  410         DE25      OUTCHL	EQU	0DE25H	; Ausgabe zu Kanal
  411         DE5F      INCHNL	EQU	0DE5FH	; Eingabe von Kanal
  233                   
  234                   	.PHASE	0C000H
  235                   
  236                   	INCLUDE	CC48.INC	; ROM-C (C000-CFFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM C		**
    3                   ;**					**
    4                   ;**	Adresse:  C000h bis CFFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 05.01.2024	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0C000H
   10                   
   11                   ;
   12                   ; IRM-Defaulttabelle:						IRM-Adresse
   13                   ;
   14 C000  F4A3        KCTAB1:	DW	NOOP		; Hardcopy-Adresse		B799
   15 C002  00          WIN0:	DB	0		; WINNR				B79B
   16 C003  0000        	DW	0		; WINON				B79C
   17 C005  2028        	DW	2028H		; WINLG				B79E
   18 C007  0000        	DW	0		; CURSO				B7A0
   19 C009  80          	DB	80H		; STBT		(2-Monitor-Bit 7 gesetzt ab CAOS 4.8)
   20 C00A  39          	DB	39H		; COLOR				B7A3
   21 C00B  E286        	DW	SCRLPG		; WEND				B7A4
   22 C00D  EE00        WIN1:	DW	LARGE		; CCTL0				B7A6
   23 C00F  FE00        	DW	SMALL		; CCTL1				B7A8
   24 C011  EE00        	DW	LARGE		; CCTL2				B7AA
   25 C013  FE00        	DW	SMALL		; CCTL3				B7AC
   26 C015  01C4        	DW	STACK		; SYSP				B7AE
   27 C017  AA01        	DW	SUT_IRM		; SUTAB				B7B0
   28 C019  FCA9        	DW	CRTTAB		; CTAB				B7B2
   29 C01B  D3 88       	OUT	(PIOAD),A	; NCAOS				B7B4
   30 C01D  C3 F012     	JP	0F012H
   31 C020  F020        	DW	OUTT1		; OUTAB = CRT (0)		B7B9
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  13
CC48    INC

   32 C022  F017        	DW	INTT1		; INTAB = KBD (4)		B7BB
   33 C024  C3 F4A3     	JP	NOOP		; UOUT1				B7BD
   34 C027  C3 F4A3     	JP	NOOP		; UIN1				B7C0
   35 C02A  C3 F4A3     	JP	NOOP		; UOUT2				B7C3
   36 C02D  C3 F4A3     	JP	NOOP		; UIN2				B7C6
   37 C030  DC82        	DW	IOERR		; IOERR (BASIC)			B7C9
   38 C032  B200        	DW	VRAM0		; VRAM=0B200H (Bild 0)		B7CB
   39                   
   40 C034  47 0C       KCTAB2:	DB	47H,0CH		; CTC2 (blinken)		B7DB
   41 C036  EDC1        	DW	ESCTAB		; L3TAB (Tabelle der ESC-Routinen)
   42 C038  12          	DB	(ESCX-ESCTAB)/2	; L3SIZ (Anzahl der ESC-Funktionen)
   43 C039  05          	DB	5		; COUNT				B7E0
   44 C03A  00          	DB	0		; HCPZ				B7E1
   45 C03B  A801        	DW	0A801H		; INTV1				B7E2
   46 C03D  08          	DB	8		; INTV1L			B7E4
   47 C03E  A809        	DW	0A809H		; INTV2				B7E5
   48 C040  09          	DB	9		; INTV2L			B7E7
   49 C041  EE          	DB	11101110b	; HCPZ2 (8 Bit, Senden ein)	B7E8
   50 C042  C3 F4A3     	JP	NOOP		; OFILT				B7E9
   51 C045  25          	DB	'%'		; PROMPT			B7EC
   52 C046  FF          	DB	0FFH		; LINTYP			B7ED
   53 C047  EFD8        	DW	0EFD8H		; CUMUST			B7EE
   54 C049  AAC0        	DW	JOYIRM		; JOYTAB			B7F0
   55                   
   56                   ; Modulschaltzustaende (interne Module):			IRM-Adresse
   57                   
   58 C04B  03          KCTAB3:	DB	3	; RAM0					B800
   59 C04C  01          	DB	1	; IRM					B801
   60 C04D  00          	DB	0	; USER-ROMC				B802
   61 C04E  03          	DB	3	; RAM8					B803
   62 C04F  03          	DB	3	; RAM4					B804
   63 C050  00          	DB	0	; CAOSC	00H=duenner Zeichensatz		B805
   64 C051              KCTAB4:			; CAOSC 10H=fetter Zeichensatz
   65                   ;
   66                   ; Power-ON Initialisierung:
   67                   ;
   68 C051  F3          PWRONC:	DI
   69 C052  ED 5E       	IM	2
   70                   
   71                   ; 02.03.2019: vor Loeschen des Speichers die Ports initialisieren um sicherzu-
   72                   ; stellen, dass vor dem Speicherloeschen der RAM0 und der IRM eingeschaltet ist
   73 C054  31 01C4     	LD	SP,STACK	; dazu SP setzen um CALL zu ermoeglichen
   74 C057  21 D916     	LD	HL,IOTAB1	; Daten der Erstinitialisierung
   75 C05A  CD F553     	CALL	INIMEX		; komplett benutzen
   76                   
   77 C05D  01 0080     	LD	BC,0080H	; alle Module abschalten
   78 C060  ED 51       PWRC1:	OUT	(C),D		; D=0 vom vorhergehenden INIMEX
   79 C062  10 FC       	DJNZ	PWRC1
   80                   
   81 C064  31 C000     	LD	SP,0C000H	; Loeschbereich 0..BFFFh
   82 C067  01 6000     	LD	BC,6000H	; Anzahl = 60h * 256 Wort = C000h
   83 C06A  61          	LD	H,C
   84 C06B  69          	LD	L,C		; HL=0
   85 C06C  E5          PWRC2:	PUSH	HL		; schnelles Speicher loeschen (rueckwaerts)
   86 C06D  0D          	DEC	C
   87 C06E  20 FC       	JR	NZ,PWRC2
   88 C070  10 FA       	DJNZ	PWRC2
   89                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  14
CC48    INC

   90                   ; neu ab CAOS 4.8: Autostart INIT (z.B. bei USB) vorbereiten
   91                   ; (Die Aktivierung erfolgt erst bei der Initialisierung des Modul-Treibers)
   92 C072  21 EDE5     	LD	HL,INIT		; INIT-Kommando als Autostart
   93 C075  22 B7D1     	LD	(FTAST),HL	; vorbereiten fuer Abarbeitung
   94                   
   95                   ; 19.02.2023: alle Anwender-ISR bei POWER-ON mit IRET vorbelegen
   96                   ;	LD	HL,STACK	; ISR-Tabelle beginnt nach dem Stack
   97                   ;	LD	SP,HL		; System-Stack setzen
   98                   ;	LD	B,14		; Anzahl ISR-Routinen bis 01E0H
   99                   ;PWRC3:	LD	(HL),Low(IRET)
  100                   ;	INC	HL		; alle Anwender-ISR mit der Adrersse IRET
  101                   ;	LD	(HL),High(IRET)	; vorbelegen
  102                   ;	INC	HL
  103                   ;	DJNZ	PWRC3
  104                   
  105                   ; 05.03.2023: alle Anwender-ISR bei POWER-ON mit IRET vorbelegen (optimiert)
  106 C078  31 01E0     	LD	SP,STACK+28	; ISR-Tabelle liegt direkt oberhalb des Stak
  107 C07B  21 E59A     	LD	HL,IRET		; Dummy-ISR
  108 C07E  06 0E       	LD	B,14		; Anzahl ISR-Routinen von 01C4H bis 01E0H		
  109 C080  E5          PWRC3:	PUSH	HL		; alle Anwender-ISR mit der Adresse IRET 
  110 C081  10 FD       	DJNZ	PWRC3		; vorbelegen
  111                   
  112                   ; 08.10.2020: SYSI nach der Portinitialisierung aufrufen, sodass der KOUT-
  113                   ; Impuls zum Ruecksetzen der D005-Tastatur nur bei RESET kommt.
  114 C083  CD C0B2     	CALL	SYSI2		; Systeminitialisierung (Rueckkehr mit EI)
  115 C086  21 D93A     	LD	HL,JOYTBD	; vorbereitete Joystick-Tabelle
  116 C089  11 AAC0     	LD	DE,JOYIRM	; JOYTAB-Standardadresse im IRM
  117 C08C  01 000C     	LD	BC,12
  118 C08F  ED B0       	LDIR			; Tabelle in den IRM kopieren
  119                   
  120                   ; seit CAOS 4.1 werden an dieser Stelle die Fenster 0-9 in dieser Reihenfolge
  121                   ; mit den Standardwerten vorbelegt. Nebeneffekt: Beim Einschalten ist Fenster
  122                   ; Nr. 9 aktiv entgegen dem eigentlich erwarteten Fenster Nr. 0
  123                   ; -> Reihenfolge geaendert, nun ist Fenster 0 wieder aktiv wie bis CAOS 3.4
  124                   
  125 C091  3E 09       	LD	A,9		; Fenster Nr. 9
  126 C093  32 B79B     PWRC4:	LD	(WINNR),A	; Nr. eintragen
  127 C096  CD C604     	CALL	WCOPY		; Fenstervektorspeicher initialisieren
  128 C099  D6 01       	SUB	1		; fuer 10 Fenster (9-0)
  129 C09B  30 F6       	JR	NC,PWRC4
  130 C09D  CD F94C     	CALL	ESC3		; Anzeige Bild 0, Zugriff Bild 1
  131 C0A0  CD E0AA     	CALL	CLSX		; Bild 1: CLS
  132 C0A3  CD F942     	CALL	ESC1		; Anzeige+Zugriff Bild 0
  133                   
  134 C0A6  C3 F160     	JP	PWR4		; weiter im ROM-F
  135                   ;
  136                   ; System-Initialisierung (bei PWRON und RESET):
  137                   ;
  138 C0A9  F3          SYSI:	DI
  139 C0AA  ED 5E       	IM	2
  140 C0AC  21 D916     	LD	HL,IOTAB1	; PIO A,B und Ausgabe-Ports 84H/86H
  141 C0AF  CD F553     	CALL	INIMEX		; initialisieren
  142 C0B2  DD 21 01F0  SYSI2:	LD	IX,1F0H
  143 C0B6  DD 36 01 28 	LD	(IX+1),28H	; OUT84-Merker (Bild 0, RAM8 Ebene 0)
  144 C0BA  DD 36 04 E3 	LD	(IX+4),0E3H	; OUT86-Merker (RAM4 ein, USER-ROM Ebene 3)
  145 C0BE  DD 36 08 80 	LD	(IX+8),80H	; Defaultbelegung (Kassette, kein CAPS-Lock)
  146 C0C2  11 B799     	LD	DE,HCADR
  147 C0C5  21 C000     	LD	HL,KCTAB1	; Defaulttabelle
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  15
CC48    INC

  148 C0C8  01 0034     	LD	BC,KCTAB2-KCTAB1; fuer IRM-Arbeitszellen
  149 C0CB  ED B0       	LDIR			; 1. Teil in IRM kopieren
  150 C0CD  1E DB       	LD	E,LOW(CTCMD)	; (D war 0B7h)
  151 C0CF  0E 17       	LD	C,KCTAB3-KCTAB2	; (B war 0 vom vorherigen LDIR)
  152 C0D1  ED B0       	LDIR			; 2. Teil in IRM kopieren
  153 C0D3  14          	INC	D		; D=B8H
  154 C0D4  59          	LD	E,C		; E=00H
  155                   ;	LD	DE,MODST	; Modulsteuerbytespeicher B800H
  156 C0D5  3A B804     	LD	A,(MODST+4)	; RAM4 aktueller Schaltzustand
  157 C0D8  E6 04       	AND	4		; RAM4-Ebene herausloesen
  158 C0DA  0E 06       	LD	C,KCTAB4-KCTAB3	; (B war 0 vom vorherigen LDIR)
  159 C0DC  ED B0       	LDIR			; 3. Teil in IRM kopieren
  160 C0DE  21 B804     	LD	HL,MODST+4
  161 C0E1  B6          	OR	(HL)		; RAM4 bisherige Ebene wieder einbauen
  162 C0E2  77          	LD	(HL),A
  163                   
  164                   ; 08.08.2020: zusaetzlich fuer Cursor-Rettung bei Bildwechsel:
  165                   ; 20.05.2021: von PWRON zu RESET verlagert
  166                   
  167 C0E3  11 AADD     	LD	DE,WIN2		; Schattenspeicher
  168 C0E6  CD C5DE     	CALL	WINC2		; mit Standardwerten initialisieren
  169                   
  170                   ; CAOS 4.6 - SUTAB vom ROM in den IRM kopieren:
  171                   
  172 C0E9  11 AA00     	LD	DE,SUT_IRM-1	; SUTAB im IRM (beginnend mit SULEN)
  173 C0EC  21 D83B     	LD	HL,SUTB-1	; SUTAB im ROM
  174 C0EF  0E 9B       	LD	C,SUEND-SUTB+1	; Laenge (B=0 von CALL WINC2)
  175 C0F1  ED B0       	LDIR			; SUTAB zur Nutzung in den IRM kopieren
  176                   
  177 C0F3  3E 01       	LD	A,1		; Standardwert fuer IXH- und I-Register
  178 C0F5  CD C17F     	CALL	SIXC		; Initialisierung, ISR-Tabelle kopieren, EI
  179                   
  180                   ; Interrupt hier bereits freigegeben, damit Treiber-Initialisierung
  181                   ; Interrupts aktivieren kann (z.B. USB-Tastatur)?
  182                   
  183                   ; CAOS 4.6 - Device-Treibertabellen erzeugen
  184                   
  185 C0F8  11 A900     	LD	DE,DEVTAB	; Treibertabelle(n) im IRM aufbauen
  186                   ;	LD	A,8		; fuer 8 Treiber
  187 C0FB  21 D8D6     DINIT:	LD	HL,DRV0		; zunaechst den Kassettentreiber
  188 C0FE  01 0020     	LD	BC,32		; je 32 Byte (Groesse festgeschrieben)
  189 C101  ED B0       	LDIR			; kopieren
  190 C103  7B          	LD	A,E		; bis E=0 ist
  191 C104  B7          	OR	A		; alle 8 Treiber auf Kassette initialisieren
  192 C105  20 F4       	JR	NZ,DINIT
  193 C107  32 A900     	LD	(DEVTAB),A	; Tape-Treiber mit '0' aktivieren
  194 C10A  11 A920     	LD	DE,DEVTAB+32	; folgende Treiber als Nr. 1 eintragen
  195                   
  196                   ; Suche D004/D008 mit CAOS-Betriebsart (Treiber 1):
  197                   
  198 C10D  01 FC80     	LD	BC,0FC80H	; Modulsteckplatz FC
  199 C110  ED 78       	IN	A,(C)
  200 C112  FE A7       	CP	0A7H		; Floppy vorhanden?
  201 C114  20 1A       	JR	NZ,NODISK
  202 C116  3E 04       	LD	A,4		; nur Kopplung einschalten
  203 C118  32 B8FC     	LD	(MODST+0FCH),A	; in Modulsteuerbytespeicher eintragen
  204 C11B  ED 79       	OUT	(C),A		; und schalten
  205 C11D  01 B3F3     	LD	BC,UROK		; 0B3F3H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  16
CC48    INC

  206 C120  ED 78       	IN	A,(C)
  207 C122  FE 05       	CP	5		; CAOS-Betriebsart?
  208 C124  20 0A       	JR	NZ,NODISK
  209                   
  210                   ; 01.01.2022:
  211                   ; Falls eine alte Original-CAOS-Diskette benutzt wird, wird diese Speicherzelle
  212                   ; mit der CAOS-Versionsnummer nicht beschrieben und enthaelt den Inhalt vom
  213                   ; Urlader. Dieser fuehrt zu falschen Versionsmeldungen. Deshalb wird hier eine
  214                   ; Versionsnummer kleiner als 2.0 eingetragen - somit funktioniert die DEP-
  215                   ; Versionsabfrage zuverlaessiger.
  216 C126  01 83F1     	LD	BC,DEPVER	; DEP-Version
  217 C129  ED 79       	OUT	(C),A		; Version 0.5 setzen
  218                   
  219                   ;	LD	HL,DRV1		; Floppy-Treiber
  220 C12B  01 0020     	LD	BC,32
  221 C12E  ED B0       	LDIR			; in Treibertabelle kopieren
  222                   
  223                   ; Suche USB- bzw. GIDE-Modul mit Treiber:
  224                   ;	DE	zeigt auf DEVTAB wo naechster Treiber hin kommt
  225                   
  226 C130  01 0880     NODISK:	LD	BC,880H		; ab Steckplatz 8 suchen
  227                   	;LD	C,80H		; I/O-Adresse Modulsteuerung
  228 C133  ED 78       USB1:	IN	A,(C)		; Kennbyte lesen
  229 C135  FE FD       	CP	0FDH		; Kennung M052?
  230 C137  28 09       	JR	Z,USB2
  231 C139  FE F9       	CP	0F9h		; Kennung M064?
  232 C13B  28 05       	JR	Z,USB2
  233 C13D  04          USB4:	INC	B		; naechster Steckplatz
  234 C13E  20 F3       	JR	NZ,USB1
  235 C140  18 34       	JR	NOUSB		; Kein passendes Modul gefunden!
  236                   	;
  237 C142  C5          USB2:	PUSH	BC		; Steckplatz B merken
  238 C143  68          	LD	L,B
  239 C144  CD C377     	call	SLOT1		; Modul auf 4000h einblenden
  240                   ;	ld	hl,4000h
  241 C147  7E          	ld	a,(hl)		; ROM-Inhalt 1. Byte
  242 C148  23          	inc	hl
  243 C149  BE          	cp	(hl)		; ROM-Inhalt 2. Byte
  244 C14A  20 1A       	jr	nz,USB3		; Kennung 1+2 nicht identisch
  245 C14C  FE 46       	cp	46h		; Kennung Treiber korrekt? 
  246 C14E  20 16       	jr	nz,USB3		; Kennung falsch
  247 C150  23          	inc	hl		; SWITCH-AUS in Treibertabelle
  248 C151  7B          	ld	a,e
  249 C152  07          	rlca
  250 C153  07          	rlca
  251 C154  07          	rlca			; Nr. des naechsten Treibers
  252 C155  12          	ld	(de),a		; Treibernummer eintragen in DEVTAB+0
  253 C156  13          	inc	de
  254 C157  E3          	EX	(SP),HL		; H=Steckplatz
  255 C158  7C          	ld	a,H
  256 C159  12          	ld	(de),a		; Steckplatz eintragen in DEVTAB+1
  257 C15A  13          	inc	de
  258 C15B  E3          	EX	(SP),HL
  259 C15C  01 001E     	LD	BC,32-2
  260 C15F  ED B0       	LDIR			; restliche Treibertabelle aus ROM kopieren
  261 C161  21 FFE3     	ld	hl,-1Dh
  262 C164  19          	ADD	HL,DE		; zurueck zu SWITCH-EIN des Moduls
  263 C165  7E          	ld	A,(HL)		; SWITCH-EIN
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  17
CC48    INC

  264                   
  265 C166  C1          USB3:	POP	BC		; B = Steckplatz, C=80h
  266 C167  C5          	PUSH	BC
  267 C168  D5          	PUSH	DE		; Zeiger in DEVTAB retten
  268                   	; kein Befehl beeinflusst das Z-Flag !
  269 C169  CC ED48     	CALL	Z,JROM		; Treiber gefunden: INIT im Modul-ROM aufrufen
  270 C16C  CD C390     	CALL	SLOT0		; alle Modulzustaende regenerieren
  271 C16F  D1          	POP	DE		; DEVTAB
  272 C170  C1          	POP	BC		; B = Steckplatz, C=80h
  273 C171  7A          	LD	A,D
  274 C172  FE AA       	CP	1+High(DEVTAB)	; 0AAh
  275 C174  20 C7       	JR	NZ,USB4		; weitere Module suchen bis DEVTAB voll ist
  276 C176  3A A920     NOUSB:	LD	A,(DEVTAB+32)	; Treiber 1 vorhanden?
  277 C179  FE 01       	CP	1
  278 C17B  CC D5B9     	CALL	Z,SET_DD	; dann aktivieren!
  279 C17E  C9          	RET
  280                   ;
  281                   ; CAOS-UP zur Verlagerung des IX-Arbeitsbereiches
  282                   ; PE:	A	HW-Teil der IX-Arbeitszellen
  283                   ;	A=FFH	zusaetzlich DEVICE-Tabelle und SUTAB neu aufbauen
  284                   ;
  285 C17F  FE FF       SIXC:	CP	0FFH
  286 C181  CA C0A9     	JP	Z,SYSI		; grosse Initialisierung mit Device-Tabelle usw.
  287                   
  288                   ; 19.02.2023: kompletten IX-Bereich, einschliesslich der bisherigen alten
  289                   ; ISR-Tabelle mitnehmen zum neuen IX-Bereich
  290                   ; Vorteil: USB-Tastatur funktioniert nach SIXD weiter
  291 C184  F3          	DI
  292 C185  32 B7D7     	LD	(MIXIT),A	; neuer Wert fuer IXH- und I-Register
  293 C188  ED 47       	LD	I,A		; I-Register aktualisieren
  294 C18A  ED 5E       	IM	2
  295 C18C  DD E5       	PUSH	IX		; bisheriger IX-Bereich
  296 C18E  E1          	POP	HL
  297 C18F  2E C4       	LD	L,0C4H		; 01C4H = erste USER-ISR
  298 C191  01 0035     	LD	BC,01F9H-01C4H	; Alles im IX-Bereich von 01C4H bis 01F8H
  299 C194  57          	LD	D,A		; neuer Wert von IXH
  300 C195  5D          	LD	E,L		; DE = neue ISR-Tabelle
  301 C196  ED B0       	LDIR			; kompletten IX-Bereich incl. ISR mitnehmen
  302 C198  21 D946     	LD	HL,ISRTAB	; ISR-Tabelle fuer System-ISR im ROM
  303 C19B  1E E0       	LD	E,0E0H		; 01E0H = ISR fuer Joystick
  304 C19D  0E 10       	LD	C,IOTAB2-ISRTAB	; Interrupttabelle fuer 8 Interrupts
  305                   				; (B=0 vom vorherigen LDIR)
  306 C19F  ED B0       	LDIR			; kopieren aus dem ROM nach xxE0h bis xxF0h
  307                   ;	LD	H,(IX+1)
  308                   ;	LD	L,(IX+4)	; alte Merker mitnehmen
  309                   ;	LD	A,(IX+8)
  310 C1A1  D5          	PUSH	DE		; neuer Wert fuer IX = xxF0h
  311 C1A2  DD E1       	POP	IX
  312                   ;	LD	(IX+8),A
  313                   ;	LD	(IX+1),H	; mitgenommene Merker neu eintragen
  314                   ;	LD	(IX+4),L
  315 C1A4  DD 36 0E 29 	LD	(IX+14),LOW(KTAB) ; Tastaturtabelle
  316 C1A8  DD 36 0F FC 	LD	(IX+15),HIGH(KTAB)
  317 C1AC  DD 36 09 7F 	LD	(IX+9),7FH	; Standard-Prologbyte
  318                   ;	LD	HL,IOTAB2	; PIO A,B und CTC (IOTAB2 folgt auf ISRTAB)
  319 C1B0  CD F553     	CALL	INIMEX		; Ports neu initialisieren
  320 C1B3  21 ED76     	LD	HL,CENINI
  321 C1B6  CD F553     	CALL	INIMEX		; M021 initialisieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  18
CC48    INC

  322 C1B9  FB          	EI
  323 C1BA  C3 F541     	JP	KPUFF		; Kassettenpuffer (IX+5 und IX+6) definieren
  324                   
  325                   ; Systemcheck oder Modulkontrollanzeige (interne Module):
  326                   
  327 C1BD  2E FF       SYSTC:	LD	L,-1		; mit Steckplatz 0 beginnen, vorher aber ROM E
  328 C1BF  CD C284     	CALL	OSTR2
  329 C1C2  43 41 4F 53 	DB	'CAOSE',0
  330 C1C8  DB 88       	IN	A,(PIOAD)
  331 C1CA  E6 01       	AND	1		; CY=0, Z=?
  332 C1CC  18 3A       	JR	WONOF1
  333                   
  334 C1CE  3E 01       SYST0:	LD	A,1		; lesen
  335 C1D0  CD C3AF     	CALL	MODUC
  336 C1D3  CD D324     	CALL	LHD		; Anzeige Steckplatz, Kennbyte, Steuerbyte
  337                   
  338 C1D6  45          	LD	B,L		; Steckplatz
  339 C1D7  04          	INC	B		; +1 wegen folgendem DJNZ
  340 C1D8  10 12       	DJNZ	SYST1		; nach Steckplatz verzweigen
  341                   ; 0
  342 C1DA  CD F0B3     	CALL	OSTR
  343 C1DD  52 41 4D 30 	DB	'RAM0',0
  344 C1E2  DB 88       	IN	A,(PIOAD)
  345 C1E4  E6 0F       	AND	00001111b
  346 C1E6  FE 08       	CP	00001000b	; CY=NOT(Bit 3)
  347 C1E8  CB 4F       	BIT	1,A		; Schaltzustand
  348 C1EA  18 1C       	JR	WONOF1
  349                   ; 1
  350 C1EC  10 1C       SYST1:	DJNZ	SYST2
  351 C1EE  CD F0B3     	CALL	OSTR
  352 C1F1  42 49 4C 44 	DB	'BILD ',0
  353 C1F7  DD 7E 01    	LD	A,(IX+1)
  354 C1FA  E6 04       	AND	00000100b	; Zugriffs-Bit
  355 C1FC  0F          	RRCA		
  356 C1FD  0F          	RRCA
  357 C1FE  C6 30       	ADD	A,'0'
  358 C200  CD F3BA     	CALL	OCHR		; Bildnummer
  359 C203  3A B801     	LD	A,(MODST+1)
  360 C206  E6 01       	AND	1		; IRM on?
  361 C208  18 6F       WONOF1:	JR	SYST6
  362                   ; 2
  363 C20A  10 1C       SYST2:	DJNZ	SYST3
  364 C20C  CD F0B3     	CALL	OSTR
  365 C20F  55 53 45 52 	DB	'USER ',0
  366 C215  DD 7E 04    	LD	A,(IX+4)
  367 C218  07          	RLCA			; Bits 5,6
  368 C219  07          	RLCA
  369 C21A  07          	RLCA			; nach Bits 0,1
  370 C21B  E6 03       	AND	3
  371 C21D  EE 33       	XOR	'3'
  372 C21F  CD F3BA     	CALL	OCHR		; Ebene ausgeben
  373 C222  DB 88       	IN	A,(PIOAD)
  374 C224  E6 80       	AND	10000000b	; CY=0, Z=NOT(Bit 7)
  375 C226  18 51       	JR	SYST6
  376                   ; 3
  377 C228  10 1E       SYST3:	DJNZ	SYST4
  378 C22A  CD F0B3     	CALL	OSTR
  379 C22D  52 41 4D 38 	DB	'RAM8 ',0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  19
CC48    INC

  380 C233  DD 7E 01    	LD	A,(IX+1)
  381 C236  0F          	RRCA			; Bits 4,5,6,7
  382 C237  0F          	RRCA
  383 C238  0F          	RRCA
  384 C239  0F          	RRCA			; nach 0,1,2,3
  385                   ;	AND	0FH		; redundant: bereits in AHEX0
  386 C23A  D6 02       	SUB	2
  387 C23C  CD F3B2     	CALL	AHEX0		; Ebene ausgeben
  388 C23F  DB 89       	IN	A,(PIOBD)
  389 C241  CB 6F       	BIT	5,A		; Schaltzustand
  390 C243  07          	RLCA			; Schreibschutz (Bit 6)
  391 C244  07          	RLCA			; ins Carry-Flag rotieren
  392 C245  3F          	CCF			; und invertieren
  393 C246  18 31       syst7:	JR	SYST6
  394                   ; 4
  395 C248  10 21       SYST4:	DJNZ	SYST5
  396 C24A  CD F0B3     	CALL	OSTR
  397 C24D  52 41 4D 34 	DB	'RAM4',0
  398 C252  CD F3A1     	CALL	SPACE
  399 C255  3A B804     	LD	A,(MODST+4)
  400 C258  0F          	RRCA
  401 C259  0F          	RRCA			; Bit 2
  402 C25A  E6 01       	AND	1
  403 C25C  C6 30       	ADD	A,'0'
  404 C25E  CD F3BA     	CALL	OCHR		; Ebene 0/1
  405 C261  DD 7E 04    	LD	A,(IX+4)
  406 C264  CB 47       	BIT	0,A		; Schaltzustand
  407 C266  0F          	RRCA			; Schreibschutz (Bit 1)
  408 C267  0F          	RRCA			; ins Carry-Flag rotieren
  409 C268  3F          	CCF			; und invertieren
  410 C269  18 0E       	JR	SYST6
  411                   ; 5
  412 C26B  CD F0B3     SYST5:	CALL	OSTR
  413 C26E  43 41 4F 53 	DB	'CAOSC',0
  414 C274  3A B805     	LD	A,(MODST+5)
  415 C277  E6 01       	AND	1
  416 C279  CD D303     SYST6:	CALL	WONOF
  417 C27C  2C          	INC	L		; Steckplatz+1
  418 C27D  3E 06       	LD	A,6
  419 C27F  BD          	CP	L
  420 C280  C2 C1CE     	JP	NZ,SYST0	; bei 06 abbrechen
  421 C283  C9          	RET
  422                   
  423 C284  CD F0B3     OSTR2:	CALL	OSTR
  424 C287  2D 2D 20 2D 	DB	'-- -- -- ',0
  425 C291  C3 F0B3     	JP	OSTR
  426                   
  427                   ; Modulkontrollanzeige (externe Module):
  428                   
  429 C294  AF          MODULC:	XOR	A
  430 C295  D3 91       	OUT	(91h),A		; M008/M021 PIO-B Daten
  431 C297  DB 91       	IN	A,(91h)
  432 C299  A7          	AND	A		; PIO vorhanden?
  433 C29A  20 0D       	JR	NZ,MODC1	; nein, nicht anzeigen
  434 C29C  CD C284     	CALL	OSTR2
  435 C29F  4A 4F 59 2F 	DB	'JOY/CEN',CR,LF,0
  436 C2A9  2E 07       MODC1:	LD	L,7		; ab Platz 7
  437 C2AB  E5          MODC2:	PUSH	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  20
CC48    INC

  438 C2AC  3E 01       	LD	A,1		; lesen
  439 C2AE  CD C3AF     	CALL	MODUC
  440 C2B1  7C          	LD	A,H
  441 C2B2  3C          	INC	A		; Kennbyte=FFh?
  442 C2B3  28 36       	JR	Z,MODC8		; kein Modul
  443                   
  444 C2B5  CD D324     	CALL	LHD		; Anzeige Steckplatz, Kennbyte, Steuerbyte
  445                   
  446 C2B8  4C          	LD	C,H
  447 C2B9  7C          	ld	a,h
  448 C2BA  FE F3       	cp	0f3h		; M062?
  449 C2BC  28 32       	jr	z,M062		; Test ob RAM- oder ROM-Version
  450 C2BE  FE FB       	cp	0fbh		; Software-Modul?
  451 C2C0  28 45       	jr	z,slot		; Inhalt analysieren!
  452 C2C2  FE FD       	cp	0fdh		; M052?
  453 C2C4  CA C32A     	jp	z,M052		; Test, welche Variante vorliegt
  454 C2C7  21 CFC7     	ld	hl,muser
  455 C2CA  FE C0       	cp	0c0h
  456 C2CC  38 04       	jr	c,MODC3		; kleiner als C0
  457 C2CE  FE D8       	cp	0d8h
  458 C2D0  38 13       	jr	c,MODC6		; USER-Modul von C0-D7
  459 C2D2  21 CE77     MODC3:	LD	HL,MTAB
  460 C2D5  7E          MODC4:	LD	A,(HL)
  461 C2D6  23          	INC	HL
  462 C2D7  FE FF       	CP	0FFH		; Tabelle durchsucht?
  463 C2D9  28 0A       	JR	Z,MODC6
  464 C2DB  B9          	CP	C		; Strukturbyte in Tabelle MTAB?
  465 C2DC  28 07       	JR	Z,MODC6		; Text gefunden
  466 C2DE  7E          MODC5:	LD	A,(HL)
  467 C2DF  23          	INC	HL
  468 C2E0  A7          	AND	A		; Stringende?
  469 C2E1  20 FB       	JR	NZ,MODC5
  470 C2E3  18 F0       	JR	MODC4
  471                   	;
  472 C2E5  CD F8EA     MODC6:	CALL	ZKOUT		; Modulname
  473 C2E8  CD F4C3     MODC7:	CALL	CRLF
  474 C2EB  E1          MODC8:	POP	HL
  475 C2EC  2C          	INC	L		; Steckplatz+1
  476 C2ED  20 BC       	JR	NZ,MODC2	; bis FFh
  477 C2EF  C9          	RET
  478                   ;
  479                   ; Test, ob M062 als 8*8K ROM oder 4*8K RAM vorliegt.
  480                   ; Zur Unterscheidung wird ein RAM-Test durchgefuehrt
  481                   ;
  482                   ; PE:	L=Steckplatz	H=Kennbyte = 0FBH
  483                   ;
  484 C2F0  CD C377     M062:	call	SLOT1		; Modul auf 4000h einblenden
  485                   ;	ld	hl,4000h	; RAM-Inhalt lesen
  486 C2F3  7E          	ld	a,(hl)
  487 C2F4  34          	inc	(hl)		; Inhalt veraendern
  488 C2F5  BE          	cp	(hl)		; RAM oder ROM
  489 C2F6  77          	ld	(hl),a		; regenerieren
  490 C2F7  21 CFDD     	ld	hl,M062B	; ROM
  491 C2FA  28 03       	jr	z,SLOT2
  492 C2FC  21 CFD4     	ld	hl,M062A	; RAM
  493 C2FF  CD F8EA     SLOT2:	call	zkout		; Testergebnis anzeigen
  494 C302  CD C390     SLOT3:	call	SLOT0		; Modulzustaende nach Tabelle regenerieren
  495 C305  18 E1       	jr	MODC7		; weiter suchen auf naechstem Steckplatz
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  21
CC48    INC

  496                   ;
  497                   ; Suche nach Inhalt der Softwaremodule M012, M026, M027 usw.
  498                   ; Es wird das erste Menwort gesucht, und dieses als Name angezeigt!
  499                   ; PE:	L=Steckplatz	H=Kennbyte = 0FBH
  500                   ;
  501 C307  CD C377     slot:	call	SLOT1		; Modul auf 4000h einblenden
  502                   ;	ld	hl,4000h	; Suchbereich Beginn
  503 C30A  11 CFC6     	ld	de,MTAB2	; Vergleichskette 0-String
  504 C30D  06 20       	ld	b,20h		; 8K durchsuchen
  505                   ;	ld	a,07Fh		; CAOS-Prologbyte fuer Menuewort-Suche
  506 C30F  CD F335     	call	zs0		; erstes Menuewort suchen
  507 C312  38 05       	jr	c,SLOT4		; Menuewort gefunden
  508 C314  21 CFBE     	ld	hl,mtab1	; ansonsten als "Software" anzeigen
  509 C317  18 07       	jr	SLOT6
  510                   	;
  511 C319  2B          SLOT4:	dec	hl
  512 C31A  7E          	ld	a,(hl)
  513 C31B  FE 7F       	cp	7fh		; zurueck bis zu Prologbyte
  514 C31D  20 FA       	jr	nz,SLOT4
  515 C31F  23          SLOT5:	inc	hl
  516 C320  7E          SLOT6:	ld	a,(hl)
  517 C321  FE 20       	cp	20h		; Epilog?
  518 C323  38 DD       	jr	c,SLOT3		; ja
  519 C325  CD F3BA     	call	ochr		; Menuewort anzeigen
  520 C328  18 F5       	jr	SLOT5
  521                   ;
  522                   ; Testen welche Variante des M052 vorliegt. Dazu werden die Datenports von der
  523                   ; Netzwerk-PIO gelesen und falls ein Wert ungleich FFh kommt, von einem
  524                   ; Kombimodul mit USB+Netzwerk ausgegangen.
  525                   ; M052-Portadressen: 28h..2Bh Netzwerk-PIO / 2Ch..2Fh USB-PIO
  526                   ;
  527                   ; PE:	L=Steckplatz	H=Kennbyte = 0FDH
  528                   
  529 C32A  26 B8       M052:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  530 C32C  7E          	ld	a,(hl)		; aktueller Zustand
  531 C32D  CB D7       	set	2,a		; PIO's ein
  532 C32F  45          	ld	b,l		; Steckplatz
  533 C330  0E 80       	ld	c,80h
  534 C332  ED 79       	out	(c),a		; PIO's des M052 einschalten
  535 C334  21 CFCC     	ld	hl,M052A
  536 C337  DB 28       	in	a,(28h)		; M052 PIO NET Daten A
  537 C339  3C          	inc	a
  538 C33A  20 08       	jr	nz,M052N1	; Netzwerk-PIO gefunden
  539 C33C  DB 29       	in	a,(29h)		; M052 PIO NET Daten B
  540 C33E  3C          	inc	a
  541 C33F  20 03       	jr	nz,M052N1	; Netzwerk-PIO gefunden
  542 C341  21 CFD0     	ld	hl,M052B
  543 C344  18 B9       M052N1:	JR	SLOT2		; Modulname anzeigen, Schaltzustaende regen.
  544                   
  545                   ; Module lesen und schalten (Menuewort):
  546                   
  547 C346  53          SWIC:	LD	D,E		; Steuerbyte
  548 C347  FE 01       	CP	1
  549 C349  F5          	PUSH	AF		; Z=1, wenn nur lesen
  550 C34A  28 0D       	JR	Z,SWI3		; nur lesen
  551 C34C  2D          	DEC	L
  552 C34D  20 09       	JR	NZ,SWI2		; nicht IRM
  553 C34F  2C          	INC	L
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  22
CC48    INC

  554 C350  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  555 C352  5E          	LD	E,(HL)		; altes Steuerbyte lesen
  556 C353  72          	LD	(HL),D		; neues Steuerbyte eintragen
  557 C354  26 FF       	LD	H,0FFH		; Kennung internes Modul
  558 C356  18 05       	JR	SWI4
  559                   	;
  560 C358  2C          SWI2:	INC	L
  561 C359  CD C3AF     SWI3:	CALL	MODUC		; lesen/schalten
  562 C35C  5F          	LD	E,A
  563 C35D  CD F39D     SWI4:	CALL	ALSPC		; Steckplatz L anzeigen
  564 C360  7C          	LD	A,H
  565 C361  CD F39E     	CALL	AHSPC		; Kennbyte Modul
  566 C364  7B          	LD	A,E
  567 C365  CD F3A9     	CALL	AHEX		; Steuerbyte alt
  568 C368  F1          	POP	AF
  569 C369  28 09       	JR	Z,SWI5		; das war nur lesen
  570 C36B  3E 09       	LD	A,9
  571 C36D  CD E391     	CALL	CSTBT		; Pfeil nach rechts anzeigen
  572 C370  7A          	LD	A,D
  573 C371  CD F3A9     	CALL	AHEX		; Steuerbyte neu
  574 C374  C3 F4C3     SWI5:	JP	CRLF
  575                   ;
  576                   ; Modul auf Adresse 4000h einblenden
  577                   ; (fuer M012, M026, M027, M052 und M062)
  578                   ; PE:	L =	Steckplatz
  579                   ; PA:	HL = 4000h fuer folgende Operationen
  580                   ; VR:	AF, BC, HL
  581                   ;
  582 C377  01 0880     SLOT1:	LD	BC,0880h	; alle Module von 8 bis L abschalten
  583 C37A  AF          slo1:	XOR	A		; Modul abschalten
  584 C37B  ED 79       	OUT	(C),A		; war vorher ED 71 = OUT (C),0
  585 C37D  04          	inc	b		; naechster Steckplatz
  586 C37E  7D          	ld	a,l		; Steckplatz, der zu untersuchen ist
  587 C37F  B8          	cp	b		; Steckplatz erreicht?
  588 C380  20 F8       	jr	nz,slo1
  589 C382  3E 41       	ld	a,41h		; Modul auf 4000h einschalten
  590 C384  ED 79       	out	(c),a
  591                   	RESIXA	0,4		; RES 0,(IX+4),A
    1 C386  DD CB 04    	 DB	0DDh,0CBh,4
    2 C389  87          	 DB	0 SHL 3 OR 10000111b
  592 C38A  D3 86       	OUT	(PORT2),A	; RAM4 aus!
  593 C38C  21 4000     	LD	HL,4000h	; Uebergabe der zu untersuchenden Adresse
  594 C38F  C9          	RET
  595                   ;
  596                   ; Modulzustand regenerieren laut Modulsteuerbytetabelle
  597                   ; (erforderlich falls Modulsuche Aenderungen gemacht hat)
  598                   ; PE:	-
  599                   ; PA:	-
  600                   ; VR:	AF, HL, D
  601                   ;
  602 C390  21 B804     SLOT0:	ld	hl,modst+4	; beginnend ab RAM4
  603 C393  56          slo0:	ld	d,(hl)		; gespeicherter Schaltzustand
  604 C394  E5          	push	hl
  605                   ;	ld	a,2		; schalten
  606 C395  CD C3AD     	call	MODUC2		; Schaltzustaende nach Tabelle regenerieren
  607 C398  E1          	pop	hl
  608 C399  2C          	inc	l		; naechster Steckplatz
  609 C39A  20 F7       	jr	nz,slo0		; bis FFh
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  23
CC48    INC

  610 C39C  C9          	ret
  611                   ;
  612                   ; V.24-Modul suchen und einschalten:
  613                   ;
  614                   ; PE:	B	Steckplatz ab dem gesucht wird
  615                   ; PA:	B	Steckplatz des Moduls
  616                   ;	CY = 1	kein M003 vorhanden
  617                   ; VR:	AF, BC, D, HL
  618                   ;
  619 C39D  0E 80       V24SU:	LD	C,80h
  620 C39F  ED 78       V24S1:	IN	A,(C)
  621 C3A1  FE EE       	CP	0EEH		; M003?
  622 C3A3  28 05       	JR	Z,V24S2		; ja
  623 C3A5  04          	INC	B
  624 C3A6  20 F7       	JR	NZ,V24S1
  625 C3A8  37          	SCF			; nicht gefunden
  626 C3A9  C9          	RET
  627                   	;
  628 C3AA  68          V24S2:	LD	L,B		; Steckplatz
  629 C3AB  16 01       MODUC1:	LD	D,1		; EIN
  630 C3AD  3E 02       MODUC2:	LD	A,2		; Schalten
  631                   
  632                   ; Module schalten:
  633                   ;
  634                   ; PE:	A=1	Modultyp lesen (Register L)
  635                   ;	A=2	Modul schalten (Register D und L)
  636                   ;	L	Modulsteckplatz
  637                   ;	D	Modulsteuerbyte neu
  638                   ; PA:	H	Modultyp (Strukturbyte)
  639                   ;	D	Modulsteuerbyte neu
  640                   ;	A	Modulsteuerbyte alt
  641                   ; VR:	AF, D, H, BC
  642                   
  643 C3AF  26 B8       MODUC:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  644 C3B1  0E 80       	LD	C,80H		; I/O-Adresse
  645 C3B3  45          	LD	B,L		; Steckplatz
  646 C3B4  FE 02       	CP	2		; 2 Parameter angegeben?
  647 C3B6  7E          	LD	A,(HL)		; urspruenglicher Schaltzustand
  648 C3B7  30 04       	JR	NC,MODU1	; Module schalten
  649 C3B9  56          	LD	D,(HL)		; Schaltzustand aus Steuerbytespeicher lesen
  650 C3BA  ED 60       RSTRB:	IN	H,(C)		; Strukturbyte aus Modul lesen
  651 C3BC  C9          	RET
  652                   
  653                   	;Modul schalten
  654 C3BD  F5          MODU1:	PUSH	AF		; alter Zustand
  655 C3BE  72          	LD	(HL),D		; neues Steuerbyte eintragen
  656 C3BF  67          	LD	H,A		; fuer 2. RAM4
  657 C3C0  7D          	LD	A,L
  658 C3C1  FE 06       	CP	6		; interne Module?
  659 C3C3  38 05       	JR	C,MODU2
  660 C3C5  ED 51       	OUT	(C),D		; Steuerbyte an Modul senden
  661 C3C7  F1          	POP	AF		; urspruenglicher Schaltzustand
  662 C3C8  18 F0       	JR	RSTRB		; und noch das Strukturbyte lesen
  663                   
  664                   	;interne Module
  665 C3CA  04          MODU2:	INC	B		; Steckplatz
  666 C3CB  F3          	DI			; damit PIO nicht von einer ISR geaendert wird
  667 C3CC  DB 88       	IN	A,(PIOAD)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  24
CC48    INC

  668 C3CE  10 0D       	DJNZ	MODU3		; 0: RAM0?
  669 C3D0  E6 F5       	AND	11110101b
  670 C3D2  67          	LD	H,A
  671 C3D3  7A          	LD	A,D
  672 C3D4  0F          	RRCA			; Bits 0,1 auf 7,0 rotieren
  673 C3D5  E6 81       	AND	10000001b	; CY = 0
  674 C3D7  17          	RLA			; 0 einfuegen, CY = Bit 7
  675 C3D8  17          	RLA			; Bit 0 = CY
  676 C3D9  07          	RLCA			; auf Bits 1,3 rotieren
  677 C3DA  B4          	OR	H
  678 C3DB  18 23       	JR	OUT88
  679                   
  680 C3DD  10 0A       MODU3:	DJNZ	MODU4		; 1: IRM?
  681 C3DF  E6 FB       	AND	11111011b
  682 C3E1  CB 42       	BIT	0,D
  683 C3E3  28 1B       	JR	Z,OUT88
  684 C3E5  F6 04       	OR	00000100b
  685 C3E7  18 17       	JR	OUT88
  686                   
  687 C3E9  10 19       MODU4:	DJNZ	MODU5		; 2: USER-ROM?
  688 C3EB  7A          	LD	A,D
  689 C3EC  2F          	CPL			; negieren
  690 C3ED  07          	RLCA			; Bits 4..5 auf 5..6 rotieren
  691 C3EE  E6 60       	AND	01100000b	; ausfiltern (2 Ebenen)
  692 C3F0  67          	LD	H,A
  693                   ;	DI
  694 C3F1  DD 7E 04    	LD	A,(IX+4)
  695 C3F4  E6 9F       	AND	10011111b
  696 C3F6  B4          	OR	H		; einbauen
  697 C3F7  CD E2A3     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  698                   ;	EI
  699 C3FA  7A          	LD	A,D
  700 C3FB  0F          	RRCA			; CY = Bit 0
  701 C3FC  DB 88       	IN	A,(PIOAD)
  702 C3FE  17          	RLA			; als Bit 0 einschieben
  703 C3FF  0F          	RRCA			; und auf Bit 7 rotieren
  704 C400  D3 88       OUT88:	OUT	(PIOAD),A
  705 C402  18 21       	JR	STBFF
  706                   
  707 C404  10 24       MODU5:	DJNZ	MODU6		; 3: RAM8?
  708 C406  3E 03       	LD	A,00000011b	; on/off und Schreibschutz aus Steuerbyte
  709 C408  A2          	AND	D
  710 C409  0F          	RRCA			; Bits 0..1 auf 5..6 rotieren
  711 C40A  0F          	RRCA
  712 C40B  0F          	RRCA
  713 C40C  67          	LD	H,A		; in H merken
  714                   ;	DI
  715 C40D  DB 89       	IN	A,(PIOBD)
  716 C40F  E6 9F       	AND	10011111b
  717 C411  B4          	OR	H		; on/off und Schreibschutz neu einstellen
  718 C412  D3 89       	OUT	(PIOBD),A
  719                   ;	EI
  720 C414  7A          	LD	A,D
  721 C415  07          	RLCA			; Bits 2..5 auf 4..7 rotieren
  722 C416  07          	RLCA
  723 C417  C6 20       	ADD	A,20h		; Segment-Verschiebung
  724 C419  E6 F0       	AND	0F0h		; nur Bit 4-7 benutzen
  725 C41B  67          	LD	H,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  25
CC48    INC

  726                   ;	DI
  727 C41C  DD 7E 01    	LD	A,(IX+1)
  728 C41F  E6 0F       	AND	0Fh		; Bit 4-7 ruecksetzen
  729 C421  B4          	OR	H		; RAM8-Segment gemaess Steuerbyte einbauen
  730 C422  CD F984     	CALL	OUT84		; (IX+1) und PORT1 einstellen
  731 C425  FB          STBFF:	EI
  732 C426  F1          	POP	AF		; urspruenglicher Zustand
  733 C427  26 FF       	LD	H,0FFh		; internes Modul melden
  734 C429  C9          	RET
  735                   
  736         0001      IF CAOS2
  737 C42A  10 51       MODU6:	DJNZ	MODU7		; 5=CAOSC
  738                   else
  740                   endif
  741 C42C  7A          	LD	A,D		; 4=RAM4
  742 C42D  AC          	XOR	H		; Vergleich Steuerbyte alt/neu
  743 C42E  E6 04       	AND	4		; Aenderung der Ebene?
  744                   ;	DI
  745 C430  28 3F       	JR	Z,RAM41		; nein
  746 C432  DD 7E 04    	LD	A,(IX+4)
  747 C435  F6 03       	OR	3
  748 C437  D3 86       	OUT	(PORT2),A	; RAM4 on
  749 C439  D5          	PUSH	DE
  750 C43A  E5          	PUSH	HL
  751 C43B  DB 88       	IN	A,(PIOAD)
  752 C43D  F5          	PUSH	AF
  753 C43E  CB 87       	RES	0,A
  754                   ; dieser Datenaustausch muss im DI laufen, da der CAOS-ROM E aus ist!
  755 C440  D3 88       	OUT	(PIOAD),A	; CAOSE off
  756 C442  DD 7E 01    	LD	A,(IX+1)
  757 C445  F5          	PUSH	AF
  758 C446  E6 F9       	AND	11111001b
  759 C448  2E 03       	LD	L,3		; 3 IRM-Ebenen
  760 C44A  01 1000     	LD	BC,1000H	; 800H frei!
  761 C44D  11 4000     	LD	DE,4000H
  762 C450  C6 02       R4IS:	ADD	A,2
  763 C452  D3 84       	OUT	(PORT1),A	; IRM-Ebene
  764 C454  67          	LD	H,A
  765 C455  E5          	PUSH	HL
  766 C456  21 A800     	LD	HL,0A800H
  767 C459  1A          R4MV:	LD	A,(DE)
  768 C45A  ED A0       	LDI
  769 C45C  2B          	DEC	HL
  770 C45D  77          	LD	(HL),A
  771 C45E  23          	INC	HL
  772 C45F  EA C459     	JP	PE,R4MV
  773 C462  E1          	POP	HL
  774 C463  7C          	LD	A,H
  775 C464  06 18       	LD	B,18H		; jetzt 1800H!
  776 C466  2D          	DEC	L
  777 C467  20 E7       	JR	NZ,R4IS
  778 C469  F1          	POP	AF
  779 C46A  D3 84       	OUT	(PORT1),A	; IRM wie zuvor
  780 C46C  F1          	POP	AF
  781 C46D  D3 88       	OUT	(PIOAD),A	; CAOSE on
  782                   ; ab hier koennte wieder EI eingestellt werden, CAOS-ROM E ist wieder ein
  783 C46F  E1          	POP	HL
  784 C470  D1          	POP	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  26
CC48    INC

  785 C471  DD 7E 04    RAM41:	LD	A,(IX+4)
  786 C474  AA          	XOR	D
  787 C475  E6 FC       	AND	11111100b	; Bits 0..1: a = (0 XOR d) = d
  788 C477  AA          RAM42:	XOR	D		; Bits 2..7: a = (a XOR d) XOR d
  789 C478  CD E2A3     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  790 C47B  18 A8       	JR	STBFF
  791         0001      if CAOS2
  792 C47D  DD 7E 04    MODU7:	LD	A,(IX+4)
  793 C480  AA          	XOR	D
  794 C481  E6 EF       	AND	11101111b	; Bit 4 schaltet ROM-Ebene (Zeichensatz) um
  795 C483  18 F2       	JR	RAM42
  796                   endif
  797                   
  798                   ; F-Taste belegen:
  799                   
  800 C485  21 B900     KEYC:	LD	HL,FTASTE	; 0B900H
  801 C488  A7          	AND	A
  802 C489  20 07       	JR	NZ,KEY0
  803 C48B  06 9C       	LD	B,9CH
  804 C48D  77          KEYCL:	LD	(HL),A		; loeschen
  805 C48E  2C          	INC	L
  806 C48F  10 FC       	DJNZ	KEYCL
  807 C491  C9          	RET
  808                   	;
  809 C492  FE 10       KEY0:	CP	15+1
  810 C494  D0          	RET	NC		; nur F1 bis FF
  811 C495  47          	LD	B,A
  812 C496  F6 F0       	OR	0F0H
  813 C498  4F          	LD	C,A
  814 C499  7E          KEY1:	LD	A,(HL)		; B Dummys auszaehlen
  815 C49A  2C          	INC	L
  816 C49B  C8          	RET	Z
  817 C49C  A7          	AND	A
  818 C49D  20 FA       	JR	NZ,KEY1
  819 C49F  10 F8       	DJNZ	KEY1
  820 C4A1  7D          	LD	A,L
  821 C4A2  FE 9C       	CP	9CH
  822 C4A4  D0          	RET	NC
  823 C4A5  ED 5B B7A0  	LD	DE,(CURSO)
  824 C4A9  CD C562     	CALL	KEYDI		; praesentieren
  825 C4AC  CD F3D4     KEY2:	CALL	INTB
  826 C4AF  FE 13       	CP	13H
  827 C4B1  20 03       	JR	NZ,KEY3
  828 C4B3  04          	INC	B		; Umschaltung
  829 C4B4  18 F6       	JR	KEY2
  830                   	;
  831 C4B6  CB 40       KEY3:	BIT	0,B
  832 C4B8  28 0D       	JR	Z,KEY4		; interpretieren
  833 C4BA  FE 03       	CP	3
  834 C4BC  28 70       	JR	Z,KEY12		; BRK=Abbruch
  835 C4BE  FE 0D       	CP	CR
  836 C4C0  28 0A       	JR	Z,KEY5		; Enter=belegen
  837 C4C2  CD F3BA     	CALL	OCHR
  838 C4C5  18 E5       	JR	KEY2
  839                   	;
  840 C4C7  CD E391     KEY4:	CALL	CSTBT
  841 C4CA  18 E0       	JR	KEY2
  842                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  27
CC48    INC

  843 C4CC  E5          KEY5:	PUSH	HL		; Pos. in Puffer
  844 C4CD  CD E087     	CALL	DABR
  845 C4D0  EB          	EX	DE,HL
  846 C4D1  CD F4CA     	CALL	RHEX		; Fn lesen
  847 C4D4  E1          	POP	HL
  848 C4D5  38 06       	JR	C,KERR		; Formatfehler
  849 C4D7  3A B797     	LD	A,(NUMVX)
  850 C4DA  B9          	CP	C		; geaendert!
  851 C4DB  28 06       	JR	Z,KEY6
  852 C4DD  CD F4C3     KERR:	CALL	CRLF
  853 C4E0  C3 F4B9     	JP	ERRM
  854                   	;
  855 C4E3  13          KEY6:	INC	DE
  856 C4E4  13          	INC	DE
  857 C4E5  06 9B       	LD	B,9BH
  858 C4E7  2F          	CPL
  859 C4E8  A7          	AND	A
  860 C4E9  28 21       	JR	Z,KEY8		; KEY F
  861 C4EB  3C          	INC	A
  862 C4EC  47          	LD	B,A
  863 C4ED  4D          	LD	C,L
  864 C4EE  7E          KEY7:	LD	A,(HL)
  865 C4EF  2C          	INC	L
  866 C4F0  28 EB       	JR	Z,KERR		; Puffer voll!
  867 C4F2  A7          	AND	A
  868 C4F3  20 F9       	JR	NZ,KEY7
  869 C4F5  10 F7       	DJNZ	KEY7		; Ende suchen
  870 C4F7  2D          	DEC	L
  871 C4F8  7D          	LD	A,L
  872 C4F9  FE 9C       	CP	9CH
  873 C4FB  30 E0       	JR	NC,KERR		; Puffer voll!
  874 C4FD  44          	LD	B,H
  875 C4FE  C5          	PUSH	BC
  876 C4FF  91          	SUB	C
  877 C500  4F          	LD	C,A
  878 C501  06 00       	LD	B,0
  879 C503  D5          	PUSH	DE
  880 C504  11 B99B     	LD	DE,0B99BH
  881 C507  ED B8       	LDDR			; Rest hinter
  882 C509  43          	LD	B,E
  883 C50A  D1          	POP	DE
  884 C50B  E1          	POP	HL
  885 C50C  4F          KEY8:	LD	C,A
  886 C50D  2D          KEY9:	DEC	L
  887 C50E  7E          	LD	A,(HL)
  888 C50F  A7          	AND	A
  889 C510  20 FB       	JR	NZ,KEY9		; zurueck bis 0
  890 C512  2C          KEY10:	INC	L
  891 C513  1A          	LD	A,(DE)
  892 C514  13          	INC	DE
  893 C515  77          	LD	(HL),A		; belegen
  894 C516  B7          	OR	A
  895 C517  28 08       	JR	Z,KEY11
  896 C519  78          	LD	A,B
  897 C51A  95          	SUB	L
  898 C51B  20 F5       	JR	NZ,KEY10
  899 C51D  36 00       	LD	(HL),0
  900 C51F  18 BC       	JR	KERR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  28
CC48    INC

  901                   	;
  902 C521  79          KEY11:	LD	A,C
  903 C522  A7          	AND	A
  904 C523  28 09       	JR	Z,KEY12		; KEY F
  905 C525  04          	INC	B
  906 C526  2C          	INC	L
  907 C527  5D          	LD	E,L
  908 C528  54          	LD	D,H
  909 C529  68          	LD	L,B
  910 C52A  06 00       	LD	B,0
  911 C52C  ED B0       	LDIR			; Rest nach vorn
  912 C52E  C3 F4C3     KEY12:	JP	CRLF
  913                   
  914                   ; Anzeige belegter F-Tasten:
  915                   
  916 C531  21 B901     KEYLIC:	LD	HL,FTASTE+1
  917 C534  01 00F1     	LD	BC,0F1H
  918 C537  7E          KEYLC1:	LD	A,(HL)
  919 C538  A7          	AND	A
  920 C539  28 07       	JR	Z,KEYLC2
  921 C53B  CD C562     	CALL	KEYDI		; Belegung
  922 C53E  CD F4C3     	CALL	CRLF
  923 C541  04          	INC	B		; Zaehler
  924 C542  2C          KEYLC2:	INC	L
  925 C543  7D          	LD	A,L
  926 C544  FE 9C       	CP	9CH
  927 C546  30 03       	JR	NC,KEYLC3
  928 C548  0C          	INC	C
  929 C549  20 EC       	JR	NZ,KEYLC1	; F1 bis FF
  930 C54B  04          KEYLC3:	INC	B
  931 C54C  05          	DEC	B
  932 C54D  C0          	RET	NZ
  933 C54E  CD F0B3     	CALL	OSTR
  934 C551  46 2D 54 61 	DB	'F-Tasten leer'
  935 C55E  0D 0A 00    	DB	CR,LF,0
  936 C561  C9          	RET
  937                   
  938 C562  3E 02       KEYDI:	LD	A,2
  939 C564  CD F3BA     	CALL	OCHR		; Zeile loeschen
  940 C567  79          	LD	A,C
  941 C568  CD F0B0     	CALL	AHOSTR		; Fn
  942 C56B  20 3A 00    	DB	' :',0
  943 C56E  7E          KEYD1:	LD	A,(HL)
  944 C56F  B7          	OR	A
  945 C570  C8          	RET	Z
  946 C571  CD E391     	CALL	CSTBT
  947 C574  23          	INC	HL
  948 C575  7D          	LD	A,L
  949 C576  FE 9C       	CP	9CH
  950 C578  D0          	RET	NC
  951 C579  18 F3       	JR	KEYD1
  952                   
  953                   ; COLOR-Menuewort:
  954                   
  955 C57B  A7          COLRC:	AND	A		; Anzahl Parameter
  956 C57C  20 1E       	JR	NZ,SETCO	; 1 oder 2 -> Farben einstellen
  957 C57E  67          	LD	H,A		; 0 = aktuelle Farben anzeigen
  958 C57F  3A B7A3     	LD	A,(COLOR)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  29
CC48    INC

  959 C582  0F          	RRCA
  960 C583  0F          	RRCA
  961 C584  0F          	RRCA
  962 C585  E6 1F       	AND	1FH
  963 C587  6F          	LD	L,A
  964 C588  CD EDA4     	CALL	HLDEZ		; Anzeige Vordergrundfarbe
  965 C58B  CD F3A1     	CALL	SPACE
  966 C58E  3A B7A3     	LD	A,(COLOR)
  967 C591  E6 07       	AND	7
  968 C593  6F          	LD	L,A
  969 C594  CD EDA4     	CALL	HLDEZ		; Anzeige Hintergrundfarbe
  970 C597  CD F4C3     	CALL	CRLF
  971 C59A  18 18       	JR	COLRC2
  972                   
  973                   ; COLOR-Unterprogramm = Farbe setzen (aus L und E)
  974                   
  975 C59C  3E 1F       SETCO:	LD	A,1FH		; 1 oder 2 
  976 C59E  A5          	AND	L		; Maske fuer Vordergrundfarbe
  977 C59F  17          	RLA
  978 C5A0  17          	RLA
  979 C5A1  17          	RLA
  980 C5A2  6F          	LD	L,A
  981 C5A3  3A B781     	LD	A,(ARGN)
  982 C5A6  FE 02       	CP	2		; auch Hintergrund einstellen?
  983 C5A8  7B          	LD	A,E		; neue Hintergrundfarbe
  984 C5A9  30 03       	JR	NC,COLRC1
  985 C5AB  3A B7A3     	LD	A,(COLOR)	; alte Hintergrundfarbe
  986 C5AE  E6 07       COLRC1:	AND	7
  987 C5B0  B5          	OR	L
  988 C5B1  32 B7A3     	LD	(COLOR),A	; neuer Farbwert
  989 C5B4  C3 FB84     COLRC2:	JP	COFF
  990                   
  991                   ; WINDOW-Menuewort
  992                   ; 21.05.2021: Bedeutung der Argumente wie bei BASIC angepasst
  993                   ; PE:	A	Anzahl Argumente
  994                   ;	A=0	Standardfenster (volle Groesse) einstellen
  995                   ;	A=1	Fenster mit Nr. aufrufen
  996                   ;	A=4(5)	Fenster (mit Nr.) definieren
  997                   ;	L	Erste Zeile / Fensternummer bei A=1
  998                   ;	E	Letzte Zeile	(bisher Anzahl Zeilen)
  999                   ;	C	Erste Spalte
 1000                   ;	(ARG4)	Letzte Spalte	(bisher Anzahl Spalten)
 1001                   ;	(ARG5)	Fensternummer
 1002                   ;
 1003 C5B7  A7          WINDC:	AND	A		; Kein Argument?
 1004 C5B8  28 21       	JR	Z,WINC0		; Standardfenster initialisieren
 1005 C5BA  3D          	DEC	A		; 1 Arg?
 1006 C5BB  28 29       	JR	Z,WINAKL	; Aufruf Nummer L
 1007 C5BD  D6 03       	SUB	3
 1008 C5BF  38 17       	JR	C,WINCJE	; 2..3 Arg => ERROR
 1009 C5C1  28 03       	JR	Z,WINC1		; Fenster Nr. 0
 1010 C5C3  3A B78A     	LD	A,(ARG5)	; Fenster nr definieren
 1011 C5C6  47          WINC1:	LD	B,A		; Fensternummer
 1012                   
 1013 C5C7  7B          	LD	A,E		; letzte Zeile
 1014 C5C8  95          	SUB	L		; erste Zeile
 1015                   ;	JR	C,WINCE		; Anfang > Ende (wird von WININ ueberwacht)
 1016 C5C9  3C          	INC	A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  30
CC48    INC

 1017 C5CA  57          	LD	D,A		; Anzahl Zeilen (Fensterhoehe)
 1018                   
 1019 C5CB  3A B788     	LD	A,(ARG4)	; letzte Spalte
 1020 C5CE  91          	SUB	C		; erste Spalte
 1021                   ;	JR	C,WINCE		; Anfang > Ende (wird von WININ ueberwacht)
 1022 C5CF  3C          	INC	A
 1023 C5D0  5F          	LD	E,A		; Anzahl Spalten (Fensterbreite)
 1024                   
 1025 C5D1  65          	LD	H,L		; H = erste Zeile
 1026 C5D2  69          	LD	L,C		; L = erste Spalte
 1027 C5D3  78          	LD	A,B		; A = Fensternummer
 1028                   
 1029 C5D4  CD C617     	CALL	WININC		; Fenster initialisieren
 1030 C5D7  D0          	RET	NC		; OK
 1031 C5D8  C3 F4B9     WINCJE:	JP	ERRM		; ansonsten Fehler anzeigen
 1032                   
 1033 C5DB  11 B79B     WINC0:	LD	DE,WINNR	; von Fensternummer
 1034 C5DE  21 C002     WINC2:	LD	HL,WIN0		; bis WEND-Adresse
 1035 C5E1  01 000B     	LD	BC,WIN1-WIN0	; mit Standardwerten aus ROM
 1036 C5E4  18 2E       	JR	LDIRET		; Fenster 0 neu initialisieren
 1037                   
 1038                   ; definiertes Fenster aufrufen:
 1039                   ; PE:	A	Fensternummer 0..9
 1040                   ; PA:	CY=1	Fehler
 1041                   ; VR:	AF,BC,DE,HL
 1042                   
 1043 C5E6  7D          WINAKL:	LD	A,L		; Fensternummer
 1044 C5E7  CD C604     WINAKC:	CALL	WCOPY		; aktuelles Fenster retten
 1045 C5EA  32 B79B     	LD	(WINNR),A	; neue Fensternummer
 1046                   ;Einsprung fuer BASIC (PRINT AT)
 1047 C5ED  CD C5F7     WINAKB:	CALL	WINADR		; Adresse Vektorspeicher in DE
 1048 C5F0  D8          	RET	C		; Nr. ausserhalb
 1049 C5F1  EB          	EX	DE,HL		; HL=Adresse der gespeicherten Fensterdaten
 1050 C5F2  11 B79C     	LD	DE,WINON	; gespeichertes Fenster laden
 1051 C5F5  18 1A       	JR	WCOP1
 1052                   
 1053                   ; Testet Fenster-Nr. und berechnet Position in Fenstervektorspeicher
 1054                   ; PE:	A	Fensternummer 0-9
 1055                   ; PA:	CY=1	Nr. zu gross
 1056                   ;	DE	Adresse im Fenstervektorspeicher
 1057                   
 1058 C5F7  C6 F6       WINADR:	ADD	A,-10
 1059 C5F9  D8          	RET	C		; zu gross
 1060 C5FA  87          	ADD	A,A	; *2
 1061 C5FB  5F          	LD	E,A
 1062 C5FC  87          	ADD	A,A	; *4
 1063 C5FD  87          	ADD	A,A	; *8
 1064 C5FE  83          	ADD	A,E	; *10
 1065 C5FF  5F          	LD	E,A
 1066 C600  16 B9       	LD	D,High(WNDFN)	; Adresse im Fenstervektorspeicher
 1067 C602  A7          	AND	A		; CY=0
 1068 C603  C9          	RET
 1069                   
 1070                   ; aktuelles Fenster (WINNR) in Fenstervektorspeicher retten
 1071                   ; PE:	A	Fensternummer 0..9
 1072                   ; PA:	CY=1	Nr. zu gross
 1073                   ;	BC=0
 1074                   ; VR:	F,BC,DE,HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  31
CC48    INC

 1075                   
 1076 C604  F5          WCOPY:	PUSH	AF
 1077 C605  3A B79B     	LD	A,(WINNR)	; aktuelle Fensternummer
 1078 C608  CD C5F7     	CALL	WINADR		; Adresse berechnen
 1079 C60B  38 0E       	JR	C,WINIE		; Fehler
 1080 C60D  F1          	POP	AF
 1081 C60E  21 B79C     	LD	HL,WINON	; ab Fensteranfang 10 Byte retten
 1082 C611  01 000A     WCOP1:	LD	BC,10		; Laenge Fenstervektor
 1083 C614  ED B0       LDIRET:	LDIR
 1084 C616  C9          	RET
 1085                   
 1086                   ; Initialisierung eines Fensters
 1087                   ; PE:	A	Fensternummer 0..9
 1088                   ;	HL	Fensteranfang
 1089                   ;	DE	Fenstrergroesse
 1090                   ; PA:	CY=1	Fehler
 1091                   ; VR:	AF,BC,DE,HL
 1092                   
 1093 C617  F5          WININC:	PUSH	AF
 1094 C618  CD C61E     	CALL	WININ1
 1095 C61B  F1          WINIE:	POP	AF		; Fehlerende
 1096 C61C  37          	SCF
 1097 C61D  C9          	RET
 1098                   	;
 1099 C61E  FE 0A       WININ1:	CP	10		; Fensternummer
 1100 C620  D0          	RET	NC		; nur 10 Fenster moeglich
 1101 C621  7A          	LD	A,D		; Zeilen
 1102 C622  A7          	AND	A
 1103 C623  C8          	RET	Z		; Zeilenanzahl=0 -> ERROR
 1104 C624  84          	ADD	A,H
 1105 C625  D8          	RET	C		; Anzahl+Anfang>256 -> ERROR
 1106 C626  FE 21       	CP	33
 1107 C628  D0          	RET	NC		; Anzahl+Anfang>32 -> ERROR
 1108 C629  7B          	LD	A,E		; Spalten
 1109 C62A  A7          	AND	A
 1110 C62B  C8          	RET	Z		; Spaltenanzahl=0 -> ERROR
 1111 C62C  85          	ADD	A,L
 1112 C62D  D8          	RET	C		; Anzahl+Anfang>256 -> ERROR
 1113 C62E  FE 29       	CP	41
 1114 C630  D0          	RET	NC		; Anzahl+Anfang>40 -> ERROR
 1115 C631  F1          	POP	AF		; Ruecksprung nach WINIE vom Stack
 1116 C632  F1          	POP	AF
 1117                   ;Einsprung fuer BASIC (PRINT AT)
 1118 C633  D5          WININB:	PUSH	DE
 1119 C634  E5          	PUSH	HL
 1120 C635  CD C604     	CALL	WCOPY		; aktuelles Fenster retten
 1121 C638  E1          	POP	HL
 1122 C639  D1          	POP	DE
 1123 C63A  22 B79C     	LD	(WINON),HL	; Fensteranfang
 1124 C63D  ED 53 B79E  	LD	(WINLG),DE	; Fenstergroesse
 1125 C641  ED 43 B7A0  	LD	(CURSO),BC	; BC=0
 1126 C645  32 B79B     	LD	(WINNR),A	; Fensternummer
 1127 C648  A7          	AND	A		; CY=0
 1128 C649  C9          	RET
 1129                   
 1130         0001      if SYSROM
 1131                   ;
 1132                   ; 13.06.2021:
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  32
CC48    INC

 1133                   ; JUMP-Erweiterung zum Sprung in 8 verschiedene CAOS-Versionen.
 1134                   ; PE:	A=0-7
 1135                   ;
 1136 C64A  F3          JUMPC:	DI			; Interrupt global sperren
 1137 C64B  11 B7A6     	LD	DE,NCAOS+2-LENX	; im IRM vor dem JUMP zu NCAOS
 1138 C64E  D5          	PUSH	DE		; ist gleichzeitig Sprungziel
 1139 C64F  21 C657     	LD	HL,CODEX	; Umschalt-Code vom ROM
 1140 C652  01 0010     	LD	BC,LENX		; Laenge
 1141 C655  18 BD       	JR	LDIRET		; in IRM kopieren und dort starten
 1142                   ; ueberschreibt zwar CCTL-Zeichentabellen und auch den System-SP-Merker sowie
 1143                   ; den Zeiger auf die SUTAB - macht aber nichts, da mit dem Sprung zu F012H das
 1144                   ; gesamte System neu initialisiert wird (entspricht RESET)
 1145                   
 1146 C657  47          CODEX:	LD	B,A		; CAOS-Ebene 0..7
 1147 C658  04          	INC	B		; Ebene 1-8
 1148 C659  3E E7       	ld	a,0E7h		; CAOS-C ein, RAM4 ein, Reset-Impuls ein
 1149 C65B  D3 86       	OUT	(PORT2),A
 1150 C65D  F6 08       R0:	OR	8		; Zaehl-Impuls ein
 1151 C65F  D3 86       	OUT	(PORT2),A	; Impuls ausloesen
 1152 C661  E6 F3       	AND	0F3h		; RESET-Impuls und Zaehl-Impuls aus
 1153 C663  D3 86       	OUT	(PORT2),A	; Impuls wieder aus
 1154 C665  10 F6       	DJNZ	R0		; Bis n Impulse ausgegeben sind, danach:
 1155                   ;	JP	0F012H		; in neues System springen
 1156         0010      LENX	EQU $-CODEX
 1157                   endif
 1158                   
 1159                   ; Linie zeichnen					**3E**
 1160                   ; von (ARG1)/(ARG2) nach (ARG3)/(ARG4)
 1161                   
 1162 C667  ED 5B B784  LINEC:	 LD	DE,(ARG2)	; YANF
 1163 C66B  2A B788     	 LD	HL,(ARG4)	; YEND
 1164 C66E  D9          	 EXX
 1165 C66F  ED 5B B782  	LD	DE,(ARG1)	; XANF
 1166 C673  D5          	PUSH	DE
 1167 C674  2A B786     	LD	HL,(ARG3)	; XEND
 1168 C677  3E 08       	LD	A,8		; X=Master
 1169 C679  B7          	OR	A
 1170 C67A  ED 52       	SBC	HL,DE		; HL=XSTEPS
 1171 C67C  30 06       	JR	NC,LINC1	; vorwaerts
 1172 C67E  19          	ADD	HL,DE
 1173 C67F  EB          	EX	DE,HL
 1174 C680  F6 01       	OR	1		; rueckwaerts
 1175 C682  ED 52       	SBC	HL,DE
 1176 C684  D9          LINC1:	 EXX
 1177 C685  D5          	 PUSH	DE		; YANF
 1178 C686  ED 52       	 SBC	HL,DE		; HL'=YSTEPS
 1179 C688  30 06       	 JR	NC,LINC2	; steigend
 1180 C68A  19          	 ADD	HL,DE
 1181 C68B  EB          	 EX	DE,HL
 1182 C68C  F6 02       	 OR	2		; fallend
 1183 C68E  ED 52       	 SBC	HL,DE
 1184 C690  E5          LINC2:	 PUSH	HL		; YSTEPS
 1185 C691  D9          	 EXX			; HL=XSTEPS
 1186 C692  C1          	POP	BC		; BC=YSTEPS
 1187 C693  E5          	PUSH	HL
 1188 C694  ED 42       	SBC	HL,BC		; flach/steil?
 1189 C696  E1          	POP	HL
 1190 C697  C5          	PUSH	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  33
CC48    INC

 1191 C698  30 05       	JR	NC,LINC3	; flach
 1192 C69A  E3          	EX	(SP),HL
 1193 C69B  CB 9F       	RES	3,A		; X=Slave
 1194 C69D  CB D7       	SET	2,A		; Y=Master
 1195 C69F  E5          LINC3:	PUSH	HL		; HL=MAX(STEPS)
 1196 C6A0  44          	LD	B,H
 1197 C6A1  4D          	LD	C,L		; Pixelzaehler
 1198 C6A2  D9          	 EXX
 1199 C6A3  C1          	 POP	BC		; BC'=MAX(...)
 1200 C6A4  D1          	 POP	DE		; DE'=MIN(...)
 1201 C6A5  60          	 LD	H,B
 1202 C6A6  69          	 LD	L,C
 1203 C6A7  CB 3C       	 SRL	H		; Slave mit 1/2
 1204 C6A9  CB 1D       	 RR 	L		; HL=1/2*MAX(...)
 1205 C6AB  D9          	 EXX
 1206 C6AC  D1          	POP	DE		; DE=YANF
 1207 C6AD  E1          	POP	HL		; HL=XANF
 1208                   
 1209                   ; Hauptschleife
 1210                   ; AF Bitregister
 1211                   ; HL lfd. X-Koordinate	HL' Slave
 1212                   ; DE lfd. Y-Koordinate	DE' -Master
 1213                   ; BC Punktezaehler	BC' +Master
 1214                   
 1215 C6AE  F5          LINCS:	PUSH	AF
 1216 C6AF  08          	EX	AF,AF'		; Bitreg merken
 1217 C6B0  F1          	POP	AF
 1218 C6B1  E5          	PUSH	HL
 1219 C6B2  21 B7ED     	LD	HL,LINTYP
 1220 C6B5  CB 06       	RLC	(HL)
 1221 C6B7  E1          	POP	HL
 1222 C6B8  DC C755     	CALL	C,POINT		; Punkt setzen
 1223 C6BB  D9          	 EXX
 1224 C6BC  A7          	 AND	A
 1225 C6BD  ED 52       	 SBC	HL,DE		; -Master subtrahieren
 1226 C6BF  30 01       	 JR	NC,LINC4	; kein Uebertrag - kein Sprung!
 1227 C6C1  09          	 ADD	HL,BC		; +Master addieren (CY bleibt =1)
 1228 C6C2  D9          LINC4:	 EXX
 1229 C6C3  30 02       	JR	NC,LINC5
 1230 C6C5  F6 0C       	OR	0CH		; X und Y!
 1231 C6C7  CB 5F       LINC5:	BIT	3,A		; X?
 1232 C6C9  28 07       	JR	Z,LINC6
 1233 C6CB  23          	INC	HL
 1234 C6CC  CB 47       	BIT	0,A
 1235 C6CE  28 02       	JR	Z,LINC6
 1236 C6D0  2B          	DEC	HL
 1237 C6D1  2B          	DEC	HL
 1238 C6D2  CB 57       LINC6:	BIT	2,A		; Y?
 1239 C6D4  28 07       	JR	Z,LINC7
 1240 C6D6  13          	INC	DE
 1241 C6D7  CB 4F       	BIT	1,A
 1242 C6D9  28 02       	JR	Z,LINC7
 1243 C6DB  1B          	DEC	DE
 1244 C6DC  1B          	DEC	DE
 1245 C6DD  78          LINC7:	LD	A,B
 1246 C6DE  B1          	OR	C		; letzter Punkt?
 1247 C6DF  C8          	RET	Z	; CY=0
 1248 C6E0  0B          	DEC	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  34
CC48    INC

 1249 C6E1  08          	EX	AF,AF'		; Bitreg
 1250 C6E2  18 CA       	JR	LINCS
 1251                   
 1252                   ; Kreis zeichnen					**3F**
 1253                   
 1254 C6E4  3A B786     CIRCLC:	LD	A,(ARG3)	; Radius R
 1255 C6E7  4F          	LD	C,A
 1256 C6E8  51          	LD	D,C
 1257 C6E9  CD FB9C     	CALL	MULT		; BA=C*D
 1258 C6EC  60          	LD	H,B
 1259 C6ED  6F          	LD	L,A		; HL = R*R
 1260 C6EE  54          	LD	D,H
 1261 C6EF  5D          	LD	E,L		; DE = HL
 1262 C6F0  79          	LD	A,C
 1263 C6F1  06 00       	LD	B,0		; BC=Radius
 1264 C6F3  CB 21       	SLA	C
 1265 C6F5  CB 10       	RL	B		; BC=Radius*2
 1266 C6F7  0B          	DEC	BC
 1267 C6F8  C5          	PUSH	BC
 1268 C6F9  01 0001     	LD	BC,1
 1269 C6FC  D9          	EXX
 1270 C6FD  4F          	 LD	C,A
 1271 C6FE  06 00       	 LD	B,0		; BC=Radius
 1272                   ;
 1273 C700  E5          CLOOP:	 PUSH	HL
 1274 C701  21 B7ED     	 LD	HL,LINTYP	; Linientype beruecksichtigen
 1275 C704  CB 06       	 RLC	(HL)		; CY=1 wenn Punkt zu setzen ist
 1276 C706  E1          	 POP	HL
 1277 C707  30 06       	 JR	NC,CIRN		; keinen Punkt setzen
 1278 C709  CD C72F     	 CALL	QUA		; und jeweils 8
 1279 C70C  CD C72F     	 CALL	QUA		; Punkte setzen
 1280 C70F  D9          CIRN:	EXX
 1281 C710  A7          	AND	A
 1282 C711  ED 42       	SBC	HL,BC
 1283 C713  03          	INC	BC
 1284 C714  03          	INC	BC
 1285 C715  ED 52       	SBC	HL,DE
 1286 C717  19          	ADD	HL,DE
 1287 C718  D9          	EXX
 1288 C719  30 0C       	 JR	NC,CIR3
 1289 C71B  D9          	EXX
 1290 C71C  E3          	EX	(SP),HL
 1291 C71D  EB          	EX	DE,HL
 1292 C71E  A7          	AND	A
 1293 C71F  ED 52       	SBC	HL,DE
 1294 C721  1B          	DEC	DE
 1295 C722  1B          	DEC	DE
 1296 C723  EB          	EX	DE,HL
 1297 C724  E3          	EX	(SP),HL
 1298 C725  D9          	EXX
 1299 C726  0D          	 DEC	C
 1300 C727  04          CIR3:	 INC	B
 1301 C728  79          	 LD	A,C
 1302 C729  B8          	 CP	B
 1303 C72A  30 D4       	 JR	NC,CLOOP
 1304 C72C  F1          	POP	AF
 1305 C72D  B7          	OR	A	; CY=0 (wegen BASIC erforderlich)
 1306 C72E  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  35
CC48    INC

 1307                   
 1308                   ; setzt 4 Punkte um Mittelpunkt
 1309                   
 1310 C72F  78          QUA:	LD	A,B
 1311 C730  41          	LD	B,C
 1312 C731  4F          	LD	C,A
 1313 C732  AF          	XOR	A
 1314 C733  57          	LD	D,A
 1315 C734  2A B784     	LD	HL,(ARG2)	; Y-Mittelpunkt
 1316 C737  E5          	PUSH	HL
 1317 C738  59          	LD	E,C
 1318 C739  19          	ADD	HL,DE		; oberhalb vom Mittelpunkt
 1319 C73A  CD C743     	CALL	UPP		; 2 Punkte setzen
 1320 C73D  AF          	XOR	A	; CY=0
 1321 C73E  57          	LD	D,A
 1322 C73F  E1          	POP	HL
 1323 C740  59          	LD	E,C
 1324 C741  ED 52       	SBC	HL,DE		; unterhalb vom Mittelpunkt
 1325                   	;			; und reinlaufen
 1326 C743  E5          UPP:	PUSH	HL
 1327 C744  2A B782     	LD	HL,(ARG1)	; X-Mittelpunkt
 1328 C747  58          	LD	E,B
 1329 C748  A7          	AND	A	; CY=0
 1330 C749  ED 52       	SBC	HL,DE		; links vom Mittelpunkt
 1331 C74B  D1          	POP	DE		; Y-Koordinate
 1332 C74C  CD C755     	CALL	POINT		; 1 Punkt setzen
 1333 C74F  D5          	PUSH	DE
 1334 C750  57          	LD	D,A
 1335 C751  58          	LD	E,B
 1336 C752  19          	ADD	HL,DE
 1337 C753  19          	ADD	HL,DE		; rechts vom Mittelpunkt
 1338 C754  D1          	POP	DE		; und reinlaufen
 1339                   
 1340                   ;***************************************************************
 1341                   ; universelles Punkt(re)set-Programm
 1342                   ; PE:	HL	X-Koordinate
 1343                   ;	DE	Y-Koordinate
 1344                   ;	(FARB)	Bit 3...7 : Farbe
 1345                   ;		Bit 2=1   : Farbebene nicht aendern
 1346                   ;		Bit 1=1   : PRESET
 1347                   ;		Bit 0=1   : PXOR
 1348                   ; VR:	-
 1349                   
 1350 C755  E5          POINT:	PUSH	HL
 1351 C756  D5          	PUSH	DE
 1352 C757  C5          	PUSH	BC
 1353 C758  F5          	PUSH	AF
 1354 C759  CD C7EB     	CALL	CALXY		; Grafikposition berechnen, D=FARB, A=Bitmaske
 1355 C75C  D4 C762     	CALL	NC,PUSET	; Punkt setzen wenn OK
 1356 C75F  C3 E0B7     	JP	POP4		; POP	AF,BC,DE,HL   RET
 1357                   	;
 1358 C762  DD CB 01 5E PUSET:	BIT	3,(IX+1)	; HiRes?
 1359 C766  28 21       	JR	Z,HIRES		; Punkt in Vordergrundfarbe setzen
 1360 C768  CB 4A       	BIT	1,D
 1361 C76A  20 19       	JR	NZ,PUERA	; Punkt loeschen
 1362 C76C  CB 42       	BIT	0,D
 1363 C76E  20 03       	JR	NZ,PUXOR	; Punkt invertieren
 1364                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  36
CC48    INC

 1365                   ; Punkt setzen:
 1366 C770  B6          	OR	(HL)		; Bit setzen
 1367 C771  18 03       	JR	PUCOL
 1368                   
 1369                   ; Punkt invertieren:
 1370 C773  AE          PUXOR:	XOR	(HL)		; alternierend
 1371 C774  CB 82       	RES	0,D
 1372 C776  77          PUCOL:	LD	(HL),A		; in Pixel-RAM eintragen
 1373 C777  CB 52       	BIT	2,D		; Bit 2 in CAOS 3.4 und ab CAOS 4.7 benutzt
 1374 C779  C0          	RET	NZ		; wenn Bit 2=1, dann Farbe nicht setzen
 1375 C77A  CD F999     	CALL	ESC9		; Umschaltung zu Farbebene
 1376 C77D  7E          	LD	A,(HL)
 1377 C77E  E6 07       	AND	7		; alte vFarbe loeschen
 1378 C780  B2          	OR	D		; neue vFarbe einbauen
 1379 C781  77          HIR2:	LD	(HL),A		; und in Color-RAM eintragen
 1380 C782  C3 F999     HIR3:	JP	ESC9		; zurueck zu Pixelebene
 1381                   
 1382                   ; Punkt loeschen:
 1383 C785  2F          PUERA:	CPL
 1384 C786  A6          	AND	(HL)		; loeschen
 1385 C787  77          	LD	(HL),A
 1386 C788  C9          	RET
 1387                   
 1388                   ; Punkt im HIRES-Modus setzen:
 1389 C789  47          HIRES:	LD	B,A		; Bitmaske
 1390 C78A  B6          	OR	(HL)		; Bit setzen in
 1391 C78B  CB 5A       	BIT	3,D		; Pixelebene?
 1392 C78D  20 01       	JR	NZ,HIR1
 1393 C78F  A8          	XOR	B		; wieder loeschen
 1394 C790  77          HIR1:	LD	(HL),A
 1395 C791  CD F999     	CALL	ESC9		; Umschaltung zu Farbebene
 1396 C794  78          	LD	A,B		; Bitmaske
 1397 C795  B6          	OR	(HL)		; Bit setzen in
 1398 C796  CB 62       	BIT	4,D		; Farbebene?
 1399 C798  20 E7       	JR	NZ,HIR2
 1400 C79A  A8          	XOR	B		; wieder loeschen
 1401 C79B  18 E4       	JR	HIR2
 1402                   
 1403                   ; Punkt setzen						**30**
 1404                   
 1405 C79D  E5          PUSEC:	PUSH	HL
 1406 C79E  D5          	PUSH	DE
 1407 C79F  C5          	push	bc		; B-Register bei HIRES benutzt
 1408 C7A0  CD C7E2     	CALL	CALHV		; Grafikposition berechnen
 1409 C7A3  D4 C762     	CALL	NC,PUSET	; Punkt setzen wenn OK
 1410 C7A6  18 37       	JR	PUDEE
 1411                   
 1412                   ; Punkt loeschen (HIRES nur testen)			**2F**
 1413                   
 1414 C7A8  E5          PUDEC:	PUSH	HL
 1415 C7A9  D5          	PUSH	DE
 1416 C7AA  C5          	push	bc		; B-Register bei HIRES benutzt
 1417 C7AB  CD C7E2     	CALL	CALHV		; Grafikposition berechnen
 1418 C7AE  38 2F       	JR	C,PUDEE		; ausserhalb
 1419 C7B0  DD CB 01 5E 	BIT	3,(IX+1)	; HiRes?
 1420 C7B4  20 1A       	JR	NZ,PUDEL
 1421                   ; Punktfarbe HIRES ermitteln
 1422 C7B6  16 00       	LD	D,0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  37
CC48    INC

 1423 C7B8  47          	LD	B,A		; Bitmaske
 1424 C7B9  7E          	LD	A,(HL)
 1425 C7BA  A0          	AND	B		; Bit in Pixelebene gesetzt?
 1426 C7BB  28 02       	JR	Z,HIR4
 1427 C7BD  CB C2       	SET	0,D
 1428 C7BF  CD F999     HIR4:	CALL	ESC9		; Umschaltung zu Farbebene
 1429 C7C2  7E          	LD	A,(HL)
 1430 C7C3  F5          	PUSH	AF
 1431 C7C4  CD F999     	CALL	ESC9		; zurueck zu Pixelebene
 1432 C7C7  F1          	POP	AF
 1433 C7C8  A0          	AND	B		; Bit in Farbebene gesetzt?
 1434 C7C9  28 02       	JR	Z,HIR5
 1435 C7CB  CB CA       	SET	1,D
 1436 C7CD  04          HIR5:	INC	B		; Z=0 (Bitmaske)
 1437 C7CE  18 0E       	JR	HIR6		; Farbbyte uebergeben
 1438                   	;
 1439 C7D0  47          PUDEL:	LD	B,A		; Bitmaske
 1440 C7D1  4E          	LD	C,(HL)		; Pixel-RAM lesen
 1441 C7D2  2F          	CPL			; Bitmaske invertieren
 1442 C7D3  A1          	AND	C		; Bit loeschen
 1443 C7D4  77          	LD	(HL),A		; und in Pixel-RAM schreiben
 1444 C7D5  CD F999     	CALL	ESC9		; Umschaltung zu Farbebene
 1445 C7D8  56          	LD	D,(HL)		; Color-RAM lesen
 1446 C7D9  CD F999     	CALL	ESC9		; Umschaltung zu Farbebene
 1447 C7DC  78          	LD	A,B		; Bitmaske
 1448 C7DD  A1          	AND	C		; Z=1: Punkt war geloescht
 1449 C7DE  7A          HIR6:	LD	A,D		; Farbbyte
 1450 C7DF  C3 E0B8     PUDEE:	JP	POP3		; POP	BC,DE,HL   RET
 1451                   ;
 1452                   ; Grafikposition berechnen fuer Punktroutinen
 1453                   ; PE:	HL	X-Koordinate (Horizontalposition)
 1454                   ;	DE	Y-Koordinate (Vertikal-  "	)
 1455                   ; PA:	HL	IRM-Adresse Pixel/Farbe
 1456                   ;	D	Farbwert
 1457                   ;	A	Bit-Maske
 1458                   ;	CY	Fehler (ausserhalb)
 1459                   ; VR:	AF,DE,HL
 1460                   ;
 1461 C7E2  2A B7D3     CALHV:	LD	HL,(HOR)
 1462 C7E5  ED 5B B7D5  	LD	DE,(VERT)
 1463 C7E9  16 00       	LD	D,0
 1464 C7EB  C5          CALXY:	PUSH	BC
 1465 C7EC  01 FDF8     	LD	BC,BITTAB
 1466 C7EF  7D          	LD	A,L
 1467 C7F0  E6 07       	AND	7
 1468 C7F2  81          	ADD	A,C
 1469 C7F3  4F          	LD	C,A		; Bit
 1470 C7F4  7D          	LD	A,L
 1471 C7F5  CB 3C       	SRL	H
 1472 C7F7  1F          	RRA
 1473 C7F8  CB 3C       	SRL	H
 1474 C7FA  1F          	RRA
 1475 C7FB  CB 3C       	SRL	H
 1476 C7FD  1F          	RRA			; Spalte
 1477 C7FE  FE 28       	CP	40
 1478 C800  30 11       	JR	NC,CALEN
 1479 C802  F6 80       	OR	80H		; IRM
 1480 C804  67          	LD	H,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  38
CC48    INC

 1481 C805  3E FF       	LD	A,0FFH
 1482 C807  82          	ADD	A,D
 1483 C808  38 09       	JR	C,CALEN
 1484 C80A  AB          	XOR	E		; CY=0, kein Fehler
 1485 C80B  6F          	LD	L,A		; Zeile
 1486 C80C  3A B7D6     	LD	A,(FARB)
 1487 C80F  57          	LD	D,A
 1488 C810  0A          	LD	A,(BC)		; Bitmaske
 1489 C811  C1          	POP	BC
 1490 C812  C9          	RET
 1491                   	;
 1492 C813  C1          CALEN:	POP	BC
 1493 C814  37          	SCF			; CY=1, Fehler: ausserhalb
 1494 C815  C9          	RET
 1495                   ;
 1496                   ; MENU-HACK damit DISPLAY immer mit D abgekuerzt werden kann
 1497                   ;
 1498 C816  7F7F        	DW	7F7FH
 1499 C818  44 20       	DB	'D '		; verstecktes Menuewort
 1500 C81A  03          	DB	3		; mindestens 1 Argument
 1501                   
 1502                   ; Anzeige Speicherbereich:
 1503                   ; HL=Adresse, E=Listblocklaenge
 1504                   ; C=Anzahl Bytes pro Zeile
 1505                   ; A=Anzahl Argumente
 1506                   
 1507 C81B  FE 03       DISPC:	CP	3
 1508 C81D  30 08       	JR	NC,DISP1
 1509 C81F  0E 08       	LD	C,8		; default = 8 Bytes/Zeile
 1510 C821  FE 02       	CP	2
 1511 C823  30 02       	JR	NC,DISP1
 1512 C825  1E 04       	LD	E,4		; default = 4 Zeilen
 1513 C827  D5          DISP1:	PUSH	DE
 1514 C828  CD D790     DISP2:	CALL	DPMEMO		; 1 Zeile anzeigen
 1515 C82B  CD F4C3     	CALL	CRLF
 1516 C82E  CD F663     	CALL	BRKT
 1517 C831  38 06       	JR	C,DISP4
 1518 C833  1D          	DEC	E
 1519 C834  20 F2       	JR	NZ,DISP2	; E*
 1520 C836  CD F3D4     DISP3:	CALL	INTB		; Warten auf Tastenbetaetigung
 1521 C839  D1          DISP4:	POP	DE
 1522 C83A  FE 03       	CP	3		; BRK?
 1523 C83C  C8          	RET	Z
 1524 C83D  FE 0F       	CP	0FH
 1525 C83F  20 05       	JR	NZ,DISP5
 1526 C841  CD F3BA     	CALL	OCHR		; Hardcopy
 1527 C844  18 F0       	JR	DISP3
 1528                   	;
 1529 C846  FE 13       DISP5:	CP	13H		; STOP?
 1530 C848  20 DD       	JR	NZ,DISP1
 1531 C84A  18 07       	JR	MODI1
 1532                   
 1533                   ; Anzeige/Veraendern Speicherbereich
 1534                   ; HL=Adresse, E=Anzahl Bytes pro Zeile
 1535                   ; A=Anzahl Argumente
 1536                   
 1537 C84C  4B          MODIC:	LD	C,E		; Breite
 1538 C84D  FE 02       	CP	2		; 2 Argumente?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  39
CC48    INC

 1539 C84F  30 02       	JR	NC,MODI1
 1540 C851  0E 01       	LD	C,1		; Standardbreite
 1541 C853  CD D790     MODI1:	CALL	DPMEMO		; 1 Zeile anzeigen
 1542 C856  3E 05       	LD	A,5
 1543 C858  32 B7A0     	LD	(CURSO),A
 1544 C85B  CD F47D     	CALL	INLIN		; Eingabe
 1545 C85E  D8          	RET	C		; BRK
 1546 C85F  E5          	PUSH	HL
 1547 C860  CD F4CA     	CALL	RHEX		; Adresse erfassen
 1548 C863  7E          	LD	A,(HL)
 1549 C864  E1          	POP	HL
 1550 C865  38 56       	JR	C,MODI9		; Fehler
 1551 C867  A7          	AND	A
 1552 C868  28 E9       	JR	Z,MODI1
 1553 C86A  2A B797     	LD	HL,(NUMVX)
 1554 C86D  E5          MODI2:	PUSH	HL
 1555 C86E  CD F4CA     	CALL	RHEX		; Datenbyte
 1556 C871  7E          	LD	A,(HL)
 1557 C872  A7          	AND	A		; kein Zeichen
 1558 C873  23          	INC	HL		; einlesbar?
 1559 C874  7E          	LD	A,(HL)
 1560 C875  E1          	POP	HL
 1561 C876  28 04       	JR	Z,MODI4
 1562 C878  CD FB5D     MODI3:	CALL	LDMAE		; eintragen
 1563 C87B  23          	INC	HL
 1564 C87C  1A          MODI4:	LD	A,(DE)
 1565 C87D  FE 2E       	CP	'.'		; Abschluss?
 1566 C87F  C8          	RET	Z
 1567 C880  FE 2C       	CP	','		; 1 Zeichen?
 1568 C882  20 05       	JR	NZ,MODI5
 1569 C884  13          	INC	DE
 1570 C885  1A          	LD	A,(DE)		; vom Video-RAM
 1571 C886  13          	INC	DE
 1572 C887  18 EF       	JR	MODI3		; eintragen
 1573                   	;
 1574 C889  FE 3A       MODI5:	CP	':'		; Rueckschritt?
 1575 C88B  20 06       	JR	NZ,MODI6
 1576 C88D  06 00       	LD	B,0
 1577 C88F  ED 42       	SBC	HL,BC		; C Bytes zurueck
 1578 C891  18 C0       	JR	MODI1
 1579                   	;
 1580 C893  FE 2F       MODI6:	CP	'/'		; neue Adresse?
 1581 C895  20 0B       	JR	NZ,MODI0
 1582 C897  13          	INC	DE
 1583 C898  CD F4CA     	CALL	RHEX		; Adresse erfassen
 1584 C89B  38 20       	JR	C,MODI9		; Fehler
 1585 C89D  2A B797     	LD	HL,(NUMVX)
 1586 C8A0  18 B1       	JR	MODI1
 1587                   	;
 1588 C8A2  FE 27       MODI0:	CP	27H		; Zeichenkette?
 1589 C8A4  20 10       	JR	NZ,MODI8
 1590 C8A6  13          	INC	DE
 1591 C8A7  1A          MODI7:	LD	A,(DE)		; Zeichen holen
 1592 C8A8  13          	INC	DE
 1593 C8A9  A7          	AND	A		; Dummy-Ende?
 1594 C8AA  28 A7       	JR	Z,MODI1
 1595 C8AC  FE 27       	CP	27H		; Ende Kette?
 1596 C8AE  28 CC       	JR	Z,MODI4
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  40
CC48    INC

 1597 C8B0  CD FB5D     	CALL	LDMAE		; eintragen
 1598 C8B3  23          	INC	HL
 1599 C8B4  18 F1       	JR	MODI7
 1600                   	;
 1601 C8B6  A7          MODI8:	AND	A		; Ende Zeile?
 1602 C8B7  28 9A       	JR	Z,MODI1
 1603 C8B9  FE 20       	CP	' '		; Leerzeichen?
 1604 C8BB  28 B0       	JR	Z,MODI2
 1605 C8BD  CD F4B9     MODI9:	CALL	ERRM		; sonst ERROR
 1606 C8C0  18 91       	JR	MODI1
 1607                   
 1608                   ; Initialisierung der Druckerausgabe:
 1609                   ;
 1610                   ; PE:	(ARGN)	0..5 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1611                   ;	(ARG1)	Steckplatz	(0 = M021)
 1612                   ;	(ARG2)	SIO-Kanal	(0..1 = A, 2 = B)
 1613                   ;	(ARG3)	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1614                   ;	(ARG4)	ShCLR-Reaktion	(0 = keine, 1 = Protokoll, 2 = Hardcopy)
 1615                   ;	(ARG5)	Druckertyp	(0..12)
 1616                   ; PA:	-
 1617                   ; VR:	AF, BC, DE, HL
 1618                   ;
 1619 C8C2  CD F5F3     LSTC:	CALL	LARG		; Arg's laden
 1620 C8C5  CD C908     	CALL	LSTCA		; Druckerinitialisierung (intern)
 1621 C8C8  DA F4B9     	JP	C,ERRM		; Modul nicht gefunden oder Parameterfehler
 1622 C8CB  3E 0D       	LD	A,CR		; CR+LF drucken
 1623                   ;	CALL	OFILT
 1624                   ;	LD	A,LF
 1625 C8CD  C3 B7E9     	JP	OFILT
 1626                   
 1627 C8D0  3A B7E1     LSTC1:	LD	A,(HCPZ)	; bisheriges Steuerbyte
 1628 C8D3  E6 F0       	AND	0F0h		; Druckertyp uebernehmen
 1629 C8D5  0F          	RRCA			; und auf Bits 1..4 rotieren
 1630 C8D6  0F          	RRCA
 1631 C8D7  0F          	RRCA
 1632 C8D8  18 3D       	JR	LSTC6
 1633                   
 1634                   ; M021
 1635 C8DA  CD C971     LSTC2:	CALL	USRARG		; Steuerwort aus Argumenten bilden (CY war 0)
 1636 C8DD  AF          	XOR	A
 1637 C8DE  D3 91       	OUT	(91h),A		; M021 PIO-B Daten
 1638 C8E0  DB 91       	IN	A,(91h)
 1639 C8E2  C6 FF       	ADD	A,-1		; 0 zurueckgelesen?
 1640 C8E4  D8          	RET	C		; sonst kein M021 vorhanden
 1641 C8E5  C5          	PUSH	BC
 1642 C8E6  21 FA03     	LD	HL,M021PR
 1643 C8E9  18 53       	JR	LSTC7
 1644                   
 1645                   ; M003:
 1646 C8EB  2E 07       LSTC3:	LD	L,7		; ab Steckplatz 7
 1647 C8ED  CD C967     LSTC4:	CALL	SIOARG		; Steuerwort aus Argumenten bilden
 1648 C8F0  C5          	PUSH	BC		; Adresse ShCLR-Reaktionsprogramm
 1649 C8F1  45          	LD	B,L
 1650 C8F2  CD C39D     	CALL	V24SU		; M003 suchen und einschalten
 1651 C8F5  50          	LD	D,B		; Steckplatz in D zurueckgeben
 1652 C8F6  38 6C       	JR	C,IOEPOP	; nicht gefunden, keine weitere Initialisierung
 1653 C8F8  3A B7E4     	LD	A,(INTV1L)
 1654 C8FB  47          	LD	B,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  41
CC48    INC

 1655 C8FC  2A B7E2     	LD	HL,(INTV1)
 1656 C8FF  7B          	LD	A,E		; Steuerbyte
 1657 C900  CD C9FD     	CALL	INISIO
 1658 C903  21 FA1B     	LD	HL,V24PR
 1659 C906  18 36       	JR	LSTC7
 1660                   
 1661                   ; Initialisierung der Druckerausgabe (intern):
 1662                   ;
 1663                   ; PE:	A	0..5 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1664                   ;	L	Steckplatz	(0 = M021)
 1665                   ;	E	SIO-Kanal	(0..1 = A, 2 = B)
 1666                   ;	C	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1667                   ;	(ARG4)	ShCLR-Reaktion	(0 = keine, 1 = Protokoll, 2 = Hardcopy)
 1668                   ;	(ARG5)	Druckertyp	(0..12)
 1669                   ; PA:	D	Steckplatz M003	(nur gueltig fuer A = 0)
 1670                   ;	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1671                   ; VR:	AF, BC, DE, HL
 1672                   ;
 1673 C908  67          LSTCA:	LD	H,A		; Anzahl Argumente
 1674 C909  3E 05       	LD	A,5
 1675 C90B  BC          	CP	H		; (ARGN) <= 5?
 1676 C90C  D8          	RET	C		; mehr als 5 Argumente!
 1677 C90D  20 C1       	JR	NZ,LSTC1	; Druckertyp erhalten
 1678 C90F  3A B78A     LSTC5:	LD	A,(ARG5)	; neuer Druckertyp
 1679 C912  FE 0D       	CP	13		; (ARG5) < 13?
 1680 C914  30 4F       	JR	NC,IOERET	; Fehler: Druckertyp nicht passend
 1681 C916  87          	ADD	A,A		; 0 fuer Bit 3 einschieben
 1682 C917  57          LSTC6:	LD	D,A
 1683 C918  7C          	LD	A,H		; Anzahl Argumente
 1684 C919  A7          	AND	A		; Steckplatz angegeben?
 1685 C91A  28 CF       	JR	Z,LSTC3		; nein, M003 ab Steckplatz 7 suchen
 1686 C91C  7D          	LD	A,L
 1687 C91D  A7          	AND	A		; Steckplatz = 0?
 1688 C91E  28 BA       	JR	Z,LSTC2		; M021
 1689 C920  C5          	PUSH	BC
 1690 C921  45          	LD	B,L
 1691 C922  0E 80       	LD	C,80h
 1692 C924  ED 78       	IN	A,(C)
 1693 C926  C1          	POP	BC
 1694 C927  D6 EE       	SUB	0EEh		; M003?
 1695 C929  28 C2       	JR	Z,LSTC4
 1696 C92B  3D          	DEC	A		; M001?
 1697 C92C  20 37       	JR	NZ,IOERET	; Fehler: kein passendes Modul
 1698                   
 1699                   ; M001:
 1700 C92E  CD C971     	CALL	USRARG		; Steuerwort aus Argumenten bilden (CY war 0)
 1701 C931  C5          	PUSH	BC		; Adresse ShCLR-Reaktionsprogramm
 1702                   ;	LD	A,2
 1703                   ;	LD	D,1
 1704 C932  CD C3AB     	CALL	MODUC1		; M001 einschalten
 1705 C935  21 D92E     	LD	HL,DIOINI
 1706 C938  CD CA30     	CALL	IMEXDI		; PIO konfigurieren
 1707 C93B  21 F9F2     	LD	HL,M001PR
 1708 C93E  22 B7EA     LSTC7:	LD	(OFILT + 1),HL
 1709 C941  E1          	POP	HL
 1710 C942  22 B799     	LD	(HCADR),HL	; ShCLR-Reaktionsprogramm setzen
 1711 C945  7B          	LD	A,E
 1712 C946  32 B7E1     	LD	(HCPZ),A	; Steuerbyte eintragen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  42
CC48    INC

 1713 C949  21 F9E2     	LD	HL,PRINT
 1714 C94C  01 F4A3     	LD	BC,NOOP
 1715 C94F  A7          	AND	A		; CY = 0
 1716                   ;
 1717                   ; Eintragen der Sprungadressen eines I/O-Kanals:
 1718                   ;
 1719                   ; PE:	E = Steuerwort
 1720                   ;	BC = Sprungadresse fuer Eingabe
 1721                   ;	HL = Sprungadresse fuer Ausgabe
 1722                   ; PA:	-
 1723                   ; VR:	F
 1724                   ;
 1725 C950  CB 4B       SETUIO:	BIT	1,E		; Ausgabekanal #2 oder #3?
 1726 C952  20 08       	JR	NZ,SETU2
 1727 C954  22 B7BE     	LD	(UOUT1+1),HL
 1728 C957  ED 43 B7C1  	LD	(UIN1+1),BC
 1729 C95B  C9          	RET
 1730                   	;
 1731 C95C  22 B7C4     SETU2:	LD	(UOUT2+1),HL
 1732 C95F  ED 43 B7C7  	LD	(UIN2+1),BC
 1733 C963  C9          	RET
 1734                   
 1735 C964  E1          IOEPOP:	POP	HL
 1736 C965  37          IOERET:	SCF			; Fehler-Flag
 1737 C966  C9          	RET
 1738                   
 1739                   ; Auswertung der Argumente 2..4 fuer I/O-Initialisierung:
 1740                   ;
 1741                   ; PE:	H	Argumentzahl
 1742                   ;	E	SIO-Kanal	(0..1 = A, 2 = B)
 1743                   ;	C	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1744                   ;	(ARG4)	ShCLR-Reaktion
 1745                   ;	D	bisheriges Steuerwort
 1746                   ; PA:	E	Steuerwort	(3 neue Bits von rechts einrotiert)
 1747                   ;	BC	Adresse ShCLR-Reaktionsprogramm
 1748                   ;	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1749                   ; VR:	AF, BC, DE, SP
 1750                   ;
 1751                   ; Stack-Unwinding: Im Fehlerfall wird die eigentliche Ruecksprungadresse vom
 1752                   ; Stack genommen, und dann ein RET ausgefuehrt.  Die aufrufende Routine darf
 1753                   ; keine Daten auf dem Stack zu liegen haben!
 1754                   ;
 1755 C967  3E 01       SIOARG:	LD	A,1
 1756 C969  BC          	CP	H		; mehr als 1 Argument?
 1757 C96A  30 2B       	JR	NC,NOARG2	; nein, SIO-Kanal nicht angegeben
 1758 C96C  1D          	DEC	E		; (ARG2): SIO-Kanal
 1759 C96D  93          	SUB	E		; 1 <= (ARG2) <= 2?
 1760 C96E  38 F4       	JR	C,IOEPOP	; Fehler: ungueltiger SIO-Kanal
 1761 C970  BB          	CP	E		; CY = 1 wenn K2
 1762 C971  5A          USRARG:	LD	E,D		; bisheriges Steuerbyte
 1763 C972  CB 13       	RL	E		; Bit 2 neu einschieben
 1764 C974  3E 02       	LD	A,2
 1765 C976  57          	LD	D,A
 1766 C977  BC          	CP	H		; mehr als 2 Argumente?
 1767 C978  30 20       	JR	NC,NOARG3	; nein. I/O-Kanal nicht angegeben
 1768 C97A  79          	LD	A,C		; (ARG3): User-I/O-Kanal
 1769 C97B  92          	SUB	D
 1770 C97C  BA          	CP	D		; 2 <= (ARG3) <= 3?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  43
CC48    INC

 1771 C97D  30 E5       	JR	NC,IOEPOP	; Fehler: ungueltiger I/O-Kanal
 1772 C97F  0F          	RRCA			; CY = 1 wenn User-Kanal #3
 1773 C980  CB 13       	RL	E		; Bit 1 einschieben
 1774                   ;	LD	BC,NOOP
 1775 C982  14          	INC	D		; D = 3
 1776 C983  7A          	LD	A,D
 1777 C984  BC          	CP	H		; mehr als 3 Argumente?
 1778 C985  30 15       	JR	NC,NOARG4	; nein, ShCLR-Reaktion nicht angegeben
 1779 C987  3A B788     	LD	A,(ARG4)	; Reaktion auf ShCLR
 1780 C98A  A7          	AND	A		; (ARG4) = 0?
 1781 C98B  28 0F       	JR	Z,NOARG4
 1782 C98D  92          	SUB	D		; 0 <= (ARG4) <= 2?
 1783 C98E  30 D4       	JR	NC,IOEPOP	; Fehler: ungueltiger ShCLR-Parameter
 1784 C990  01 ED8E     	LD	BC,HCPGM
 1785 C993  0F          	RRCA			; CY = 1 wenn Hardcopy
 1786 C994  CB 13       	RL	E		; Bit 0 einschieben
 1787 C996  C9          	RET
 1788                   
 1789 C997  5A          NOARG2:	LD	E,D		; bisheriges Steuerbyte
 1790 C998  CB 03       	RLC	E		; Bit 2 wie bisher erhalten
 1791 C99A  CB 03       NOARG3:	RLC	E		; Bit 1 wie bisher erhalten
 1792 C99C  CB 03       NOARG4:	RLC	E		; Bit 0 wie bisher erhalten
 1793 C99E  01 F4A3     	LD	BC,NOOP		; keine Reaktion auf Sh-CLR
 1794 C9A1  A7          	AND	A		; CY=0
 1795 C9A2  C9          	RET
 1796                   
 1797                   ; Initialisierung V.24-Duplexbetrieb:
 1798                   ;
 1799                   ; PE:	(ARGN)	0..3 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1800                   ;	(ARG1)	Steckplatz
 1801                   ;	(ARG2)	SIO-Kanal	(0..1 = A, 2 = B)
 1802                   ;	(ARG3)	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1803                   ; PA:	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1804                   ; VR:	AF, BC, DE, HL
 1805                   ;
 1806 C9A3  CD F5F3     V24DC:	CALL	LARG		; Arg's laden
 1807 C9A6  67          	LD	H,A
 1808 C9A7  3E 03       	LD	A,3
 1809 C9A9  BC          	CP	H		; (ARGN) <= 3?
 1810 C9AA  D8          	RET	C		; mehr als 3 Argumente -> Fehler
 1811 C9AB  3A B7E8     	LD	A,(HCPZ2)	; bisheriges Steuerwort
 1812 C9AE  0F          	RRCA
 1813 C9AF  0F          	RRCA			; zur Vorbereitung 3x rotieren
 1814 C9B0  0F          	RRCA
 1815 C9B1  57          	LD	D,A
 1816 C9B2  CD C967     	CALL	SIOARG		; neues Steuerwort aus Argumenten 2-4 bilden
 1817 C9B5  E5          	PUSH	HL
 1818 C9B6  3A B7E7     	LD	A,(INTV2L)	; Laenge Duplexinitialisierung
 1819 C9B9  47          	LD	B,A
 1820 C9BA  2A B7E5     	LD	HL,(INTV2)	; Duplexinitialisierung
 1821 C9BD  23          	INC	HL
 1822 C9BE  18 17       	JR	V24DC5
 1823                   
 1824 C9C0  3E 80       V24DC1:	LD	A,10000000b	; Empfangseinstellungen (7/8 Bit)
 1825 C9C2  18 10       	JR	V24DC3
 1826                   
 1827 C9C4  7E          V24DC2:	LD	A,(HL)		; Initialisierungsdaten lesen
 1828 C9C5  E6 07       	AND	00000111b	; Registerauswahl?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  44
CC48    INC

 1829 C9C7  28 11       	JR	Z,V24DC6	; nein
 1830 C9C9  23          	INC	HL
 1831 C9CA  FE 03       	CP	3		; WR3?
 1832 C9CC  28 F2       	JR	Z,V24DC1
 1833 C9CE  FE 05       	CP	5		; WR5?
 1834 C9D0  20 05       	JR	NZ,V24DC5
 1835 C9D2  3E 68       	LD	A,01101000b	; Sendeeinstellungen (5-8 Bit, ein/aus)
 1836 C9D4  A6          V24DC3:	AND	(HL)		; benoetigte Bits abtrennen
 1837 C9D5  B3          	OR	E		; und in Steuerbyte einbauen
 1838 C9D6  5F          V24DC4:	LD	E,A
 1839 C9D7  05          V24DC5:	DEC	B
 1840 C9D8  28 8A       	JR	Z,IOEPOP	; fehlendes Initialisierungsbyte
 1841 C9DA  23          V24DC6:	INC	HL
 1842 C9DB  10 E7       	DJNZ	V24DC2
 1843                   
 1844 C9DD  E1          	POP	HL
 1845 C9DE  7C          	LD	A,H
 1846 C9DF  06 07       	LD	B,7		; Suche ab Steckplatz 7
 1847 C9E1  A7          	AND	A		; Steckplatz angegeben?
 1848 C9E2  28 01       	JR	Z,V24DC7
 1849 C9E4  45          	LD	B,L		; angegebener Steckplatz
 1850 C9E5  CD C39D     V24DC7:	CALL	V24SU		; M003 suchen und einschalten
 1851 C9E8  D8          	RET	C		; Modul nicht gefunden
 1852 C9E9  21 FA30     	LD	HL,V24OT
 1853 C9EC  01 FA3B     	LD	BC,V24IN
 1854 C9EF  CD C950     	CALL	SETUIO		; I/O-Sprungadressen eintragen
 1855 C9F2  3A B7E7     V24DC8:	LD	A,(INTV2L)
 1856 C9F5  47          	LD	B,A
 1857 C9F6  2A B7E5     	LD	HL,(INTV2)
 1858 C9F9  7B          	LD	A,E		; Duplex-Steuerbyte
 1859 C9FA  32 B7E8     	LD	(HCPZ2),A	; eintragen
 1860                   
 1861                   ; SIO-Initialisierung:
 1862                   ;
 1863                   ; PE:	HL	Initialisierungstabelle
 1864                   ;	B	Laenge der Tabelle (>= 3)
 1865                   ;	A	Steuerbyte
 1866                   ; PA:	CY = 0
 1867                   ; VR:	AF, BC, HL
 1868                   ;
 1869 C9FD  E6 04       INISIO:	AND	00000100b
 1870 C9FF  0F          	RRCA
 1871 CA00  0F          	RRCA
 1872 CA01  C6 0C       	ADD	A,0Ch		; CTC-Port
 1873 CA03  4F          	LD	C,A
 1874 CA04  78          	LD	A,B
 1875 CA05  06 02       	LD	B,2		; 2 Byte fuer CTC-Initialisierung
 1876 CA07  90          	SUB	B
 1877 CA08  F3          	DI
 1878 CA09  ED B3       	OTIR			; CTC initialisieren
 1879 CA0B  47          	LD	B,A
 1880 CA0C  0D          	DEC	C		; SIO-Steuerport
 1881 CA0D  0D          	DEC	C
 1882 CA0E  ED B3       	OTIR			; SIO initialisieren
 1883 CA10  FB          	EI
 1884 CA11  A7          	AND	A		; CY = 0
 1885 CA12  C9          	RET
 1886                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  45
CC48    INC

 1887                   ; V.24-Modul suchen und initialisieren (bei POWER-ON und RESET):
 1888                   ;	-Tabellen in IRM kopieren
 1889                   ;	-M003 suchen und einschalten
 1890                   ;	-M003-Steckplatz merken
 1891                   
 1892 CA13  21 D80E     V24INI:	LD	HL,V24TAB	; vorbereitete V24-Tabelle
 1893 CA16  11 A800     	LD	DE,V24PL	; Steckplatz (A800H)
 1894 CA19  01 0012     	LD	BC,V24UMT - V24TAB
 1895 CA1C  ED B0       	LDIR			; in IRM kopieren
 1896 CA1E  AF          	XOR	A		; ARGN=0: M003 suchen
 1897 CA1F  CD C908     	CALL	LSTCA		; SIO-A: Druckerinitialisierung
 1898 CA22  D8          	RET	C		; kein M003 gefunden
 1899 CA23  7A          	LD	A,D
 1900 CA24  32 A800     	LD	(V24PL),A	; Steckplatz eintragen
 1901 CA27  21 FA30     	LD	HL,V24OT	; Duplex-Ausgaberoutine
 1902 CA2A  22 B7C4     	LD	(UOUT2 + 1),HL	; fuer User-Kanal #3 eintragen
 1903 CA2D  21 D820     	LD	HL,V24UMT	; SIO-B: Empfangs-Interrupt
 1904                   
 1905                   ; Initialisierung mehrerer Ports mit Sperren von Interrupts:
 1906                   ;
 1907                   ; PE:	HL	Initialisierungstabelle
 1908                   ;	(HL)	Anzahl der Kanaele
 1909                   ; PA:	-
 1910                   ; VR:	F, D, HL
 1911                   ;
 1912 CA30  56          IMEXDI:	LD	D,(HL)		; Anzahl Kanaele
 1913 CA31  23          	INC	HL
 1914 CA32  C3 F55C     	JP	INIME		; Ports initialisieren
 1915                   
 1916                   ; allgemeine Druckroutine
 1917                   
 1918 CA35  F5          PRINTC:	PUSH	AF
 1919 CA36  3A B7E1     	LD	A,(HCPZ)
 1920 CA39  CB 7F       	BIT	7,A
 1921 CA3B  28 29       	JR	Z,PRINT3	; Drucker
 1922                   	;Schreibmaschine
 1923 CA3D  E6 F0       	AND	0F0H
 1924 CA3F  FE 90       	CP	90H
 1925 CA41  28 17       	JR	Z,S6005
 1926 CA43  FE A0       	CP	0A0H
 1927 CA45  20 1F       	JR	NZ,PRINT3
 1928 CA47  F1          S6010:	POP	AF
 1929 CA48  E5          	PUSH	HL
 1930 CA49  C5          	PUSH	BC
 1931 CA4A  21 D964     	LD	HL,ZIBM
 1932 CA4D  01 0007     	LD	BC,7
 1933 CA50  ED B1       	CPIR
 1934 CA52  20 0F       	JR	NZ,PRINT1
 1935 CA54  0E 06       	LD	C,6
 1936 CA56  09          	ADD	HL,BC
 1937 CA57  7E          	LD	A,(HL)
 1938 CA58  18 09       	JR	PRINT1
 1939                   
 1940 CA5A  F1          S6005:	POP	AF
 1941 CA5B  FE 7E       	CP	7EH
 1942 CA5D  20 08       	JR	NZ,PRINT4
 1943 CA5F  3E 83       	LD	A,83H
 1944 CA61  18 04       	JR	PRINT4
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  46
CC48    INC

 1945 CA63  C1          PRINT1:	POP	BC
 1946 CA64  E1          	POP	HL
 1947 CA65  F5          	PUSH	AF
 1948 CA66  F1          PRINT3:	POP	AF
 1949 CA67  FE 09       PRINT4:	CP	9		; CUR
 1950 CA69  28 0D       	JR	Z,PRINT5
 1951 CA6B  F5          	PUSH	AF
 1952 CA6C  3A B7A2     	LD	A,(STBT)
 1953 CA6F  CB 5F       	BIT	3,A		; Steuerzeichen
 1954 CA71  28 0E       	JR	Z,PRINT7	; ausfuehren
 1955 CA73  F1          	POP	AF
 1956 CA74  FE 7F       	CP	7FH		; und 7Fh
 1957 CA76  20 02       	JR	NZ,PRINT6
 1958 CA78  3E 20       PRINT5:	LD	A,20H		; nach SPC
 1959 CA7A  FE 20       PRINT6:	CP	20H		; und Steuerzeichen
 1960 CA7C  30 04       	JR	NC,PRINT8
 1961 CA7E  3E 5F       	LD	A,'_'		; nach '_' wandeln
 1962 CA80  F5          	PUSH	AF
 1963 CA81  F1          PRINT7:	POP	AF
 1964 CA82  C3 B7E9     PRINT8:	JP	OFILT		; in IRM
 1965                   
 1966                   ; ShCLR-Reaktionsprogramm
 1967                   
 1968 CA85  E5          HCPGMC:	PUSH	HL
 1969 CA86  D5          	PUSH	DE
 1970 CA87  3A B7E1     	LD	A,(HCPZ)
 1971 CA8A  CB 47       	BIT	0,A		; Hardcopy?
 1972 CA8C  20 2E       	JR	NZ,COPIES
 1973                   
 1974                   ; Protokollfunktion
 1975                   
 1976 CA8E  2A B7B9     	LD	HL,(OUTAB)
 1977 CA91  5F          	LD	E,A		; E = (HCPZ)
 1978 CA92  7E          	LD	A,(HL)
 1979 CA93  A7          	AND	A		; CRT?
 1980 CA94  20 12       	JR	NZ,PROTO2
 1981 CA96  CB 4B       	BIT	1,E		; USER1/2?
 1982 CA98  21 F9DF     	LD	HL,ECHO		; CRT+PRINT
 1983 CA9B  11 F00B     	LD	DE,ZEI3		; UP 03H = UOUT2
 1984 CA9E  20 12       	JR	NZ,PROTO3
 1985 CAA0  11 F008     	LD	DE,ZEI2		; UP 02H = UOUT1
 1986 CAA3  22 B7BE     PROTO4:	LD	(UOUT1+1),HL
 1987 CAA6  18 0D       	JR	PROTO5
 1988                   	;
 1989 CAA8  21 F9E2     PROTO2:	LD	HL,PRINT	; Protokoll deaktivieren
 1990 CAAB  11 F020     	LD	DE,OUTT1	; UP 00H = CRT
 1991 CAAE  FE 02       	CP	2
 1992 CAB0  28 F1       	JR	Z,PROTO4
 1993 CAB2  22 B7C4     PROTO3:	LD	(UOUT2+1),HL	; Sprungadresse der Routine
 1994 CAB5  ED 53 B7B9  PROTO5:	LD	(OUTAB),DE	; und Zeiger setzen
 1995 CAB9  D1          	POP	DE
 1996 CABA  E1          	POP	HL
 1997 CABB  C9          	RET
 1998                   
 1999                   ; Hard- oder Screencopy
 2000                   
 2001 CABC  C5          COPIES:	PUSH	BC
 2002 CABD  F5          	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  47
CC48    INC

 2003 CABE  E6 F0       	AND	0F0H
 2004 CAC0  F2 CAE7     	JP	P,HCOPYC	; Hardcopy
 2005                   
 2006                   ; Screencopy
 2007                   
 2008 CAC3  2A B7CB     	LD	HL,(VRAM)
 2009 CAC6  06 20       	LD	B,32
 2010 CAC8  0E 28       SCOPY1:	LD	C,40
 2011 CACA  7E          SCOPY2:	LD	A,(HL)
 2012 CACB  23          	INC	HL
 2013 CACC  FE 20       	CP	20H
 2014 CACE  30 02       	JR	NC,SCOPY4
 2015 CAD0  3E 20       	LD	A,' '		; statt Steuerzeichen
 2016 CAD2  CD F9E2     SCOPY4:	CALL	PRINT
 2017 CAD5  0D          	DEC	C		; 40 Spalten
 2018 CAD6  20 F2       	JR	NZ,SCOPY2
 2019 CAD8  3E 0D       	LD	A,CR
 2020 CADA  CD CA67     	CALL	PRINT4
 2021 CADD  3E 0A       	LD	A,LF
 2022 CADF  CD CA67     	CALL	PRINT4
 2023 CAE2  10 E4       	DJNZ	SCOPY1		; 32 Zeilen
 2024 CAE4  C3 E0B7     HCEND:	JP	POP4		; POP	AF,BC,DE,HL   RET
 2025                   
 2026 CAE7              HCOPYC:	;..nach Typ verzweigen
 2027 CAE7  E6 F0       	AND	0F0H
 2028 CAE9  FE 10       	CP	10H
 2029 CAEB  CA CBB5     	JP	Z,K6314		; ESC/P breit
 2030 CAEE  FE 20       	CP	20H
 2031 CAF0  CA CBF3     	JP	Z,K6311		; mit ANSI
 2032 CAF3  FE 30       	CP	30H
 2033 CAF5  CA CC21     	JP	Z,K6312		; ANSI breit
 2034 CAF8  FE 50       	CP	50H
 2035 CAFA  28 3B       	JR	Z,HCMIN		; ESC/P2 (Mini)
 2036 CAFC  FE 70       	CP	70H
 2037 CAFE  28 67       	JR	Z,ESCP2		; ESC/P2 24 Nadel
 2038                   
 2039                   ; K6313, K6304, ESC/P2 mit 8 Nadeln
 2040                   
 2041 CB00  26 00       K6313:	LD	H,0		; Zeile 0
 2042 CB02  CD CCC0     K6313a:	CALL	PRZK		; Grafik init
 2043 CB05  2E 00       	LD	L,0		; Spalte 0
 2044 CB07  0E 08       K6313b:	LD	C,8		; 8 Nadeln
 2045 CB09  CD CCE6     	CALL	CBYTES
 2046 CB0C  E5          	PUSH	HL
 2047 CB0D  06 08       K6313c:	LD	B,8
 2048 CB0F  21 B700     	LD	HL,CASS
 2049 CB12  CB 16       K6313d:	RL 	(HL)
 2050 CB14  17          	RLA
 2051 CB15  23          	INC	HL
 2052 CB16  10 FA       	DJNZ	K6313d
 2053 CB18  CD B7E9     	CALL	OFILT
 2054 CB1B  0D          	DEC	C
 2055 CB1C  20 EF       	JR	NZ,K6313c	; naechster Cursor
 2056 CB1E  E1          	POP	HL
 2057 CB1F  2C          	INC	L
 2058 CB20  3E 28       	LD	A,40
 2059 CB22  BD          	CP	L
 2060 CB23  20 E2       	JR	NZ,K6313b
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  48
CC48    INC

 2061 CB25  7C          	LD	A,H
 2062 CB26  C6 08       	ADD	A,8		; naechste Zeile
 2063 CB28  67          	LD	H,A
 2064 CB29  30 D7       	JR	NC,K6313a
 2065 CB2B  3E 0D       HCCRLF:	LD	A,CR
 2066 CB2D  CD B7E9     	CALL	OFILT
 2067 CB30  3E 0A       	LD	A,LF
 2068 CB32  CD B7E9     	CALL	OFILT
 2069 CB35  18 AD       	JR	HCEND
 2070                   
 2071                   ; ESC/P2 Miniformat
 2072                   
 2073 CB37  21 0000     HCMIN:	LD	HL,0		; Zeile=0, Spalte=0
 2074 CB3A  CD CCC0     MINIa:	CALL	PRZK
 2075 CB3D  0E 18       MINIb:	LD	C,24		; 24 Pixel
 2076 CB3F  CD CCE6     	CALL	CBYTES
 2077 CB42  CD CCA1     	CALL	S3PRS
 2078 CB45  20 F6       	JR	NZ,MINIb
 2079 CB47  7C          	LD	A,H
 2080 CB48  C6 18       	ADD	A,24
 2081 CB4A  67          	LD	H,A
 2082 CB4B  2E 00       	LD	L,0		; Spalte=0
 2083 CB4D  FE F0       	CP	240
 2084 CB4F  20 E9       	JR	NZ,MINIa
 2085 CB51  CD CCC0     	CALL	PRZK
 2086 CB54  0E 10       MINIc:	LD	C,16
 2087 CB56  CD CCE6     	CALL	CBYTES
 2088 CB59  06 08       	LD	B,8
 2089 CB5B  AF          	XOR	A
 2090 CB5C  12          MINId:	LD	(DE),A		; 8 Nadeln frei
 2091 CB5D  13          	INC	DE
 2092 CB5E  10 FC       	DJNZ	MINId
 2093 CB60  CD CCA1     	CALL	S3PRS
 2094 CB63  20 EF       	JR	NZ,MINIc
 2095 CB65  18 C4       	JR	HCCRLF
 2096                   
 2097                   ; ESC/P2 mit 24 Nadeln
 2098                   
 2099 CB67  26 00       ESCP2:	LD	H,0		; Zeile 0
 2100 CB69  CD CCC0     ESCP2a:	CALL	PRZK
 2101 CB6C  2E 00       	LD	L,0		; Spalte 0
 2102 CB6E  06 08       ESCP2b:	LD	B,8		; 8 Pixel
 2103 CB70  E5          	PUSH	HL
 2104 CB71  CD E067     	CALL	PADR
 2105 CB74  11 B700     	LD	DE,CASS
 2106 CB77  7E          ESCP2c:	LD	A,(HL)
 2107 CB78  12          	LD	(DE),A
 2108 CB79  13          	INC	DE
 2109 CB7A  12          	LD	(DE),A		; 3 mal ablegen
 2110 CB7B  13          	INC	DE
 2111 CB7C  12          	LD	(DE),A
 2112 CB7D  13          	INC	DE
 2113 CB7E  2C          	INC	L
 2114 CB7F  10 F6       	DJNZ	ESCP2c
 2115 CB81  0E 08       	LD	C,8
 2116 CB83  06 18       ESCP2d:	LD	B,24		; 3*8 Bytes
 2117 CB85  21 B700     	LD	HL,CASS
 2118 CB88  CB 16       ESCP2e:	RL	(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  49
CC48    INC

 2119 CB8A  CB 13       	RL	E
 2120 CB8C  CB 12       	RL	D
 2121 CB8E  17          	RLA
 2122 CB8F  23          	INC	HL
 2123 CB90  10 F6       	DJNZ	ESCP2e		; Wandlung
 2124 CB92  77          	LD	(HL),A
 2125 CB93  06 03       	LD	B,3		; 3 mal drucken
 2126 CB95  7E          ESCP2f:	LD	A,(HL)
 2127 CB96  CD B7E9     	CALL	OFILT		; 1.
 2128 CB99  7A          	LD	A,D
 2129 CB9A  CD B7E9     	CALL	OFILT		; 2.
 2130 CB9D  7B          	LD	A,E
 2131 CB9E  CD B7E9     	CALL	OFILT		; 3. Byte
 2132 CBA1  10 F2       	DJNZ	ESCP2f
 2133 CBA3  0D          	DEC	C
 2134 CBA4  20 DD       	JR	NZ,ESCP2d
 2135 CBA6  E1          	POP	HL
 2136 CBA7  2C          	INC	L
 2137 CBA8  3E 28       	LD	A,40		; Zeilenende?
 2138 CBAA  BD          	CP	L
 2139 CBAB  20 C1       	JR	NZ,ESCP2b
 2140 CBAD  7C          	LD	A,H
 2141 CBAE  C6 08       	ADD	A,8
 2142 CBB0  67          	LD	H,A
 2143 CBB1  30 B6       	JR	NC,ESCP2a
 2144 CBB3  18 3B       	JR	JHCRLF
 2145                   
 2146                   ; ESC/P 9-Nadeln (breit)
 2147                   
 2148 CBB5  26 00       K6314:	LD	H,0
 2149 CBB7  CD CCC0     K6314a:	CALL	PRZK
 2150 CBBA  2E 00       	LD	L,0
 2151 CBBC  06 04       K6314b:	LD	B,4
 2152 CBBE  E5          	PUSH	HL
 2153 CBBF  CD E067     	CALL	PADR
 2154 CBC2  11 B700     	LD	DE,CASS
 2155 CBC5  7E          K6314c:	LD	A,(HL)
 2156 CBC6  12          	LD	(DE),A
 2157 CBC7  13          	INC	DE
 2158 CBC8  12          	LD	(DE),A
 2159 CBC9  13          	INC	DE
 2160 CBCA  2C          	INC	L
 2161 CBCB  10 F8       	DJNZ	K6314c		; 4*
 2162 CBCD  0E 08       	LD	C,8
 2163 CBCF  06 08       K6314d:	LD	B,8
 2164 CBD1  21 B700     	LD	HL,CASS
 2165 CBD4  CB 16       K6314e:	RL 	(HL)
 2166 CBD6  17          	RLA
 2167 CBD7  23          	INC	HL
 2168 CBD8  10 FA       	DJNZ	K6314e
 2169 CBDA  CD B7E9     	CALL	OFILT
 2170 CBDD  CD B7E9     	CALL	OFILT
 2171 CBE0  0D          	DEC	C
 2172 CBE1  20 EC       	JR	NZ,K6314d
 2173 CBE3  E1          	POP	HL
 2174 CBE4  2C          	INC	L
 2175 CBE5  3E 28       	LD	A,40
 2176 CBE7  BD          	CP	L
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  50
CC48    INC

 2177 CBE8  20 D2       	JR	NZ,K6314b
 2178 CBEA  7C          	LD	A,H
 2179 CBEB  C6 04       	ADD	A,4
 2180 CBED  67          	LD	H,A
 2181 CBEE  30 C7       	JR	NC,K6314a
 2182 CBF0  C3 CB2B     JHCRLF:	JP	HCCRLF
 2183                   
 2184                   ; ANSI-Drucker
 2185                   
 2186 CBF3  CD CCC0     K6311:	CALL	PRZK
 2187 CBF6  06 2A       	LD	B,256/6
 2188 CBF8  21 0000     	LD	HL,0
 2189 CBFB  0E 06       K6311a:	LD	C,6
 2190 CBFD  CD CCE6     	CALL	CBYTES
 2191 CC00  CD CC4D     	CALL	SPRS		; 6*8-Feld ausg.
 2192 CC03  20 F6       	JR	NZ,K6311a
 2193 CC05  3E 06       	LD	A,6		; 6 Pixel tiefer
 2194 CC07  84          	ADD	A,H
 2195 CC08  67          	LD	H,A
 2196 CC09  2E 00       	LD	L,0
 2197 CC0B  CD CCC0     	CALL	PRZK
 2198 CC0E  05          	DEC	B
 2199 CC0F  20 EA       	JR	NZ,K6311a
 2200 CC11  0E 04       K6311b:	LD	C,256 MOD 6	; den Rest
 2201 CC13  CD CCE6     	CALL	CBYTES
 2202 CC16  AF          	XOR	A
 2203 CC17  12          	LD	(DE),A		; letzte beiden
 2204 CC18  13          	INC	DE		; Zeilen leeren
 2205 CC19  12          	LD	(DE),A
 2206 CC1A  CD CC4D     	CALL	SPRS
 2207 CC1D  20 F2       	JR	NZ,K6311b
 2208 CC1F  18 CF       	JR	JHCRLF
 2209                   
 2210                   ; ANSI breit
 2211                   
 2212 CC21  CD CCC0     K6312:	CALL	PRZK
 2213 CC24  06 55       	LD	B,256/3
 2214 CC26  21 0000     	LD	HL,0
 2215 CC29  0E 03       K6312a:	LD	C,3
 2216 CC2B  CD CCF4     	CALL	CBYTS2
 2217 CC2E  CD CC76     	CALL	S2PRS
 2218 CC31  20 F6       	JR	NZ,K6312a
 2219 CC33  24          	INC	H
 2220 CC34  24          	INC	H
 2221 CC35  24          	INC	H
 2222 CC36  2E 00       	LD	L,0
 2223 CC38  CD CCC0     	CALL	PRZK
 2224 CC3B  10 EC       	DJNZ	K6312a
 2225 CC3D  0E 04       K6312b:	LD	C,256 MOD 6	; den Rest
 2226 CC3F  CD CCF4     	CALL	CBYTS2
 2227 CC42  AF          	XOR	A
 2228 CC43  12          	LD	(DE),A
 2229 CC44  13          	INC	DE
 2230 CC45  12          	LD	(DE),A
 2231 CC46  CD CC76     	CALL	S2PRS
 2232 CC49  20 F2       	JR	NZ,K6312b
 2233 CC4B  18 A3       	JR	JHCRLF
 2234                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  51
CC48    INC

 2235                   ; 8* 6-Nadel-Sprosse ausgeben
 2236                   
 2237 CC4D  E5          SPRS:	PUSH	HL
 2238 CC4E  C5          	PUSH	BC
 2239 CC4F  2E 80       	LD	L,80H
 2240 CC51  06 00       SPRS1:	LD	B,0
 2241 CC53  11 B700     	LD	DE,CASS
 2242 CC56  1A          SPRS2:	LD	A,(DE)
 2243 CC57  A5          	AND	L		; CY=0
 2244 CC58  28 01       	JR	Z,SPRS3
 2245 CC5A  37          	SCF			; CY=1
 2246 CC5B  CB 10       SPRS3:	RL 	B
 2247 CC5D  13          	INC	DE
 2248 CC5E  3E 06       	LD	A,6		; fuer 6 Bit
 2249 CC60  BB          	CP	E
 2250 CC61  20 F3       	JR	NZ,SPRS2	; ob. Nadel war 0
 2251 CC63  A7          	AND	A		; unt. Nadel = 0
 2252 CC64  CB 10       	RL 	B
 2253 CC66  78          	LD	A,B
 2254 CC67  CD B7E9     	CALL	OFILT
 2255 CC6A  CB 0D       	RRC	L
 2256 CC6C  F2 CC51     	JP	P,SPRS1
 2257 CC6F  C1          	POP	BC
 2258 CC70  E1          	POP	HL
 2259 CC71  2C          	INC	L
 2260 CC72  3E 28       	LD	A,40
 2261 CC74  BD          	CP	L
 2262 CC75  C9          	RET
 2263                   
 2264                   ; 8* 6-Nadel-Sprosse doppelt out
 2265                   
 2266 CC76  E5          S2PRS:	PUSH	HL
 2267 CC77  C5          	PUSH	BC
 2268 CC78  2E 80       	LD	L,80H
 2269 CC7A  06 00       S2PR1:	LD	B,0
 2270 CC7C  11 B700     	LD	DE,CASS		; Kassetten-Puffer
 2271 CC7F  1A          S2PR2:	LD	A,(DE)
 2272 CC80  A5          	AND	L
 2273 CC81  28 01       	JR	Z,S2PR3
 2274 CC83  37          	SCF
 2275 CC84  CB 10       S2PR3:	RL 	B
 2276 CC86  13          	INC	DE
 2277 CC87  3E 06       	LD	A,6
 2278 CC89  BB          	CP	E
 2279 CC8A  20 F3       	JR	NZ,S2PR2
 2280 CC8C  78          	LD	A,B
 2281 CC8D  17          	RLA			; untere beiden
 2282 CC8E  17          	RLA			; Nadeln tot
 2283 CC8F  CD B7E9     	CALL	OFILT
 2284 CC92  CD B7E9     	CALL	OFILT
 2285 CC95  CB 0D       	RRC	L
 2286 CC97  F2 CC7A     	JP	P,S2PR1
 2287 CC9A  C1          	POP	BC
 2288 CC9B  E1          	POP	HL
 2289 CC9C  2C          	INC	L
 2290 CC9D  3E 28       	LD	A,40
 2291 CC9F  BD          	CP	L
 2292 CCA0  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  52
CC48    INC

 2293                   
 2294                   ; 8* 24-Nadel-Sprosse ausgeben
 2295                   
 2296 CCA1  E5          S3PRS:	PUSH	HL
 2297 CCA2  1E 08       	LD	E,8
 2298 CCA4  0E 03       S3PR1:	LD	C,3		; 24 Nadeln = 3 Byte
 2299 CCA6  21 B700     	LD	HL,CASS
 2300 CCA9  06 08       S3PR2:	LD	B,8
 2301 CCAB  CB 16       S3PR3:	RL	(HL)
 2302 CCAD  17          	RLA
 2303 CCAE  23          	INC	HL
 2304 CCAF  10 FA       	DJNZ	S3PR3		; Wandlung
 2305 CCB1  CD B7E9     	CALL	OFILT
 2306 CCB4  0D          	DEC	C
 2307 CCB5  20 F2       	JR	NZ,S3PR2
 2308 CCB7  1D          	DEC	E
 2309 CCB8  20 EA       	JR	NZ,S3PR1
 2310 CCBA  E1           	POP	HL
 2311 CCBB  2C          	INC	L
 2312 CCBC  3E 28       	LD	A,40
 2313 CCBE  BD          	CP	L
 2314 CCBF  C9          	RET
 2315                   
 2316                   ; Druckerinitialisierung entsprechend HCPZ
 2317                   
 2318 CCC0  E5          PRZK:	PUSH	HL
 2319 CCC1  C5          	PUSH	BC
 2320 CCC2  AF          	XOR	A
 2321 CCC3  21 B7E1     	LD	HL,HCPZ
 2322 CCC6  ED 6F       	RLD
 2323 CCC8  4F          	LD	C,A		; Druckertyp
 2324 CCC9  ED 67       	RRD
 2325 CCCB  0C          	INC	C
 2326 CCCC  21 D7AF     	LD	HL,C6313
 2327 CCCF  46          PRZK1:	LD	B,(HL)		; Laenge
 2328 CCD0  0D          	DEC	C
 2329 CCD1  28 09       	JR	Z,PRZK2
 2330 CCD3  04          	INC	B
 2331 CCD4  7D          	LD	A,L
 2332 CCD5  80          	ADD	A,B
 2333 CCD6  6F          	LD	L,A
 2334 CCD7  30 F6       	JR	NC,PRZK1
 2335 CCD9  24          	INC	H
 2336 CCDA  18 F3       	JR	PRZK1
 2337 CCDC  23          PRZK2:	INC	HL
 2338 CCDD  7E          	LD	A,(HL)
 2339 CCDE  CD B7E9     	CALL	OFILT
 2340 CCE1  10 F9       	DJNZ	PRZK2
 2341 CCE3  C1          POP2:	POP	BC
 2342 CCE4  E1          	POP	HL
 2343 CCE5  C9          	RET
 2344                   
 2345                   ; C Bytes zum Puffer
 2346                   
 2347 CCE6  E5          CBYTES:	PUSH	HL
 2348 CCE7  C5          	PUSH	BC
 2349 CCE8  CD E067     	CALL	PADR
 2350 CCEB  11 B700     	LD	DE,CASS
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  53
CC48    INC

 2351 CCEE  06 00       	LD	B,0
 2352 CCF0  ED B0       	LDIR
 2353 CCF2  18 EF       	JR	POP2	; POP BC, HL	RET
 2354                   
 2355                   ; C Bytes zum Puffer & doppeln
 2356                   
 2357 CCF4  E5          CBYTS2:	PUSH	HL
 2358 CCF5  CD E067     	CALL	PADR
 2359 CCF8  11 B700     	LD	DE,CASS
 2360 CCFB  7E          C2BYTL:	LD	A,(HL)
 2361 CCFC  12          	LD	(DE),A
 2362 CCFD  13          	INC	DE
 2363 CCFE  12          	LD	(DE),A
 2364 CCFF  13          	INC	DE
 2365 CD00  2C          	INC	L
 2366 CD01  0D          	DEC	C
 2367 CD02  20 F7       	JR	NZ,C2BYTL
 2368 CD04  E1          	POP	HL
 2369 CD05  C9          	RET
 2370                   
 2371                   ; Byteausgabe von Datentraeger (BASIC-Schnittstelle)	**38**
 2372                   
 2373                   ; Zunaechst Puffer fuellen und nur wenn Puffer voll ist in die
 2374                   ; MBOUT-Routine(n) des eingestellten Treibers springen
 2375                   
 2376                   ; PE:	A	Datenbyte
 2377                   ;	D	Steuerbyte
 2378                   ;		Bit 3 = 1 INIT (Block 01)
 2379                   ;		Bit 6 = 1 Close (Block FF)
 2380                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 2381                   ; PA:	CY=1	Fehler
 2382                   ; VR:	AF,DE,HL
 2383                   ;
 2384 CD06  5A          MBOC:	LD	E,D		; Steuerbyte
 2385 CD07  57          	LD	D,A		; Datenbyte
 2386 CD08  D5          	PUSH	DE
 2387 CD09  C5          	PUSH	BC
 2388 CD0A  CB 5B       	BIT	3,E		; Init?
 2389 CD0C  28 32       	JR	Z,NOINIT
 2390 CD0E  DD CB 07 CE 	SET	1,(IX+7)	; INIT merken
 2391 CD12  3E D5       	LD	A,'U'+80H
 2392 CD14  BE          	CP	(HL)		; List-Ausgabe?
 2393 CD15  D5          	PUSH	DE
 2394 CD16  11 00A0     	LD	DE,160		; kurze Vortonlaenge normal
 2395 CD19  20 03       	JR	NZ,NOHIU
 2396 CD1B  11 0500     	LD	DE,1280		; bei 'U' gedehnt
 2397 CD1E  ED 53 B7D8  NOHIU:	LD	(VORTN),DE
 2398 CD22  CD D774     	CALL	BNAME		; Dateiname konvertieren/merken fuer ISRO
 2399 CD25  CD E4D8     	CALL	CLC		; Kassettenpuffer loeschen
 2400 CD28  CD ED6D     	CALL	DEV		; Kassette?
 2401 CD2B  20 05       	JR	NZ,MBONN	; nein
 2402 CD2D  01 000B     	LD	BC,11		; Laenge Dateiname + Typ
 2403 CD30  ED B0       	LDIR			; bei TAPE zunaechst mit Name fuellen
 2404 CD32  EB          MBONN:	EX	DE,HL		; HL jetzt Zeiger in Puffer
 2405 CD33  D1          	POP	DE
 2406 CD34  72          	LD	(HL),D		; 1. Datenbyte eintragen
 2407 CD35  2C          	INC	L
 2408 CD36  7D          MBOC1:	LD	A,L
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  54
CC48    INC

 2409 CD37  32 B7DA     MBOC0:	LD	(DTPTR),A	; Zeiger neu setzen
 2410 CD3A  A7          MBOCE:	AND	A		; CY=0 / kein Fehler (zusaetzlich ab CAOS 4.7)
 2411 CD3B  C1          MBCERR:	POP	BC
 2412 CD3C  D1          	POP	DE
 2413 CD3D  CB 9B       	RES	3,E		; Init zuruecksetzen
 2414 CD3F  C9          	RET
 2415                   	;
 2416 CD40  2A B7DA     NOINIT:	LD	HL,(DTPTR)	; Zeiger holen
 2417 CD43  26 B7       	LD	H,High(CASS)	; und mit Kassettenpuffer verbinden
 2418 CD45  72          	LD	(HL),D		; Datenbyte eintragen
 2419 CD46  CB 73       	BIT	6,E		; Close?
 2420 CD48  20 26       	JR	NZ,MCLOS	; letzten Block schreiben
 2421 CD4A  2C          	INC	L		; Zeiger auf naechstes Byte
 2422 CD4B  F2 CD36     	JP	P,MBOC1		; Puffer noch nicht voll
 2423 CD4E  DD CB 07 4E 	BIT	1,(IX+7)	; steht INIT noch aus?
 2424 CD52  20 0A       	JR	NZ,MBOC2	; ja, dann erst einmal den Vorblock ausgeben!
 2425 CD54  CD CE66     	CALL	MBLO		; Datenblock ausgeben, Blocknummer anzeigen
 2426 CD57  38 E2       	JR	C,MBCERR	; BRK oder Fehler -> IO-Error
 2427 CD59  CD E4D8     MBOC6:	CALL	CLC		; Kassettenpuffer jetzt wieder loeschen
 2428 CD5C  18 D9       	JR	MBOC0		; Zeiger zuruecksetzen
 2429                   	;
 2430 CD5E  DD CB 07 8E MBOC2:	RES	1,(IX+7)	; INIT ruecksetzen
 2431 CD62  21 B7F5     	LD	HL,FNAME	; Dateiname fuer Ausgabe
 2432 CD65  CD E4E1     	CALL	PV7
 2433 CD68  02          	DB	2		; Vorblock ausgeben mit ISRO
 2434                   ;	JR	C,MBCERR	; Fehler
 2435 CD69  D4 CE6F     	CALL	NC,MBLO1	; Blocknummer anzeigen, neue Zeile, BRK-Test
 2436 CD6C  38 CD       	JR	C,MBCERR	; BRK oder Fehler
 2437 CD6E  18 E9       	JR	MBOC6		; Zeiger auf leeren Puffer stellen
 2438                   	;
 2439 CD70  DD CB 07 4E MCLOS:	BIT	1,(IX+7)	; steht noch INIT aus?
 2440 CD74  28 09       	JR	Z,MBOC3		; nein, nur noch der Endeblock
 2441 CD76  21 B7F5     	LD	HL,FNAME	; Dateiname fuer Ausgabe
 2442 CD79  CD E4E1     	CALL	PV7
 2443 CD7C  02          	DB	2		; sonst erst noch ISRO ausfuehren
 2444 CD7D  18 07       	JR	MBOC4		; und danach sofort Close
 2445                   ;
 2446                   ; 17.02.2019
 2447                   ; Bei der byteweisen Ausgabe wurde bisher der Endeblock immer 2x ausgegeben.
 2448                   ; Dateien auf Diskette und USB-Laufwerken sind deshalb immer einen Block zu lang
 2449                   ;
 2450                   ; 24.11.2020
 2451                   ; Offenbar wurde dieses Verhalten mit Absicht eingebaut, denn BASIC benoetigt
 2452                   ; nach Einlesen des letzten Datenbytes eine gewisse "Bedenkzeit" bevor das Close
 2453                   ; zum Lesen des Endebytes 03h folgt. Wird also der erste Ende-Block nicht
 2454                   ; erwischt, dann folgt noch ein weiterer. Ohne diesen zusaetzlichen Block bleibt
 2455                   ; BASIC beim Lesen haengen und man muss zurueckspulen und den letzten Block
 2456                   ; nochmals abspielen.
 2457                   ; -> Also wird bei TAPE der Endeblock weiterhin 2x nacheinander ausgegeben.
 2458                   ;
 2459 CD7F  CD ED6D     MBOC3:	CALL	DEV		; Kassette?
 2460 CD82  CC CE66     	CALL	Z,MBLO		; bei TAPE letzten Block als Datenblock ausgeben
 2461 CD85  D8          	RET	C		; BRK oder Fehler
 2462 CD86  ED 4B B7D8  MBOC4:	LD	BC,(VORTN)
 2463 CD8A  CD E4E1     	CALL	PV7
 2464 CD8D  03          	DB	3		; Endeblock ausgeben mit CSRO
 2465 CD8E  F5          	PUSH	AF		; CY=1 bei Fehler
 2466 CD8F  CD F4C3     	CALL	CRLF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  55
CC48    INC

 2467 CD92  F1          	POP	AF		; Fehlerflag
 2468 CD93  18 04       	JR	MBRES		; fertig
 2469                   ;
 2470 CD95  CD E4E1     MBICL:	CALL	PV7
 2471 CD98  05          	DB	5		; Dateieingabe stoppen mit CSRI
 2472 CD99  DD CB 07 AE MBRES:	RES	5,(IX+7)	; 'U'-Merker ruecksetzen (Blocknummern anzeigen)
 2473 CD9D  18 9C       	JR	MBCERR		; fertig
 2474                   
 2475                   ; Byteeingabe von Datentraeger (BASIC-Schnittstelle)	**37**
 2476                   
 2477                   ; Zunaechst Daten aus Puffer entnehmen und nur wenn Puffer leer ist in die
 2478                   ; MBIN-Routine(n) des eingestellten Treibers springen
 2479                   
 2480                   ; PE:	D	Steuerbyte
 2481                   ;		Bit 3 = 1 INIT (Block 01)
 2482                   ;		Bit 6 = 1 Close (Block FF)
 2483                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 2484                   ; PA:	A	Datenbyte
 2485                   ;	CY=1	Fehler (auch falscher Dateiname bei TAPE)
 2486                   ; VR:	AF, DE, HL
 2487                   ;
 2488 CD9F  5A          MBIC:	LD	E,D		; Steuerbyte
 2489                   ;	LD	D,A		; Datenbyte (PA!)
 2490 CDA0  D5          	PUSH	DE
 2491 CDA1  C5          	PUSH	BC
 2492 CDA2  CB 73       	BIT	6,E		; Close?
 2493 CDA4  20 EF       	JR	NZ,MBICL	; ja, Bandeingabe stoppen
 2494 CDA6  CB 5B       	BIT	3,E		; Init?
 2495 CDA8  28 64       	JR	Z,MBIU		; nein, Datenbyte holen
 2496                   ; Init
 2497 CDAA  E5          	PUSH	HL		; Dateiname merken
 2498                   ;
 2499                   ; 29.03.2021:
 2500                   ; Dateityp hier schon testen zur Unterdrueckung bei BASIC-Listings *.UUU
 2501                   ; der Test nach dem Einlesen des ersten -blocks funktioniert nur bei TAPE.
 2502                   ;
 2503 CDAB  7E          	LD	A,(HL)		; vorangestellter Dateityp: 1. Zeichen testen
 2504 CDAC  FE D5       	CP	'U'+80H		; hohes 'U'?
 2505 CDAE  20 04       	JR	NZ,MBIC0
 2506 CDB0  DD CB 07 EE 	SET	5,(IX+7)	; merken zur Blocknummernausgabeunterdrueckung
 2507                   				; beim Einlesen von ASCII-Listings
 2508 CDB4  CD D774     MBIC0:	CALL	BNAME		; Dateiname konvertieren/merken fuer ISRI
 2509 CDB7  21 B7F5     	LD	HL,FNAME	; konvertierter Dateiname
 2510 CDBA  CD E4E1     	CALL	PV7
 2511 CDBD  04          	DB	4		; Block 01h einlesen mit ISRI
 2512 CDBE  E1          MBIC1:	POP	HL		; gesuchter Dateiname fuer Vergleich
 2513 CDBF  DA CE54     MBIC2:	JP	C,JBLERR	; Lesefehler: '*'
 2514 CDC2  DD 7E 02    	LD	A,(IX+2)	; gelesener Block
 2515 CDC5  3D          	DEC	A
 2516 CDC6  C2 CE54     	JP	NZ,JBLERR	; falsche Blocknummer: '*'
 2517 CDC9  DD CB 07 BE 	RES	7,(IX+7)	; Kopfblock ist geladen
 2518 CDCD  DD 34 03    	INC	(IX+3)		; naechster erwarteter Block
 2519 CDD0  11 B700     	LD	DE,CASS		; Daten stehen jetzt im Kassettenpuffer
 2520 CDD3  CD ED6D     	CALL	DEV		; Kassette?
 2521 CDD6  20 2B       	JR	NZ,MBINN	; nein, sofort Datenbyte entnehmen
 2522                   	
 2523                   ; Dateiname anzeigen/vergleichen
 2524 CDD8  06 0B       	LD	B,11		; Laenge des Dateinamens bei Tape im Kassettenpuffer
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  56
CC48    INC

 2525 CDDA  1A          	LD	A,(DE)		; vorangestellter Dateityp: 1. Zeichen testen
 2526                   ;	CP	'U'+80H		; hohes 'U'?
 2527                   ;	JR	NZ,MBIC3
 2528                   ;	SET	5,(IX+7)	; merken zur Blocknummernausgabeunterdrueckung
 2529                   ;				; beim Einlesen von ASCII-Listings
 2530 CDDB  C6 29       MBIC3:	ADD	A,29H		; geschuetztes Programm?
 2531 CDDD  30 0A       	JR	NC,MBIC4
 2532 CDDF  1A          	LD	A,(DE)		; geschuetzte BASIC-Programme
 2533 CDE0  D6 04       	SUB	4		; als ungeschuetzt anzeigen
 2534 CDE2  12          	LD	(DE),A		; 1. Zeichen vom Dateityp
 2535 CDE3  13          	INC	DE
 2536 CDE4  12          	LD	(DE),A		; 2. Zeichen vom Dateityp
 2537 CDE5  13          	INC	DE
 2538 CDE6  12          	LD	(DE),A		; 3. Zeichen vom Dateityp
 2539                   ;	LD	(DATFLG),A	; <=hier LIST/EDIT/BYE-Schutz setzen
 2540                   ;	SET	6,(IX+7)	; Das war ein RESET-Schutz bei CAOS 3.1
 2541 CDE7  1B          	DEC	DE
 2542 CDE8  1B          	DEC	DE		; DE wieder auf Anfang Kassettenpuffer
 2543 CDE9  1A          MBIC4:	LD	A,(DE)		; Name aus Kassettenpuffer
 2544 CDEA  CD F3BA     	CALL	OCHR		; anzeigen
 2545 CDED  BE          	CP	(HL)		; stimmt Name?
 2546 CDEE  28 04       	JR	Z,MBIC5
 2547 CDF0  DD CB 07 FE 	SET	7,(IX+7)	; nein-merken
 2548 CDF4  23          MBIC5:	INC	HL
 2549 CDF5  13          	INC	DE
 2550 CDF6  10 F1       	DJNZ	MBIC4
 2551 CDF8  CD F4C3     	CALL	CRLF
 2552 CDFB  DD CB 07 7E 	BIT	7,(IX+7)	; war der Name korrekt?
 2553 CDFF  37          	SCF			; Fehlerflag
 2554 CE00  C2 CD3B     	JP	NZ,MBCERR	; Name falsch -> ?IO ERROR
 2555 CE03  EB          MBINN:	EX	DE,HL
 2556 CE04  56          MBIC6:	LD	D,(HL)		; Datenbyte aus Kassettenpuffer entnehmen
 2557 CE05  2C          	INC	L		; Zeiger auf naechstes Byte
 2558 CE06  7D          	LD	A,L
 2559 CE07  32 B7DA     	LD	(DTPTR),A	; Zeiger neu setzen
 2560 CE0A  7A          	LD	A,D		; Datenbyte in A bereitstellen
 2561 CE0B  C3 CD3A     	JP	MBOCE		; fertig
 2562                   
 2563                   ; Datenbyte holen
 2564                   
 2565 CE0E  2A B7DA     MBIU:	LD	HL,(DTPTR)	; Zeiger
 2566 CE11  26 B7       	LD	H,HIGH(CASS)	; in Kassettenpuffer
 2567 CE13  CB 7D       	BIT	7,L		; Pufferende erreicht?
 2568 CE15  28 ED       	JR	Z,MBIC6		; Daten aus Puffer entnehmen
 2569 CE17  CD E4E1     MBIU1:	CALL	PV7
 2570 CE1A  01          	DB	1		; einen Block lesen mit MBI
 2571 CE1B  38 2A       	JR	C,MERR		; Lesefehler
 2572 CE1D  3E FF       	LD	A,0FFH
 2573 CE1F  DD BE 02    	CP	(IX+2)		; Block FF?
 2574 CE22  28 13       	JR	Z,MBIU3		; FF immer als korrekt durchgehen lassen
 2575 CE24  DD 7E 03    	LD	A,(IX+3)
 2576 CE27  DD BE 02    	CP	(IX+2)		; erwarteter Block?
 2577 CE2A  28 0B       	JR	Z,MBIU3		; ja, stimmt!
 2578 CE2C  CD F63B     	CALL	BLNOT		; nicht erwarteter Block mit * anzeigen
 2579 CE2F  CD F663     MBIU2:	CALL	BRKT		; Abbruch mit BRK?
 2580 CE32  30 E3       	JR	NC,MBIU1	; weiter versuchen
 2581 CE34  C3 CD3B     JMBERR:	JP	MBCERR		; BRK => IO-ERROR
 2582                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  57
CC48    INC

 2583 CE37  DD 34 03    MBIU3:	INC	(IX+3)		; naechsten Block erwarten
 2584 CE3A  3D          	DEC	A
 2585 CE3B  DD CB 07 6E 	BIT	5,(IX+7)	; Blocknummer unterdruecken?
 2586 CE3F  CC F64E     	CALL	Z,LUP5		; Blocknummer ausgeben, ">" anhaengen und zum
 2587                   				; Zeilenanfan gehen
 2588 CE42  21 B700     MBIU4:	LD	HL,CASS		; Pufferbeginn
 2589 CE45  18 BD       	JR	MBIC6		; jetzt Datenbyte entnehmen
 2590                   
 2591                   ; Lesefehler
 2592 CE47  CD ED6D     MERR:	CALL	DEV		; Kassette?
 2593 CE4A  20 0B       	JR	NZ,JBLE1	; nein, Abbruch bei anderen Devices
 2594 CE4C  CD F63F     	CALL	BLERR		; Blocknummer mit ? anzeigen
 2595 CE4F  CD F4C3     	CALL	CRLF		; neue Zeile
 2596                   ;	CALL	OSTR
 2597                   ;	DB	9,9,9,9,'?',0	; Fehler im Block
 2598                   ;	CALL	BNROST		; mit Blocknummer anzeigen
 2599                   ;	DB	1EH,0		; neue Zeile
 2600 CE52  18 DB       	JR	MBIU2		; BRK testen, sonst weiter versuchen
 2601                   
 2602                   ; falsche Blocknummer oder Lesefehler beim Kopfblock
 2603 CE54  CD ED6D     JBLERR:	CALL	DEV		; Kassette?
 2604 CE57  37          JBLE1:	SCF			; Fehlerkennung
 2605 CE58  20 DA       	JR	NZ,JMBERR	; Abbruch wenn nicht Kassette
 2606 CE5A  CD F63B     	CALL	BLNOT		; nicht erwartete Blocknummer mit * anzeigen
 2607                   ;	CALL	OSTR
 2608                   ;	DB	'*',8,0		; nicht erwarteter 1. Block
 2609                   ;	CALL	BRKT
 2610 CE5D  38 D5       	JR	C,JMBERR	; BRK => IO-ERROR
 2611 CE5F  CD E4E1     	CALL	PV7
 2612 CE62  01          	DB	1		; Block erneut lesen mit MBI
 2613 CE63  C3 CDBF     	JP	MBIC2
 2614                   
 2615                   ; Datenblock ausgeben innerhalb der Byte-Routinen
 2616                   ; PA:	CY=1	Fehler
 2617                   
 2618 CE66  ED 4B B7D8  MBLO:	LD	BC,(VORTN)	; Vortonlaenge
 2619 CE6A  CD E4E1     	CALL	PV7
 2620 CE6D  00          	DB	0		; Block ausgeben mit MBO
 2621 CE6E  D8          	RET	C		; Fehler
 2622 CE6F  DD CB 07 6E MBLO1:	BIT	5,(IX+7)	; Blocknummern unterdruecken?
 2623 CE73  C0          	RET	NZ		; ja
 2624 CE74  C3 F638     	JP	SUP5		; Blocknummer anzeigen, neue Zeile, BRK-Test
 2625                   
 2626                   ; Tabelle der Modulnamen:
 2627                   
 2628 CE77  00 56 41 52 MTAB:	DB	000h,'VARIABEL',0	; M042 (Tim Henning)
 2629 CE81  01 53 54 41 	DB	001H,'START-ROM',0	; M033 z.B. Typestar
 2630 CE8C  70 33 32 4B 	DB	070H,'32K ROM',0	; M045
 2631 CE95  71 36 34 4B 	DB	071H,'64K ROM',0	; M046
 2632 CE9E  72 31 32 38 	DB	072H,'128K ROM',0	; M047
 2633 CEA8  73 32 35 36 	DB	073H,'256K ROM',0	; M048 (Mario Leubner)
 2634 CEB2  74 35 31 32 	DB	074H,'512K ROM',0	; M049 (Andreas Schlechte)
 2635                   ;	DB	075H,'1M ROM',0		; M050 reserviert!
 2636                   ;	DB	076H,'4M ROM',0		; M044 (Bezeichnung bis CAOS 4.8)
 2637 CEBC  76 46 4C 41 	DB	076H,'FLASH',0		; M044 (Bert Lange, Andreas Schlechte)
 2638 CEC3  77 36 34 4B 	DB	077H,'64K RAM',0	; M032 - 64k-Variante
 2639 CECC  78 31 32 38 	DB	078H,'128K RAM',0	; M036
 2640 CED6  79 32 35 36 	DB	079H,'256K RAM',0	; M032 - 256k-Variante
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  58
CC48    INC

 2641 CEE0  7A 35 31 32 	DB	07AH,'512K RAM',0	; M034
 2642 CEEA  7B 31 4D 20 	DB	07BH,'1M RAM',0		; M035, M035x4
 2643                   ;	DB	07CH,'32K EEPROM',0	; reserviert!
 2644                   ;	DB	07DH,'64K EEPROM',0	; reserviert!
 2645                   ;	DB	07EH,'128K EEPROM',0	; reserviert!
 2646                   ;	DB	07FH,'256K EEPROM',0	; M109 '256x8K CMOS RAM' (Tim Henning)
 2647 CEF2  A7 46 4C 4F 	DB	0A7H,'FLOPPY',0		; D004, D008
 2648 CEFA  BF 4D 54 30 	DB	0BFH,'MT02',0		; MT02 (Nachbau Pruefmodul MT01)
 2649                   ;	DB	0D8h,'Z8E',0		; M127 (reserviert fuer Thomas Schramm)
 2650 CF00  D9 45 50 52 	DB	0D9H,'EPROMER 32K',0	; M030 (fuer 2k-32k EPROMs)
 2651                   ;	DB	0DAH,'PIO-3',0		; M002 (geplantes Modul mit 3*PIO)
 2652 CF0D  DA 57 45 41 	DB	0DAH,'WEATHER',0	; M004 (Wetter-Modul, Rene Nitzsche)
 2653 CF16  DB 45 50 52 	DB	0DBH,'EPROMER 64K',0	; M030 (fuer 1k-64k EPROMs)
 2654 CF23  DC 53 4F 55 	DB	0DCH,'SOUND',0		; M066 (Soundmodul, Rene Nitzsche)
 2655 CF2A  DF 4D 50 33 	DB	0DFH,'MP3',0		; M366 (MP3-Modul, Rene Nitsche)
 2656 CF2F  E3 44 41 55 	DB	0E3H,'DAU1',0		; M029
 2657 CF35  E7 41 44 55 	DB	0E7H,'ADU1',0		; M010
 2658 CF3B  EC 53 43 41 	DB	0ECH,'SCANNER',0	; M051 (KC-Club)
 2659 CF44  EE 56 2E 32 	DB	0EEH,'V.24',0		; M003, M053
 2660 CF4A  EF 44 49 47 	DB	0EFH,'DIGITAL I/O',0	; M001
 2661 CF57  F0 38 4B 20 	DB	0F0H,'8K CMOS-RAM',0	; M120 (Nachbau Thomas Schramm)
 2662 CF64  F1 31 36 4B 	DB	0F1H,'16K CMOS-RAM',0	; M122
 2663 CF72  F2 33 32 4B 	DB	0F2H,'32K CMOS-RAM',0	; M124
 2664                   ;	DB	0F3H,'8*8K EPROM',0	; M062-RAM/ROM       (Sonderbehandlung!)
 2665 CF80  F4 31 36 4B 	DB	0F4H,'16K RAM',0	; M022
 2666 CF89  F5 33 32 4B 	DB	0F5H,'32K RAM',0	; M024
 2667 CF92  F6 36 34 4B 	DB	0F6H,'64K RAM',0	; M011
 2668 CF9B  F7 38 4B 20 	DB	0F7H,'8K ROM',0		; M025, M040
 2669 CFA3  F8 31 36 4B 	DB	0F8H,'16K ROM',0	; M028, M040, M041
 2670 CFAC  F9 47 49 44 	DB	0F9H,'GIDE',0		; M064 (Mario Leubner, 2016)
 2671                   ;	DB	0FBH,'8K SOFTWARE',0	; M012, M026, M027   (Sonderbehandlung!)
 2672 CFB2  FC 42 41 53 	DB	0FCH,'BASIC',0		; M006
 2673                   ;	DB	0FDH,'USB+NET',0	; M052               (Sonderbehandlung!)
 2674 CFB9  FF 3F 3F 3F 	DB	0FFH,'???',0		; unbekanntes Modul
 2675 CFBE  53 4F 46 54 MTAB1:	DB	'SOFTWARE'		; Standardanzeige falls ohne Menuewort
 2676 CFC6  00          MTAB2:	DB	0
 2677                   
 2678 CFC7  55 53 45 52 MUSER:	DB	'USER',0		; M005 (USER-Module C0-D7)
 2679                   	;
 2680 CFCC  4E 45 54 2B M052A:	DB	'NET+'			; M052 (USB+Netzwerk, 32K EEPROM 4 * 8K)
 2681 CFD0  55 53 42 00 M052B:	DB	'USB',0			; M052 (nur USB, 8K EEPROM)
 2682                   	;
 2683 CFD4  34 2A 38 4B M062A:	DB	'4*8K RAM',0		; M062-RAM (E. Mueller)
 2684 CFDD  38 2A 38 4B M062B:	DB	'8*8K ROM',0		; M062-ROM (E. Mueller)
 2685                   
 2686                   ;	ABSFILL	0D000h,<ROM-C-Ende>
  237                   
  238                   	INCLUDE	CD48.INC	; ROM-D (D000-DAB7)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM D		**
    3                   ;**					**
    4                   ;**	Adresse:  D000h bis DAB7h	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 16.06.2024	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0D000H
   10                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  59
CD48    INC

   11                   ;*******************************************************************************
   12                   ;	DEVICE-Treiber fuer Kassette (ab CAOS 4.7 im ROM-D)
   13                   ;*******************************************************************************
   14                   
   15                   ; Zeitkonstanten fuer TAPE-Schreiben:
   16                   
   17                   			; Vorton	"1"-Bits
   18         005D      ZKKAT	EQU	93	; Trennzeichen	Vollschwingung ca.  557 Hz
   19         0017      ZKKA0	EQU	23	; "0"		Vollschwingung ca. 1950 Hz
   20         002F      ZKKA1	EQU	47	; "1"		Vollschwingung ca. 1050 Hz
   21                   ;
   22                   ; Zeitkonstanten fuer TAPE-Lesen:
   23                   ;
   24         00A3      IKEZK	EQU	163	; Zeitkonstante fuer CTC
   25         005D      IKEGN	EQU	93	; Erkennung Nullbit
   26         00BA      IKEG1	EQU	186	; Erkennung Einsbit
   27                   
   28                   ; Initialisierung Bandausgabe:				**08**
   29                   ; PA:	CY=0	(kein Fehler bei Bandausgabe)
   30                   
   31 CFE6  F3          TISRO:	DI
   32 CFE7  DB 88       	IN	A,(PIOAD)
   33 CFE9  F6 60       	OR	01100000b	; Motor+LED ein
   34 CFEB  CD E470     	CALL	ISRO1		; Initialisierung
   35 CFEE  DD 36 02 00 	LD	(IX+2),0	; Block 1 (Vorblock)
   36 CFF2  01 1000     	LD	BC,4096		; langer Vorton
   37                   
   38                   ; Ausgabe 1 Block					**01**
   39                   ; PE:	BC	Laenge Vorton
   40                   
   41 CFF5  DD 34 02    TMBO:	INC	(IX+2)
   42 CFF8  3E 87       	LD	A,10000111b	; EI,ZG16,Res
   43 CFFA  F3          	DI
   44 CFFB  D3 8D       	OUT	(CTC1),A
   45 CFFD  3E 2F       	LD	A,ZKKA1		; Vorton "1"
   46 CFFF  D3 8D       	OUT	(CTC1),A
   47 D001  FB          	EI
   48 D002  5F          	LD	E,A		; E=47 (ZK Vorton)
   49 D003  CD D048     MBO1:	CALL	BITOUT		; Vorton ausgeben
   50 D006  ED A1       	CPI
   51 D008  EA D003     	JP	PE,MBO1		; BC mal
   52 D00B  CD D046     	CALL	ZTON		; Trennzeichen
   53 D00E  DD 7E 02    	LD	A,(IX+2)
   54 D011  CD D033     	CALL	BYTOT		; Blocknummer
   55 D014  DD 6E 05    	LD	L,(IX+5)
   56 D017  DD 66 06    	LD	H,(IX+6)	; Blockanfang
   57 D01A  06 80       	LD	B,128		; Zaehler
   58 D01C  7E          BLKOT:	LD	A,(HL)
   59 D01D  CD D033     	CALL	BYTOT		; 128 Datenbyte ausgeben
   60 D020  79          	LD	A,C
   61 D021  86          	ADD	A,(HL)		; Pruefsumme
   62 D022  4F          	LD	C,A		; nebenher berechnen in Register C
   63 D023  23          	INC	HL
   64 D024  10 F6       	DJNZ	BLKOT
   65 D026  CD D033     	CALL	BYTOT		; Pruefsumme ausgeben
   66                   
   67                   ; Bei einer Halbschwingung als Endimpuls aendert sich mit jedem Block die
   68                   ; Polaritaet der Signale. Das ist bei allen CAOS-Versionen so ausser CAOS 4.5.
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  60
CD48    INC

   69                   ; Eventuell ist das ja besser - deshalb ab CAOS 4.6 wieder eine Halbschwingung
   70                   ; als Endimpuls. (bemerkt von Micha im Forum am 02.02.2015)
   71                   
   72 D029  CD D04B     	CALL	HBITOT		; Trennzeichen (2. Halbschwingung)
   73 D02C  5D          	LD	E,L
   74 D02D  54          	LD	D,H		; DE=HL (Pufferende+1)
   75 D02E  3E 03       	LD	A,3		; CTC stoppen
   76 D030  D3 8D       	OUT	(CTC1),A
   77 D032  C9          	RET
   78                   
   79                   ; Ausgabe eines Bytes auf Kassette
   80                   ; PE:	A	Datenbyte
   81                   ; PA:	CY=0
   82                   ;	E	Zeitkonstante fuer Trennzeichen
   83                   ; VR:	AF, E
   84                   
   85 D033  C5          BYTOT:	PUSH	BC
   86 D034  4F          	LD	C,A
   87 D035  06 08       	LD	B,8		; 8 Bit ausgeben
   88 D037  CB 09       BYTOUT:	RRC	C		; mit Bit 0 beginnend
   89 D039  1E 17       	LD	E,ZKKA0
   90 D03B  D4 D048     	CALL	NC,BITOUT	; CY=0 / Nullbit ausgeben
   91 D03E  1E 2F       	LD	E,ZKKA1	
   92 D040  DC D048     	CALL	C,BITOUT	; CY=1 / Einsbit ausgeben
   93 D043  10 F2       	DJNZ	BYTOUT		; 8x wiederholen
   94 D045  C1          	POP	BC
   95 D046  1E 5D       ZTON:	LD	E,ZKKAT		; ZK Trennzeichen
   96                   
   97                   ; Ausgabe einer Vollschwingung
   98                   ; PE:	E	Zeitkonstante
   99                   
  100 D048  CD D04B     BITOUT:	CALL	HBITOT		; Aufrufen und reinlaufen
  101 D04B  DD 73 00    HBITOT:	LD	(IX),E		; Zeitkonstante -> (IX)
  102 D04E  DD 7E 00    HBIT1:	LD	A,(IX)		; Warten bis Zeitkonstante von
  103 D051  A7          	AND	A		; Interruptroutine zurueckgesetzt
  104 D052  20 FA       	JR	NZ,HBIT1
  105 D054  C9          	RET
  106                   
  107                   ; Initialisierung Bandeingabe				**0A**
  108                   ; PE:	HL	Dateiname
  109                   ; PA:	CY=1	Fehler
  110                   ;	CY=0	Block korrekt gelesen
  111                   ; VR:	AF,BC
  112                   
  113 D055  CD E465     TISRI:	CALL	ISRI1		; Motor ein, LED aus
  114                   
  115                   ; Einen Block einlesen:					**05**
  116                   ; PA:	CY=1	Fehler
  117                   ;	CY=0	Block korrekt gelesen
  118                   ; VR:	AF,BC
  119                   
  120 D058  3E 83       TMBI:	LD	A,10000011b
  121 D05A  D3 8A       	OUT	(PIOAS),A	; EI an PIO A (Kassette)
  122 D05C  E5          	PUSH	HL
  123 D05D  D5          	PUSH	DE
  124 D05E  06 16       MBI1:	LD	B,22
  125 D060  CD D0B3     MBI2:	CALL	STOP1		; Lesen einer Vollschwingung
  126 D063  38 F9       	JR	C,MBI1		; kein Einsbit ?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  61
CD48    INC

  127 D065  FE BA       	CP	IKEG1		; Einsbit ?
  128 D067  CD D0A8     	CALL	LEDOO		; LED on/off
  129 D06A  38 F2       	JR	C,MBI1
  130 D06C  10 F2       	DJNZ	MBI2		; 22 korrekte Schwingungen abwarten
  131 D06E  06 02       MBI3:	LD	B,2
  132 D070  AF          MBI4:	XOR	A
  133 D071  CD D0B7     	CALL	STOP2		; Lesen einer Halbschwingung
  134 D074  FE 5D       	CP	IKEGN		; Nullbit ?
  135 D076  30 F6       	JR	NC,MBI3
  136 D078  10 F6       	DJNZ	MBI4		; Warten auf ein komplettes Nullbit
  137 D07A  DD 6E 05    	LD	L,(IX+5)	; Blockpuffer
  138 D07D  DD 66 06    	LD	H,(IX+6)
  139 D080  CD D0C8     	CALL	BYTIN		; Blocknummer lesen
  140 D083  38 1B       	JR	C,MBI5		; Stoerung
  141 D085  DD 77 02    	LD	(IX+2),A	; Blocknummer eintragen
  142 D088  06 80       	LD	B,128		; Blocklaenge
  143 D08A  1E 00       	LD	E,0		; Pruefsumme=0
  144 D08C  CD D0C8     BLKIN:	CALL	BYTIN		; Datenbyte lesen
  145 D08F  38 0F       	JR	C,MBI5		; Stoerung
  146 D091  77          	LD	(HL),A
  147 D092  83          	ADD	A,E		; Pruefsumme berechnen
  148 D093  5F          	LD	E,A
  149 D094  23          	INC	HL
  150 D095  10 F5       	DJNZ	BLKIN
  151 D097  6F          	LD	L,A		; berechnete Pruefsumme
  152 D098  CD D0C8     	CALL	BYTIN		; Vergleichspruefsumme einlesen
  153 D09B  38 03       	JR	C,MBI5		; Stoerung
  154 D09D  95          	SUB	L		; Pruefsumme richtig?
  155 D09E  C6 FF       	ADD	A,-1		; CY:=/Z
  156 D0A0  D1          MBI5:	POP	DE
  157 D0A1  E1          	POP	HL
  158 D0A2  F3          	DI
  159 D0A3  3E 03       	LD	A,3		; DI an PIO A
  160 D0A5  D3 8A       	OUT	(PIOAS),A
  161 D0A7  FB          	EI
  162 D0A8  DB 88       LEDOO:	IN	A,(PIOAD)	; LED ein/aus
  163 D0AA  CB EF       	SET	5,A		; je nach CY
  164 D0AC  30 02       	JR	NC,MBI6
  165 D0AE  CB AF       	RES	5,A
  166 D0B0  D3 88       MBI6:	OUT	(PIOAD),A
  167 D0B2  C9          	RET
  168                   ;
  169                   ; 1 Bit (Vollschwingung) einlesen:
  170                   ; PA:	A	Zeitwert
  171                   ;	CY=0	Einsbit
  172                   ;	CY=1	Nullbit
  173                   ; VR:	AF, C
  174                   ;
  175 D0B3  AF          STOP1:	XOR	A		; mit 0 beginnen
  176 D0B4  CD D0B7     	CALL	STOP2		; erst aufrufen, dann reinlaufen
  177 D0B7  4F          STOP2:	LD	C,A		; 'Zeit' der 1. Halbschwingung in C merken
  178 D0B8  DD 36 00 00 	LD	(IX),0
  179 D0BC  DB 88       STOP21:	IN	A,(PIOAD)
  180 D0BE  D3 88       	OUT	(PIOAD),A	; PIO-Logik freigeben
  181                   ;	LD	A,(IX)		; CTC-Stand von Interrupt
  182                   ;	OR	A		; eingetragen?
  183 D0C0  AF          	XOR	A
  184 D0C1  DD B6 00    	OR	(IX)		; CTC-Stand von Interrupt eingetragen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  62
CD48    INC

  185 D0C4  28 F6       	JR	Z,STOP21	; Warten auf 2. Halbschwingung
  186 D0C6  81          	ADD	A,C		; beide 'Zeiten' addieren
  187 D0C7  C9          	RET
  188                   
  189                   ; Einlesen eines Bytes von Kassette
  190                   ; PA:	A	Byte
  191                   ;	CY=1	Trennzeichen, Stoerung
  192                   ; VR:	AF, C, D
  193                   
  194 D0C8  16 80       BYTIN:	LD	D,80H		; D=Bitschieberegister und Zaehler (Bit 7)
  195 D0CA  CD D0B3     IB1:	CALL	STOP1		; Bit Eingabe
  196 D0CD  38 03       	JR	C,IB2		; Nullbit ?
  197 D0CF  FE BA       	CP	IKEG1		; Einsbit
  198 D0D1  D8          	RET	C		; CY=1: Trennzeichen
  199 D0D2  3F          IB2:	CCF
  200 D0D3  CB 1A       	RR 	D		; Bit einschieben
  201 D0D5  30 F3       	JR	NC,IB1		; bis 8 Bit abgearbeitet sind
  202 D0D7  CD D0B3     	CALL	STOP1		; Trennzeichen (mit CY-Rueckmeldung)
  203 D0DA  7A          	LD	A,D		; Byte in A
  204 D0DB  C9          	RET
  205                   
  206                   ;*******************************************************************************
  207                   ;	DEVICE-Treiber fuer Floppy D004/D008 (ab CAOS 4.6)
  208                   ;*******************************************************************************
  209                   
  210                   ; Eingabedatei oeffnen und Block 01 einlesen		**0A**
  211                   ; PE:	HL	Dateiname
  212                   ; PA:	CY=1	Fehler
  213                   
  214 D0DC  DD 36 02 00 FISRI:	LD	(IX+2),0	; 1. Block lesen
  215 D0E0  DD 36 03 01 	LD	(IX+3),1	; erwarteter Block = 1
  216 D0E4  CD D17A     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  217 D0E7  3E 09       	LD	A,9		; Lesen oeffnen
  218 D0E9  21          	DB	21h		; LD HL,nn
  219                   
  220                   ; Einlesen Datenblock 128 Byte				**05**
  221                   ; PE:	(IX+3)	erwartete Blocknummer
  222                   ; PA:	(IX+2)	gelesene Blocknummer
  223                   ;	CY=1	Lesefehler
  224                   ; VR:	AF,BC
  225                   
  226 D0EA  3E 01       FMBI:	LD	A,1		; Lesen normal
  227 D0EC  CD D130     	CALL	STEUER
  228 D0EF  D8          	RET	C		; Fehler
  229 D0F0  0D          	DEC	C		; STBYT1 -> FDATA (80F2H)
  230 D0F1  E5          	PUSH	HL
  231 D0F2  DD 6E 05    	LD	L,(IX+5)
  232 D0F5  DD 66 06    	LD	H,(IX+6)	; Kassettenpuffer
  233 D0F8  ED 78       FMBI1:	IN	A,(C)
  234 D0FA  CD FB5D     	CALL	LDMAE		; Daten in Speicher ablegen
  235 D0FD  23          	INC	HL
  236 D0FE  04          	INC	B
  237 D0FF  20 F7       	JR	NZ,FMBI1	; CY von allen Befehlen nach RET C unbeeinflusst
  238 D101  E1          	POP	HL
  239                   ;	LD	A,(IX+3)	; erwarteten Block
  240                   ;	LD	(IX+2),A	; als gelesenen Block melden
  241 D102  DD 34 02    	INC	(IX+2)		; Blocknummer erhoehen
  242 D105  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  63
CD48    INC

  243                   
  244                   ; Eingabedatei schliessen				**0B**
  245                   ; PE:
  246                   ; PA:	CY=1	bei Fehler
  247                   
  248 D106  3E 41       FCSRI:	LD	A,41H		; READ - close
  249 D108  18 26       	JR	STEUER
  250                   
  251                   ; Ausgabedatei oeffnen und ersten Block 01h ausgeben	**08**
  252                   ; PE:	Kassettenpuffer mit Daten des Vorblocks
  253                   ;	HL	Dateiname
  254                   ; PA:	CY=1	Fehler
  255                   ; VR:	AF,BC,DE,HL
  256                   
  257 D10A  DD 36 02 00 FISRO:	LD	(IX+2),0	; mit Block 1 beginnen
  258                   ;	LD	L,(IX+5)	; HL = Dateiname im Kassettenpuffer
  259                   ;	LD	H,(IX+6)
  260 D10E  CD D17A     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  261 D111  3E 0B       	LD	A,0BH		; Schreiben oeffnen
  262 D113  21          	DB	21h		; LD HL,nn
  263                   
  264                   ; Ausgabe Datenblock 128 Byte				**01**
  265                   ; PE:	Datenblock im Kassettenpuffer
  266                   ; PA:	CY=1	Fehler
  267                   ; VR:	AF,BC,DE,HL
  268                   
  269 D114  3E 03       FMBO:	LD	A,3		; Schreiben normal
  270 D116  DD 34 02    	INC	(IX+2)		; Blocknummer erhoehen
  271 D119  DD 6E 05    	LD	L,(IX+5)	; Kassettenpuffer
  272 D11C  DD 66 06    	LD	H,(IX+6)
  273 D11F  01 80F2     	LD	BC,FDATA	; 80F2H
  274 D122  1E 80       	LD	E,128
  275 D124  08          	EX	AF,AF'		; Kommando in A' merken
  276 D125  CD FB6D     FMBO1:	 CALL	LDAME		; Daten aus Speicher holen
  277 D128  ED 79       	 OUT	(C),A		; und in Koppel-RAM schreiben
  278 D12A  23          	 INC	HL
  279 D12B  04          	 INC	B
  280 D12C  1D          	 DEC	E
  281 D12D  20 F6       	 JR	NZ,FMBO1
  282 D12F  08          	EX	AF,AF'		; Kommando zurueck nach A
  283                   ;
  284                   ; Steuerbyte 1 ausgeben, bei Fehler: Fehlercode/-text anzeigen
  285                   ; PE:	A	Kommando-Steuerbyte
  286                   ; PA:	A	Antwort von DEP
  287                   ;	CY=1	Fehler aufgetreten
  288                   ; VR:	AF, BC
  289                   ;
  290 D130  01 80F3     STEUER:	LD	BC,STBYT1	; 80F3H
  291 D133  ED 79       STEU0:	OUT	(C),A
  292 D135  C5          STEU1:	PUSH	BC
  293 D136  3E 01       	LD	A,1		; 6ms
  294 D138  CD FC21     	CALL	WAIT		; warten
  295 D13B  C1          	POP	BC
  296 D13C  ED 78       	IN	A,(C)
  297 D13E  A7          	AND	A		; CY-Flag=0
  298 D13F  CB 47       	BIT	0,A
  299 D141  20 F2       	JR	NZ,STEU1	; fertig?
  300 D143  CB 7F       	BIT	7,A		; Bit 7 gesetzt?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  64
CD48    INC

  301 D145  C8          	RET	Z		; kein Fehler
  302 D146  01 83F1     FLERR:	LD	BC,DEPVER	; 83F1H
  303 D149  ED 78       	IN	A,(C)
  304 D14B  FE 20       	CP	20H		; DEP ab 2.0?
  305 D14D  30 0D       	JR	NC,FLER1	; ja
  306 D14F  01 81F3     	LD	BC,FCODE	; 81F3H
  307 D152  ED 78       	IN	A,(C)		; Fehlernummer
  308 D154  CD F3A9     	CALL	AHEX		; anzeigen
  309 D157  CD F4B9     	CALL	ERRM
  310 D15A  37          FLER3:	SCF			; CY=1: Fehler
  311 D15B  C9          	RET
  312                   	;
  313 D15C  06 00       FLER1:	LD	B,HIGH(ERRTX)	; 00F1H = Fehlertext von DEP 2.0
  314 D15E  ED 78       FLER2:	IN	A,(C)
  315 D160  04          	INC	B
  316 D161  A7          	AND	A
  317 D162  28 F6       	JR	Z,FLER3		; 00=Ende
  318 D164  CD F3BA     	CALL	OCHR
  319 D167  18 F5       	JR	FLER2
  320                   ;
  321                   ; Steuerbyte 2 ausgeben, bei Fehler: Fehlercode/-text anzeigen
  322                   ; PE:	A	Kommando-Steuerbyte
  323                   ; PA:	A	Antwort von DEP
  324                   ;	CY=1	Fehler aufgetreten
  325                   ; VR:	AF, BC
  326                   ;
  327 D169  01 80F1     STEUB2:	LD	BC,STBYT2	; 80F1H
  328 D16C  18 C5       	JR	STEU0
  329                   
  330                   ; Ausgabedatei schliessen und Endeblock FFh ausgeben	**09**
  331                   ; PE:	Datenblock im Kassettenpuffer
  332                   ; PA:	CY=1	bei Fehler
  333                   ; VR:	AF,BC,DE,HL
  334                   
  335 D16E  DD 36 02 FE FCSRO:	LD	(IX+2),0FEH	; Nr. letzter Block
  336 D172  CD D114     	CALL	FMBO		; Datenblock ausgeben
  337 D175  D8          	RET	C		; Fehler
  338 D176  3E 43       	LD	A,43H		; write close
  339 D178  18 B6       	JR	STEUER
  340                   
  341                   ; Dateiname ausgeben
  342                   ; PE:	HL	Dateiname, Ende mit 00 (max. 12 Zeichen)
  343                   ;	D	Maske FFh (Trennzeichen=0) oder DFh (Trennzeichen=SPC oder 0)
  344                   ; VR:	AF,BC,E,HL
  345                   
  346 D17A  11 FF0C     NAMOUT:	LD	DE,0FF0Ch	; D=Maske, E=max. Laenge Dateiname 8.3 (12)
  347 D17D  01 82F3     NAMO1:	LD	BC,DIRBUF	; 82F3H
  348 D180  7E          NAMO2:	LD	A,(HL)
  349 D181  ED 79       	OUT	(C),A		; Dateiname zum D004 ausgeben
  350 D183  A2          	AND	D		; war das ein Trennzeichen?
  351 D184  28 01       	JR	Z,NAMO3
  352 D186  23          	INC	HL		; naechstes Zeichen solange kein Trennzeichen
  353 D187  04          NAMO3:	INC	B
  354 D188  1D          	DEC	E
  355 D189  20 F5       	JR	NZ,NAMO2
  356 D18B  C9          	RET
  357                   ;
  358                   ; Name ein-, ausgeben: (fuer RENAME)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  65
CD48    INC

  359                   ; PE:	DE	Zeiger auf Dateinamen, wenn 0 dann Eingabe
  360                   ; PA:	CY=1	BRK
  361                   ;	DE	Zeiger auf Zeichen nach Dateinamen (2. Name bei REN)
  362                   ;
  363 D18C  CD F565     FNAM1:	CALL	NAMHL		; Dateiname eingeben
  364 D18F  D8          	RET	C		; BRK
  365 D190  11 DF0C     FNAM2:	LD	DE,0DF0Ch	; D=Maske, E=max. Laenge Dateiname 8.3 (12)
  366 D193  CD D17D     	CALL	NAMO1		; ausgeben zum D004	
  367 D196  EB          	EX	DE,HL		; Zeiger jetzt wieder in DE
  368 D197  13          	INC	DE		; Trennzeichen uebergehen
  369 D198  C9          	RET
  370                   
  371                   ; CAOS-D-Teil der Pixelausgaberoutine WPIX
  372                   
  373 D199  79          WPIXD:	LD	A,C
  374 D19A  01 DC00     	LD	BC,0DC00H
  375 D19D  87          	ADD	A,A
  376 D19E  38 2C       	JR	C,WPX02		; 80..FF
  377 D1A0  05          	DEC	B
  378 D1A1  FE 40       	CP	40H
  379 D1A3  38 27       	JR	C,WPX02		; 00..1F
  380 D1A5  06 ED       	LD	B,0EEH-1	; Grossbuchstaben
  381 D1A7  FE B6       	CP	2*5BH
  382 D1A9  38 21       	JR	C,WPX02		; 20..5A
  383 D1AB  FE BC       	CP	2*5EH
  384 D1AD  38 0C       	JR	C,WPX01		; 5B..5D
  385 D1AF  FE C0       	CP	2*60H
  386 D1B1  38 19       	JR	C,WPX02		; 5E..5F
  387 D1B3  28 06       	JR	Z,WPX01		; 60
  388 D1B5  06 FC       	LD	B,0FEH-2	; Kleinbuchstaben
  389 D1B7  FE F6       	CP	2*7BH
  390 D1B9  38 11       	JR	C,WPX02		; 61..7A
  391 D1BB  01 DAB8     WPX01:	LD	BC,0DAB8H	; Zusatztabelle
  392 D1BE  D6 B6       	SUB	2*5BH
  393 D1C0  FE 06       	CP	6
  394 D1C2  38 08       	JR	C,WPX02		; 5B..5D
  395 D1C4  D6 04       	SUB	4
  396 D1C6  FE 06       	CP	6
  397 D1C8  28 02       	JR	Z,WPX02		; 60
  398 D1CA  D6 34       	SUB	34H
  399 D1CC  6F          WPX02:	LD	L,A
  400 D1CD  26 00       	LD	H,0
  401 D1CF  29          	ADD	HL,HL		; *4
  402 D1D0  C3 E0EB     	JP	WPX07		; Zurueck zu CAOS-E
  403                   
  404                   ; Rolle Fenster fuer Scrollroutine
  405                   
  406 D1D3  E5          MOVELN:	PUSH	HL
  407 D1D4  D5          	PUSH	DE
  408 D1D5  C5          	PUSH	BC
  409 D1D6  F5          	PUSH	AF
  410 D1D7  08          	EX	AF,AF'
  411 D1D8  F5          	PUSH	AF
  412 D1D9  79          	LD	A,C		; BC: Pixelzeilen
  413 D1DA  08          	EX	AF,AF'
  414 D1DB  3A B79E     	LD	A,(WINLG)	; Spalten
  415 D1DE  E5          MOLN1:	PUSH	HL
  416 D1DF  D5          	PUSH	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  66
CD48    INC

  417 D1E0  ED A0       MOLN2:	LDI			; zeichenweise
  418 D1E2  ED A0       	LDI
  419 D1E4  ED A0       	LDI
  420 D1E6  ED A0       	LDI
  421 D1E8  ED A0       	LDI
  422 D1EA  ED A0       	LDI
  423 D1EC  ED A0       	LDI
  424 D1EE  ED A0       	LDI
  425 D1F0  EA D1E0     	JP	PE,MOLN2
  426 D1F3  D1          	POP	DE
  427 D1F4  E1          	POP	HL
  428 D1F5  24          	INC	H		; neue Spalte
  429 D1F6  14          	INC	D
  430 D1F7  08          	EX	AF,AF'
  431 D1F8  4F          	LD	C,A
  432 D1F9  08          	EX	AF,AF'
  433 D1FA  3D          	DEC	A		; Spaltenzaehler
  434 D1FB  20 E1       	JR	NZ,MOLN1
  435 D1FD  08          	EX	AF,AF'
  436 D1FE  F1          	POP	AF
  437 D1FF  08          	EX	AF,AF'
  438 D200  C3 E0B7     	JP	POP4		; POP	AF,BC,DE,HL   RET
  439                   
  440                   ; Loeschen einer Zeile
  441                   ; HL: Adresse, C: Laenge, A: Byte
  442                   
  443 D203  41          CLLINE:	LD	B,C
  444 D204  55          CLL1:	LD	D,L		; L retten
  445 D205  77          	LD	(HL),A		; zeichenweise
  446 D206  2C          	INC	L		; ohne Schleife
  447 D207  77          	LD	(HL),A
  448 D208  2C          	INC	L
  449 D209  77          	LD	(HL),A
  450 D20A  2C          	INC	L
  451 D20B  77          	LD	(HL),A
  452 D20C  2C          	INC	L
  453 D20D  77          	LD	(HL),A
  454 D20E  2C          	INC	L
  455 D20F  77          	LD	(HL),A
  456 D210  2C          	INC	L
  457 D211  77          	LD	(HL),A
  458 D212  2C          	INC	L
  459 D213  77          	LD	(HL),A
  460 D214  6A          	LD	L,D		; L holen
  461 D215  24          	INC	H
  462 D216  10 EC       	DJNZ	CLL1
  463 D218  C9          	RET
  464                   
  465                   ; CAOS-D-Teil der Scrollroutine SCRLPG
  466                   
  467 D219  3A B79E     SCRLD:	LD	A,(WINLG)	; Spalten
  468 D21C  4F          	LD	C,A
  469 D21D  06 00       	LD	B,0
  470 D21F  3A B79F     	LD	A,(WINLG+1)	; Zeilen
  471 D222  3D          	DEC	A		; nur 1 Zeile?
  472 D223  28 3A       	JR	Z,SCRL3		; nur CLLN
  473 D225  D5          	PUSH	DE
  474 D226  F5          	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  67
CD48    INC

  475 D227  50          	LD	D,B		; DE=0
  476 D228  58          	LD	E,B		; Cursor links/oben
  477 D229  CD E087     	CALL	DABR
  478 D22C  EB          	EX	DE,HL
  479 D22D  21 0028     SCRL1:	LD	HL,40		; 1 Zeile tiefer
  480 D230  19          	ADD	HL,DE
  481 D231  E5          	PUSH	HL
  482 D232  C5          	PUSH	BC
  483 D233  ED B0       	LDIR			; im VRAM eine Zeile rollen
  484 D235  C1          	POP	BC
  485 D236  D1          	POP	DE
  486 D237  3D          	DEC	A
  487 D238  20 F3       	JR	NZ,SCRL1	; A-mal rollen
  488 D23A  F1          	POP	AF
  489 D23B  87          	ADD	A,A
  490 D23C  87          	ADD	A,A
  491 D23D  87          	ADD	A,A		; *8: Pixelzeile
  492 D23E  4F          	LD	C,A
  493 D23F  50          	LD	D,B		; B war 0
  494 D240  58          	LD	E,B		; DE=0
  495 D241  CD E05D     	CALL	PADR1
  496 D244  EB          	EX	DE,HL		; DE=Pixeladresse
  497 D245  2E 08       	LD	L,8		; H war 0
  498 D247  19          	ADD	HL,DE
  499 D248  3A B7A2     	LD	A,(STBT)
  500 D24B  1F          	RRA
  501 D24C  1F          	RRA
  502 D24D  38 0B       	JR	C,SCRL2		; Farbe AUS
  503 D24F  F5          	PUSH	AF
  504 D250  CD F999     	CALL	ESC9
  505 D253  CD D1D3     	CALL	MOVELN
  506 D256  CD F999     	CALL	ESC9
  507 D259  F1          	POP	AF
  508 D25A  17          SCRL2:	RLA			; Pixel AUS?
  509 D25B  D4 D1D3     	CALL	NC,MOVELN
  510 D25E  D1          	POP	DE
  511 D25F  15          SCRL3:	DEC	D
  512                   
  513                   ; CAOS-D-Teil der Zeilenloeschroutine CLLN (Shift-DEL)
  514                   
  515 D260  1E 00       CLLND:	LD	E,0		; Cursor auf Spalte 0
  516 D262  CD E087     	CALL	DABR		; ausserhalb?
  517 D265  D8          	RET	C		; (Selbstschutz)
  518 D266  3A B79E     	LD	A,(WINLG)
  519 D269  47          	LD	B,A		; Spalten
  520 D26A  4F          	LD	C,A
  521 D26B  AF          	XOR	A
  522 D26C  77          CLLN1:	LD	(HL),A		; VRAM loeschen
  523 D26D  23          	INC	HL
  524 D26E  10 FC       	DJNZ	CLLN1
  525 D270  CD E05D     	CALL	PADR1
  526 D273  D8          	RET	C
  527 D274  D5          	PUSH	DE
  528 D275  DD CB 01 5E 	BIT	3,(IX+1)
  529 D279  3A B7A2     	LD	A,(STBT)
  530 D27C  20 04       	JR	NZ,CLLALT	; LORES
  531 D27E  CB 77       	BIT	6,A
  532 D280  20 1C       	JR	NZ,CLLHR	; HRG-Modus
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  68
CD48    INC

  533 D282  0F          CLLALT:	RRCA			; Pixel AUS?
  534 D283  5F          	LD	E,A		; nach E merken
  535 D284  38 06       	JR	C,CLLN2
  536 D286  AF          	XOR	A
  537 D287  E5          	PUSH	HL
  538 D288  CD D203     	CALL	CLLINE		; Pixel loeschen
  539 D28B  E1          	POP	HL
  540 D28C  CB 0B       CLLN2:	RRC	E		; Farbe AUS?
  541 D28E  38 0C       	JR	C,CLLN3
  542 D290  CD F999     	CALL	ESC9
  543 D293  3A B7A3     	LD	A,(COLOR)
  544 D296  CD D203     CLLCOL:	CALL	CLLINE		; Farbe setzen
  545 D299  CD F999     	CALL	ESC9
  546 D29C  D1          CLLN3:	POP	DE
  547 D29D  C9          	RET
  548                   
  549 D29E  3A B7A3     CLLHR:	LD	A,(COLOR)
  550 D2A1  E6 03       	AND	00000011b	; Paper, CY=0
  551 D2A3  1F          	RRA
  552 D2A4  3D          	DEC	A		; NEG ohne Veraenderung von CY
  553 D2A5  2F          	CPL
  554 D2A6  5F          	LD	E,A		; E = FFh * Bit 1 (Farbe)
  555 D2A7  9F          	SBC	A,A		; A = FFh * Bit 0 (Pixel)
  556 D2A8  E5          	PUSH	HL
  557 D2A9  CD D203     	CALL	CLLINE
  558 D2AC  E1          	POP	HL
  559 D2AD  CD F999     	CALL	ESC9
  560 D2B0  7B          	LD	A,E		; Farbe
  561 D2B1  18 E3       	JR	CLLCOL
  562                   
  563                   ; Quadratwurzel 16Bit A=SQR(HL)				**40**
  564                   
  565 D2B3  AF          SQRC:	XOR	A		; A=0, CY=0
  566 D2B4  3D          	DEC	A		; A=FF
  567 D2B5  5F          	LD	E,A
  568 D2B6  57          	LD	D,A		; DE=FFFF
  569 D2B7  3C          SQR1:	INC	A		; mitzaehlen
  570 D2B8  13          	INC	DE
  571 D2B9  13          	INC	DE
  572 D2BA  ED 52       	SBC	HL,DE
  573 D2BC  30 F9       	JR	NC,SQR1
  574 D2BE  C3 FB84     	JP	COFF		; -> COFF
  575                   
  576                   ; Speicherschnellansicht
  577                   
  578 D2C1  7F7F        VIEW7F:	DW	7F7FH
  579 D2C3  76 69 65 77 	DB	'view'
  580 D2C7  03          	DB	3		; mindestens 1 Argument
  581 D2C8  7D          	LD	A,L
  582 D2C9  FE 10       	CP	10H
  583 D2CB  30 0C       	JR	NC,VIEW1	; L>0Fh
  584 D2CD  7C          	LD	A,H
  585 D2CE  A7          	AND	A
  586 D2CF  20 08       	JR	NZ,VIEW1	; H>0
  587 D2D1  21 B782     	LD	HL,ARG1
  588 D2D4  ED 6F       	RLD
  589 D2D6  66          	LD	H,(HL)
  590 D2D7  2E 00       	LD	L,0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  69
CD48    INC

  591 D2D9  11 8800     VIEW1:	LD	DE,8800H
  592 D2DC  01 2000     	LD	BC,2000H
  593 D2DF  CD FB6D     VIEW2:	CALL	LDAME		; Byte holen
  594 D2E2  12          	LD	(DE),A		; in IRM poken
  595 D2E3  23          	INC	HL
  596 D2E4  13          	INC	DE
  597 D2E5  0D          	DEC	C
  598 D2E6  20 F7       	JR	NZ,VIEW2
  599 D2E8  10 F5       	DJNZ	VIEW2
  600 D2EA  3E 0B       VIEW3:	LD	A,0BH		; Zeile hoch
  601 D2EC  CD F3BA     	CALL	OCHR
  602 D2EF  3E 08       	LD	A,8
  603 D2F1  32 B7A0     	LD	(CURSO),A
  604 D2F4  CD D2F7     	CALL	VIEW4
  605 D2F7  3E 01       VIEW4:	LD	A,1
  606 D2F9  4F          VIEW5:	LD	C,A
  607 D2FA  CD F3A9     	CALL	AHEX		; HEX-Leiste
  608 D2FD  79          	LD	A,C
  609 D2FE  C6 22       	ADD	A,22H
  610 D300  30 F7       	JR	NC,VIEW5
  611 D302  C9          	RET
  612                   
  613                   ; Schreibe ON, ON* oder OFF fuer Systemcheck
  614                   ; PE:	Z=1	OFF
  615                   ;	Z=0 und CY=0 ON
  616                   ;	Z=0 und CY=1 ON*
  617                   
  618 D303  28 14       WONOF:	JR	Z,WOF
  619 D305  F5          	PUSH	AF
  620 D306  CD F0B3     	CALL	OSTR
  621 D309  20 4F 4E 00 	DB	' ON',0
  622 D30D  F1          	POP	AF
  623 D30E  3E 20       	LD	A,' '
  624 D310  30 02       	JR	NC,WRR
  625 D312  3E 2A       	LD	A,'*'		; Schreibschutz anzeigen
  626 D314  CD F3BA     WRR:	CALL	OCHR
  627 D317  18 08       	JR	WRLF
  628                   	;
  629 D319  CD F0B3     WOF:	CALL	OSTR
  630 D31C  20 4F 46 46 	DB	' OFF',0
  631 D321  C3 F4C3     WRLF:	JP	CRLF
  632                   
  633                   ; Anzeige Steckplatz, Kennbyte, Steuerbyte fuer Modulcheck
  634                   
  635 D324  7D          LHD:	LD	A,L
  636 D325  CD F39E     	CALL	AHSPC		; Steckplatz
  637 D328  7C          	LD	A,H
  638 D329  CD F39E     	CALL	AHSPC		; Kennbyte
  639 D32C  7A          	LD	A,D
  640 D32D  C3 F39E     	JP	AHSPC		; Steuerbyte
  641                   
  642                   ; * * * *	ab hier DEVICE-Treiber-Funktionen (neu)	* * * *
  643                   
  644                   ;
  645                   ; Floppy-Treiber Funktion 0: Directory mit Maske
  646                   ; PE:	DE	Maske
  647                   ; PA:	HL	Anzahl passender Eintraege
  648                   ; VR:	AF, BC, DE, HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  70
CD48    INC

  649                   ;
  650 D330  EB          FDIR:	EX	DE,HL		; HL=Maske aus Kommandozeile
  651 D331  11 B700     	LD	DE,CASS
  652 D334  01 000B     	LD	BC,11		; max. Laenge
  653 D337  ED B0       	LDIR			; In Kassettenpuffer ablegen
  654 D339  AF          	XOR	A
  655 D33A  12          	LD	(DE),A		; Abschluss Maske
  656 D33B  32 B796     	LD	(NUMNX),A	; Zeilenzaehler fuer Anzeige
  657 D33E  67          	ld	h,a
  658 D33F  6F          	ld	l,a
  659 D340  22 B797     	ld	(NUMVX),hl	; Zaehler fuer angezeigte Dateien
  660 D343  3E 0D       	LD	A,0DH		; Directory oeffnen
  661 D345  CD D130     DIR1:	CALL	STEUER
  662 D348  CB 57       	BIT	2,A
  663 D34A  20 40       	JR	NZ,DIR6		; Ende
  664 D34C  06 82       	LD	B,HIGH(DIRBUF)	; 82F3H
  665 D34E  21 B70C     	LD	HL,CASS+12
  666                   ;	AND	A		; CY=0
  667 D351  16 03       	LD	D,3		; 3 Eintraege einlesen von DEP
  668 D353  1E 0B       DIR2:	LD	E,11		; 11 Zeichen lang
  669 D355  ED 78       DIR3:	IN	A,(C)		; Zeichen einlesen
  670 D357  F5          	PUSH	AF
  671 D358  E6 7F       	AND	7FH		; ohne Attribut
  672 D35A  04          	INC	B
  673 D35B  77          	LD	(HL),A		; ablegen
  674 D35C  23          	INC	HL
  675 D35D  7B          	LD	A,E
  676 D35E  FE 03       	CP	3		; R/O-Byte?
  677 D360  28 01       	JR	Z,DIR4
  678 D362  F1          	POP	AF		; vom Stack nehmen wenn nicht das R/O-Byte
  679 D363  1D          DIR4:	DEC	E
  680 D364  20 EF       	JR	NZ,DIR3
  681 D366  36 00       	LD	(HL),0		; Ende-Kennung als 12. Byte
  682 D368  23          	INC	HL
  683 D369  04          	INC	B
  684 D36A  F1          	POP	AF
  685 D36B  77          	LD	(HL),A		; R/O-Byte als 13. Byte ablegen
  686 D36C  23          	INC	HL
  687 D36D  15          	DEC	D
  688 D36E  20 E3       	JR	NZ,DIR2
  689                   
  690 D370  21 B70C     	LD	HL,CASS+12	; 3 abgelegte DIR-Eintraege
  691 D373  06 03       	LD	B,3		; 3 Eintraege testen/anzeigen
  692 D375  E5          DIR5:	PUSH	HL
  693 D376  11 B700     	LD	DE,CASS		; die Vergleichsmaske
  694 D379  1A          	LD	A,(DE)
  695 D37A  A7          	AND	A		; CY=0
  696 D37B  C4 D3FF     	CALL	NZ,GLOB		; Vergleich mit Maske, falls angegeben
  697 D37E  E1          	POP	HL
  698 D37F  D4 D3AD     	CALL	NC,DIR7		; Anzeige eines passenden Eintrags
  699 D382  11 000D     	LD	DE,13
  700 D385  19          	ADD	HL,DE		; naechster Eintrag
  701 D386  10 ED       	DJNZ	DIR5		; bis alle 3 Eintraege abgearbeitet sind
  702 D388  3E 05       	LD	A,5		; DIR weiter
  703 D38A  18 B9       	JR	DIR1
  704                   	;
  705 D38C  3A B7A0     DIR6:	LD	A,(CURSO)
  706 D38F  A7          	AND	A		; Cursor auf neuer Zeile?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  71
CD48    INC

  707 D390  C4 F4C3     	CALL	NZ,CRLF		; wenn nicht, dann jetzt ein Zeilenwechsel
  708                   
  709                   ; Nach Ende aller Dateien noch die Statusmeldung anzeigen:
  710                   
  711 D393  3E 15       STAT:	LD	A,15H		; Status abfragen
  712 D395  CD D130     	CALL	STEUER
  713 D398  1E 14       	LD	E,20
  714 D39A  06 82       	LD	B,HIGH(DIRBUF)	; 82F3H
  715 D39C  ED 78       STAT1:	IN	A,(C)
  716 D39E  E6 7F       	AND	7FH		; Bit 7 abtrennen
  717 D3A0  04          	INC	B
  718 D3A1  F5          	PUSH	AF
  719 D3A2  CD F3BA     	CALL	OCHR
  720 D3A5  F1          	POP	AF
  721 D3A6  1D          	DEC	E
  722 D3A7  20 F3       	JR	NZ,STAT1
  723 D3A9  2A B797     	ld	hl,(NUMVX)	; Anzahl Dateien zurueck geben
  724 D3AC  C9          	RET
  725                   
  726                   ; einen DIR-Eintrag anzeigen:
  727                   
  728 D3AD  7E          DIR7:	LD	A,(HL)		; erstes Zeichen
  729 D3AE  FE 20       	CP	' '		; leer?
  730 D3B0  C8          	RET	Z		; dann kein Dateiname!
  731 D3B1  E5          	PUSH	HL		; DIR-Eintrag
  732 D3B2  3A B7A0     	LD	A,(CURSO)
  733 D3B5  FE 27       	CP	3*13		; wenn schon 3 Eintraege auf der Zeile stehen,
  734 D3B7  CC D3D7     	CALL	Z,DIR9		; dann auf neue Zeile wechseln
  735 D3BA  E1          	POP	HL
  736 D3BB  E5          	PUSH	HL
  737 D3BC  CD F039     	CALL	PV1		; damit sich diese Anzeige filtern laesst:
  738 D3BF  45          	DB	45H		; Dateiname anzeigen mit ZKOUT
  739 D3C0  3E 20       	LD	A,' '		; W/R
  740 D3C2  CB 7E       	BIT	7,(HL)
  741 D3C4  28 02       	JR	Z,DIR8
  742 D3C6  3E 2A       	LD	A,'*'		; R/O
  743 D3C8  CD F3BA     DIR8:	CALL	OCHR
  744 D3CB  CD F3A1     	CALL	SPACE
  745 D3CE  2A B797     	ld	hl,(NUMVX)
  746 D3D1  23          	inc	hl		; angezeigte Dateien mitzaehlen
  747 D3D2  22 B797     	ld	(NUMVX),HL
  748 D3D5  E1          	POP	HL
  749 D3D6  C9          	RET
  750                   
  751                   ; Neue Zeile bei DIR-Kommando / warten nach Bildschirmseite:
  752                   
  753 D3D7  21 B796     DIR9:	LD	HL,NUMNX	; Zeilenzaehler
  754 D3DA  34          	INC	(HL)		; Zeilen zaehlen
  755 D3DB  3A B79F     	LD	A,(WINLG+1)	; Anzahl Zeilen im Fenster
  756 D3DE  3D          	DEC	A		; eine Zeile zum ueberlappen der Anzeige lassen
  757 D3DF  96          	SUB	(HL)
  758 D3E0  20 04       	JR	NZ,DIR10
  759 D3E2  77          	LD	(HL),A		; wieder von vorn zaehlen
  760 D3E3  CD F3DA     	call	kbd		; Tastatureingabe abwarten
  761 D3E6  C3 F4C3     DIR10:	JP	CRLF
  762                   ;
  763                   ; Floppy-Treiber Funktion 2: Datei loeschen
  764                   ; PE:	DE	Dateiname
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  72
CD48    INC

  765                   ;	(DE)=0	Dateinamen werden abgefragt
  766                   ; PA:	CY=1	Fehler
  767                   ;
  768 D3E9  EB          FERA:	EX	DE,HL
  769 D3EA  7E          	LD	A,(HL)		; Parameter in Kommandozeile
  770 D3EB  E6 DF       	AND	0DFH		; angegeben?
  771 D3ED  CC F562     	CALL	Z,NAME		; Dateiname abfragen falls nicht angegeben
  772 D3F0  3F          	CCF			; BRK nicht als Fehler anzeigen
  773 D3F1  D0          	RET	NC		; Eingabe Dateiname mit BRK abgebrochen
  774 D3F2  CD D17A     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  775 D3F5  3E 11       	LD	A,11H		; Era
  776 D3F7  CD D130     	CALL	STEUER		; mit Steuerbyte 1 im D004 anfordern
  777 D3FA  D8          	RET	C		; Fehler aufgetreten
  778 D3FB  18 96       	JR	STAT
  779                   
  780                   ; Vergleich mit DIR-Maske:
  781                   
  782 D3FD  23          MAT0:	INC	HL
  783 D3FE  13          MAT0E:	INC	DE
  784 D3FF              GLOB:	; Eintritt, HL=Name, DE=Maske
  785                   	; PA: CY=1: nicht gefunden
  786 D3FF  1A          	LD	A,(DE)
  787 D400  B6          	OR	(HL)		; Beide Ende?
  788 D401  C8          	RET	Z		; -> OK
  789 D402  1A          	LD	A,(DE)
  790 D403  FE 2A       	CP	'*'
  791 D405  28 16       	JR	Z,MAT0S
  792 D407  FE 01       	CP	1
  793 D409  D8          	RET	C		; M Ende
  794 D40A  7E          	LD	A,(HL)
  795 D40B  FE 01       	CP	1
  796 D40D  D8          	RET	C		; N Ende
  797 D40E  1A          	LD	A,(DE)
  798 D40F  FE 3F       	CP	'?'
  799 D411  28 EA       	JR	Z,MAT0		; Joker
  800 D413  CB 6E       	BIT	5,(HL)
  801 D415  CC F538     	CALL	Z,UPCASE
  802 D418  BE          	CP	(HL)
  803 D419  28 E2       	JR	Z,MAT0
  804 D41B  37          	SCF
  805 D41C  C9          	RET
  806                   	;
  807 D41D  E5          MAT0S:	PUSH	HL
  808 D41E  D5          	PUSH	DE
  809 D41F  CD D3FE     	CALL	MAT0E		; Rekursion!
  810 D422  D1          	POP	DE
  811 D423  E1          	POP	HL
  812 D424  D0          	RET	NC		; -> OK
  813 D425  7E          	LD	A,(HL)
  814 D426  23          	INC	HL
  815 D427  B7          	OR	A
  816 D428  20 F3       	JR	NZ,MAT0S
  817 D42A  37          	SCF
  818 D42B  C9          	RET
  819                   ;
  820                   ; Floppy-Treiber Funktion 3: Datei umbenennen
  821                   ; PE:	DE	Zeiger auf Zeichenkette mit 2 Dateinamen
  822                   ;	(DE)=0	Dateinamen werden abgefragt
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  73
CD48    INC

  823                   ; PA:	CY=1	Fehler
  824                   ;
  825 D42C  1A          FREN:	LD	A,(DE)		; Parameter in Kommandozeile
  826 D42D  E6 DF       	AND	0DFH		; angegeben?
  827 D42F  20 13       	JR	NZ,REN1		; ja, dann diesen verwenden
  828 D431  CD F0B3     	CALL	OSTR
  829 D434  41 6C 74 65 	DB	'Alter ',0
  830 D43B  21 000C     	LD	HL,12
  831 D43E  CD D18C     	CALL	FNAM1		; Dateiname abfragen
  832 D441  D8          	RET	C		; BRK
  833 D442  18 04       	JR	REN2
  834                   	;
  835 D444  EB          REN1:	EX	DE,HL		; Dateiname in HL
  836 D445  CD D190     	CALL	FNAM2
  837 D448  3E 29       REN2:	LD	A,29H		; REN alter Dateiname
  838 D44A  CD D130     	CALL	STEUER
  839 D44D  D8          	RET	C		; Fehler
  840 D44E  1A          	LD	A,(DE)		; Parameter in Kommandozeile
  841 D44F  E6 DF       	AND	0DFH		; 2. Dateiname angegeben?
  842 D451  20 13       	JR	NZ,REN3		; ja, dann diesen verwenden
  843 D453  CD F0B3     	CALL	OSTR
  844 D456  4E 65 75 65 	DB	'Neuer ',0
  845 D45D  21 000C     	LD	HL,12
  846 D460  CD D18C     	CALL	FNAM1		; Dateiname abfragen
  847 D463  D8          	RET	C		; BRK
  848 D464  18 04       	JR	REN4
  849                   	;
  850 D466  EB          REN3:	EX	DE,HL		; Dateiname in HL
  851 D467  CD D190     	CALL	FNAM2
  852 D46A  3E 21       REN4:	LD	A,21H		; REN neuer Dateiname
  853 D46C  CD D130     	CALL	STEUER		; Steuerbyte ausgeben
  854 D46F  D8          	RET	C		; Fehler
  855 D470  CD F0B3     	CALL	OSTR
  856 D473  4F 4B 2E 0D 	DB	'OK.',CR,LF,0
  857 D479  C9          	RET
  858                   ;
  859                   ; Anzeige einer beliebigen Text-Datei (nicht fuer TAPE-Modus)
  860                   ;
  861 D47A  7F7F        TYPE7F:	DW	7F7FH
  862 D47C  54 59 50 45 	DB	'TYPE'
  863 D480  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  864 D481  CD D58F     	CALL	TDUP1		; Dateiname in HL
  865 D484  D8          	RET	C		; TAPE oder BRK
  866 D485  CD E4E1     	CALL	PV7		; HL = Dateiname
  867 D488  04          	DB	4		; ISRI (ersten Block einlesen)
  868 D489  38 75       	JR	C,FCLOSE	; Fehler aufgetreten
  869 D48B  3A B710     	LD	A,(CASS+10h)	; Anzahl ARG in Vorblock
  870 D48E  FE 02       	CP	2
  871 D490  38 19       	JR	C,TYPE4		; kein Vorblock, da < 2
  872 D492  FE 05       	CP	5
  873 D494  30 15       	JR	NC,TYPE4	; kein Vorblock, da > 4
  874 D496  18 0D       	JR	TYPE3		; Vorblock -> dann ersten Datenblock einlesen
  875                   	;
  876 D498  CD E0AA     TYPE1:	CALL	CLSX		; CLS Bildschirm, damit nicht zu Druckprotokoll!
  877 D49B  3E 0A       	LD	A,LF
  878 D49D  CD E0AC     	CALL	CRT		; oben eine Zeile frei lassen
  879 D4A0  7B          TYPE2:	LD	A,E
  880 D4A1  FE 80       	CP	80h		; Ende Kassettenpuffer erreicht?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  74
CD48    INC

  881 D4A3  20 09       	JR	NZ,TYPE5	; nein, weiter anzeigen
  882 D4A5  CD E4E1     TYPE3:	CALL	PV7		; naechsten Block einlesen mit
  883 D4A8  01          	DB	1		; MBI
  884 D4A9  38 3F       	JR	C,TYPE10		; Fehler
  885 D4AB  11 B700     TYPE4:	LD	DE,CASS		; Kassettenpuffer zur Entnahme der Daten
  886 D4AE  1A          TYPE5:	LD	A,(DE)		; Zeichen
  887 D4AF  1C          	INC	E		; Zeiger auf naechstes Zeichen
  888 D4B0  FE 03       	CP	3
  889 D4B2  28 36       	JR	Z,TYPE10	; CAOS-Ende
  890 D4B4  FE 1A       	CP	1AH
  891 D4B6  28 32       	JR	Z,TYPE10	; CP/M-Ende
  892 D4B8  FE 20       	CP	20H
  893 D4BA  30 1C       	JR	NC,TYPE8	; ASCII-Zeichen
  894 D4BC  FE 0A       	CP	LF
  895 D4BE  28 18       	JR	Z,TYPE8
  896 D4C0  FE 0D       	CP	CR
  897 D4C2  28 14       	JR	Z,TYPE8
  898 D4C4  FE 09       	CP	9		; TAB in Space umwandeln
  899 D4C6  20 0E       	JR	NZ,TYPE7	; andere Steuerzeichen als Punkt anzeigen
  900 D4C8  3E 20       TYPE6:	LD	A,' '
  901 D4CA  CD F3BA     	CALL	OCHR
  902 D4CD  3A B7A0     	LD	A,(CURSO)
  903 D4D0  E6 07       	AND	7		; TAB-Stopp alle 8 Zeichen
  904 D4D2  20 F4       	JR	NZ,TYPE6
  905 D4D4  18 05       	JR	TYPE9
  906                   	;
  907 D4D6  3E 2E       TYPE7:	LD	A,'.'		; statt Steuerzeichen anzeigen
  908 D4D8  CD F3BA     TYPE8:	CALL	OCHR
  909 D4DB  3A B7A1     TYPE9:	LD	A,(CURSO+1)
  910 D4DE  3C          	INC	A
  911 D4DF  21 B79F     	LD	HL,WINLG+1
  912 D4E2  BE          	CP	(HL)		; Seite voll?
  913 D4E3  20 BB       	JR	NZ,TYPE2
  914 D4E5  CD D5AB     	CALL	TDUP2		; Eingabe abwarten
  915 D4E8  20 AE       	JR	NZ,TYPE1	; auf neuer Seite weiter anzeigen
  916 D4EA  CD F4C3     TYPE10:	CALL	CRLF		; noch eine neue Zeile nach dem Text
  917 D4ED  18 11       	JR	FCLOSE		; Datei schliessen
  918                   ;
  919                   ; Hexadezimele Dateianzeige einer beliebigen Datei (nicht fuer TAPE-Modus)
  920                   ;
  921 D4EF  7F7F        DUMP7F:	DW	7F7FH
  922 D4F1  44 55 4D 50 	DB	'DUMP'
  923 D4F5  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  924 D4F6  CD D58F     	CALL	TDUP1		; Dateiname in HL
  925 D4F9  D8          	RET	C		; TAPE oder BRK
  926 D4FA  CD E4E1     	CALL	PV7		; HL = Dateiname
  927 D4FD  04          	DB	4		; ISRI (ersten Block einlesen)
  928 D4FE  30 23       	JR	NC,DUMP4	; kein Fehler aufgetreten
  929 D500  CD E4E1     FCLOSE:	CALL	PV7		; Datei schliessen
  930 D503  05          	DB	5		; CSRI
  931 D504  CD E4D8     	CALL	CLC		; Kassettenpuffer loeschen
  932 D507  3A B780     	LD	A,(ARGC)	; urspruenglichen ROM-C Schaltzustand 
  933 D50A  32 B805     	LD	(MODST+5),A	; wieder eintragen
  934 D50D  C3 FB84     	JP	COFF		; und so schalten -> DUMP-Ende
  935                   	;
  936 D510  CD E0AA     DUMP2:	CALL	CLSX		; CLS Bildschirm, damit nicht zu Druckprotokoll!
  937 D513  3E 0A       	LD	A,LF
  938 D515  CD E0AC     	CALL	CRT		; oben eine Zeile frei lassen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  75
CD48    INC

  939 D518  7B          DUMP3:	LD	A,E
  940 D519  FE 80       	CP	80h		; Ende Kassettenpuffer erreicht?
  941 D51B  20 09       	JR	NZ,DUMP5	; nein, weiter anzeigen
  942 D51D  CD E4E1     	CALL	PV7		; naechsten Block einlesen mit
  943 D520  01          	DB	1		; MBI
  944 D521  38 DD       	JR	C,FCLOSE	; Fehler
  945 D523  11 B700     DUMP4:	LD	DE,CASS		; Kassettenpuffer zur Entnahme der Daten
  946 D526  EB          DUMP5:	EX	DE,HL
  947 D527  CD F3A1     	CALL	SPACE		; Zeile mit Leerzeichen beginnen
  948 D52A  0E 08       	LD	C,8		; 8 Bytes
  949 D52C  CD D793     	CALL	DPME0		; Anzeigen mit der Display-Rutine
  950 D52F  EB          	EX	DE,HL
  951 D530  CD F4C3     	CALL	CRLF		; neue Zeile
  952 D533  3A B7A1     	LD	A,(CURSO+1)
  953 D536  3C          	INC	A
  954 D537  21 B79F     	LD	HL,WINLG+1
  955 D53A  BE          	CP	(HL)		; Seite voll?
  956 D53B  20 DB       	JR	NZ,DUMP3	; nein, weiter anzeigen
  957 D53D  CD D5AB     	CALL	TDUP2		; Eingabe abwarten
  958 D540  28 BE       	JR	Z,FCLOSE	; BRK -> Datei schliessen und Ende
  959 D542  18 CC       	JR	DUMP2
  960                   ;
  961                   ; Abarbeitung von Kommandos aus einer Datei INITIAL.UUU wie F-Tastencode
  962                   ; Laufwerksangabe wird hier nicht mehr unterstuetzt, das macht DEP 3.x
  963                   ; Ablage und Abarbeitung auf Adresse 100h
  964                   ; Dateigroesse max. 1 Block = 128 Byte !
  965                   ;
  966 D544  7F7F        	DW	7F7FH
  967 D546  49 4E 49 54 	DB	'INIT'
  968 D54A  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  969 D54B  1A          	LD	A,(DE)		; Parameter in Kommandozeile
  970 D54C  E6 DF       	AND	0DFH		; angegeben?
  971 D54E  20 03       	JR	NZ,INIT1	; ja, diesen verwenden
  972 D550  11 EDEB     	LD	DE,UUU		; ansonsten Standard-Dateiname INITIAL.UUU
  973 D553  CD D58F     INIT1:	CALL	TDUP1		; Dateiname in HL
  974 D556  D8          	RET	C		; TAPE oder BRK
  975 D557  CD E4E1     	CALL	PV7		; HL = Dateiname
  976 D55A  04          	DB	4		; ISRI (ersten Block einlesen)
  977 D55B  38 A3       	JR	C,FCLOSE	; Fehler aufgetreten
  978 D55D  21 B700     	LD	HL,CASS		; Daten aus Kassettenpuffer
  979 D560  11 A880     	LD	DE,INITU	; hier aufbereiten zur Abarbeitung (A880h)
  980 D563  7E          INIT2:	LD	A,(HL)		; Zeichen
  981 D564  A7          	AND	A
  982 D565  28 13       	JR	Z,INIT3		; 00 ignorieren
  983 D567  FE 03       	CP	3
  984 D569  28 15       	JR	Z,INIT4		; CAOS-Ende
  985 D56B  FE 0A       	CP	0AH
  986 D56D  28 0B       	JR	Z,INIT3		; LF ignorieren
  987 D56F  FE 1A       	CP	1AH
  988 D571  28 0D       	JR	Z,INIT4		; CP/M-Ende
  989 D573  12          	LD	(DE),A		; Zeichen ablegen
  990 D574  1C          	INC	E		; Ziel +1
  991 D575  7B          	LD	A,E
  992 D576  FE 7F       	CP	7FH
  993 D578  28 06       	JR	Z,INIT4		; Pufferende erreicht
  994 D57A  2C          INIT3:	INC	L		; Quelle +1
  995 D57B  7D          	LD	A,L
  996 D57C  FE 80       	CP	80H		; Pufferende?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  76
CD48    INC

  997 D57E  20 E3       	JR	NZ,INIT2	; weitere Zeichen bearbeiten
  998 D580  AF          INIT4:	XOR	A
  999 D581  12          	LD	(DE),A		; Ende-Kennung anhaengen
 1000 D582  21 A880     	LD	HL,INITU	; Ablage hier (bei DEP 3.2/3.3 noch ab 100h)
 1001 D585  22 B7D1     	LD	(FTAST),HL	; Aktivierung als ob es
 1002 D588  DD CB 08 F6 	SET	6,(IX+8)	; eine Funktionstaste waere
 1003 D58C  C3 D500     	JP	FCLOSE		; Datei schliessen, CAOS ROM-C wie vorher
 1004                   ;
 1005                   ; UP1 fuer TYPE, DUMP, INIT, ERA: Vorbereitung fuer Datei oeffnen
 1006                   ; PA:	CY=1	Fehler (DEVICE=0 oder BRK)
 1007                   ;
 1008 D58F  CD ED6D     TDUP1:	CALL	DEV		; DEVICE?
 1009 D592  37          	SCF			; Fehlerkennung
 1010 D593  C8          	RET	Z		; bei TAPE macht das keinen Sinn...
 1011 D594  EB          	EX	DE,HL
 1012 D595  7E          	LD	A,(HL)		; erstes Zeichen nach Menuewort holen
 1013 D596  E6 DF       	AND	0DFH
 1014 D598  CC F562     	CALL	Z,NAME		; Dateiname abfragen falls nicht angegeben
 1015 D59B  D8          	RET	C		; mit BRK abgebrochen
 1016 D59C  CD F541     	CALL	KPUFF		; Standardpuffer setzen
 1017 D59F  3A B805     	LD	A,(MODST+5)	; Schaltzustand Moduladresse 5 (ROM C)
 1018 D5A2  32 B780     	LD	(ARGC),A	; hier merken (zeigt sonst USER-ROM-Zustand an)
 1019 D5A5  CB C7       	SET	0,A		; und voruebergehend fest einschalten
 1020 D5A7  32 B805     	LD	(MODST+5),A
 1021 D5AA  C9          	RET
 1022                   ;
 1023                   ; UP2 fuer TYPE+DUMP: Eingabe bei Seitenende
 1024                   ; PA:	Z=1	BRK
 1025                   ;
 1026 D5AB  CD F3D4     TDUP2:	CALL	INTB
 1027 D5AE  FE 03       	CP	3		; BRK?
 1028 D5B0  C8          	RET	Z		; ja, Datei schliessen und Ende
 1029 D5B1  FE 0F       	CP	0FH		; Hardcopy?
 1030 D5B3  C0          	RET	NZ
 1031 D5B4  CD F3BA     	CALL	OCHR		; Hardcopy zulassen
 1032 D5B7  18 F2       	JR	TDUP2
 1033                   
 1034                   ; DEVICE einstellen, abfragenn oder anzeigen
 1035                   ; PE:	A = Geraetecode 0..7
 1036                   ;		0	Kassette - Standard
 1037                   ;		1	Diskette - D004/D008
 1038                   ;		2	USB (M052)
 1039                   ;		3-7	Anwender-Treiber
 1040                   ;	A = 8-FD	aktuellen Treiber abfragen (ohne Anzeige)
 1041                   ;	A = FE		aktuellen Treiber anzeigen
 1042                   ;	A = FF		Auflisten aller Treiber
 1043                   ; PA:	CY=1	ausgewaehlter Treiber nicht aktiv
 1044                   ;   bei CY=0:	HL	Name des aktuellen Treibers
 1045                   ;		A	Nummer des aktuellen Treibers (0..7)
 1046                   ;	und	Z=1	Treiber ist Kassette
 1047                   ; VR:	AF,BC,DE,HL
 1048                   
 1049 D5B9  FE 08       SET_DD:	CP	8
 1050 D5BB  30 19       	JR	NC,SETD1
 1051                   ; bei A=0..7 neues DEVICE einstellen
 1052 D5BD  4F          	LD	C,A		; Nr. zum Vergleich merken
 1053 D5BE  87          	ADD	A,A
 1054 D5BF  87          	ADD	A,A		; nach Bits 2..4
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  77
CD48    INC

 1055 D5C0  DD AE 08    	XOR	(IX+8)
 1056 D5C3  E6 1C       	AND	00011100b	; Bits 0..1 und 5..7 zuruecksetzen
 1057 D5C5  DD AE 08    	XOR	(IX+8)		; a = (a XOR b) XOR b fuer Bits 2..4
 1058 D5C8  47          	LD	B,A		; vorbereiteter neuer Wert fuer IX+8
 1059 D5C9  CD ED70     	CALL	DEVROT		; die benoetigten Bits nach 5-7 rotieren
 1060 D5CC  26 A9       	LD	H,High(DEVTAB)	; = A900H
 1061 D5CE  6F          	LD	L,A
 1062 D5CF  7E          	LD	A,(HL)		; Aktivierungsbyte
 1063 D5D0  B9          	CP	C		; aktiver Treiber?
 1064 D5D1  37          	SCF			; Fehlerflag
 1065 D5D2  C0          	RET	NZ		; nein, dann nicht umstellen!
 1066 D5D3  DD 70 08    	LD	(IX+8),B	; neuen Treiber jetzt eintragen
 1067                   	;
 1068 D5D6  FE FF       SETD1:	CP	0FFH
 1069 D5D8  CC D5FC     	CALL	Z,DLI3		; FF = alle Treiber anzeigen
 1070 D5DB  FE FE       	CP	0FEH
 1071 D5DD  CC D5ED     	CALL	Z,DLIST		; FE = aktuellen Treiber anzeigen
 1072 D5E0  CD ED6D     GETDRV:	CALL	DEV		; aktuelle DEVICE-Nr.*32 ermitteln
 1073 D5E3  26 A9       	LD	H,High(DEVTAB)
 1074 D5E5  6F          	LD	L,A
 1075 D5E6  CB D5       	SET	2,L		; HL zeigt jetzt auf den Namen
 1076 D5E8  07          	RLCA
 1077 D5E9  07          	RLCA			; Device-Nummer nach 0-7 konvertieren
 1078 D5EA  07          	RLCA
 1079 D5EB  B7          	OR	A		; CY=0 und Z=1 bei TAPE
 1080 D5EC  C9          	RET
 1081                   
 1082                   ; aktuellen Treiber anzeigen (4 Zeichen):
 1083                   
 1084 D5ED  CD D5E0     DLIST:	CALL	GETDRV		; DEVICE abfragen
 1085 D5F0  06 04       DLI1:	ld	b,4		; 4 Zeichen
 1086 D5F2  7E          DLI2:	ld	a,(hl)
 1087 D5F3  23          	inc	hl
 1088 D5F4  FE 20       	cp	20h		; keine Steuerzeichen!
 1089 D5F6  D4 F3BA     	call	nc,ochr		; Name des Treibers anzeigen
 1090 D5F9  10 F7       	djnz	DLI2
 1091 D5FB  C9          	ret
 1092                   
 1093                   ; alle Treiber auflisten:
 1094                   
 1095 D5FC  F5          DLI3:	PUSH	AF
 1096 D5FD  21 A900     	ld	hl,devtab	; Treiber-Tabelle = A900h
 1097 D600  4D          	ld	c,l		; Beginne mit Treiber Nr. 0
 1098 D601  7E          DLI4:	ld	a,(hl)		; Treibernummer
 1099 D602  B9          	cp	c		; Treiber aktiviert?
 1100 D603  20 12       	jr	nz,DLI5
 1101 D605  23          	inc	hl
 1102 D606  23          	inc	hl
 1103 D607  23          	inc	hl
 1104 D608  23          	inc	hl		; Zeiger auf String
 1105 D609  CD F3B2     	CALL	AHEX0		; Geraetenummer einstellig anzeigen
 1106 D60C  3E 3D       	LD	A,'='
 1107 D60E  CD F3BA     	CALL	OCHR
 1108 D611  CD D5F0     	CALL	DLI1		; Treiber-Name anzeigen
 1109 D614  CD F4C3     	call	CRLF
 1110 D617  7D          DLI5:	ld	a,l
 1111 D618  F6 1F       	or	31
 1112 D61A  3C          	inc	a
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  78
CD48    INC

 1113 D61B  6F          	ld	l,a		; weiter zum naechsten Treiber
 1114 D61C  0C          	inc	c		; Nr. erhoehen
 1115 D61D  79          	ld	a,c
 1116 D61E  FE 08       	cp	8
 1117 D620  20 DF       	jr	nz,DLI4		; Bis alle 8 Treiber erreicht sind
 1118 D622  F1          	POP	AF
 1119 D623  C9          	ret
 1120                   
 1121                   ; Laufwerkwechsel per ESC-D:
 1122                   
 1123 D624  CD F4C3     ESCDD:	CALL	CRLF		; neue Zeile
 1124 D627  CD D5FC     	CALL	DLI3		; Treiber auflisten
 1125 D62A  CD F0B3     DLI6:	CALL	OSTR
 1126 D62D  02 3F 00    	DB	2,'?',0		; Eingabeaufforderung anzeigen
 1127 D630  CD F3DA     	CALL	KBD		; Tastatureingabe
 1128 D633  FE 30       	CP	'0'
 1129 D635  38 F3       	JR	C,DLI6		; Eingabewert zu klein!
 1130 D637  FE 38       	CP	'8'
 1131 D639  30 EF       	JR	NC,DLI6		; zu gross
 1132 D63B  F5          	push	af
 1133 D63C  E6 0F       	AND	0FH
 1134 D63E  CD D5B9     	CALL	SET_DD		; Treiber einstellen
 1135 D641  30 03       	jr	nc,DLI7		; kein Fehler
 1136 D643  F1          	pop	af
 1137 D644  18 E4       	jr	DLI6		; wiederholen
 1138                   	;
 1139 D646  F1          DLI7:	pop	af
 1140 D647  CD F3BA     	call	OCHR		; anzeigen
 1141 D64A  C3 F4C3     	jp	crlf		; neue Zeile
 1142                   ;
 1143                   ; Floppy-Treiber Funktion 1: Laufwerkwechsel (DEP 2.0)
 1144                   ; PE:	DE	Zeichenkette neues Laufwerk
 1145                   ;	(DE)=0	Anzeige aktuelles Laufwerk
 1146                   ; PA:	CY=1	Fehler
 1147                   ;
 1148 D64D  01 83F1     DRIVE:	LD	BC,DEPVER	; 083F1H
 1149 D650  ED 78       	IN	A,(C)
 1150 D652  FE 20       	CP	20H		; DEP ab 2.0?
 1151 D654  30 13       	JR	NC,DRIVE1	; OK, Laufwerkwechsel moeglich
 1152 D656  CD F0B3     	CALL	OSTR
 1153 D659  4B 65 69 6E 	DB	'Kein DEP2!',7,CR,LF,0
 1154 D667  37          	SCF
 1155 D668  C9          	RET
 1156                   	;
 1157 D669  3E 01       DRIVE1:	LD	A,1		; aktuelles Laufwerk/USER lesen
 1158 D66B  CD D169     	CALL	STEUB2
 1159 D66E  1A          	LD	A,(DE)		; erstes Zeichen testen
 1160 D66F  E6 DF       	AND	0DFH		; 00h oder 20h?
 1161 D671  20 29       	JR	NZ,DRIVE3	; mit Argument aufgerufen!
 1162 D673  CD F0B3     	CALL	OSTR
 1163 D676  44 72 69 76 	DB	'Drive:',0
 1164 D67D  01 81F1     	LD	BC,LWANF	; 081F1H
 1165 D680  ED 78       	IN	A,(C)
 1166 D682  CD F3BA     	CALL	OCHR		; Laufwerksbuchstabe anzeigen
 1167 D685  04          	INC	B		; 082F1H
 1168 D686  ED 68       	IN	L,(C)		; aktueller User-Bereich
 1169 D688  26 00       	LD	H,0
 1170 D68A  CD EDA4     	CALL	HLDEZ		; Userbereich dezimal anzeigen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  79
CD48    INC

 1171 D68D  3E 06       	LD	A,6
 1172 D68F  32 B7A0     	LD	(CURSO),A
 1173 D692  CD F47D     	CALL	INLIN		; Eingabe
 1174 D695  3F          	CCF
 1175 D696  D0          	RET	NC		; BRK
 1176 D697  21 0006     	LD	HL,6
 1177 D69A  19          	ADD	HL,DE
 1178 D69B  EB          	EX	DE,HL		; Zeichenkette in DE
 1179 D69C  1A          DRIVE3:	LD	A,(DE)
 1180 D69D  A7          	AND	A		; leer?
 1181 D69E  C8          	RET	Z		; nichts angegeben
 1182 D69F  01 81F1     	LD	BC,LWANF	; 081F1H
 1183 D6A2  CD F538     	CALL	UPCASE
 1184 D6A5  FE 41       	CP	'A'
 1185 D6A7  38 07       	JR	C, DRIVE4	; kleiner als "A", dann nur USER-Bereich?
 1186 D6A9  ED 79       	OUT	(C),A		; neuen LW-Code eintragen
 1187 D6AB  13          	INC	DE		; weiter zum zweiten Zeichen
 1188 D6AC  1A          	LD	A,(DE)
 1189 D6AD  A7          	AND	A		; USER mit angegeben?
 1190 D6AE  28 0E       	JR	Z,DRIVE5	; nein
 1191 D6B0  CD F4D2     DRIVE4:	CALL	RDEZ		; Dezimalzahl erfassen
 1192 D6B3  DA F4B9     	JP	C,ERRM		; Zahl fehlerhaft
 1193 D6B6  3A B797     	LD	A,(NUMVX)	; Wert der erfassten Zahl
 1194 D6B9  01 82F1     	LD	BC,UANF		; 082F1H
 1195 D6BC  ED 79       	OUT	(C),A		; neue USER-Nr. eintragen
 1196 D6BE  3E 07       DRIVE5:	LD	A,7		; LW+User anfordern
 1197 D6C0  CD D169     	CALL	STEUB2		; Stack-Unwinding:
 1198 D6C3  C9          	RET			; nicht in JP umwandeln!
 1199                   
 1200                   ; Geraetetreiber-Funktion aufrufen
 1201                   ; PE:	A	Funktionsnummer
 1202                   ;		0 = DIR bzw. TAPELIST
 1203                   ;		1 = DRIVE oder CD
 1204                   ;		2 = ERA (Datei loeschen)
 1205                   ;		3 = REN (Datei umbenennen)
 1206                   ;		?? (SETWR, SETRO)
 1207                   ;	DE	Dateiname bzw. Maske
 1208                   ; PA:		entsprechend Treiber
 1209                   ; VR:	AF,BC,DE,HL
 1210                   
 1211 D6C4  E6 03       FKT_DD:	and	3		; nur Treiberfunktionen 0..3 definiert
 1212 D6C6  4F          	ld	c,a
 1213 D6C7  CD ED6D     	CALL	DEV		; DEVICE-Nr. in Bit 2-4
 1214 D6CA  81          	add	a,c		; FKT-Nummer dazu
 1215 D6CB  81          	add	a,c
 1216 D6CC  4F          	ld	c,a
 1217 D6CD  06 00       	ld	b,0
 1218 D6CF  21 A918     	ld	HL,DEVTAB+24	; DIR-Kommando des jeweiligen Treibers
 1219 D6D2  09          	ADD	HL,BC
 1220 D6D3  7E          	LD	A,(HL)
 1221 D6D4  23          	INC	HL
 1222 D6D5  66          	LD	H,(HL)		; Aus Treibertabelle ermitteln
 1223 D6D6  6F          	LD	L,A
 1224 D6D7  E9          	JP	(HL)		; und anspringen
 1225                   ;
 1226                   ; TAPELIST = DIR-Kommando fuer Kassette
 1227                   ;
 1228 D6D8  CD F0B3     TLIST:	CALL	OSTR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  80
CD48    INC

 1229 D6DB  54 61 70 65 	DB	'Tape-Directory:',CR,LF,0
 1230 D6ED  21 0000     	ld	hl,0
 1231 D6F0  22 B797     	ld	(NUMVX),hl	; Zaehler fuer angezeigte Dateien
 1232 D6F3  DB 88       	IN	A,(PIOAD)
 1233 D6F5  F6 40       	OR	01000000b	; Motor ein
 1234 D6F7  D3 88       	OUT	(PIOAD),A
 1235 D6F9  3E 0A       	LD	A,10
 1236 D6FB  CD FC21     	CALL	WAIT		; 60ms warten (Bandanlauf)
 1237 D6FE  CD F541     	CALL	KPUFF		; Standard-Puffer einstellen
 1238 D701              TLW:	;LD	(IX+3),1	; Block Nr. 1 erwarten
 1239 D701  CD D058     	CALL	TMBI		; MBI im TAPE-Modus direkt aufrufen
 1240 D704  38 4B       	JR	C,TLBRK		; Fehler aufgetreten
 1241 D706  DD 7E 02    	LD	A,(IX+2)	; gelesene Blocknummer
 1242 D709  B7          	OR	A
 1243 D70A  28 08       	JR	Z,TL01		; Block Nr. 0 erkannt
 1244 D70C  3D          	DEC	A
 1245 D70D  28 05       	JR	Z,TL01		; Block Nr. 1 gefunden
 1246 D70F  CD F63B     BL0:	CALL	BLNOT		; falsche Blocknummer mit * anzeigen
 1247 D712  18 3D       	JR	TLBRK
 1248                   	;
 1249 D714  06 0B       TL01:	LD	B,11		; maximal 11 Zeichen
 1250                   				; (da bei BASIC ab dem 12. Zeichen Daten stehen)
 1251 D716  CD F66F     	CALL	TLNAME		; Name aus Vorblock anzeigen
 1252 D719  2A B797     	ld	hl,(NUMVX)
 1253 D71C  23          	inc	hl		; angezeigte Dateien mitzaehlen
 1254 D71D  22 B797     	ld	(NUMVX),HL
 1255 D720  3A B710     	LD	A,(CASS+10H)	; Anzahl der Argumente
 1256 D723  D6 02       	SUB	2
 1257 D725  FE 08       	CP	8		; 2 bis 10 Argumente?
 1258 D727  30 1A       	JR	NC,TLNO		; keine MC-Datei!
 1259 D729  3E 0C       	LD	A,12
 1260 D72B  32 B7A0     	LD	(CURSO),A	; Adressen immer ab Spalte 12 anzeigen
 1261 D72E  2A B711     	LD	HL,(CASS+11H)	; AADR
 1262 D731  ED 5B B713  	LD	DE,(CASS+13H)	; EADR+1
 1263 D735  CD F391     	CALL	HLDE		; Anfangsadresse und Endadresse anzeigen
 1264 D738  2A B715     	LD	HL,(CASS+15H)	; SADR
 1265 D73B  3A B710     	LD	A,(CASS+10H)
 1266 D73E  FE 03       	CP	3
 1267 D740  D4 F399     	CALL	NC,HLHX		; Startadresse anzeigen
 1268 D743  CD F4C3     TLNO:	CALL	CRLF		; Zeilenvorschub nach Dateiname + Adressen
 1269 D746  DD 7E 02    	LD	A,(IX+2)
 1270 D749  B7          	OR	A		; wurde Name aus Block Nr. 00 angezeigt?
 1271 D74A  20 05       	JR	NZ,TLBRK	; nein
 1272 D74C  CD D058     	CALL	TMBI		; naechsten Block 01 lesen
 1273 D74F  18 BE       	JR	BL0		; mit * anzeigen
 1274                   	;
 1275 D751  CD F663     TLBRK:	CALL	BRKT
 1276 D754  30 AB       	JR	NC,TLW		; wiederholen bis BRK gedrueckt wird
 1277 D756  2A B797     TLX:	ld	hl,(NUMVX)	; Anzahl Dateien zurueck geben
 1278 D759  E5          	PUSH	HL
 1279 D75A  CD EDA4     	CALL	HLDEZ		; dezimal anzeigen
 1280 D75D  CD F0B3     	CALL	OSTR
 1281 D760  20 44 61 74 	DB	' Dateien.',CR,LF,0
 1282 D76C  E1          	POP	HL
 1283                   ;	IN	A,(PIOAD)
 1284                   ;	AND	10011111b	; Motor+LED aus
 1285                   ;	OUT	(PIOAD),A
 1286                   ;	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  81
CD48    INC

 1287                   ;
 1288                   ; Kassette ein/aus (CD im Tape-Mode)
 1289                   ;
 1290 D76D  DB 88       MOT:	IN	A,(PIOAD)
 1291 D76F  EE 40       	XOR	01000000b	; Motor ein/aus
 1292 D771  D3 88       	OUT	(PIOAD),A
 1293 D773  C9          	RET
 1294                   ;
 1295                   ; BASIC-Dateiname ab NAME im Format 8.3 kopieren
 1296                   ;
 1297                   ; PE:	HL	Zeiger auf Dateiname im BASIC-Format = SSSName
 1298                   ;
 1299                   ; PA:	FNAME	Dateiname 8.3-Format = Name.SSS
 1300                   ;
 1301                   ; VR:	BC, AF
 1302                   ;
 1303 D774  E5          BNAME:	PUSH	HL
 1304 D775  D5          	PUSH	DE
 1305 D776  E5          	push	hl		; Beginn Dateityp merken
 1306 D777  23          	inc	hl
 1307 D778  23          	inc	hl
 1308 D779  23          	inc	hl		; mit Name beginnen
 1309 D77A  11 B7F5     	ld	de,FNAME	; Ablage Dateiname im IRM
 1310 D77D  01 0008     	ld	bc,8
 1311 D780  ED B0       	ldir			; Name direkt kopieren
 1312 D782  E1          	pop	hl
 1313 D783  06 03       	ld	b,3
 1314 D785  7E          bnam2:	ld	a,(hl)
 1315 D786  23          	inc	hl
 1316 D787  E6 7F       	and	7fh		; bei Dateityp Bit 7 ruecksetzen
 1317 D789  12          	ld	(de),a
 1318 D78A  13          	inc	de
 1319 D78B  10 F8       	djnz	bnam2
 1320 D78D  D1          	POP	DE
 1321 D78E  E1          	POP	HL
 1322 D78F  C9          	RET
 1323                   
 1324                   ; Ausgabe einer Displayzeile
 1325                   ; HL=Adresse, C=Anzahl Bytes
 1326                   
 1327 D790  CD F399     DPMEMO:	CALL	HLHX		; Adresse
 1328 D793  E5          DPME0:	PUSH	HL		; Hier Einsprung von DUMP-Routine
 1329 D794  41          	LD	B,C
 1330 D795  CD FB6D     DPME1:	CALL	LDAME		; Byte holen
 1331 D798  23          	INC	HL
 1332 D799  CD F39E     	CALL	AHSPC		; anzeigen
 1333 D79C  10 F7       	DJNZ	DPME1		; C*
 1334 D79E  E1          	POP	HL
 1335 D79F  41          	LD	B,C
 1336 D7A0  3E 09       	LD	A,9
 1337 D7A2  CD F3BA     	CALL	OCHR		; CUR
 1338 D7A5  CD FB6D     DPME2:	CALL	LDAME		; Byte holen
 1339 D7A8  23          	INC	HL
 1340 D7A9  CD E391     	CALL	CSTBT		; als ASCII
 1341 D7AC  10 F7       	DJNZ	DPME2		; C*
 1342 D7AE  C9          	RET
 1343                   
 1344                   ; Grafiksteuersequenzen fuer die Drucker
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  82
CD48    INC

 1345                   
 1346 D7AF  0A          C6313:	DB	10		; Laenge
 1347 D7B0  0D 09       	DB	CR,9
 1348 D7B2  1B 4A 18    	DB	ESC,'J',24
 1349 D7B5  1B 2A 05    	DB	ESC,'*',5
 1350 D7B8  0140        	DW	320
 1351                   
 1352 D7BA  0A          C6314:	DB	10		; Laenge
 1353 D7BB  0D 09       	DB	CR,9
 1354 D7BD  1B 4A 18    	DB	ESC,'J',24
 1355 D7C0  1B 2A 05    	DB	ESC,'*',5
 1356 D7C3  0280        	DW	640
 1357                   
 1358 D7C5  0E          C6311:	DB	14		; Laenge
 1359 D7C6  1B 5B 30 31 	DB	ESC,'[01e'
 1360 D7CB  1B 5B 31 32 	DB	ESC,'[12`'
 1361 D7D0  1B 4B       	DB	ESC,'K'
 1362 D7D2  0140        	DW	320
 1363                   
 1364 D7D4  0E          C6312:	DB	14		; Laenge
 1365 D7D5  1B 5B 30 31 	DB	ESC,'[01e'
 1366 D7DA  1B 5B 31 32 	DB	ESC,'[12`'
 1367 D7DF  1B 4B       	DB	ESC,'K'
 1368 D7E1  0280        	DW	640
 1369                   
 1370 D7E3  09          C6304:	DB	9		; Laenge
 1371 D7E4  0D 09       	DB	CR,9
 1372 D7E6  1B 4A 18    	DB	ESC,'J',24
 1373 D7E9  1B 4B       	DB	ESC,'K'
 1374 D7EB  0140        	DW	320
 1375                   
 1376 D7ED  0A          CMINI:	DB	10		; Laenge
 1377 D7EE  0D 09       	DB	CR,9
 1378 D7F0  1B 4A 18    	DB	ESC,'J',24
 1379 D7F3  1B 2A 27    	DB	ESC,'*',39
 1380 D7F6  0140        	DW	320
 1381                   
 1382 D7F8  0A          C24N1:	DB	10		; Laenge
 1383 D7F9  0D 09       	DB	CR,9
 1384 D7FB  1B 4A 18    	DB	ESC,'J',24
 1385 D7FE  1B 2A 00    	DB	ESC,'*',0
 1386 D801  0140        	DW	320
 1387                   
 1388 D803  0A          C24N2:	DB	10		; Laenge
 1389 D804  0D 09       	DB	CR,9
 1390 D806  1B 4A 18    	DB	ESC,'J',24
 1391 D809  1B 2A 27    	DB	ESC,'*',39
 1392 D80C  03C0        	DW	960
 1393                   
 1394                   ; V.24-Tabellen, zum Kopieren in den IRM ab A800H:
 1395                   
 1396 D80E  00          V24TAB:	DB	0		; Steckplatz M003 (Aktualisierung durch Suche)
 1397                   
 1398                   ; Kanal 1 - Druckerausgabe (9600 Baud)
 1399 D80F  47          	DB	01000111b	; CTC: DI, Zaehler, neg. Flanke, RESET
 1400 D810  5B          	DB	91		; Zeitkonstante
 1401 D811  04 04       	DB	4,00000100b	; WR4: Vorteiler=1, 1 Stop-Bit, ohne Paritaet
 1402 D813  03 20       	DB	3,00100000b	; WR3: Empfaenger aus, CTS+DCD-Steuerung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  83
CD48    INC

 1403 D815  05 6A       	DB	5,01101010b	; WR5: Sender ein, 8Bit, /DTR=1, RTS=1
 1404                   
 1405                   ; Kanal 2 - Duplex (1200 Baud)
 1406 D817  47          	DB	01000111b	; CTC: DI, Zaehler, neg. Flanke, RESET
 1407 D818  2E          	DB	46		; Zeitkonstante
 1408 D819  18          	DB	00011000b	; Port-RESET
 1409 D81A  04 44       	DB	4,01000100b	; WR4: Vorteiler=16, 1 Stop-Bit, ohne Paritaet
 1410 D81C  03 E1       	DB	3,11100001b	; WR3: Empfaenger ein, 8Bit, CTS+DCD-Steuerung
 1411 D81E  05 6A       	DB	5,01101010b	; WR5: Sender ein, 8Bit, /DTR=1, RTS=1
 1412                   
 1413                   ; Initialisierung SIO-B fuer Empfangs-Interrupt (1200 Baud):
 1414                   
 1415 D820  02          V24UMT:	DB	2		; 2 Ports
 1416 D821  0D 02       	 DB	0Dh,2		; CTC1
 1417 D823  47          	  DB	01000111b	; DI, Zaehler, neg. Flanke, ZK folgt, RESET
 1418 D824  2E          	  DB	46		; Zeitkonstante
 1419 D825  0B 0B       V24INT:	 DB	0Bh,11		; SIO-B Steuerwort
 1420 D827  18          	  DB	00011000b	; Port-RESET
 1421 D828  02 E2       	  DB	2,0E2h		; WR2: INT-Vektor
 1422 D82A  04 44       	  DB	4,01000100b	; WR4: Vorteiler=16, 1 Stop-Bit, ohne Paritaet
 1423 D82C  03 E1       	  DB	3,11100001b	; WR3: Empfaenger ein, 8Bit, CTS/DCD-Steuerung
 1424 D82E  05 EA       	  DB	5,11101010b	; WR5: Sender ein, 8Bit, /DTR=0 (bereit), RTS=1
 1425 D830  11 18       	  DB	11h,00011000b	; WR1: Interrupt bei Zeichenempfang
 1426                   
 1427                   ; Initialisierung SIO-B fuer Polling-Betrieb:
 1428                   
 1429 D832  0B 07       V24POL:	DB	0Bh,7		; SIO-B Steuerwort, 7 Byte
 1430 D834  18          	 DB	00011000b	; Port RESET
 1431 D835  04 44       	 DB	4,01000100b	; Vorteiler 16, 1 Stop-Bit, ohne Paritaet
 1432 D837  03 E1       	 DB	3,11100001b	; Empfaenger ein, 8 Bit, CTS/DCD-Steuerung
 1433 D839  05 6A       	 DB	5,01101010b	; Sender ein, 8 Bit, DTR aus, RTS ein
 1434                   ;
 1435                   ; Unterprogrammtabelle (wird seit CAOS 4.6 in IRM kopiert):
 1436                   ;
 1437 D83B  4D          	DB	(SUEND-SUTB)/2	; Laenge der SUTAB bzw. erste unbenutzte UP-Nr.
 1438 D83C  E0AC        SUTB:	DW	CRT	; 00
 1439 D83E  FC03        	DW	MBO	; 01
 1440 D840  B7BD        	DW	UOUT1	; 02
 1441 D842  B7C3        	DW	UOUT2	; 03
 1442 D844  F3DA        	DW	KBD	; 04
 1443 D846  FC08        	DW	MBI	; 05
 1444 D848  B7C0        	DW	UIN1	; 06
 1445 D84A  B7C6        	DW	UIN2	; 07
 1446 D84C  FC0D        	DW	ISRO	; 08
 1447 D84E  FC12        	DW	CSRO	; 09
 1448 D850  FC17        	DW	ISRI	; 0A
 1449 D852  FC1C        	DW	CSRI	; 0B
 1450 D854  E37D        	DW	KBDS	; 0C
 1451 D856  F156        	DW	BYE	; 0D
 1452 D858  E388        	DW	KBDZ	; 0E
 1453 D85A  F7BB        	DW	COLR	; 0F
 1454 D85C  F6DA        	DW	LOAD	; 10
 1455                   
 1456 D85E  F6C3        	DW	VERIF	; 11
 1457 D860  F258        	DW	LOOP	; 12
 1458 D862  F366        	DW	NORM	; 13
 1459 D864  FC21        	DW	WAIT	; 14
 1460 D866  F5F3        	DW	LARG	; 15
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  84
CD48    INC

 1461 D868  F3D4        	DW	INTB	; 16
 1462 D86A  F47D        	DW	INLIN	; 17
 1463 D86C  F4CA        	DW	RHEX	; 18 - Erfassung HEX-Wert aus Zeichenkette
 1464 D86E  F4B9        	DW	ERRM	; 19
 1465 D870  F399        	DW	HLHX	; 1A
 1466 D872  F391        	DW	HLDE	; 1B
 1467 D874  F3A9        	DW	AHEX	; 1C
 1468 D876  F339        	DW	ZSUCH	; 1D
 1469 D878  F36C        	DW	SOUT	; 1E
 1470 D87A  F379        	DW	SIN	; 1F
 1471                   
 1472 D87C  F369        	DW	NOUT	; 20
 1473 D87E  F376        	DW	NIN	; 21
 1474 D880  F50F        	DW	GARG	; 22
 1475 D882  F0B3        	DW	OSTR	; 23
 1476 D884  F3BA        	DW	OCHR	; 24
 1477 D886  F813        	DW	CUCP	; 25
 1478 D888  F0E4        	DW	MODU	; 26
 1479 D88A  F108        	DW	JUMP	; 27
 1480 D88C  E2E9        	DW	LDMA	; 28
 1481 D88E  E2EB        	DW	LDAM	; 29
 1482 D890  F663        	DW	BRKT	; 2A
 1483 D892  F3A1        	DW	SPACE	; 2B
 1484 D894  F4C3        	DW	CRLF	; 2C
 1485 D896  F3A5        	DW	HOME	; 2D
 1486 D898  F7DC        	DW	MODI	; 2E
 1487 D89A  F847        	DW	PUDE	; 2F
 1488                   
 1489 D89C  F83F        	DW	PUSE	; 30
 1490 D89E  FB7E        	DW	SIXD	; 31
 1491 D8A0  E087        	DW	DABR	; 32
 1492 D8A2  E077        	DW	TCIF	; 33
 1493 D8A4  E067        	DW	PADR	; 34
 1494 D8A6  F8F0        	DW	TON	; 35
 1495 D8A8  F580        	DW	SAVE	; 36
 1496                   	; bis hier in HC900-CAOS, CAOS 2.2 und 2.3 enthalten
 1497 D8AA  F85A        	DW	MBIN	; 37 - Byteweise Eingabe fuer BASIC
 1498 D8AC  F862        	DW	MBOUT	; 38 - Byteweise Ausgabe fuer BASIC
 1499 D8AE  F80E        	DW	KEY	; 39
 1500 D8B0  F808        	DW	KEYLI	; 3A
 1501 D8B2  F7CB        	DW	DISP	; 3B
 1502 D8B4  F7F3        	DW	WININ	; 3C
 1503 D8B6  F7F8        	DW	WINAK	; 3D
 1504                   	; bis hier in CAOS 2.4 und 2.5 enthalten
 1505 D8B8  F855        	DW	LINE	; 3E
 1506 D8BA  F850        	DW	CIRCL	; 3F
 1507                   
 1508 D8BC  ED65        	DW	SQR	; 40
 1509 D8BE  FB9C        	DW	MULT	; 41
 1510 D8C0  E391        	DW	CSTBT	; 42
 1511                   	; bis hier in HC901-CAOS enthalten
 1512 D8C2  F54A        	DW	INIEA	; 43
 1513 D8C4  F55C        	DW	INIME	; 44
 1514 D8C6  F8EA        	DW	ZKOUT	; 45
 1515 D8C8  F1E7        	DW	MENU	; 46
 1516                   	; bis hier in CAOS 3.1, 3.3, 3.4 und OS/PI'88/'90 enthalten
 1517 D8CA  F9C6        	DW	V24OUT	; 47 - Initialisierung Druckerausgabe
 1518 D8CC  F9D5        	DW	V24DUP	; 48 - Initialisierung V.24-Duplexbetrieb
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  85
CD48    INC

 1519                   	; bis hier in CAOS 4.1 bis 4.5 enthalten
 1520 D8CE  FBCF        	DW	SETDEV	; 49 - Speichergeraet einstellen/anzeigen
 1521                   	; bis hier in CAOS 4.6 und 4.7 enthalten
 1522 D8D0  EDA4        	DW	HLDEZ	; 4A - HL dezimal anzeigen
 1523 D8D2  F4D2        	DW	RDEZ	; 4B - Erfassung Dezimalzahl aus Zeichenkette
 1524 D8D4  F511        	DW	GARGC	; 4C - Argumente erfassen mit beliebiger Zahlenbasis
 1525 D8D6              SUEND:	; bis hier in CAOS 4.8 enthalten
 1526                   
 1527                   ; CAOS 4.6 - Sprungtabelle Treiber Nr. 0 - Kassette
 1528                   
 1529 D8D6  FF          DRV0:	DB	-1		; Kennung (Vorgabe = nicht aktiv)
 1530 D8D7  05          	DB	5		; Treiber befindet sich in CAOS ROM-C
 1531 D8D8  00 01       	DB	0,1		; SWITCH-Befehl aus/ein
 1532 D8DA  54 41 50 45 	DB	'TAPE'		; Name des Treibers
 1533 D8DE  CFF5        	DW	TMBO		; 00/01 Ausgabe Datenblock 128 Byte
 1534 D8E0  D058        	DW	TMBI		; 01/05 Einlesen Datenblock 128 Byte
 1535 D8E2  CFE6        	DW	TISRO		; 02/08 Ausgabedatei oeffnen und ersten Block 01h ausgeben
 1536 D8E4  E48E        	DW	TCSRO		; 03/09 Ausgabedatei schliessen und Endeblock FFh ausgeben
 1537 D8E6  D055        	DW	TISRI		; 04/0A Eingabedatei oeffnen und Block 01 einlesen
 1538 D8E8  E495        	DW	TCSRI		; 05/0B Eingabedatei schliessen
 1539 D8EA  EDA2        	DW	VER0		; 06: Abfrage Treiber-Version
 1540 D8EC  E075        	DW	NOK		; 07: Treiberspezifische Funktionen (nicht benutzt)
 1541 D8EE  D6D8        	DW	TLIST		; 08: DIR = TAPELIST
 1542 D8F0  D76D        	DW	MOT		; 09: CD  = Kassette ein/aus (statt Laufwerkwechsel)
 1543 D8F2  F2F0        	DW	ERR1		; 10: ERA - nicht vorgesehen
 1544 D8F4  F2F0        	DW	ERR1		; 11: REN - nicht vorgesehen
 1545                   
 1546                   ; CAOS 4.6 - Sprungtabelle Treiber Nr. 1 Diskette D004/D008
 1547                   
 1548 D8F6  01          DRV1:	DB	1		; Kennung (Treiber Nr. 1)
 1549 D8F7  05          	DB	5		; Treiber befindet sich in CAOS ROM-C
 1550 D8F8  00 01       	DB	0,1		; SWITCH-Befehl aus/ein
 1551 D8FA  44 49 53 4B 	DB	'DISK'		; Name des Treibers
 1552 D8FE  D114        	DW	FMBO		; 00/01 Ausgabe Datenblock 128 Byte
 1553 D900  D0EA        	DW	FMBI		; 01/05 Einlesen Datenblock 128 Byte
 1554 D902  D10A        	DW	FISRO		; 02/08 Ausgabedatei oeffnen und ersten Block 01h ausgeben
 1555 D904  D16E        	DW	FCSRO		; 03/09 Ausgabedatei schliessen und Endeblock FFh ausgeben
 1556 D906  D0DC        	DW	FISRI		; 04/0A Eingabedatei oeffnen und Block 01 einlesen
 1557 D908  D106        	DW	FCSRI		; 05/0B Eingabedatei schliessen
 1558 D90A  EDA2        	DW	VER0		; 06: Abfrage Treiber-Version
 1559 D90C  E075        	DW	NOK		; 07: Treiberspezifische Funktionen (nicht benutzt)
 1560 D90E  D330        	DW	FDIR		; 08: DIR = Verzeichnisanzeige mit Maske
 1561 D910  D64D        	DW	DRIVE		; 09: CD  = Laufwerkwechsel
 1562 D912  D3E9        	DW	FERA		; 10: ERA = Datei loeschen
 1563 D914  D42C        	DW	FREN		; 11: REN = Datei umbenennen
 1564                   ;
 1565                   ; Portinitialisierungstabelle fuer Erstinitialisierung (POWER ON und RESET):
 1566                   ;
 1567                   ; Bei Erstinitialisierung des PIO-Port-A muss sichergestellt werden, dass der
 1568                   ; CAOS-ROM-E immer im Zugriff bleibt. Im Einschaltzustand sind die PIO-Ports
 1569                   ; hochohmig und werden ueber Pull-Up-Widerstaende auf High gezogen, deshalb:
 1570                   ; 1. PIO-Port B initialisieren, und PIO damit aus dem RESET-Zustand holen
 1571                   ;    (so wird auch das Ausgaberegister von Port A beschreibbar)
 1572                   ; 2. Port A Datenwort einschreiben
 1573                   ; 3. Port A Betriebsart Byte-Ausgabe einstellen um das Datenwort zu uebernehmen.
 1574                   ; Der RESET-Impuls zur D005-Tastatur wirkt nur, wenn die PIO bereits vorher
 1575                   ; auf Byte-Ausgabe initialisiert ist (also nur bei RESET, nicht bei POWER-ON)
 1576                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  86
CD48    INC

 1577 D916  06          IOTAB1:	DB	6		; 6 Ports fuer Erstinitialisierung
 1578                   
 1579 D917  8B 03       	 DB	PIOBS,3		; PIO-B Steuerwort
 1580 D919  E6          	  DB	0E6h		; Interruptvektor
 1581 D91A  0F          	  DB	00001111b	; Byte-Ausgabemodus
 1582 D91B  83          	  DB	10000011b	; EI
 1583                   
 1584 D91C  89 01       	 DB	PIOBD,1		; PIO-B Daten
 1585 D91E  FF          	  DB	0FFh		; Daten
 1586                   
 1587 D91F  88 02       	 DB	PIOAD,2		; PIO-A Daten
 1588 D921  1F          	  DB	00011111b	; D005-Reset (KOUT 1-Impuls)
 1589 D922  0F          	  DB	00001111b	; IRM ein, RAM0 WR ein, CAOS-E ein, USER-ROM aus
 1590                   
 1591 D923  8A 03       	 DB	PIOAS,3		; PIO-A Steuerwort
 1592 D925  E4          	  DB	0E4h		; Interruptvektor
 1593 D926  0F          	  DB	00001111b	; Byte-Ausgabemodus
 1594 D927  03          	  DB	00000011b	; DI
 1595                   
 1596 D928  84 01       	 DB	PORT1,1		; Ausgabeport 84h
 1597 D92A  28          	  DB	00101000b	; RAM8 0, LoRes
 1598                   
 1599 D92B  86 01       	 DB	PORT2,1		; Ausgabeport 86h
 1600 D92D  E3          	  DB	11100011b	; RAM4 ein, USER-C 3, CAOS-C ein
 1601                   ;
 1602                   ; Initialisierungstabelle fuer M001 als Centronics-Druckerschnittstelle:
 1603                   ;
 1604 D92E  03          DIOINI:	DB	3
 1605 D92F  06 02       	 DB	06h,2		; PIO-A Steuerwort
 1606 D931  CF          	  DB	11001111b	; Bitbetrieb
 1607 D932  00          	  DB	00000000b	; alles Ausgaenge
 1608 D933  07 02       	 DB	07h,2		; PIO-B Steuerwort
 1609 D935  CF          	  DB	11001111b	; Bitbetrieb
 1610 D936  FE          	  DB	11111110b	; Bit 0 Ausgang
 1611 D937  05 01       	 DB	05h,1		; PIO-B Daten
 1612 D939  01          	  DB	00000001b	; Strobe passiv
 1613                   ;
 1614                   ; Voreingestellte Zuordnung von Joystickfunktionen zu ASCII-Tastencodes
 1615                   ; Tabelle wird bei Power-On in den IRM kopiert, Bereich A894..A89F
 1616                   ; Hinweis: Fire2 ist beim M008 die primaere oder einzige Feuertaste
 1617                   ;
 1618 D93A  02          JOYTBD:	DB	2		; Wartezyklen fuer Tastenwiederholung
 1619 D93B  0B          	DB	0Bh		; Up
 1620 D93C  0A          	DB	0Ah		; Down
 1621 D93D  0D          	DB	CR		; Fire+Fire2
 1622 D93E  08          	DB	08h		; Left
 1623 D93F  00          	DB	0		; Up+Left
 1624 D940  00          	DB	0		; Down+Left
 1625 D941  0D          	DB	CR		; Fire
 1626 D942  09          	DB	09h		; Right
 1627 D943  00          	DB	0		; Up+Right
 1628 D944  00          	DB	0		; Down+Right
 1629 D945  20          	DB	' '		; Fire2
 1630                   ;
 1631                   ; Interrupttabelle (wird in den RAM kopiert):
 1632                   ;
 1633 D946              ISRTAB:	;DW	IRET	; 01D0	(IX-32) M052 USB-PIO (USB-Tastatur)
 1634                   	;DW	IRET	; 01D2	(IX-30) -
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  87
CD48    INC

 1635                   	;DW	IRET	; 01D4	(IX-28) Empfehlung fuer CTC Kanal 2 des 2. M003
 1636                   	;DW	IRET	; 01D6	(IX-26) Empfehlung fuer CTC Kanal 3 des 2. M003
 1637                   	;DW	IRET	; 01D8	(IX-24) Empfehlung fuer SIO des 2. M003 
 1638                   	;DW	IRET	; 01DA	(IX-22) Empfehlung fuer SIO des 1. M003
 1639                   	;DW	IRET	; 01DC	(IX-20) Empfehlung fuer CTC Kanal 2 des 1. M003
 1640                   	;DW	IRET	; 01DE	(IX-18) Empfehlung fuer CTC Kanal 3 des 1. M003
 1641 D946  E3ED        	DW	ISRJ	; 01E0	(IX-16) M008 PIO A: Joystick
 1642 D948  FA7F        	DW	ISRSB	; 01E2	(IX-14) M003 SIO B: V.24-Empfang
 1643 D94A  E58B        	DW	ISRPA	; 01E4	(IX-12) PIO A: Kassette
 1644 D94C  E302        	DW	ISRPB	; 01E6	(IX-10) PIO B: Tastatur
 1645 D94E  E59A        	DW	IRET	; 01E8	(IX-8)  CTC 0: frei (TEMO Schrittbetrieb)
 1646 D950  E57B        	DW	ISRC1	; 01EA	(IX-6)  CTC 1: Kassette
 1647 D952  ED85        	DW	ISRC2	; 01EC	(IX-4)  CTC 2: Tondauer
 1648 D954  E2F6        	DW	ISRC3	; 01EE	(IX-2)  CTC 3: Tastatur
 1649                   ;
 1650                   ; Portinitialisierungstabelle fuer Neuinitialisierung bei SIXD
 1651                   ;
 1652 D956  04          IOTAB2:	DB	4		; 4 Ports initialisieren
 1653                   
 1654 D957  8A 01       	 DB	PIOAS,1		; PIO-A Steuerwort
 1655 D959  E4          	  DB	0E4h		; Interruptvektor
 1656                   
 1657 D95A  8B 01       	 DB	PIOBS,1		; PIO-B Steuerwort
 1658 D95C  E6          	  DB	0E6h		; Interruptvektor
 1659                   
 1660 D95D  8C 01       	 DB	CTC0,1		; CTC Kanal 0
 1661 D95F  E8          	  DB	0E8h		; Interruptvektor
 1662                   
 1663 D960  8E 02       	 DB	CTC2,2		; CTC Kanal 2: blinken
 1664 D962  47          	  DB	01000111b	; DI, Zaehler, RESET
 1665 D963  0C          	  DB	12		; Zeitkonstante
 1666                   ;
 1667                   ; IBM-Kodierungen fuer allgemeine Druckroutine PRINTC
 1668                   ;
 1669 D964  7B 7C 7D 7E ZIBM:	DB	7BH,7CH,7DH,7EH
 1670 D968  5B 5C 5D    	DB	5BH,5CH,5DH
 1671 D96B  84 94 81 E1 	DB	84H,94H,81H,0E1H
 1672 D96F  8E 99 9A    	DB	8EH,99H,9AH
 1673                   
 1674                   ; Anzeige der CAOS-Version mit Datum
 1675                   
 1676 D972  7F7F        	DW	7F7FH
 1677 D974  48 45 4C 50 	DB	'HELP'
 1678 D978  01          	DB	1
 1679 D979  3E 01       HELP:	LD	A,1
 1680 D97B  CD DA44     	CALL	VER		; Versionsanzeige (Langform mit Datum)
 1681 D97E  CD F0B3     	CALL	OSTR
 1682 D981  0D 0A 0A    	DB	CR,LF,LF
 1683 D984  20 20 43 6F 	DB	'  Commands (Prolog=',0
 1684 D998  DD 7E 09    	LD	A,(IX+9)
 1685 D99B  CD F0B0     	CALL	AHOSTR		; Prolog und folgenden Text anzeigen
 1686                   ;	CALL	OSTR
 1687 D99E  29 3A 0D 0A 	DB	'):',CR,LF,LF,0
 1688 D9A4  21 D9C3     	LD	HL,HELPX	; Programmteil zur Menuewortsuche und Anzeige
 1689 D9A7  11 B700     	LD	DE,CASS		; in den Kassettenpuffer kopieren
 1690 D9AA  01 0080     	LD	BC,MENEND-HELPX	; maximal 128 Byte (reicht gerade so!!!)
 1691 D9AD  ED B0       	LDIR
 1692                   ;	LD	B,0		; Suchgroesse = 64K (B=0 vom LDIR)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  88
CD48    INC

 1693 D9AF  3A B802     	LD	A,(MODST+2)	; Schaltzustand USER-ROM
 1694 D9B2  32 B780     	LD	(ARGC),A	; hier merken
 1695 D9B5  3A B805     	LD	A,(MODST+5)	; Schaltzustand CAOS-ROM C
 1696 D9B8  5F          	LD	E,A		; in Register E merken
 1697 D9B9  3E 02       	LD	A,2		; Start-Spalte erstes Menuewort
 1698 D9BB  08          	EX	AF,AF'		; Position in A' merken
 1699 D9BC  21 E4D8     	LD	HL,CLC		; Kassettenpuffer nach Nutzung wieder saebern
 1700 D9BF  E5          	PUSH	HL		; Als-RET-Adresse auf Stack legen
 1701 D9C0  C3 B700     	JP	CASS		; weiter in Kassettenpuffer
 1702                   
 1703 D9C3  CD FB84     HELPX:	CALL	COFF
 1704 D9C6  CD B73E     	CALL	MENUX		; Menueworte im sichtbaren Bereich anzeigen
 1705                   
 1706                   ;CAOS ROM C
 1707 D9C9  CD FB95     	CALL	CON		; CAOS-ROM C einschalten
 1708 D9CC  CB 43       	BIT	0,E		; war CAOS-ROM C ein waehrend erster Suche?
 1709 D9CE  CC B73C     	CALL	Z,MENX8K	; nein, Menueworte im CAOS-ROM C anzeigen
 1710                   
 1711                   ;USER-ROM (ausser BASIC)
 1712 D9D1  16 D1       HELP1:	LD	D,0D1H		; 1. Ebene (BASIC nicht mit durchsuchen)
 1713 D9D3  CD F0E0     HELP2:	CALL	MODUL2		; USER-ROM-C Ebene ein
 1714                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 D9D6  DD CB 04    	 DB	0DDh,0CBh,4
    2 D9D9  BF          	 DB	7 SHL 3 OR 10000111b
 1715 D9DA  D3 86       	OUT	(PORT2),A	; CAOS-ROM C aus!
 1716 D9DC  D5          	PUSH	DE
 1717 D9DD  CB 43       	BIT	0,E		; war CAOS-ROM C ein waehrend erster Suche?
 1718 D9DF  20 04       	JR	NZ,HELP3	; ja, dann USER-ROM komplett anzeigen
 1719 D9E1  3A B780     	LD	A,(ARGC)	; USER-ROM
 1720 D9E4  BA          	CP	D		; aktuelle Ebene ein waehrend erster Suche?
 1721 D9E5  C4 B73C     HELP3:	CALL	NZ,MENX8K	; Menueworte aus USER-ROM anzeigen
 1722 D9E8  D1          	POP	DE
 1723 D9E9  3E 10       	LD	A,10H		; Offset zur naechsten Ebene: C1, D1, E1, F1
 1724 D9EB  82          	ADD	A,D		; naechste Ebene berechnen
 1725 D9EC  57          	LD	D,A
 1726 D9ED  30 E4       	JR	NC,HELP2
 1727                   
 1728                   ; Schaltzustand CAOS-C und USER-ROM regenerieren:
 1729 D9EF  ED 5B B77F  	LD	DE,(ARGC-1)	; D = USER-ROM-Schaltzustand vor Suche
 1730 D9F3  CD F0E0     	CALL	MODUL2		; USER-ROM C wie zuvor
 1731 D9F6  3A B7A0     	LD	A,(CURSO)
 1732 D9F9  FE 02       	CP	2
 1733 D9FB  C4 F4C3     	CALL	NZ,CRLF		; Neue Zeile, falls nicht auf erster Spalte
 1734 D9FE  C9          	RET
 1735                   ;-------
 1736         B73C      MENX8K	EQU	$+CASS-HELPX
 1737 D9FF  06 20       	LD	B,20H		; Suchgroesse = 8K
 1738         B73E      MENUX	EQU	$+CASS-HELPX
 1739 DA01  21 C000     	LD	HL,0C000H	; Suchbeginn
 1740 DA04  4D          	LD	C,L
 1741 DA05  08          MENX0:	EX	AF,AF'
 1742 DA06  32 B7A0     MENX1:	LD	(CURSO),A	; Cursor-Spalte setzen
 1743 DA09  08          	EX	AF,AF'
 1744 DA0A  CD F86A     	CALL	CLR12		; angefangenes Menuewort loeschen
 1745                   
 1746                   ;Menuewort suchen und anzeigen
 1747 DA0D  DD 7E 09    	LD	A,(IX+9)	; Prologbyte
 1748 DA10  ED B1       MENX3:	CPIR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  89
CD48    INC

 1749 DA12  E0          	RET	PO		; ausgesucht
 1750 DA13  ED A1       	CPI			; 2mal nacheinander?
 1751 DA15  E0          	RET	PO		; ausgesucht
 1752 DA16  20 F8       	JR	NZ,MENX3	; nicht 2mal
 1753 DA18  7E          MENX4:	LD	A,(HL)
 1754 DA19  FE 20       	CP	20h		; Epilog (0..1Fh)?
 1755 DA1B  38 0E       	JR	C,MENX5		; Epilog beendet Menuewort
 1756 DA1D  FE 7B       	CP	'z'+1		; <= 'z'?
 1757 DA1F  30 E4       	JR	NC,MENX0	; groesser als 'z' -> kein Menuewort
 1758 DA21  CD F3BA     	CALL	OCHR
 1759 DA24  ED A1       	CPI			; INC HL, DEC BC
 1760 DA26  E2 F86A     	JP	PO,CLR12	; BC=0, also ausgesucht
 1761 DA29  18 ED       	JR	MENX4
 1762                   
 1763                   ;Cursor auf naechste Spalte setzen (02h, 0Eh, 1Ah)
 1764 DA2B  3A B7A0     MENX5:	LD	A,(CURSO)
 1765 DA2E  FE 1A       	CP	1AH
 1766 DA30  38 07       	JR	C,MENX6
 1767 DA32  CD F4C3     	CALL	CRLF		; neue Zeile
 1768 DA35  3E 02       	LD	A,2		; linke Spalte
 1769 DA37  18 CD       	JR	MENX1
 1770                   	;
 1771 DA39  FE 0E       MENX6:	CP	0EH
 1772 DA3B  3E 0E       	LD	A,0EH		; mittlere Spalte
 1773 DA3D  38 C7       	JR	C,MENX1
 1774 DA3F  3E 1A       	LD	A,1AH		; rechte Spalte
 1775 DA41  18 C3       	JR	MENX1
 1776 DA43              MENEND:	
 1777                   ;-------------------------------------------------------------------------------
 1778                   ;
 1779                   ; Anzeige CAOS-Version (Titelzeile) in Kurz- oder Langform
 1780                   ;
 1781                   ;PE:	A=0	Kurzform ohne Datum
 1782                   ;	A<>0	Langform mit Datum
 1783 DA43  AF          SHORT:	XOR	A		; Kurzform
 1784 DA44  F5          VER:	PUSH	AF
 1785 DA45  CD F0B3     	CALL	OSTR
 1786 DA48  0C 0A       	DB	0CH,LF
 1787 DA4A  2A 20 4B 43 	DB	'* KC-CAOS 4.8'
 1788         0000      if beta
 1790                   endif
 1791 DA57  00          	DB	0
 1792 DA58  F1          	POP	AF
 1793 DA59  B7          	OR	A
 1794 DA5A  28 11       	JR	Z,VER1
 1795 DA5C  CD F0B3     	CALL	OSTR
 1796 DA5F  20 28       	DB	' ('
 1797                   	DATUM			; Versionsdatum
    1 DA61  30 35 2E 30 	DB	'05.01.2024'	; Versionsdatum nur hier aendern!
 1798 DA6B  29 00       	DB	')',0
 1799 DA6D  CD F3A1     VER1:	CALL	SPACE
 1800 DA70  CD D5ED     	CALL	DLIST		; aktuelles Device anzeigen
 1801 DA73  CD F0B3     	CALL	OSTR
 1802 DA76  20 2A 00    	DB	' *',0
 1803 DA79  C9          	RET
 1804                   
 1805                   	ABSFILL	0DAB8h,<ROM-D-Ende>
    7 DA7A  FF FF FF FF 	  DS	0DAB8h - $,0FFh
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  90
CAOS48  Z80

  239         0000      if duenn
  241                   else
  242                   	INCLUDE	ZSIBM.INC	; IBM-Zeichensatz Standard
    1                   ;*****************************************
    2                   ;**	CAOS 4.7 IBM-Zeichensatz	**
    3                   ;**					**
    4                   ;**	Adresse:  DAB8h bis DFFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 28.05.2021	**
    7                   ;*****************************************
    8                   
    9 DAB8  78 60 60 60 	DB	078H, 060H, 060H, 060H, 060H, 060H, 078H, 000H	; 5BH
   10 DAC0  C0 60 30 18 	DB	0C0H, 060H, 030H, 018H, 00CH, 006H, 002H, 000H	; 5CH
   11 DAC8  78 18 18 18 	DB	078H, 018H, 018H, 018H, 018H, 018H, 078H, 000H	; 5DH
   12 DAD0  30 30 18 00 	DB	030H, 030H, 018H, 000H, 000H, 000H, 000H, 000H	; 60H
   13 DAD8  1C 30 30 E0 	DB	01CH, 030H, 030H, 0E0H, 030H, 030H, 01CH, 000H	; 7BH
   14 DAE0  18 18 18 00 	DB	018H, 018H, 018H, 000H, 018H, 018H, 018H, 000H	; 7CH
   15 DAE8  E0 30 30 1C 	DB	0E0H, 030H, 030H, 01CH, 030H, 030H, 0E0H, 000H	; 7DH
   16 DAF0  76 DC 00 00 	DB	076H, 0DCH, 000H, 000H, 000H, 000H, 000H, 000H	; 7EH
   17 DAF8  00 10 38 6C 	DB	000H, 010H, 038H, 06CH, 0C6H, 0C6H, 0FEH, 000H	; 7FH
   18                   
   19 DB00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 082H, 0FEH	; 00H
   20 DB08  7E 81 A5 81 	DB	07EH, 081H, 0A5H, 081H, 0BDH, 099H, 081H, 07EH	; 01H
   21 DB10  7E FF DB FF 	DB	07EH, 0FFH, 0DBH, 0FFH, 0C3H, 0E7H, 0FFH, 07EH	; 02H
   22 DB18  6C FE FE FE 	DB	06CH, 0FEH, 0FEH, 0FEH, 07CH, 038H, 010H, 000H	; 03H
   23 DB20  10 38 7C FE 	DB	010H, 038H, 07CH, 0FEH, 07CH, 038H, 010H, 000H	; 04H
   24 DB28  38 7C 38 FE 	DB	038H, 07CH, 038H, 0FEH, 0FEH, 07CH, 038H, 07CH	; 05H
   25 DB30  10 10 38 7C 	DB	010H, 010H, 038H, 07CH, 0FEH, 07CH, 038H, 07CH	; 06H
   26 DB38  00 00 18 3C 	DB	000H, 000H, 018H, 03CH, 03CH, 018H, 000H, 000H	; 07H
   27 DB40  FF FF E7 C3 	DB	0FFH, 0FFH, 0E7H, 0C3H, 0C3H, 0E7H, 0FFH, 0FFH	; 08H
   28 DB48  00 3C 66 42 	DB	000H, 03CH, 066H, 042H, 042H, 066H, 03CH, 000H	; 09H
   29 DB50  FF C3 99 BD 	DB	0FFH, 0C3H, 099H, 0BDH, 0BDH, 099H, 0C3H, 0FFH	; 0AH
   30 DB58  0F 07 0F 7D 	DB	00FH, 007H, 00FH, 07DH, 0CCH, 0CCH, 0CCH, 078H	; 0BH
   31 DB60  3C 66 66 66 	DB	03CH, 066H, 066H, 066H, 03CH, 018H, 07EH, 018H	; 0CH
   32 DB68  3F 33 3F 30 	DB	03FH, 033H, 03FH, 030H, 030H, 070H, 0F0H, 0E0H	; 0DH
   33 DB70  7F 63 7F 63 	DB	07FH, 063H, 07FH, 063H, 063H, 067H, 0E6H, 0C0H	; 0EH
   34 DB78  99 5A 3C E7 	DB	099H, 05AH, 03CH, 0E7H, 0E7H, 03CH, 05AH, 099H	; 0FH
   35                   
   36 DB80  80 E0 F8 FE 	DB	080H, 0E0H, 0F8H, 0FEH, 0F8H, 0E0H, 080H, 000H	; 10H
   37 DB88  02 0E 3E FE 	DB	002H, 00EH, 03EH, 0FEH, 03EH, 00EH, 002H, 000H	; 11H
   38 DB90  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 018H, 07EH, 03CH, 018H	; 12H
   39 DB98  66 66 66 66 	DB	066H, 066H, 066H, 066H, 066H, 000H, 066H, 000H	; 13H
   40 DBA0  7B DB DB 7B 	DB	07BH, 0DBH, 0DBH, 07BH, 01BH, 01BH, 01BH, 000H	; 14H
   41 DBA8  3C 66 38 6C 	DB	03CH, 066H, 038H, 06CH, 06CH, 038H, 0CCH, 078H	; 15H
   42 DBB0  00 00 00 00 	DB	000H, 000H, 000H, 000H, 07EH, 07EH, 07EH, 000H	; 16H
   43 DBB8  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 07EH, 03CH, 018H, 0FFH	; 17H
   44 DBC0  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 018H, 018H, 018H, 000H	; 18H
   45 DBC8  18 18 18 18 	DB	018H, 018H, 018H, 018H, 07EH, 03CH, 018H, 000H	; 19H
   46 DBD0  00 08 0C FE 	DB	000H, 008H, 00CH, 0FEH, 0FEH, 00CH, 008H, 000H	; 1AH
   47 DBD8  00 20 60 FE 	DB	000H, 020H, 060H, 0FEH, 0FEH, 060H, 020H, 000H	; 1BH
   48 DBE0  00 00 C0 C0 	DB	000H, 000H, 0C0H, 0C0H, 0C0H, 0FEH, 000H, 000H	; 1CH
   49 DBE8  00 24 66 FF 	DB	000H, 024H, 066H, 0FFH, 0FFh, 066H, 024H, 000H	; 1DH
   50 DBF0  00 18 3C 7E 	DB	000H, 018H, 03CH, 07EH, 0FFH, 0FFH, 000H, 000H	; 1EH
   51 DBF8  00 FF FF 7E 	DB	000H, 0FFH, 0FFH, 07EH, 03CH, 018H, 000H, 000H	; 1FH
   52                   
   53 DC00  78 CC C0 C0 	DB	078H, 0CCH, 0C0H, 0C0H, 0CCH, 078H, 010H, 070H	; 80H
   54 DC08  00 CC 00 CC 	DB	000H, 0CCH, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 81H
   55 DC10  1C 00 78 CC 	DB	01CH, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 82H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  91
ZSIBM   INC

   56 DC18  78 84 78 0C 	DB	078H, 084H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 83H
   57 DC20  6C 00 78 0C 	DB	06CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 84H
   58 DC28  E0 00 78 0C 	DB	0E0H, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 85H
   59 DC30  30 30 78 0C 	DB	030H, 030H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 86H
   60 DC38  00 78 CC C0 	DB	000H, 078H, 0CCH, 0C0H, 0CCH, 078H, 010H, 070H	; 87H
   61 DC40  78 84 78 CC 	DB	078H, 084H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 88H
   62 DC48  CC 00 78 CC 	DB	0CCH, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 89H
   63 DC50  E0 00 78 CC 	DB	0E0H, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 8AH
   64 DC58  D8 00 70 30 	DB	0D8H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; 8BH
   65 DC60  70 88 70 30 	DB	070H, 088H, 070H, 030H, 030H, 030H, 078H, 000H	; 8CH
   66 DC68  E0 00 70 30 	DB	0E0H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; 8DH
   67 DC70  CC 30 78 CC 	DB	0CCH, 030H, 078H, 0CCH, 0FCH, 0CCH, 0CCH, 000H	; 8EH
   68 DC78  78 84 30 78 	DB	078H, 084H, 030H, 078H, 0CCH, 0FCH, 0CCH, 000H	; 8FH
   69                   
   70 DC80  1C 00 FC 60 	DB	01CH, 000H, 0FCH, 060H, 078H, 060H, 0FCH, 000H	; 90H
   71 DC88  00 00 6C 92 	DB	000H, 000H, 06CH, 092H, 09EH, 090H, 07EH, 000H	; 91H
   72 DC90  3E 78 D8 FE 	DB	03EH, 078H, 0D8H, 0FEH, 0D8H, 0D8H, 0DEH, 000H	; 92H
   73 DC98  78 84 00 78 	DB	078H, 084H, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 93H
   74 DCA0  00 CC 00 78 	DB	000H, 0CCH, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 94H
   75 DCA8  00 E0 00 78 	DB	000H, 0E0H, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 95H
   76 DCB0  78 84 00 CC 	DB	078H, 084H, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 96H
   77 DCB8  00 E0 00 CC 	DB	000H, 0E0H, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 97H
   78 DCC0  00 CC 00 CC 	DB	000H, 0CCH, 000H, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 98H
   79 DCC8  C6 38 6C C6 	DB	0C6H, 038H, 06CH, 0C6H, 0C6H, 06CH, 038H, 000H	; 99H
   80 DCD0  CC 00 CC CC 	DB	0CCH, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 078H, 000H	; 9AH
   81 DCD8  10 7C C6 C0 	DB	010H, 07CH, 0C6H, 0C0H, 0C6H, 07CH, 010H, 000H	; 9BH
   82 DCE0  38 6C 64 F0 	DB	038H, 06CH, 064H, 0F0H, 060H, 0E6H, 0FCH, 000H	; 9CH
   83 DCE8  66 66 3C 7E 	DB	066H, 066H, 03CH, 07EH, 018H, 07EH, 018H, 018H	; 9DH
   84 DCF0  F8 CC CC FA 	DB	0F8H, 0CCH, 0CCH, 0FAH, 0C6H, 0CFH, 0C6H, 0C7H	; 9EH
   85 DCF8  0E 1B 18 3C 	DB	00EH, 01BH, 018H, 03CH, 018H, 018H, 0D8H, 070H	; 9FH
   86                   
   87 DD00  1C 00 78 0C 	DB	01CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; A0H
   88 DD08  38 00 70 30 	DB	038H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; A1H
   89 DD10  00 1C 00 78 	DB	000H, 01CH, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; A2H
   90 DD18  00 1C 00 CC 	DB	000H, 01CH, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; A3H
   91 DD20  00 F8 00 F8 	DB	000H, 0F8H, 000H, 0F8H, 0CCH, 0CCH, 0CCH, 000H	; A4H
   92 DD28  FC 00 CC EC 	DB	0FCH, 000H, 0CCH, 0ECH, 0FCH, 0DCH, 0CCH, 000H	; A5H
   93 DD30  78 0C 7C CC 	DB	078H, 00CH, 07CH, 0CCH, 076H, 000H, 07CH, 000H	; A6H
   94 DD38  38 6C 6C 38 	DB	038H, 06CH, 06CH, 038H, 000H, 07CH, 000H, 000H	; A7H
   95 DD40  30 00 30 60 	DB	030H, 000H, 030H, 060H, 0C0H, 0CCH, 078H, 000H	; A8H
   96 DD48  00 00 00 7E 	DB	000H, 000H, 000H, 07EH, 060H, 060H, 000H, 000H	; A9H
   97 DD50  00 00 00 7E 	DB	000H, 000H, 000H, 07EH, 006H, 006H, 000H, 000H	; AAH
   98 DD58  C3 C6 CC DE 	DB	0C3H, 0C6H, 0CCH, 0DEH, 033H, 066H, 0CCH, 00FH	; ABH
   99 DD60  C3 C6 CC DB 	DB	0C3H, 0C6H, 0CCH, 0DBH, 037H, 06FH, 0CFH, 003H	; ACH
  100 DD68  30 00 30 30 	DB	030H, 000H, 030H, 030H, 078H, 078H, 030H, 000H	; ADH
  101 DD70  00 33 66 CC 	DB	000H, 033H, 066H, 0CCH, 066H, 033H, 000H, 000H	; AEH
  102 DD78  00 CC 66 33 	DB	000H, 0CCH, 066H, 033H, 066H, 0CCH, 000H, 000H	; AFH
  103                   
  104 DD80  22 88 22 88 	DB	022H, 088H, 022H, 088H, 022H, 088H, 022H, 088H	; B0H
  105 DD88  55 AA 55 AA 	DB	055H, 0AAH, 055H, 0AAH, 055H, 0AAH, 055H, 0AAH	; B1H
  106 DD90  77 DD 77 DD 	DB	077H, 0DDH, 077H, 0DDH, 077H, 0DDH, 077H, 0DDH	; B2H
  107                   ; ab hier Linien-Symbole
  108 DD98  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 018H, 018H, 018H	; B3H
  109 DDA0  18 18 18 F8 	DB	018H, 018H, 018H, 0F8H, 0F8H, 018H, 018H, 018H	; B4H
  110 DDA8  18 F8 F8 18 	DB	018H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 018H, 018H	; B5H
  111 DDB0  36 36 36 F6 	DB	036H, 036H, 036H, 0F6H, 0F6H, 036H, 036H, 036H	; B6H
  112 DDB8  00 00 00 FE 	DB	000H, 000H, 000H, 0FEH, 0FEH, 036H, 036H, 036H	; B7H
  113 DDC0  00 F8 F8 18 	DB	000H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 018H, 018H	; B8H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  92
ZSIBM   INC

  114 DDC8  36 F6 F6 06 	DB	036H, 0F6H, 0F6H, 006H, 0F6H, 0F6H, 036H, 036H	; B9H
  115 DDD0  36 36 36 36 	DB	036H, 036H, 036H, 036H, 036H, 036H, 036H, 036H	; BAH
  116 DDD8  00 FE FE 06 	DB	000H, 0FEH, 0FEH, 006H, 0F6H, 0F6H, 036H, 036H	; BBH
  117 DDE0  36 F6 F6 06 	DB	036H, 0F6H, 0F6H, 006H, 0FEH, 0FEH, 000H, 000H	; BCH
  118 DDE8  36 36 36 FE 	DB	036H, 036H, 036H, 0FEH, 0FEH, 000H, 000H, 000H	; BDH
  119 DDF0  18 F8 F8 18 	DB	018H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 000H, 000H	; BEH
  120 DDF8  00 00 00 F8 	DB	000H, 000H, 000H, 0F8H, 0F8H, 018H, 018H, 018H	; BFH
  121                   
  122 DE00  18 18 18 1F 	DB	018H, 018H, 018H, 01FH, 01FH, 000H, 000H, 000H	; C0H
  123 DE08  18 18 18 FF 	DB	018H, 018H, 018H, 0FFH, 0FFH, 000H, 000H, 000H	; C1H
  124 DE10  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 018H, 018H, 018H	; C2H
  125 DE18  18 18 18 1F 	DB	018H, 018H, 018H, 01FH, 01FH, 018H, 018H, 018H	; C3H
  126 DE20  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 000H, 000H, 000H	; C4H
  127 DE28  18 18 18 FF 	DB	018H, 018H, 018H, 0FFH, 0FFH, 018H, 018H, 018H	; C5H
  128 DE30  18 1F 1F 18 	DB	018H, 01FH, 01FH, 018H, 01FH, 01FH, 018H, 018H	; C6H
  129 DE38  36 36 36 37 	DB	036H, 036H, 036H, 037H, 037H, 036H, 036H, 036H	; C7H
  130 DE40  36 37 37 30 	DB	036H, 037H, 037H, 030H, 03FH, 03FH, 000H, 000H	; C8H
  131 DE48  00 3F 3F 30 	DB	000H, 03FH, 03FH, 030H, 037H, 037H, 036H, 036H	; C9H
  132 DE50  36 F7 F7 00 	DB	036H, 0F7H, 0F7H, 000H, 0FFH, 0FFH, 000H, 000H	; CAH
  133 DE58  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0F7H, 0F7H, 036H, 036H	; CBH
  134 DE60  66 37 37 30 	DB	066H, 037H, 037H, 030H, 037H, 037H, 036H, 036H	; CCH
  135 DE68  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 000H, 000H	; CDH
  136 DE70  36 F7 F7 00 	DB	036H, 0F7H, 0F7H, 000H, 0F7H, 0F7H, 036H, 036H	; CEH
  137 DE78  18 FF FF 00 	DB	018H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 000H, 000H	; CFH
  138                   
  139 DE80  36 36 36 FF 	DB	036H, 036H, 036H, 0FFH, 0FFH, 000H, 000H, 000H	; D0H
  140 DE88  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 018H, 018H	; D1H
  141 DE90  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 036H, 036H, 036H	; D2H
  142 DE98  36 36 36 3F 	DB	036H, 036H, 036H, 03FH, 03FH, 000H, 000H, 000H	; D3H
  143 DEA0  18 1F 1F 18 	DB	018H, 01FH, 01FH, 018H, 01FH, 01FH, 000H, 000H	; D4H
  144 DEA8  00 1F 1F 18 	DB	000H, 01FH, 01FH, 018H, 01FH, 01FH, 018H, 018H	; D5H
  145 DEB0  00 00 00 3F 	DB	000H, 000H, 000H, 03FH, 03FH, 036H, 036H, 036H	; D6H
  146 DEB8  36 36 36 FF 	DB	036H, 036H, 036H, 0FFH, 0FFH, 036H, 036H, 036H	; D7H
  147 DEC0  18 FF FF 18 	DB	018H, 0FFH, 0FFH, 018H, 0FFH, 0FFH, 018H, 018H	; D8H
  148 DEC8  18 18 18 F8 	DB	018H, 018H, 018H, 0F8H, 0F8H, 000H, 000H, 000H	; D9H
  149 DED0  00 00 00 1F 	DB	000H, 000H, 000H, 01FH, 01FH, 018H, 018H, 018H	; DAH
  150                   ; bis hier Linien-Symbole
  151 DED8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH	; DBH
  152 DEE0  00 00 00 00 	DB	000H, 000H, 000H, 000H, 0FFH, 0FFH, 0FFH, 0FFH	; DCH
  153 DEE8  F0 F0 F0 F0 	DB	0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H	; DDH
  154 DEF0  0F 0F 0F 0F 	DB	00FH, 00FH, 00FH, 00FH, 00FH, 00FH, 00FH, 00FH	; DEH
  155 DEF8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 000H, 000H, 000H, 000H	; DFH
  156                   
  157 DF00  00 00 76 DC 	DB	000H, 000H, 076H, 0DCH, 0CCH, 0DCH, 076H, 000H	; E0H
  158 DF08  3C 66 66 6C 	DB	03CH, 066H, 066H, 06CH, 066H, 066H, 06CH, 0F0H	; E1H
  159 DF10  FE 62 60 60 	DB	0FEH, 062H, 060H, 060H, 060H, 060H, 0F0H, 000H	; E2H
  160 DF18  00 FE 6C 6C 	DB	000H, 0FEH, 06CH, 06CH, 06CH, 06CH, 06EH, 000H	; E3H
  161 DF20  FC C4 60 30 	DB	0FCH, 0C4H, 060H, 030H, 060H, 0C4H, 0FCH, 000H	; E4H
  162 DF28  00 00 7E D8 	DB	000H, 000H, 07EH, 0D8H, 0D8H, 0D8H, 070H, 000H	; E5H
  163 DF30  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 0F6H, 0C0H, 0C0H	; E6H
  164 DF38  00 7E D8 18 	DB	000H, 07EH, 0D8H, 018H, 018H, 018H, 018H, 000H	; E7H
  165 DF40  78 30 78 CC 	DB	078H, 030H, 078H, 0CCH, 0CCH, 078H, 030H, 078H	; E8H
  166 DF48  38 6C C6 FE 	DB	038H, 06CH, 0C6H, 0FEH, 0C6H, 06CH, 038H, 000H	; E9H
  167 DF50  38 6C C6 C6 	DB	038H, 06CH, 0C6H, 0C6H, 06CH, 06CH, 0EEH, 000H	; EAH
  168 DF58  1C 30 18 7C 	DB	01CH, 030H, 018H, 07CH, 0CCH, 0CCH, 078H, 000H	; EBH
  169 DF60  00 6C FE 92 	DB	000H, 06CH, 0FEH, 092H, 0FEH, 06CH, 000H, 000H	; ECH
  170 DF68  03 7E CC DE 	DB	003H, 07EH, 0CCH, 0DEH, 0F6H, 066H, 0FCH, 080H	; EDH
  171 DF70  3C 60 C0 FC 	DB	03CH, 060H, 0C0H, 0FCH, 0C0H, 060H, 03CH, 000H	; EEH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  93
ZSIBM   INC

  172 DF78  78 CC CC CC 	DB	078H, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 000H	; EFH
  173                   
  174 DF80  00 7E 00 7E 	DB	000H, 07EH, 000H, 07EH, 000H, 07EH, 000H, 000H	; F0H
  175 DF88  18 18 7E 18 	DB	018H, 018H, 07EH, 018H, 018H, 000H, 07EH, 000H	; F1H
  176 DF90  30 18 0C 18 	DB	030H, 018H, 00CH, 018H, 030H, 000H, 07EH, 000H	; F2H
  177 DF98  0C 18 30 18 	DB	00CH, 018H, 030H, 018H, 00CH, 000H, 07EH, 000H	; F3H
  178 DFA0  0E 1B 1B 18 	DB	00EH, 01BH, 01BH, 018H, 018H, 018H, 018H, 018H	; F4H
  179 DFA8  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 0D8H, 0D8H, 070H	; F5H
  180 DFB0  18 18 00 7E 	DB	018H, 018H, 000H, 07EH, 000H, 018H, 018H, 000H	; F6H
  181 DFB8  00 76 DC 00 	DB	000H, 076H, 0DCH, 000H, 076H, 0DCH, 000H, 000H	; F7H
  182 DFC0  38 6C 6C 38 	DB	038H, 06CH, 06CH, 038H, 000H, 000H, 000H, 000H	; F8H
  183 DFC8  00 00 18 3C 	DB	000H, 000H, 018H, 03CH, 03CH, 018H, 000H, 000H	; F9h
  184 DFD0  00 00 10 38 	DB	000H, 000H, 010H, 038H, 010H, 000H, 000H, 000H	; FAh
  185 DFD8  0F 0C 0C 0C 	DB	00FH, 00CH, 00CH, 00CH, 0CCH, 06CH, 03CH, 01CH	; FBH
  186 DFE0  78 6C 6C 6C 	DB	078H, 06CH, 06CH, 06CH, 06CH, 000H, 000H, 000H	; FCH
  187 DFE8  70 18 30 60 	DB	070H, 018H, 030H, 060H, 078H, 000H, 000H, 000H	; FDH
  188 DFF0  00 00 3C 3C 	DB	000H, 000H, 03CH, 03CH, 03CH, 03CH, 000H, 000H	; FEH
  189 DFF8  FF 81 81 81 	DB	0FFH, 081H, 081H, 081H, 081H, 081H, 081H, 0FFH	; FFH
  243                   endif
  244                   
  245                   	INCLUDE	CE48.INC	; ROM-E (E000-EDFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM E		**
    3                   ;**					**
    4                   ;**	Adresse:  E000h bis EDFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 07.10.2023	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0E000H
   10                   
   11 E000  C3 F156     	JP	BYE		; Tasten-RESET
   12 E003  C3 E59D     	JP	BEXP1		; BASIC-Erweiterung 1 - Token starten
   13 E006  C3 E5BA     	JP	BEXP2		; BASIC-Erweiterung 2
   14 E009  C3 EB90     	JP	BEXP3		; BASIC-Erweiterung 3
   15 E00C  FCE9        	DW	TOKTAB		; Token-Tabelle der Erweiterungen
   16 E00E  C3 F875     BASIO:	JP	BASPV		; BASIC Programmverteiler
   17                   
   18 E011  7F7F        	DW	7F7FH
   19 E013  42 41 53 49 	DB	'BASIC',1
   20 E019  CD E02F     	CALL	BASON		; BASIC-ROM ein, CAOS-C aus, IRM aus
   21 E01C  C3 C00D     	JP	PRIST		; BASIC-Kaltstart
   22                   
   23 E01F  7F7F        	DW	7F7FH
   24 E021  52 45 42 41 	DB	'REBASIC',1
   25 E029  CD E02F     	CALL	BASON		; BASIC-ROM ein, CAOS-C aus, IRM aus
   26 E02C  C3 C08C     	JP	SECST		; BASIC-Warmstart
   27                   
   28                   ; BASIC vorbereiten:
   29                   ;
   30                   ; Der Einsprung BASON ist bei allen CAOS-Versionen auf E02FH und kann deshalb
   31                   ; innerhalb der mit BSAVE erzeugten KCB-Dateien zum Einschalten des BASIC-ROM
   32                   ; genutzt werden.
   33                   ; Das gilt fuer alle CAOS-Versionen ab 4.1 (ausser 4.6)
   34                   
   35 E02F  ED 5B B804  BASON:	LD	DE,(MODST+4)	; D = aktueller Schaltzustand CAOS-ROM-C
   36 E033  CB 82       	RES	0,D		; AUS
   37 E035  2E 05       	LD	L,5		; SWITCH 5 0
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  94
CE48    INC

   38 E037  CD F0E2     	CALL	MODUSW		; CAOS-C aus
   39 E03A  16 C1       	LD	D,0C1H		; SWITCH 2 C1
   40 E03C  CD F0E0     	CALL	MODUL2		; BASIC-Ebene einschalten
   41 E03F  18 06       	JR	SCROFF		; IRM aus
   42                   
   43 E041  CD E050     PV4:	CALL	SCRON
   44 E044  CD F055     	CALL	PV3
   45 E047  F5          SCROFF:	PUSH	AF
   46 E048  DB 88       	IN	A,(PIOAD)
   47 E04A  E6 FB       	AND	11111011b	; IRM aus
   48 E04C  D3 88       	OUT	(PIOAD),A
   49 E04E  F1          	POP	AF
   50 E04F  C9          	RET
   51                   
   52 E050  F5          SCRON:	PUSH	AF
   53 E051  DB 88       	IN	A,(PIOAD)
   54 E053  F6 04       	OR	00000100b	; IRM ein
   55 E055  D3 88       	OUT	(PIOAD),A
   56 E057  F1          	POP	AF
   57 E058  C9          	RET
   58                   
   59                   ; CRT-Treiber:
   60                   
   61 E059  ED 5B B7A0  PADR0:	LD	DE,(CURSO)
   62 E05D  2A B79C     PADR1:	LD	HL,(WINON)
   63 E060  19          	ADD	HL,DE
   64 E061  CB 24       	SLA	H
   65 E063  CB 24       	SLA	H
   66 E065  CB 24       	SLA	H
   67                   ;_____________________________________________________________
   68                   ;							**34**
   69                   ; Berechne Pixel- und Farbadresse aus Zeichenposition
   70                   ; PE:	H	Vertikalposition (0 ... FFH)
   71                   ;	L	Horizontalposition (0 ... 27H)
   72                   ; PA:	HL	Zeichen- und Farbadresse*
   73                   ;	CY=1	Position ausserhalb
   74                   ; VR:	F, HL, DE STACK: 1
   75                   
   76 E067  F5          PADR:	PUSH	AF
   77 E068  7D          	LD	A,L		; Spalte
   78 E069  6C          	LD	L,H		; Pixelzeile
   79 E06A  FE 28       	CP	28H
   80 E06C  30 06       	JR	NC,IAD2		; zu gross
   81 E06E  F6 80       	OR	80H
   82 E070  67          	LD	H,A		; HL=Pixeladresse
   83 E071  F1          IAD1:	POP	AF
   84 E072  A7          OK:	AND	A		; CY=0
   85 E073  C9          	RET
   86                   	;
   87 E074  F1          IAD2:	POP	AF
   88 E075  37          NOK:	SCF			; CY=1
   89 E076  C9          	RET
   90                   ;_____________________________________________________________
   91                   ;							**33**
   92                   ; Test Cursor im Fenster
   93                   ; PE:	D	Zeile der Cursorposition
   94                   ;	E	Spalte der Cursorposition
   95                   ; PA:	CY=1	Cursor ausserhalb
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  95
CE48    INC

   96                   ; VR:	AF
   97                   
   98 E077  3A B79E     TCIF:	LD	A,(WINLG)	; Fenster-Breite
   99 E07A  D6 01       	SUB	1
  100 E07C  D8          	RET	C		; Breite=0
  101 E07D  93          	SUB	E		; Cursor-Spalte
  102 E07E  D8          	RET	C		; ausserhalb
  103 E07F  3A B79F     	LD	A,(WINLG+1)	; Fenster-Hoehe
  104 E082  D6 01       	SUB	1
  105 E084  D8          	RET	C		; Hoehe=0
  106 E085  92          	SUB	D		; Cursor-Zeile
  107 E086  C9          	RET
  108                   ;_____________________________________________________________
  109                   ;							**32**
  110                   ; Berechnung der VRAM-Adresse der Cursorposition
  111                   ; im gerade eingestellten Fenster und Bild
  112                   ; PE:	D	Zeile auf Bildschirm
  113                   ;	E	Spalte auf Bildschirm
  114                   ; PA:	CY=1	ausserhalb (Fehler)
  115                   ;	HL	Adresse im Speicher
  116                   ; VR:	F, HL
  117                   
  118 E087  F5          DABR:	PUSH	AF
  119 E088  CD E077     	CALL	TCIF		; Cursor im Fenster?
  120 E08B  38 E7       	JR	C,IAD2
  121 E08D  3A B79C     	LD	A,(WINON)
  122 E090  83          	ADD	A,E		; Cursor-Spalte
  123 E091  D5          	PUSH	DE
  124 E092  5F          	LD	E,A		; absolut
  125 E093  3A B79D     	LD	A,(WINON+1)
  126 E096  82          	ADD	A,D		; Cursor-Zeile
  127 E097  87          	ADD	A,A
  128 E098  87          	ADD	A,A
  129 E099  87          	ADD	A,A		; *8
  130 E09A  6F          	LD	L,A		; Pixelzeile
  131 E09B  26 00       	LD	H,0
  132 E09D  54          	LD	D,H		; D=0
  133 E09E  29          	ADD	HL,HL
  134 E09F  29          	ADD	HL,HL		; *4
  135 E0A0  19          	ADD	HL,DE		; *5, zus. *40
  136 E0A1  5F          	LD	E,A
  137 E0A2  3A B7CC     	LD	A,(VRAM+1)
  138 E0A5  57          	LD	D,A
  139 E0A6  19          	ADD	HL,DE
  140 E0A7  D1          	POP	DE
  141 E0A8  18 C7       	JR	IAD1
  142                   ;	POP	AF		; CY=0
  143                   ;	AND	A
  144                   ;	RET
  145                   
  146 E0AA  3E 0C       CLSX:	LD	A,0Ch			; CLC
  147                   ;_____________________________________________________________
  148                   ;							**00**
  149                   ; Zeichenausgabe auf Bildschirm
  150                   ; PE:	A	Zeichencode (ASCII)
  151                   ; PA:	-
  152                   ; VR:	-
  153                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  96
CE48    INC

  154 E0AC  E5          CRT:	PUSH	HL
  155 E0AD  D5          	PUSH	DE
  156 E0AE  C5          	PUSH	BC
  157 E0AF  F5          	PUSH	AF
  158 E0B0  CD E196     	CALL	PCHR		; Zeichen anzeigen
  159 E0B3  ED 53 B7A0  	LD	(CURSO),DE	; neue Cursorposition
  160 E0B7  F1          POP4:	POP	AF
  161 E0B8  C1          POP3:	POP	BC
  162 E0B9  D1          	POP	DE
  163 E0BA  E1          	POP	HL
  164 E0BB  C9          	RET
  165                   
  166                   ; Zeichen auf Grafikbildschirm sichtbar machen
  167                   ; PE:	DE	Cursorposition im Fenster
  168                   ;	A	Zeichencode
  169                   ;	STBT	Steuerbyte
  170                   
  171 E0BC  E5          WPIX:	PUSH	HL
  172 E0BD  D5          	PUSH	DE
  173 E0BE  C5          	PUSH	BC
  174 E0BF  F5          	PUSH	AF
  175 E0C0  4F          	LD	C,A		; Zeichen
  176 E0C1  2A B79C     	LD	HL,(WINON)
  177 E0C4  19          	ADD	HL,DE
  178 E0C5  EB          	EX	DE,HL		; DE:absolute Cursorposition
  179 E0C6  7B          	LD	A,E
  180 E0C7  FE 28       	CP	28H
  181 E0C9  30 EC       	JR	NC,POP4		; ausserhalb!
  182 E0CB  21 B7A2     	LD	HL,STBT
  183 E0CE  CB 6E       	BIT	5,(HL)		; IBM?
  184 E0D0  20 61       	JR	NZ,WPX14
  185 E0D2  79          	LD	A,C
  186 E0D3  21 B7A6     	LD	HL,CCTL0
  187 E0D6  87          	ADD	A,A		; *2
  188 E0D7  30 02       	JR	NC,WPX04
  189 E0D9  2E AA       	LD	L,LOW(CCTL2)
  190 E0DB  D6 40       WPX04:	SUB	40H
  191 E0DD  F2 E0E4     	JP	P,WPX06		; CCTL0/2
  192 E0E0  2C          	INC	L
  193 E0E1  2C          	INC	L		; CCTL1/3
  194 E0E2  EE C0       	XOR	0C0H
  195 E0E4  4E          WPX06:	LD	C,(HL)
  196 E0E5  2C          	INC	L		; BC=(CCTL)
  197 E0E6  46          	LD	B,(HL)
  198 E0E7  87          	ADD	A,A		; *4
  199 E0E8  6F          	LD	L,A
  200 E0E9  26 00       	LD	H,0
  201 E0EB  29          WPX07:	ADD	HL,HL		; *8
  202 E0EC  09          	ADD	HL,BC		; HL=Pixelmuster
  203 E0ED  7A          	LD	A,D
  204 E0EE  87          	ADD	A,A
  205 E0EF  87          	ADD	A,A
  206 E0F0  87          	ADD	A,A
  207 E0F1  53          	LD	D,E
  208 E0F2  5F          	LD	E,A
  209 E0F3  CB FA       	SET	7,D		; DE=IRM-Adresse
  210 E0F5  ED 4B B7A2  	LD	BC,(STBT)
  211 E0F9  CB 49       	BIT	1,C
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  97
CE48    INC

  212 E0FB  20 16       	JR	NZ,WPIXNC	; Farbe AUS
  213 E0FD  CD F999     	CALL	ESC9
  214 E100  DD CB 01 5E 	BIT	3,(IX+1)
  215 E104  20 04       	JR	NZ,WPIXA	; LORES
  216 E106  CB 71       	BIT	6,C
  217 E108  20 36       	JR	NZ,WPIXH1	; HRG-Modus
  218 E10A  78          WPIXA:	LD	A,B		; Farbe
  219 E10B  43          	LD	B,E
  220 E10C  CD E186     	CALL	WCOLOR		; 8 Farbbytes
  221 E10F  58          	LD	E,B
  222 E110  CD F999     WPIXHE:	CALL	ESC9
  223 E113  CB 41       WPIXNC:	BIT	0,C
  224 E115  20 12       	JR	NZ,WPX11	; Pixel AUS
  225 E117  DD CB 01 5E 	BIT	3,(IX+1)
  226 E11B  20 04       	JR	NZ,WPIXB	; LORES
  227 E11D  CB 71       	BIT	6,C
  228 E11F  20 2A       	JR	NZ,WPIXH2	; HRG-Modus
  229 E121  CB 51       WPIXB:	BIT	2,C
  230 E123  CC E165     	CALL	Z,WPIXEL	; normal
  231 E126  C4 E178     	CALL	NZ,WPIXI	; invers
  232 E129  CB 69       WPX11:	BIT	5,C		; IBM?
  233 E12B  28 8A       	JR	Z,POP4		; nein
  234 E12D  F1          	POP	AF
  235 E12E  CD E2A3     	CALL	OUT86		; CAOS-C wie vorher
  236 E131  18 84       	JR	POP4		; POP	AF,BC,DE,HL   RET
  237                   
  238 E133  DD 7E 04    WPX14:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  239 E136  F5          	PUSH	AF		; merken
  240                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 E137  DD CB 04    	 DB	0DDh,0CBh,4
    2 E13A  FF          	 DB	7 SHL 3 OR 11000111b
  241 E13B  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  242 E13D  C3 D199     	JP	WPIXD		; Springe zu CAOS-D-Block
  243                   
  244                   ; Farbebene im HRG-Modus
  245 E140  78          WPIXH1:	LD	A,B
  246 E141  0F          	RRCA
  247 E142  E5          	PUSH	HL
  248 E143  D5          	PUSH	DE
  249 E144  CD E155     	CALL	WPHRG
  250 E147  D1          	POP	DE
  251 E148  E1          	POP	HL
  252 E149  18 C5       	JR	WPIXHE
  253                   
  254                   ; Pixelebene im HRG-Modus
  255 E14B  78          WPIXH2:	LD	A,B
  256 E14C  E5          	PUSH	HL
  257 E14D  D5          	PUSH	DE
  258 E14E  CD E155     	CALL	WPHRG
  259 E151  D1          	POP	DE
  260 E152  E1          	POP	HL
  261 E153  18 D4       	JR	WPX11
  262                   
  263                   ; Reaktion im HRG-Modus
  264 E155  E6 09       WPHRG:	AND	00001001b	; Bits 0,3
  265 E157  28 2D       	JR	Z,WCOLOR	; beide 0: Ebene ruecksetzen
  266 E159  EA E184     	JP	PE,COLFF	; beide 1: Ebene setzen
  267 E15C  CB 51       	BIT	2,C
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  98
CE48    INC

  268 E15E  28 02       	JR	Z,WPHN
  269 E160  EE 09       	XOR	00001001b	; invers
  270 E162  3D          WPHN:	DEC	A
  271 E163  28 13       	JR	Z,WPIXI		; Pixel invers
  272 E165  C5          WPIXEL:	PUSH	BC
  273 E166  ED A0       	LDI			; 8 Pixelbytes kopieren
  274 E168  ED A0       	LDI			; ohne Schleife - schneller!
  275 E16A  ED A0       	LDI
  276 E16C  ED A0       	LDI
  277 E16E  ED A0       	LDI
  278 E170  ED A0       	LDI
  279 E172  ED A0       	LDI
  280 E174  ED A0       	LDI
  281 E176  C1          	POP	BC
  282 E177  C9          	RET
  283                   
  284 E178  C5          WPIXI:	PUSH	BC
  285 E179  06 08       	LD	B,8		; 8 Pixelmuster
  286 E17B  7E          WPIXI1:	LD	A,(HL)		; invers
  287 E17C  2F          	CPL
  288 E17D  12          	LD	(DE),A
  289 E17E  23          	INC	HL
  290 E17F  1C          	INC	E
  291 E180  10 F9       	DJNZ	WPIXI1
  292 E182  C1          	POP	BC
  293 E183  C9          	RET
  294                   
  295 E184  3E FF       COLFF:	LD	A,0FFH
  296 E186  12          WCOLOR:	LD	(DE),A		; 8 Farbbytes
  297 E187  1C          	INC	E
  298 E188  12          	LD	(DE),A
  299 E189  1C          	INC	E
  300 E18A  12          	LD	(DE),A
  301 E18B  1C          	INC	E
  302 E18C  12          	LD	(DE),A
  303 E18D  1C          	INC	E
  304 E18E  12          	LD	(DE),A
  305 E18F  1C          	INC	E
  306 E190  12          	LD	(DE),A
  307 E191  1C          	INC	E
  308 E192  12          	LD	(DE),A
  309 E193  1C          	INC	E
  310 E194  12          	LD	(DE),A
  311 E195  C9          	RET
  312                   
  313                   ; CRT-Grundprogramm mit Auswertung von ESC-Sequenzen
  314                   
  315 E196  ED 5B B7A0  PCHR:	LD	DE,(CURSO)
  316 E19A  21 B7A2     	LD	HL,STBT
  317 E19D  CB 66       	BIT	4,(HL)		; ESC aktiv?
  318 E19F  28 21       	JR	Z,PCHR3
  319 E1A1  CB A6       CRT1:	RES	4,(HL)		; ESC quittieren
  320 E1A3  FE 30       	CP	'0'
  321 E1A5  D8          	RET	C		; ESC-Folgecode kleiner als '0'
  322 E1A6  FE 3A       	CP	'9'+1
  323 E1A8  30 04       	JR	NC,PCHR1	; ESC-Folgecode groesser als '9'
  324 E1AA  D6 30       	SUB	'0'
  325 E1AC  18 0A       	JR	PCHR2		; ESC-Routine aus der Tabelle ermitteln
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  99
CE48    INC

  326                   	;
  327 E1AE  FE 41       PCHR1:	CP	'A'
  328 E1B0  D8          	RET	C		; ESC-Folgecode zwischen '9' und 'A'
  329 E1B1  CB AF       	RES	5,A		; upcase
  330 E1B3  FE 5B       	CP	'Z'+1
  331 E1B5  D0          	RET	NC		; ESC-Folgecode groesser als 'Z'
  332 E1B6  D6 37       	SUB	'A'-10
  333 E1B8  21 B7DF     PCHR2:	LD	HL,L3SIZ	; Tabelle
  334 E1BB  BE          	CP	(HL)		; lang genug?
  335 E1BC  D0          	RET	NC
  336 E1BD  2A B7DD     	LD	HL,(L3TAB)	; Tabelle der ESC-Funktionen
  337 E1C0  18 0B       	JR	PCHR4		; klar zum Ansprung
  338                   	;
  339 E1C2  FE 20       PCHR3:	CP	20H		; Steuerfunktion?
  340 E1C4  30 18       	JR	NC,PCHR5	; nein, darstellbares Zeichen
  341 E1C6  CB 5E       	BIT	3,(HL)		; Steuerzeichen darstellen?
  342 E1C8  20 14       	JR	NZ,PCHR5	; ja, nicht ausfuehren
  343 E1CA  2A B7B2     	LD	HL,(CTAB)	; Tabelle der CRT-Funktionen
  344 E1CD  87          PCHR4:	ADD	A,A		; *2
  345 E1CE  4F          	LD	C,A
  346                   ; 08.03.2020:
  347                   ; Dieser Test sorgt dafuer, dass auch kein Steuerzeichen ausgefuehrt wird,
  348                   ; wenn der Cursor nicht im Fenster ist oder das Fenster 0x0 gross ist.
  349                   ; Dann wird aber auch kein HOME oder CLS ausgefuehrt, was problematisch ist.
  350                   ; 09.03.2020: wieder verworfen
  351                   ;	CALL	TCIF		; Cursor im Fenster?
  352                   ;	RET	C		; nein, Abbruch
  353 E1CF  06 00       	LD	B,0
  354 E1D1  09          	ADD	HL,BC
  355 E1D2  7E          	LD	A,(HL)
  356 E1D3  23          	INC	HL
  357 E1D4  66          	LD	H,(HL)
  358 E1D5  6F          	LD	L,A
  359 E1D6  E9          JPHL:	JP	(HL)		; anspringen
  360                   
  361                   ; Tabulatorschritt mit Code 05h bzw. ESC '0'
  362 E1D7  7B          ESC0:	LD	A,E		; Tabulator
  363 E1D8  F6 07       	OR	7		; 8er Schrittweite
  364 E1DA  3C          	INC	A
  365 E1DB  5F          	LD	E,A
  366 E1DC  18 09       	JR	CUR1
  367                   	;
  368 E1DE  CD E087     PCHR5:	CALL	DABR		; VRAM-Adresse berechnen
  369 E1E1  D8          	RET	C		; Abbruch, da ausserhalb des Fensters
  370 E1E2  77          	LD	(HL),A		; ASCII in VRAM eintragen
  371 E1E3  CD E0BC     	CALL	WPIX		; Zeichen darstellen
  372 E1E6  1C          CUR:	INC	E		; Cursor nach rechts
  373 E1E7  3A B79E     CUR1:	LD	A,(WINLG)
  374 E1EA  3D          	DEC	A
  375 E1EB  BB          	CP	E		; Zeilenende?
  376 E1EC  D0          	RET	NC
  377                   
  378                   ; Neue Zeile mit Code 1Eh
  379 E1ED  1E 00       NL:	LD	E,0		; Cursor ganz nach links
  380 E1EF  14          CUD:	INC	D		; naechste Zeile
  381 E1F0  3A B79F     	LD	A,(WINLG+1)
  382 E1F3  BA          	CP	D
  383 E1F4  C0          	RET	NZ
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 100
CE48    INC

  384 E1F5  2A B7A4     	LD	HL,(WEND)
  385 E1F8  E9          	JP	(HL)		; PAGE oder SCROLL
  386                   
  387                   ; Aufruf der Hardcopy-Routine mit Code 0Fh
  388 E1F9  2A B799     HCOPY:	LD	HL,(HCADR)	; ShCLR
  389 E1FC  E9          	JP	(HL)
  390                   ;
  391                   ; Cursor nach links:
  392                   ;
  393 E1FD  7B          CUL:	LD	A,E		; Spalte
  394 E1FE  A7          	AND	A		; ganz links?
  395 E1FF  28 02       	JR	Z,CUL1
  396 E201  1D          	DEC	E		; eine Position nach links gehen
  397 E202  C9          	RET
  398                   	;
  399 E203  7A          CUL1:	LD	A,D		; Zeile
  400 E204  A7          	AND	A		; ganz oben?
  401 E205  C8          	RET	Z
  402 E206  15          	DEC	D		; eine Zeile nach oben gehen
  403 E207  3A B79E     CEL:	LD	A,(WINLG)	; Spalten im aktuellen Fenster
  404 E20A  3D          	DEC	A		; letzte Spalte
  405 E20B  5F          	LD	E,A		; Cursor auf letzte Spalte setzen
  406 E20C  C9          	RET
  407                   ;
  408                   ; Cursor nach oben:
  409                   ;
  410 E20D  7A          CUU:	LD	A,D		; Zeile
  411 E20E  A7          	AND	A		; bereits ganz oben?
  412 E20F  C8          	RET	Z
  413 E210  15          	DEC	D		; eine Zeile nach oben gehen
  414 E211  C9          	RET
  415                   
  416 E212  21 E281     PAGEM:	LD	HL,HOMEPG	; ShCUU
  417 E215  22 B7A4     WADR:	LD	(WEND),HL
  418 E218  C9          	RET
  419                   
  420 E219  21 E286     SCROL:	LD	HL,SCRLPG	; ShCUD
  421 E21C  18 F7       	JR	WADR
  422                   
  423                   ; Zeichen nach links loeschen mit Code 01h
  424 E21E  CD E1FD     CLR:	CALL	CUL		; Cursor nach links
  425                   
  426                   ; Zeichen unter Cursor loeschen mit Code 1Fh
  427 E221  D5          DEL:	PUSH	DE		; Cursor retten
  428 E222  CD E087     	CALL	DABR
  429 E225  7E          	LD	A,(HL)
  430 E226  A7          	AND	A		; Ende?
  431 E227  28 29       	JR	Z,POPDE
  432 E229  E5          	PUSH	HL		; VRAM
  433 E22A  D5          DEL1:	PUSH	DE		; Cursor
  434 E22B  1C          	INC	E		; naechste Spalte
  435 E22C  CD E087     	CALL	DABR		; raus?
  436 E22F  30 08       	JR	NC,DEL2
  437 E231  1E 00       	LD	E,0		; ja, wie NL
  438 E233  14          	INC	D
  439 E234  CD E087     	CALL	DABR		; raus?
  440 E237  38 10       	JR	C,DEL3		; ja-wie Ende
  441 E239  7E          DEL2:	LD	A,(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 101
CE48    INC

  442 E23A  A7          	AND	A		; Ende?
  443 E23B  28 0C       	JR	Z,DEL3
  444 E23D  42          	LD	B,D
  445 E23E  4B          	LD	C,E		; BC:=DE
  446 E23F  D1          	POP	DE		; DE=links davon
  447 E240  E3          	EX	(SP),HL		; HL=VRAM links
  448 E241  77          	LD	(HL),A		; eintragen
  449 E242  CD E0BC     	CALL	WPIX		; zeichnen
  450 E245  50          	LD	D,B
  451 E246  59          	LD	E,C		; DE:=BC
  452 E247  18 E1       	JR	DEL1		; von vorn
  453                   
  454 E249  D1          DEL3:	POP	DE
  455 E24A  E1          	POP	HL
  456 E24B  36 00       	LD	(HL),0
  457 E24D  3E 20       	LD	A,' '
  458 E24F  CD E0BC     	CALL	WPIX
  459 E252  D1          POPDE:	POP	DE
  460 E253  C9          	RET
  461                   
  462 E254  D5          INS:	PUSH	DE		; Cursor
  463 E255  3E 20       	LD	A,' '
  464 E257  CD E087     	CALL	DABR
  465 E25A  46          INS1:	LD	B,(HL)		; VRAM
  466 E25B  77          	LD	(HL),A		; neues Zeichen
  467 E25C  CD E0BC     	CALL	WPIX		; zeichnen
  468 E25F  78          	LD	A,B
  469 E260  A7          	AND	A		; Dummy?
  470 E261  28 0E       	JR	Z,INS2
  471 E263  1C          	INC	E		; CUR
  472 E264  CD E087     	CALL	DABR		; raus?
  473 E267  30 F1       	JR	NC,INS1
  474 E269  1E 00       	LD	E,0		; wie NL
  475 E26B  14          	INC	D
  476 E26C  CD E087     	CALL	DABR		; raus?
  477 E26F  30 E9       	JR	NC,INS1
  478 E271  D1          INS2:	POP	DE		; wenn ja Schluss
  479 E272  C9          	RET
  480                   
  481                   ; Bildschirm loeschen mit Code 0Ch (ShHOME)
  482 E273  3A B79F     CLS:	LD	A,(WINLG+1)	; Anzahl Zeilen
  483 E276  16 00       	LD	D,0		; Zeile 0
  484 E278  F5          CLS1:	PUSH	AF
  485 E279  CD E295     	CALL	CLLN		; Zeile loeschen
  486 E27C  F1          	POP	AF
  487 E27D  14          	INC	D
  488 E27E  3D          	DEC	A
  489 E27F  20 F7       	JR	NZ,CLS1		; A Zeilen
  490                   
  491                   ; Cursor in Home-Position mit Code 10h
  492 E281  16 00       HOMEPG:	LD	D,0		; Zeile 0
  493 E283  1E 00       CBL:	LD	E,0		; Spalte 0
  494 E285  C9          	RET
  495                   
  496                   ; Scrollroutine
  497 E286  DD 7E 04    SCRLPG:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  498 E289  F5          	PUSH	AF		; merken
  499                   	SETIXA	7,4		; SET 7,(IX+4),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 102
CE48    INC

    1 E28A  DD CB 04    	 DB	0DDh,0CBh,4
    2 E28D  FF          	 DB	7 SHL 3 OR 11000111b
  500 E28E  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  501 E290  CD D219     	CALL	SCRLD		; weiter im CAOS-D-Segment
  502 E293  18 0D       	JR	CCRES
  503                   
  504                   ; Zeile loeschen mit Code 02h (ShDEL)
  505 E295  DD 7E 04    CLLN:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  506 E298  F5          	PUSH	AF		; merken
  507                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 E299  DD CB 04    	 DB	0DDh,0CBh,4
    2 E29C  FF          	 DB	7 SHL 3 OR 11000111b
  508 E29D  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  509 E29F  CD D260     	CALL	CLLND		; weiter im CAOS-D-Segment
  510 E2A2  F1          CCRES:	POP	AF
  511 E2A3  DD 77 04    OUT86:	LD	(IX+4),A	; CAOS-C
  512 E2A6  D3 86       	OUT	(PORT2),A	; wie vorher
  513 E2A8  C9          	RET
  514                   
  515 E2A9  01 0A0F     BEEP:	LD	BC,0A0FH	; B=Dauer, C=Lautstaerke
  516 E2AC  21 0030     	LD	HL,48		; HL=Tonhoehe 1
  517 E2AF  D5          	PUSH	DE
  518 E2B0  5C          	LD	E,H		; E=0 (keine Tonhoehe 2)
  519 E2B1  CD F8F9     	CALL	TON2
  520 E2B4  3E 1E       	LD	A,30
  521 E2B6  CD FC21     	CALL	WAIT		; 30*6ms=180ms
  522 E2B9  3E 03       	LD	A,3
  523 E2BB  D3 8C       	OUT	(CTC0),A
  524 E2BD  3E 10       	LD	A,16		; 16*6ms=96ms
  525 E2BF  D1          	POP	DE
  526                   ;
  527                   ; Zeitschleife 6ms fuer UP WAIT
  528                   ; PE:	A=0
  529                   ; PA:	A=0
  530                   ;
  531 E2C0  3D          WTUP:	DEC	A		; 4 Takte
  532 E2C1  C8          	RET	Z		; 5 (11) Takte
  533 E2C2  F5          	PUSH	AF		; 11 Takte
  534 E2C3  F1          	POP	AF		; 10 Takte
  535 E2C4  18 FA       	JR	WTUP		; 12 Takte
  536                   ;
  537                   ; Ton fuer Tastenclick
  538                   ;
  539 E2C6  01 0307     CLIK:	LD	BC,0307H	; B=Dauer, C=Lautstaerke
  540 E2C9  21 0024     	LD	HL,36		; HL=Tonhoehe 1
  541 E2CC  D5          	PUSH	DE
  542 E2CD  5C          	LD	E,H		; E=0 (Tonhoehe 2)
  543 E2CE  CD F8F9     	CALL	TON2		; Ton ausgeben
  544 E2D1  D1          	POP	DE
  545 E2D2  C9          	RET
  546                   
  547 E2D3  21 B7A3     ESC8:	LD	HL,COLOR	; Farbtausch
  548 E2D6  7E          	LD	A,(HL)
  549 E2D7  E6 07       	AND	00000111b	; Hintergrund
  550 E2D9  07          	RLCA
  551 E2DA  07          	RLCA
  552 E2DB  07          	RLCA
  553 E2DC  4F          	LD	C,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 103
CE48    INC

  554 E2DD  7E          	LD	A,(HL)
  555 E2DE  E6 38       	AND	00111000b	; Vordergrund
  556 E2E0  0F          	RRCA
  557 E2E1  0F          	RRCA
  558 E2E2  0F          	RRCA
  559 E2E3  B1          	OR	C
  560 E2E4  4F          	LD	C,A
  561 E2E5  7E          	LD	A,(HL)
  562 E2E6  E6 C0       	AND	11000000b	; Attribute
  563 E2E8  B1          	OR	C
  564                   ;_____________________________________________________________
  565                   ;							**28**
  566                   ; LD (HL),A fuer PV4-PV6
  567                   ; PE:	A	Byte
  568                   ;	HL	Adresse
  569                   ; PA:	-
  570                   ; VR:	-
  571                   
  572 E2E9  77          LDMA:	LD	(HL),A
  573 E2EA  C9          	RET
  574                   ;_____________________________________________________________
  575                   ;							**29**
  576                   ; LD A,(HL) fuer PV4-PV6
  577                   ; PE:	HL	Adresse
  578                   ; PA:	A	Byte auf Adresse (HL)
  579                   ; VR:	A
  580                   
  581 E2EB  7E          LDAM:	LD	A,(HL)
  582 E2EC  C9          	RET
  583                   
  584 E2ED  DD 7E 08    CLICK:	LD	A,(IX+8)	; ShINS
  585 E2F0  EE 20       	XOR	20H
  586 E2F2  DD 77 08    	LD	(IX+8),A
  587 E2F5  C9          	RET
  588                   ;
  589                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  590                   ;
  591                   ;	=== KBD-Treiber ===
  592                   
  593                   ; Z E I T I N T E R R U P T
  594                   ;
  595                   ; ISR CTC Kanal 3 (Tastatur)
  596                   ; Taste losgelassen
  597                   ;
  598 E2F6  FB          ISRC3:	EI
  599 E2F7  F5          	PUSH	AF
  600 E2F8  3E 23       	LD	A,23H	  	; DI, ZG256, Reset
  601 E2FA  D3 8F       	OUT	(CTC3),A
  602 E2FC  DD 36 0D 00 	LD	(IX+13),0	; Zeichen tot
  603 E300  18 5A       	JR	TST5		; freigeben
  604                   ;
  605                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  606                   ;
  607                   ; Keyboard-Interrupt-Routine
  608                   ; Zeitkonstanten:
  609                   ;
  610         008F      TCTZK	EQU	143	; 8FH
  611         0065      TGE0	EQU	101	; 65H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 104
CE48    INC

  612         0042      TGE1	EQU	66	; 42H
  613         0014      FEHL1	EQU	20
  614         0078      FEHL2	EQU	120
  615                   ;
  616                   ; T A S T A T U R I N T E R R U P T
  617                   ;
  618                   ; ISR PIO Kanal B (Tastatur)
  619                   ; Taste gedrueckt
  620                   ;
  621 E302  F5          ISRPB:	PUSH	AF
  622 E303  DB 8F       	IN	A,(CTC3)	; gemessene Zeit
  623 E305  F5          	PUSH	AF
  624 E306  3E A7       	LD	A,0A7H		; EI, ZG256, Reset
  625 E308  D3 8F       	OUT	(CTC3),A
  626 E30A  3E 8F       	LD	A,TCTZK		; Zeitkonstante
  627 E30C  D3 8F       	OUT	(CTC3),A
  628 E30E  F1          	POP	AF
  629 E30F  FB          	EI
  630 E310  FE 14       	CP	FEHL1		; neue Betaetigung? (Zeitinterrupt ausgeloest)
  631 E312  38 48       	JR	C,TST5		; oder zu lang
  632 E314  FE 78       	CP	FEHL2
  633 E316  30 44       	JR	NC,TST5		; zu kurz
  634 E318  FE 65       	CP	TGE0		; Diskriminator
  635 E31A  30 04       	JR	NC,TST1		; 0-Bit
  636 E31C  C6 BE       	ADD	A,-TGE1		; 1-Bit
  637 E31E  30 06       	JR	NC,TST2		; Stop-Bit
  638 E320  DD CB 0C 1E TST1:	RR	(IX+12)		; Bit einschieben
  639 E324  18 36       	JR	TST5
  640                   	;
  641 E326  E5          TST2:	PUSH	HL
  642 E327  D5          	PUSH	DE
  643 E328  DD 7E 0C    	LD	A,(IX+12)	; Wortregister
  644 E32B  1F          	RRA			; 7bit-Scancode
  645 E32C  EE 01       	XOR	1		; Startbit invertieren
  646                   ;
  647                   ; in CAOS 5.0/6.0 wird Shift-BRK hier zu Soft-Reset abgefragt
  648                   ; das koennte hier so aussehen:
  649                   ;
  650                   ;	CP	61		; Scancode Shift-BRK
  651                   ;	JR	NZ,IBRK
  652                   ;IBRK:	CALL	IRET		; Interrupts freigeben
  653                   ;	JP	BYE		; Sprung zu RESET
  654                   ;IBRK:
  655 E32E  DD 6E 0E    	LD	L,(IX+14)
  656 E331  DD 66 0F    	LD	H,(IX+15)	; aktuelle KTAB-Adresse
  657 E334  16 00       	LD	D,0
  658 E336  5F          	LD	E,A
  659 E337  19          	ADD	HL,DE		; Position in KTAB
  660 E338  7E          	LD	A,(HL)		; ASCII holen
  661 E339  DD CB 08 7E 	BIT	7,(IX+8)	; CAPS aktiv?
  662 E33D  20 07       	JR	NZ,TST3		; 1=nein
  663 E33F  FE 40       	CP	40H
  664 E341  FA E346     	JP	M,TST3		; Befehl aus CAOS 3.4 uebernommen
  665 E344  EE 20       	XOR	20H		; klein<=>gross
  666 E346  57          TST3:	LD	D,A		; Code merken
  667 E347  DD BE 0D    	CP	(IX+13)		; gleicher Code wie zuvor?
  668 E34A  20 17       	JR	NZ,TST6		; nein
  669 E34C  21 B7E0     	LD	HL,COUNT
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 105
CE48    INC

  670 E34F  CD E39E     	CALL	IRMGET
  671 E352  DD BE 0A    	CP	(IX+10)		; FastRepeat?
  672 E355  38 1C       	JR	C,TST7
  673 E357  DD 34 0A    	INC	(IX+10)		; Zeit abwarten
  674 E35A  D1          TST4:	POP	DE
  675 E35B  E1          	POP	HL
  676 E35C  DB 89       TST5:	IN	A,(PIOBD)	; PIO-Logik
  677 E35E  D3 89       	OUT	(PIOBD),A	; freigeben
  678 E360  F1          	POP	AF
  679 E361  ED 4D       	RETI
  680                   
  681 E363  DD 36 0A 00 TST6:	LD	(IX+10),0	; neuer Code
  682 E367  FE 16       	CP	16H		; CAPS?
  683 E369  20 09       	JR	NZ,TST8
  684 E36B  DD 7E 08    	LD	A,(IX+8)
  685 E36E  EE 80       	XOR	80H		; CAPS on/off
  686 E370  DD 77 08    	LD	(IX+8),A
  687 E373  7A          TST7:	LD	A,D		; Code
  688 E374  DD 77 0D    TST8:	LD	(IX+13),A	; eintragen
  689 E377  DD CB 08 C6 	SET	0,(IX+8)	; gueltig machen
  690 E37B  18 DD       	JR	TST4
  691                   ;_____________________________________________________________
  692                   ;							**0C**
  693                   ; Tastaturabfrage ohne Quittung
  694                   
  695 E37D  B7          KBDS:	OR	A		; CY=0
  696 E37E  DD CB 08 46 	BIT	0,(IX+8)	; Code gueltig?
  697 E382  C8          	RET	Z		; nein
  698 E383  DD 7E 0D    	LD	A,(IX+13)	; Tastencode holen
  699 E386  37          	SCF			; und mit CY=1 zurueck melden
  700 E387  C9          	RET
  701                   ;_____________________________________________________________
  702                   ;							**0E**
  703                   ; Tastaturabfrage mit Quittung
  704                   
  705 E388  CD E37D     KBDZ:	CALL	KBDS		; Tastaturabfrage
  706 E38B  D0          	RET	NC		; keine Taste gedrueckt
  707 E38C  DD CB 08 86 	RES	0,(IX+8)	; Taste quittieren
  708 E390  C9          	RET
  709                   ;_____________________________________________________________
  710                   ;							**42**
  711 E391  E5          CSTBT:	PUSH	HL
  712 E392  21 B7A2     	LD	HL,STBT
  713 E395  CB DE       	SET	3,(HL)
  714 E397  CD F3BA     	CALL	OCHR		; Steuerzeichen darstellen
  715 E39A  CB 9E       	RES	3,(HL)
  716 E39C  E1          	POP	HL
  717 E39D  C9          	RET
  718                   ;
  719                   ; Arbeitszelle aus IRM lesen (innerhalb eines Interrupt)
  720                   ; PE:	HL	Adresse
  721                   ; PA:	A	Inhalt
  722                   ; VR:	A
  723                   ;
  724 E39E  D5          IRMGET:	PUSH	DE
  725 E39F  DB 88       	IN	A,(PIOAD)
  726 E3A1  5F          	LD	E,A		; IRM-Schaltzustand in Reg. E merken
  727 E3A2  CB D7       	SET	2,A		; IRM on!
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 106
CE48    INC

  728 E3A4  F3          	DI			; damit Stack nicht genutzt wird!
  729 E3A5  D3 88       	OUT	(PIOAD),A
  730 E3A7  56          	LD	D,(HL)		; Arbeitszelle lesen
  731 E3A8  7B          	LD	A,E
  732 E3A9  D3 88       	OUT	(PIOAD),A	; IRM wie zuvor
  733 E3AB  FB          	EI
  734 E3AC  7A          	LD	A,D		; Wert nach A uebergeben
  735 E3AD  D1          	POP	DE
  736 E3AE  C9          	RET
  737                   ;
  738                   ; ISR fuer Fremdtastatur an SIO-B
  739                   ;
  740 E3AF  F5          ISRT:	PUSH	AF
  741 E3B0  E5          	PUSH	HL
  742 E3B1  D5          	PUSH	DE
  743 E3B2  C5          	PUSH	BC
  744 E3B3  21 A800     	LD	HL,V24PL	; Steckplatz M003
  745 E3B6  CD E39E     	CALL	IRMGET		; aus IRM lesen, Rueckkehr mit EI
  746 E3B9  47          	LD	B,A		; Steckplatz M003 holen
  747 E3BA  0E 80       	LD	C,80H
  748 E3BC  3E 01       	LD	A,1
  749 E3BE  ED 79       	OUT	(C),A		; Modul einschalten
  750 E3C0  DB 09       	IN	A,(9)		; empfangenen Code abholen
  751 E3C2  5F          	LD	E,A		; Code in Reg. E merken
  752 E3C3  A7          	AND	A
  753 E3C4  28 0E       	JR	Z,IST2		; Code 0 (Taste losgelassen)
  754 E3C6  DD BE 0D    	CP	(IX+13)		; 2x gleicher Tastencode?
  755 E3C9  3E 00       	LD	A,0		; kein Repeat
  756 E3CB  20 07       	JR	NZ,IST2
  757 E3CD  21 B7E0     	LD	HL,COUNT	; Repeat-Counter
  758 E3D0  CD E39E     	CALL	IRMGET		; aus IRM lesen
  759 E3D3  3C          	INC	A		; sofort aktivieren
  760 E3D4  DD 77 0A    IST2:	LD	(IX+10),A	; repeat setzen
  761 E3D7  7B          	LD	A,E		; gemerkten
  762 E3D8  DD 77 0D    	LD	(IX+13),A	; Code eintragen
  763 E3DB  A7          	AND	A		; Code=0 ?
  764 E3DC  28 04       	JR	Z,IST3		; ja
  765 E3DE  DD CB 08 C6 	SET	0,(IX+8)	; sonst aktivieren
  766 E3E2  26 B8       IST3:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  767 E3E4  68          	LD	L,B		; Steckplatz
  768 E3E5  CD E39E     	CALL	IRMGET		; Schaltzustand vor ISR ermitteln
  769 E3E8  ED 79       	OUT	(C),A		; und wiederherstellen
  770 E3EA  C1          	POP	BC
  771 E3EB  18 48       	JR	IPOP3		; POP DE,HL,AF; RETI
  772                   
  773                   ;	=== Joystick-Treiber fuer M008/M021 ===
  774                   
  775 E3ED  F5          ISRJ:	PUSH	AF
  776 E3EE  DB 90       	IN	A,(90h)		; M008 PIO A Daten
  777 E3F0  FB          	EI
  778 E3F1  2F          	CPL
  779 E3F2  E5          	PUSH	HL
  780 E3F3  D5          	PUSH	DE
  781 E3F4  E6 3F       	AND	00111111b	; Achsbewegung und/oder Feuertaste?
  782 E3F6  28 42       	JR	Z,ISRJ4
  783 E3F8  FE 10       	CP	00010000b	; Feuertaste?
  784 E3FA  38 06       	JR	C,ISRJ1
  785 E3FC  E6 30       	AND	00110000b	; Ignoriere Achse: Feuertasten haben Vorrang
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 107
CE48    INC

  786 E3FE  0F          	RRCA			; Nutze Luecken zwischen den Achsrichtungen in
  787 E3FF  0F          	RRCA			; der Tastaturcode-Tabelle fuer Feuertasten
  788 E400  EE 0F       	XOR	00001111b	; A=0000xx11
  789 E402  C5          ISRJ1:	PUSH	BC
  790 E403  4F          	LD	C,A		; Tabellenindex
  791 E404  06 00       	LD	B,0
  792 E406  DB 88       	IN	A,(PIOAD)
  793 E408  57          	LD	D,A
  794 E409  F6 04       	OR	00000100b	; IRM ein
  795 E40B  F3          	DI
  796 E40C  D3 88       	OUT	(PIOAD),A
  797 E40E  2A B7F0     	LD	HL,(JOYTAB)	; Adresse der Codetabelle fuer Joystick
  798 E411  5E          	LD	E,(HL)		; Wartezyklen waehrend Tastenwiederholung
  799 E412  09          	ADD	HL,BC		; Tastaturcode nachschlagen
  800 E413  6E          	LD	L,(HL)
  801 E414  3A B7E0     	LD	A,(COUNT)	; Wartezyklen vor erster Wiederholung
  802 E417  67          	LD	H,A		; (entsprechend Abfragerate der Tastatur)
  803 E418  7A          	LD	A,D
  804 E419  D3 88       	OUT	(PIOAD),A	; IRM-Zustand wiederherstellen
  805 E41B  FB          	EI
  806 E41C  C1          	POP	BC
  807 E41D  3E 4F       	LD	A,01001111b	; Byte-Eingabemodus (mit Strobe-Interrupt)
  808 E41F  D3 92       	OUT	(92h),A		; M008 PIO A Steuerwort
  809 E421  7D          	LD	A,L
  810 E422  A7          	AND	A		; Tastencode zugewiesen?
  811 E423  28 10       	JR	Z,IPOP3
  812 E425  DD BE 0D    	CP	(IX+13)		; neuer Tastencode?
  813 E428  28 28       	JR	Z,ISRJ5
  814 E42A  DD 77 0D    	LD	(IX+13),A	; Tastencode eintragen
  815 E42D  AF          	XOR	A
  816 E42E  DD CB 08 C6 ISRJ2:	SET	0,(IX+8)	; gueltig markieren
  817 E432  DD 77 0A    ISRJ3:	LD	(IX+10),A	; Zaehler zuruecksetzen
  818 E435  D1          IPOP3:	POP	DE
  819 E436  E1          	POP	HL
  820 E437  F1          	POP	AF
  821 E438  ED 4D       	RETI
  822                   
  823 E43A  DD BE 0A    ISRJ4:	CP	(IX+10)		; vorheriger Code war neu? (A war 0)
  824 E43D  3C          	INC	A
  825 E43E  30 F2       	JR	NC,ISRJ3	; dann zum Entprellen einen Zyklus warten
  826 E440  21 ED77     	LD	HL,JOYINI
  827 E443  F3          	DI
  828 E444  CD F54A     	CALL	INIEA		; Ruhestellung: Strobe-Interrupt wieder aus
  829 E447  FB          	EI
  830 E448  AF          	XOR	A
  831 E449  DD 77 0D    	LD	(IX+13),A	; Tastencode loeschen
  832 E44C  DD CB 08 86 	RES	0,(IX+8)	; ungueltig markieren
  833 E450  18 E0       	JR	ISRJ3
  834                   
  835 E452  7C          ISRJ5:	LD	A,H		; Wartezyklen vor erster Wiederholung
  836 E453  87          	ADD	A,A		; an Abfragerate des Joysticks anpassen
  837 E454  87          	ADD	A,A		; (COUNT sollte kleiner als 64 sein)
  838 E455  BB          	CP	E		; weniger als waehrend Wiederholung?
  839 E456  30 01       	JR	NC,ISRJ6
  840 E458  7B          	LD	A,E		; Zaehlerende = max(A,E)
  841 E459  67          ISRJ6:	LD	H,A
  842 E45A  DD 7E 0A    	LD	A,(IX+10)
  843 E45D  BC          	CP	H		; Zaehlerende erreicht?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 108
CE48    INC

  844 E45E  3C          	INC	A
  845 E45F  38 D1       	JR	C,ISRJ3
  846 E461  7C          	LD	A,H		; Zaehler = Endwert - Wartezyklen
  847 E462  93          	SUB	E
  848 E463  18 C9       	JR	ISRJ2		; erneut gueltig markieren
  849                   ;
  850                   ; Initialisierung vor Kassetten-I/O
  851                   ;
  852 E465  DD 36 03 01 ISRI1:	LD	(IX+3),1	; 1. Block lesen
  853 E469  F3          	DI
  854 E46A  DB 88       	IN	A,(PIOAD)
  855 E46C  F6 40       	OR	01000000b	; Motor ein
  856 E46E  E6 DF       	AND	11011111b	; LED aus
  857 E470  D3 88       ISRO1:	OUT	(PIOAD),A
  858 E472  FB          	EI
  859 E473  2A B7A4     	LD	HL,(WEND)	; Page/Scroll-Modus
  860 E476  22 B7CF     	LD	(ZWEND),HL	; hier merken
  861 E479  CD F369     	CALL	NOUT		; CRT-Ausgabe (kein Drucker!)
  862 E47C  22 B7CD     	LD	(ZOTAB),HL	; alten Zeiger hier merken
  863 E47F  CD E212     	CALL	PAGEM		; Page Mode
  864 E482  3E 03       TOFF:	LD	A,3		; CTC Stop
  865 E484  D3 8C       	OUT	(CTC0),A	; Tonhoehe Kanal 1
  866 E486  D3 8D       	OUT	(CTC1),A	; Tonhoehe Kanal 2
  867 E488  DD CB 08 8E 	RES	1,(IX+8)	; Ton ist jetzt aus
  868 E48C  18 1D       	JR	CSRO2
  869                   ;_____________________________________________________________
  870                   ;							**09**
  871                   ; Abschluss Bandausgabe
  872                   ; PA:	CY=0
  873                   
  874 E48E  DD 36 02 FE TCSRO:	LD	(IX+2),0FEH	; FFH = Kennung Ende-Block
  875 E492  CD CFF5     	CALL	TMBO		; Block auf Kassette ausgeben
  876                   ;_____________________________________________________________
  877                   ;							**0B**
  878                   ; Abschluss Bandeingabe
  879                   ; PA:	CY=0
  880                   
  881 E495  2A B7CD     TCSRI:	LD	HL,(ZOTAB) 	; intern
  882 E498  22 B7B9     	LD	(OUTAB),HL
  883 E49B  2A B7CF     	LD	HL,(ZWEND)	; grosses
  884 E49E  22 B7A4     	LD	(WEND),HL	; Ruecksetzen
  885                   ;	CALL	CLC		; Puffer loeschen (VR: HL)
  886 E4A1  DB 88       	IN	A,(PIOAD)
  887 E4A3  E6 9F       	AND	10011111b	; Motor, LED aus
  888 E4A5  D3 88       	OUT	(PIOAD),A
  889                   ;	CALL	CRLF		; VR: AF
  890 E4A7  DD CB 08 86 	RES	0,(IX+8)	; kein Tastencode im Puffer
  891 E4AB  DD CB 01 5E CSRO2:	BIT	3,(IX+1)	; HiRes?
  892 E4AF  28 06       	JR	Z,CSRO3
  893 E4B1  DB 89       	IN	A,(PIOBD)	; nein
  894 E4B3  CB FF       	SET	7,A		; Blinken ein
  895 E4B5  D3 89       	OUT	(PIOBD),A
  896 E4B7  DD CB 08 4E CSRO3:	BIT	1,(IX+8)	; neuer Ton?
  897 E4BB  20 FA       	JR	NZ,CSRO3	; Ende abwarten
  898 E4BD  DB 88       	IN	A,(PIOAD)
  899 E4BF  6F          	LD	L,A		; Schaltzustand IRM merken
  900 E4C0  CB D7       	SET	2,A		; IRM on
  901 E4C2  F3          	DI			; Interrupt verbieten wegen Stacknutzung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 109
CE48    INC

  902 E4C3  D3 88       	OUT	(PIOAD),A
  903 E4C5  3A B7DB     	LD	A,(CTCMD)	; CTC2-Modus
  904 E4C8  E6 60       	AND	01100000b	; nur Zaehler/Zeitgeber und Vorteiler verwenden
  905 E4CA  F6 07       	OR	00000111b	; immer RESET, Zeitkonstante laden
  906 E4CC  D3 8E       	OUT	(CTC2),A	; Blinken
  907 E4CE  3A B7DC     	LD	A,(BLINK)	; ZK laden
  908 E4D1  D3 8E       	OUT	(CTC2),A
  909 E4D3  7D          	LD	A,L
  910 E4D4  D3 88       	OUT	(PIOAD),A	; IRM wie zuvor einstellen
  911 E4D6  FB          EIRET:	EI			; Interrupt wieder ein
  912 E4D7  C9          	RET
  913                   ;
  914                   ; Kassettenpuffer loeschen:
  915                   ; PA:	DE = CASS
  916                   ;	A = 0
  917                   ; VR:	DE,A
  918                   ;
  919 E4D8  11 B780     CLC:	LD	DE,CASS+80H
  920 E4DB  AF          	XOR	A
  921 E4DC  1D          CLC1:	DEC	E
  922 E4DD  12          	LD	(DE),A
  923 E4DE  20 FC       	JR	NZ,CLC1
  924 E4E0  C9          	RET
  925                   
  926                   ; Aufruf Treiberroutinen aehnlich PV1 mit CALL PV7, DB nr.
  927                   ; Nr.	 0 = MBO
  928                   ;	 1 = MBI
  929                   ;	 2 = ISRO
  930                   ;	 3 = CSRO
  931                   ;	 4 = ISRI
  932                   ;	 5 = CSRI
  933                   ;	 6 = MBIN - nicht mehr erforderlich
  934                   ;	 7 = MBOUT - nicht mehr erforderlich
  935                   ;	 8 = DIR
  936                   ;	 9 = CD
  937                   ;	10 = ERA
  938                   ;	11 = REN
  939                   ; PE:	entsprechend der aufgerufenen Routine
  940                   ; PA:	entsprechend der aufgerufenen Routine
  941                   ;	CY=1	Fehler (Nr. groesser 11)
  942                   ; VR:	-
  943                   ;										auf Stack liegt:
  944 E4E1  F5          PV7:	PUSH	AF		;						 RET >AF<
  945 E4E2  F5          	PUSH	AF		;						 RET  AF   >AF<
  946 E4E3  F3          	DI			; wegen Stack-Operation sperren
  947 E4E4  F1          	POP	AF		; und wieder bereinigen				 RET >AF<   AF
  948 E4E5  F1          	POP	AF		;						>RET< AF    AF
  949 E4E6  E3          	EX	(SP),HL		; HL = RET-Adresse wo CALL herkommt		>HL<  AF    AF
  950 E4E7  7E          	LD	A,(HL)		; nr. lesen
  951 E4E8  23          	INC	HL		; nr uebergehen
  952 E4E9  E3          	EX	(SP),HL		; neue RET-Adresse nach Datenbyte		>RET< AF    AF
  953                   
  954 E4EA  C6 F4       	ADD	-12		; Treiberfunktion > 11?
  955 E4EC  38 E8       	JR	C,EIRET		; Abbruch bei Fehler => EI, RET von CRSO3, PA:CY=1
  956 E4EE  CD E529     	CALL	PV70		; Modul ein und Funktion ausfuehren		 RET >MOFF< AF
  957                   
  958                   ; 3. Module nach Treiberaufruf wieder schalten wie zuvor
  959                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 110
CE48    INC

  960 E4F1  E5          MOFF:	PUSH	HL
  961 E4F2  D5          	PUSH	DE
  962 E4F3  C5          	PUSH	BC
  963 E4F4  F5          	PUSH	AF
  964                   
  965                   	; hier alle davor liegenden Speichermodule wieder einschalten?
  966                   
  967 E4F5  21 B802     	LD	HL,MODST+2	; SWITCH 2 n
  968 E4F8  56          	LD	D,(HL)		; aktuelles Steuerbyte
  969 E4F9  CD F0E2     	CALL	MODUSW		; USER-ROM wie vorher schalten
  970 E4FC  CD ED6B     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
  971 E4FF  F6 02       	OR	2		; DEVTAB+2
  972 E501  6F          	LD	L,A
  973 E502  56          	LD	D,(HL)		; Steuerbyte fuer AUS
  974 E503  2D          	DEC	L
  975 E504  7E          	LD	A,(HL)		; Steckplatz
  976                   
  977 E505  6F          	LD	L,A		; Steckplatz in L
  978 E506  FE 05       	CP	5		; CAOS-ROM C?
  979 E508  28 09       	JR	Z,M4
  980 E50A  CD F0E2     	CALL	MODUSW		; Modul ausschalten (falls nicht CAOS-ROM C)
  981 E50D  3A B805     	LD	A,(MODST+5)	; vorheriger Schaltzustand CAOS-C
  982 E510  E6 01       	AND	1		; ohne Merkbit 7
  983 E512  57          	LD	D,A
  984 E513  21 B805     M4:	LD	HL,MODST+5	; SWITCH 5 n
  985 E516  7E          	LD	A,(HL)		; vorheriger Schaltzustand in Bit 7
  986 E517  72          	LD	(HL),D		; urspruenglicher Schaltzustand vor PV7
  987 E518  E6 80       	AND	80h		; nur Bit 7 betrachten
  988 E51A  DD 7E 04    	LD	A,(IX+4)
  989 E51D  CB BF       	RES	7,A		; CAOS-C aus
  990 E51F  28 02       	JR	Z,M5		; es war auch aus!
  991 E521  CB FF       	SET	7,A		; CAOS-C ein
  992 E523  CD E2A3     M5:	CALL	OUT86		; CAOS-C wie vor Aufruf PV7
  993 E526  C3 E0B7     MSW:	JP	POP4
  994                   
  995                   ; 1. Sprungadresse von Treiber berechnen aus Nr. und IX+8
  996                   
  997 E529  3B          PV70:	DEC	SP
  998 E52A  3B          	DEC	SP		; SP ist wieder richtig				RET  MOFF >AF<
  999 E52B  FB          	EI
 1000 E52C  E3          PV71:	EX	(SP),HL		;						RET  MOFF >HL<
 1001 E52D  E5          	PUSH	HL		;						RET  MOFF  HL  >AF<
 1002 E52E  C6 10       	ADD	A,12+4		; 12 UP-Nummern + 2*4 Byte Kopfdaten
 1003 E530  87          	ADD	A,A		; 2 Byte je Sprungadresse
 1004 E531  6F          	LD	L,A		; Aufrufadresse der Treiber-Routine
 1005 E532  CD ED6B     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
 1006 E535  B5          	OR	L		; Adresse einbauen in Bit 0-4
 1007 E536  6F          	LD	L,A
 1008 E537  7E          	LD	A,(HL)		; Sprungadresse Low
 1009 E538  23          	INC	HL
 1010 E539  66          	LD	H,(HL)		; Sprungadresse High
 1011 E53A  6F          	LD	L,A		; HL=Sprungadresse der Routine
 1012 E53B  F1          	POP	AF		;						RET  MOFF >HL<
 1013 E53C  E3          	EX	(SP),HL		; Sprungadresse auf Stack			RET  MOFF >JPADR<
 1014                   
 1015                   ; 2. Module passend schalten nach IX+8 (DEVTAB+1 = Steckplatz, DEVTAB+3 = EIN)
 1016                   
 1017 E53D  E5          	PUSH	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 111
CE48    INC

 1018 E53E  D5          	PUSH	DE
 1019 E53F  C5          	PUSH	BC
 1020 E540  F5          	PUSH	AF
 1021 E541  CD ED6B     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
 1022 E544  F6 01       	OR	1		; DEVTAB+1
 1023 E546  6F          	LD	L,A
 1024 E547  5E          	LD	E,(HL)		; Steckplatz
 1025                   
 1026                   	; hier alle davor liegenden Speichermodule ausschalten?
 1027                   
 1028 E548  16 B8       	LD	D,High(MODST)
 1029 E54A  1A          	LD	A,(DE)		; aktueller Schaltzustand
 1030 E54B  2C          	INC	L		; DEVTAB+2 = AUS
 1031 E54C  77          	LD	(HL),A		; als Schaltzustand AUS in DEVTAB+2 merken
 1032 E54D  2C          	INC	L		; DEVTAB+3 = EIN
 1033                   
 1034 E54E  7E          	LD	A,(HL)		; Steuerbyte EIN
 1035 E54F  12          	LD	(DE),A		; in MODST eintragen
 1036 E550  57          	LD	D,A		; Steuerbyte
 1037                   
 1038 E551  7B          	LD	A,E		; Steckplatz
 1039 E552  1E 00       	LD	E,0		; AUS fuer CAOS-C
 1040 E554  FE 05       	CP	5		; CAOS-ROM-C?
 1041 E556  20 02       	JR	NZ,MO1
 1042 E558  1E 80       	LD	E,80H		; EIN fuer CAOS-C
 1043 E55A  FE 07       MO1:	CP	7
 1044 E55C  38 05       	JR	C,MO2		; intenes Modul
 1045 E55E  0E 80       	LD	C,80H
 1046 E560  47          	LD	B,A
 1047 E561  ED 51       	OUT	(C),D		; Steuerbyte zu Modul senden
 1048                   
 1049 E563  DB 88       MO2:	IN	A,(PIOAD)	; SWITCH 2 0:
 1050 E565  E6 7F       	AND	7Fh		; USER-ROM C immer aus!
 1051 E567  D3 88       	OUT	(PIOAD),A
 1052                   
 1053 E569  21 B805     	LD	HL,MODST+5	; SWITCH 5
 1054 E56C  DD 7E 04    	LD	A,(IX+4)
 1055 E56F  E6 80       	AND	80h		; aktueller Schaltzustand CAOS-ROM
 1056 E571  B6          	OR	(HL)		; in Modulsteuerbyte Bit 7 einbauen
 1057 E572  77          	LD	(HL),A		; und dort merken
 1058 E573  DD 7E 04    	LD	A,(IX+4)	; SWITCH 5 0:
 1059 E576  E6 7F       	AND	7Fh		; CAOS-ROM C aus
 1060 E578  B3          	OR	E		; oder EIN falls Programm dort steht!
 1061 E579  18 A8       	JR	M5		; CAOS-C und Routine aufrufen
 1062                   ;
 1063                   ; ISR CTC Kanal 1 (Kassette-Out)
 1064                   ;
 1065 E57B  F5          ISRC1:	PUSH	AF
 1066 E57C  3E 87       	LD	A,10000111b	; EI,ZG16,Res
 1067 E57E  D3 8D       	OUT	(CTC1),A
 1068 E580  DD 7E 00    	LD	A,(IX)		; Uebergabezelle Zeitkonstante
 1069 E583  D3 8D       	OUT	(CTC1),A	; Start CTC
 1070 E585  DD 36 00 00 	LD	(IX),0		; Quittierung
 1071 E589  18 0E       	JR	ISR1E		; EI, RETI
 1072                   ;
 1073                   ; ISR PIO Kanal A (Kassette-In)
 1074                   ;
 1075 E58B  F5          ISRPA:	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 112
CE48    INC

 1076 E58C  DB 8E       	IN	A,(CTC2)	; CTC lesen
 1077 E58E  DD 77 00    	LD	(IX),A		; und in Uebergabezelle ablegen
 1078 E591  3E 07       	LD	A,7
 1079 E593  D3 8E       	OUT	(CTC2),A	; CTC Neustart
 1080 E595  3E A3       	LD	A,IKEZK
 1081 E597  D3 8E       	OUT	(CTC2),A
 1082 E599  F1          ISR1E:	POP	AF
 1083 E59A  FB          IRET:	EI
 1084 E59B  ED 4D       	RETI
 1085                   
 1086                   ; ===== BASIC =====
 1087                   
 1088                   ; BASIC-Erweiterung 1: Erweiterungstoken starten
 1089                   ;
 1090                   ;***************************************************************
 1091                   ;*  E: <B>: TOKEN-LDTOK
 1092                   ;*     <HL>: AUF TOKEN
 1093                   ;*  A: <<SP>>: STARTADRESSE ROUTINE
 1094                   ;*     <HL>: AUF TOKEN
 1095                   ;***************************************************************
 1096                   
 1097 E59D  78          BEXP1:	LD	A,B		; Nr.
 1098 E59E  D6 09       	SUB	9
 1099 E5A0  38 48       	JR	C,SNERR1
 1100 E5A2  FE 1F       	CP	(TOKJPE-TOKJP)/2-4	; 27 waren es Original
 1101 E5A4  30 44       	JR	NC,SNERR1	; Token ausserhalb
 1102 E5A6  07          	RLCA			; *2
 1103 E5A7  4F          	LD	C,A
 1104 E5A8  06 00       	LD	B,0		; BC = Offset in Adresstabelle
 1105 E5AA  EB          	EX	DE,HL
 1106 E5AB  21 FDAB     	LD	HL,TADR5	; Adresse der Erweiterungstoken
 1107 E5AE  C3 C8B7     	JP	DLI22		; Ruecksprung zu Tokenverarbeitung (BASIC-ROM)
 1108                   
 1109 E5B1              LOCOL:	;LoadColor
 1110 E5B1  E5          	PUSH	HL
 1111 E5B2  21 B7A3     	LD	HL,COLOR	; 0B7A3H
 1112 E5B5  CD EAF3     	CALL	IRMRD
 1113 E5B8  E1          	POP	HL
 1114 E5B9  C9          	RET
 1115                   
 1116                   ; BASIC-Erweiterung 2: Print-Erweiterung?
 1117                   ;
 1118                   ;***************************************************************
 1119                   ;*  E:   <HL> AUF SIGNIF. ZEICHEN NACH PRTOK
 1120                   ;*  WENN  PRTFLG<>0 , DANN JP SNER
 1121                   ;*  A:   <HL> AUF ZEILENENDE
 1122                   ;***************************************************************
 1123                   
 1124 E5BA  7E          BEXP2:	LD	A,(HL)
 1125 E5BB  FE DF       	CP	0DFH		; INK-Token?
 1126 E5BD  D8          	RET	C		; <DFH
 1127 E5BE  FE E3       	CP	0E3H		; COLOR-Token?
 1128 E5C0  D0          	RET	NC		; >E2H
 1129 E5C1  FE E1       	CP	0E1H		; AT-Token?
 1130 E5C3  CA E928     	JP	Z,PRAT
 1131 E5C6  3A 03FD     	LD	A,(PRTFLG)
 1132 E5C9  A7          	AND	A		; PRINT-Erweiterung?
 1133 E5CA  20 1E       	JR	NZ,SNERR1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 113
CE48    INC

 1134 E5CC  3C          	INC	A
 1135 E5CD  32 03FD     	LD	(PRTFLG),A
 1136 E5D0  CD E5B1     PREX1:	CALL	LOCOL		; Farbwert lesen
 1137 E5D3  32 037E     	LD	(COLRET),A 	; Farbe merken
 1138 E5D6  7E          	LD	A,(HL)
 1139 E5D7  FE DF       	CP	0DFH		; INK?
 1140 E5D9  28 1A       	JR	Z,PRINK
 1141 E5DB  FE E2       	CP	0E2H		; COLOR?
 1142 E5DD  28 0E       	JR	Z,PRCOL
 1143 E5DF  CD C8BD     	CALL	TCHAR		; naechstes Zeichen holen
 1144 E5E2  CD E9F2     	CALL	PAPER		; Hintergrundfarbe
 1145 E5E5  7E          PREX2:	LD	A,(HL)
 1146 E5E6  FE 3B       	CP	';'
 1147 E5E8  28 3B       	JR	Z,PREX5
 1148 E5EA  C3 C348     SNERR1:	JP	SNER		; SN-ERROR
 1149                   
 1150 E5ED  CD C8BD     PRCOL:	CALL	TCHAR		; naechstes Zeichen holen
 1151 E5F0  CD E9E3     	CALL	BCOLOR		; Vordergrund- und Hintergrundfarbe
 1152 E5F3  18 F0       	JR	PREX2
 1153                   
 1154 E5F5  CD C8BD     PRINK:	CALL	TCHAR		; naechstes Zeichen holen
 1155 E5F8  CD E9D1     	CALL	INK		; Vordergrundfarbe
 1156 E5FB  7E          	LD	A,(HL)
 1157 E5FC  FE 3B       	CP	';'
 1158 E5FE  28 25       	JR	Z,PREX5
 1159 E600  CD C8CC     	CALL	CPSTX		; Komma?
 1160 E603  2C          	DB	','
 1161 E604  FE E0       	CP	0E0H		; PAPER?
 1162 E606  20 E2       	JR	NZ,SNERR1
 1163 E608  CD C8BD     	CALL	TCHAR		; naechstes Zeichen holen
 1164 E60B  CD E9F2     	CALL	PAPER
 1165 E60E  CD C8CC     	CALL	CPSTX		; Semikolon?
 1166 E611  3B          	DB	';'
 1167 E612  CD CB03     PREX3:	CALL	PRINT2		; Routine im BASIC-ROM aufrufen
 1168 E615  3A 037E     	LD	A,(COLRET)	; Farbe
 1169 E618  E5          	PUSH	HL
 1170 E619  21 B7A3     	LD	HL,COLOR
 1171 E61C  CD EAF8     	CALL	IRMWR		; eintragen
 1172 E61F  E1          	POP	HL
 1173 E620  C1          	POP	BC
 1174 E621  C9          	RET
 1175                   
 1176 E622  C5          PREX4:	PUSH	BC
 1177 E623  18 AB       	JR	PREX1
 1178                   
 1179 E625  CD C8BD     PREX5:	CALL	TCHAR		; naechstes Zeichen holen
 1180 E628  18 E8       	JR	PREX3
 1181                   
 1182                   ; BASIC: String vervielfaeltigen
 1183                   
 1184 E62A  CD C8CC     STRING:	CALL	CPSTX		; Klammer auf?
 1185 E62D  28          	DB	'('
 1186 E62E  CD D421     	CALL	ARGVL1		; Wert abholen
 1187 E631  F5          	PUSH	AF
 1188 E632  CD C8D6     	CALL	CPCOMM		; Komma?
 1189 E635  CD CD3A     	CALL	SNALY
 1190 E638  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1191 E63B  F1          	POP	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 114
CE48    INC

 1192 E63C  E5          	PUSH	HL
 1193 E63D  F5          	PUSH	AF
 1194 E63E  CD D330     	CALL	LEN1		; Laenge holen
 1195 E641  23          	INC	HL
 1196 E642  23          	INC	HL
 1197 E643  5E          	LD	E,(HL)
 1198 E644  23          	INC	HL
 1199 E645  56          	LD	D,(HL)
 1200 E646  C1          	POP	BC
 1201 E647  C5          	PUSH	BC
 1202 E648  F5          	PUSH	AF
 1203 E649  D5          	PUSH	DE
 1204 E64A  4F          	LD	C,A
 1205 E64B  AF          	XOR	A
 1206 E64C  B9          	CP	C
 1207 E64D  28 0C       	JR	Z,STR2
 1208 E64F  B8          	CP	B
 1209 E650  28 09       	JR	Z,STR2
 1210 E652  79          	LD	A,C
 1211 E653  05          	DEC	B
 1212 E654  28 05       	JR	Z,STR2
 1213 E656  81          STR1:	ADD	A,C
 1214 E657  38 2B       	JR	C,STR5		; LS-ERROR (String zu lang)
 1215 E659  10 FB       	DJNZ	STR1
 1216 E65B  47          STR2:	LD	B,A
 1217 E65C  0E 00       	LD	C,0
 1218 E65E  C5          	PUSH	BC
 1219 E65F  CD D1E1     	CALL	STROP		; String-Arithmetik
 1220 E662  C1          	POP	BC
 1221 E663  C1          	POP	BC
 1222 E664  C5          	PUSH	BC
 1223 E665  CD D17E     	CALL	SADTB1
 1224 E668  E1          	POP	HL
 1225 E669  E3          	EX	(SP),HL
 1226 E66A  7C          	LD	A,H
 1227 E66B  E1          	POP	HL
 1228 E66C  E3          	EX	(SP),HL
 1229 E66D  6F          	LD	L,A
 1230 E66E  24          	INC	H
 1231 E66F  25          STR3:	DEC	H
 1232 E670  E5          	PUSH	HL
 1233 E671  C5          	PUSH	BC
 1234 E672  28 07       	JR	Z,STR4
 1235 E674  CD D2F2     	CALL	STRMV1
 1236 E677  C1          	POP	BC
 1237 E678  E1          	POP	HL
 1238 E679  18 F4       	JR	STR3
 1239                   	;
 1240 E67B  C1          STR4:	POP	BC
 1241 E67C  E1          	POP	HL
 1242 E67D  D1          	POP	DE
 1243 E67E  CD D302     	CALL	STRZS3
 1244 E681  C3 D1A9     	JP	SLEN3
 1245                   	;
 1246 E684  1E 1C       STR5:	LD	E,28		; LS-ERROR
 1247 E686  C3 C356     	JP	ERROO		; Ausgabe Fehlercode
 1248                   
 1249                   ; BASIC: Neu nummerieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 115
CE48    INC

 1250                   
 1251 E689  E5          RENUM:	PUSH	HL
 1252 E68A  21 000A     	LD	HL,10
 1253 E68D  22 0354     	LD	(DISTAN),HL	; Zeilennummernabstand
 1254 E690  2A 035F     	LD	HL,(PSTBEG)	; Programmbeginn
 1255 E693  F5          	PUSH	AF
 1256 E694  E5          	PUSH	HL
 1257 E695  23          	INC	HL
 1258 E696  23          	INC	HL
 1259 E697  7E          	LD	A,(HL)
 1260 E698  23          	INC	HL
 1261 E699  66          	LD	H,(HL)
 1262 E69A  6F          	LD	L,A
 1263 E69B  22 034E     	LD	(ANF),HL	; erste Zeilennummer
 1264 E69E  22 0352     	LD	(NANF),HL
 1265 E6A1  ED 5B 03D7  	LD	DE,(SVARPT)	; Ende
 1266 E6A5  1B          	DEC	DE
 1267 E6A6  1B          	DEC	DE
 1268 E6A7  E1          REN01:	POP	HL
 1269 E6A8  E5          	PUSH	HL
 1270 E6A9  7E          	LD	A,(HL)
 1271 E6AA  23          	INC	HL
 1272 E6AB  66          	LD	H,(HL)
 1273 E6AC  6F          	LD	L,A
 1274 E6AD  CD C689     	CALL	CPREG
 1275 E6B0  E3          	EX	(SP),HL
 1276 E6B1  20 F4       	JR	NZ,REN01
 1277 E6B3  D1          	POP	DE
 1278 E6B4  23          	INC	HL
 1279 E6B5  23          	INC	HL
 1280 E6B6  7E          	LD	A,(HL)
 1281 E6B7  23          	INC	HL
 1282 E6B8  66          	LD	H,(HL)
 1283 E6B9  6F          	LD	L,A
 1284 E6BA  22 0350     	LD	(ENDE),HL	; Zeilen-Abstand
 1285 E6BD  06 04       	LD	B,4
 1286 E6BF  F1          	POP	AF
 1287 E6C0  21 034E     	LD	HL,ANF
 1288 E6C3  E3          	EX	(SP),HL
 1289 E6C4  28 20       REN02:	JR	Z,REN05
 1290 E6C6  CD C986     	CALL	DCHEX
 1291 E6C9  F5          	PUSH	AF
 1292 E6CA  7A          	LD	A,D
 1293 E6CB  B3          	OR	E
 1294 E6CC  CA C967     REN03:	JP	Z,FCER	 	; FC-ERROR
 1295 E6CF  F1          	POP	AF
 1296 E6D0  E3          	EX	(SP),HL
 1297 E6D1  73          	LD	(HL),E
 1298 E6D2  23          	INC	HL
 1299 E6D3  72          	LD	(HL),D
 1300 E6D4  23          	INC	HL
 1301 E6D5  28 0F       	JR	Z,REN05
 1302 E6D7  F5          	PUSH	AF
 1303 E6D8  05          	DEC	B
 1304 E6D9  28 07       	JR	Z,REN04
 1305 E6DB  F1          	POP	AF
 1306 E6DC  E3          	EX	(SP),HL
 1307 E6DD  CD C8D6     	CALL	CPCOMM		; Komma?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 116
CE48    INC

 1308 E6E0  18 E2       	JR	REN02
 1309                   	;
 1310 E6E2  F1          REN04:	POP	AF
 1311 E6E3  C2 C348     	JP	NZ,SNER		; SN-ERROR
 1312 E6E6  2A 0350     REN05:	LD	HL,(ENDE)
 1313 E6E9  ED 5B 034E  	LD	DE,(ANF)	; ANFANG
 1314 E6ED  CD C689     	CALL	CPREG
 1315 E6F0  DA C967     REN06:	JP	C,FCER		; FC-ERROR
 1316 E6F3  2A 035F     	LD	HL,(PSTBEG)
 1317 E6F6  CD C4BE     REN07:	CALL	ZPOIT1		; naechste Zeile
 1318 E6F9  38 04       	JR	C,REN08
 1319 E6FB  28 CF       	JR	Z,REN03
 1320 E6FD  18 F7       	JR	REN07
 1321                   	;
 1322 E6FF  E1          REN08:	POP	HL
 1323 E700  C5          	PUSH	BC
 1324 E701  ED 5B 0350  	LD	DE,(ENDE)
 1325 E705  21 0000     	LD	HL,0
 1326 E708  22 0350     	LD	(ENDE),HL
 1327 E70B  60          REN09:	LD	H,B
 1328 E70C  69          	LD	L,C
 1329 E70D  4E          	LD	C,(HL)
 1330 E70E  23          	INC	HL
 1331 E70F  46          	LD	B,(HL)
 1332 E710  78          	LD	A,B
 1333 E711  B1          	OR	C
 1334 E712  28 B8       	JR	Z,REN03
 1335 E714  23          	INC	HL
 1336 E715  7E          	LD	A,(HL)
 1337 E716  23          	INC	HL
 1338 E717  66          	LD	H,(HL)
 1339 E718  6F          	LD	L,A
 1340 E719  CD C689     	CALL	CPREG
 1341 E71C  2A 0350     	LD	HL,(ENDE)
 1342 E71F  23          	INC	HL
 1343 E720  22 0350     	LD	(ENDE),HL
 1344 E723  20 E6       	JR	NZ,REN09
 1345 E725  23          	INC	HL
 1346 E726  23          	INC	HL
 1347 E727  29          	ADD	HL,HL
 1348 E728  23          	INC	HL
 1349 E729  ED 5B 03D7  	LD	DE,(SVARPT)
 1350 E72D  19          	ADD	HL,DE
 1351 E72E  38 C0       	JR	C,REN06
 1352 E730  CD C327     	CALL	TMEMO		; genug RAM?
 1353 E733  22 03D7     	LD	(SVARPT),HL
 1354 E736  AF          	XOR	A
 1355 E737  2B          	DEC	HL
 1356 E738  77          	LD	(HL),A
 1357 E739  2B          	DEC	HL
 1358 E73A  77          	LD	(HL),A
 1359 E73B  1B          	DEC	DE
 1360 E73C  1B          	DEC	DE
 1361 E73D  EB          	EX	DE,HL
 1362 E73E  73          	LD	(HL),E
 1363 E73F  23          	INC	HL
 1364 E740  72          	LD	(HL),D
 1365 E741  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 117
CE48    INC

 1366 E742  3D          	DEC	A
 1367 E743  77          	LD	(HL),A
 1368 E744  23          	INC	HL
 1369 E745  77          	LD	(HL),A
 1370 E746  23          	INC	HL
 1371 E747  EB          	EX	DE,HL
 1372 E748  2A 0352     	LD	HL,(NANF)
 1373 E74B  22 034E     	LD	(ANF),HL
 1374 E74E  E1          REN10:	POP	HL
 1375 E74F  4E          	LD	C,(HL)
 1376 E750  23          	INC	HL
 1377 E751  46          	LD	B,(HL)
 1378 E752  23          	INC	HL
 1379 E753  C5          	PUSH	BC
 1380 E754  01 034E     	LD	BC,ANF
 1381 E757  7E          	LD	A,(HL)
 1382 E758  12          	LD	(DE),A
 1383 E759  0A          	LD	A,(BC)
 1384 E75A  77          	LD	(HL),A
 1385 E75B  23          	INC	HL
 1386 E75C  13          	INC	DE
 1387 E75D  03          	INC	BC
 1388 E75E  7E          	LD	A,(HL)
 1389 E75F  12          	LD	(DE),A
 1390 E760  0A          	LD	A,(BC)
 1391 E761  77          	LD	(HL),A
 1392 E762  13          	INC	DE
 1393 E763  2A 034E     	LD	HL,(ANF)
 1394 E766  ED 4B 0354  	LD	BC,(DISTAN)
 1395 E76A  09          	ADD	HL,BC
 1396 E76B  22 034E     	LD	(ANF),HL
 1397 E76E  2A 0350     	LD	HL,(ENDE)
 1398 E771  2B          	DEC	HL
 1399 E772  7C          	LD	A,H
 1400 E773  B5          	OR	L
 1401 E774  22 0350     	LD	(ENDE),HL
 1402 E777  20 D5       	JR	NZ,REN10
 1403 E779  12          	LD	(DE),A
 1404 E77A  E1          	POP	HL
 1405 E77B  2A 035F     	LD	HL,(PSTBEG)
 1406 E77E  E5          	PUSH	HL
 1407 E77F  E1          REN11:	POP	HL
 1408 E780  4E          	LD	C,(HL)
 1409 E781  23          	INC	HL
 1410 E782  46          	LD	B,(HL)
 1411 E783  23          	INC	HL
 1412 E784  C5          	PUSH	BC
 1413 E785  7E          	LD	A,(HL)
 1414 E786  23          	INC	HL
 1415 E787  A6          	AND	(HL)
 1416 E788  3C          	INC	A
 1417 E789  28 26       	JR	Z,REN15
 1418 E78B  23          REN12:	INC	HL
 1419 E78C  7E          REN13:	LD	A,(HL)
 1420 E78D  B7          	OR	A		; Zeilen-Ende
 1421 E78E  28 EF       	JR	Z,REN11
 1422 E790  FE 88       	CP	88H		; GOTO
 1423 E792  28 2A       	JR	Z,REN16
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 118
CE48    INC

 1424 E794  FE 8C       	CP	8CH		; GOSUB
 1425 E796  28 26       	JR	Z,REN16
 1426 E798  FE 8B       	CP	8BH		; RESTORE
 1427 E79A  28 08       	JR	Z,REN14
 1428 E79C  FE D4       	CP	0D4H		; ELSE
 1429 E79E  28 04       	JR	Z,REN14
 1430 E7A0  FE A9       	CP	0A9H		; THEN
 1431 E7A2  20 E7       	JR	NZ,REN12
 1432 E7A4  CD C987     REN14:	CALL	DCHEX1
 1433 E7A7  7B          	LD	A,E
 1434 E7A8  B2          	OR	D
 1435 E7A9  C4 E7D2     	CALL	NZ,RNUP1 	; Vergleich mit Tabelle
 1436 E7AC  C4 E803     	CALL	NZ,RNUP2	; Zahl aendern
 1437 E7AF  18 DB       	JR	REN13
 1438                   	;
 1439 E7B1  2B          REN15:	DEC	HL
 1440 E7B2  22 03D7     	LD	(SVARPT),HL
 1441 E7B5  2B          	DEC	HL
 1442 E7B6  77          	LD	(HL),A
 1443 E7B7  2B          	DEC	HL
 1444 E7B8  77          	LD	(HL),A
 1445 E7B9  E1          	POP	HL
 1446 E7BA  E1          	POP	HL
 1447 E7BB  C3 C48A     	JP	LIN10		; Zeile neu einsortieren
 1448                   	;
 1449 E7BE  CD C987     REN16:	CALL	DCHEX1
 1450 E7C1  7B          	LD	A,E
 1451 E7C2  B2          	OR	D
 1452 E7C3  28 C7       	JR	Z,REN13
 1453 E7C5  CD E7D2     	CALL	RNUP1
 1454 E7C8  C4 E803     	CALL	NZ,RNUP2
 1455 E7CB  7E          	LD	A,(HL)
 1456 E7CC  FE 2C       	CP	','
 1457 E7CE  20 BC       	JR	NZ,REN13
 1458 E7D0  18 EC       	JR	REN16
 1459                   
 1460 E7D2  E5          RNUP1:	PUSH	HL
 1461 E7D3  D5          	PUSH	DE
 1462 E7D4  11 FFFF     	LD	DE,-1
 1463 E7D7  CD C4BB     	CALL	ZPOIT		; naechste Zeile
 1464 E7DA  D1          	POP	DE
 1465 E7DB  03          	INC	BC
 1466 E7DC  03          	INC	BC
 1467 E7DD  03          	INC	BC
 1468 E7DE  03          	INC	BC
 1469 E7DF  60          	LD	H,B
 1470 E7E0  69          	LD	L,C
 1471 E7E1  ED 4B 0352  	LD	BC,(NANF)
 1472 E7E5  7E          RUP11:	LD	A,(HL)
 1473 E7E6  23          	INC	HL
 1474 E7E7  E5          	PUSH	HL
 1475 E7E8  B6          	OR	(HL)
 1476 E7E9  28 15       	JR	Z,RUP13
 1477 E7EB  7E          	LD	A,(HL)
 1478 E7EC  2B          	DEC	HL
 1479 E7ED  6E          	LD	L,(HL)
 1480 E7EE  67          	LD	H,A
 1481 E7EF  CD C689     	CALL	CPREG
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 119
CE48    INC

 1482 E7F2  28 0A       	JR	Z,RUP12
 1483 E7F4  2A 0354     	LD	HL,(DISTAN)
 1484 E7F7  09          	ADD	HL,BC
 1485 E7F8  44          	LD	B,H
 1486 E7F9  4D          	LD	C,L
 1487 E7FA  E1          	POP	HL
 1488 E7FB  23          	INC	HL
 1489 E7FC  18 E7       	JR	RUP11
 1490                   	;
 1491 E7FE  AF          RUP12:	XOR	A		; aus CAOS 3.4 uebernommen
 1492 E7FF  3D          	DEC	A		; A=0FFh, Z=0
 1493                   ;	LD	A,0FFH
 1494                   ;	OR	A
 1495 E800  E1          RUP13:	POP	HL
 1496 E801  E1          	POP	HL
 1497 E802  C9          	RET
 1498                   
 1499 E803  C5          RNUP2:	PUSH	BC
 1500 E804  EB          	EX	DE,HL
 1501 E805  2A 03D7     	LD	HL,(SVARPT)
 1502 E808  ED 52       	SBC	HL,DE
 1503 E80A  E5          	PUSH	HL
 1504 E80B  C1          RUP21:	POP	BC
 1505 E80C  62          	LD	H,D
 1506 E80D  6B          	LD	L,E
 1507 E80E  1B          	DEC	DE
 1508 E80F  1A          	LD	A,(DE)
 1509 E810  FE 2C       	CP	','
 1510 E812  28 0B       	JR	Z,RUP22
 1511 E814  FE 3A       	CP	':'
 1512 E816  30 07       	JR	NC,RUP22
 1513 E818  C5          	PUSH	BC
 1514 E819  D5          	PUSH	DE
 1515 E81A  ED B0       	LDIR
 1516 E81C  D1          	POP	DE
 1517 E81D  18 EC       	JR	RUP21
 1518                   	;
 1519 E81F  EB          RUP22:	EX	DE,HL
 1520 E820  D1          	POP	DE
 1521 E821  E5          	PUSH	HL
 1522 E822  C5          	PUSH	BC
 1523 E823  AF          	XOR	A
 1524 E824  06 98       	LD	B,98H
 1525 E826  CD D6AE     	CALL	SGN1
 1526 E829  CD D834     	CALL	NUMKON
 1527 E82C  C1          	POP	BC
 1528 E82D  D1          	POP	DE
 1529 E82E  23          	INC	HL
 1530 E82F  13          	INC	DE
 1531 E830  7E          RUP23:	LD	A,(HL)
 1532 E831  B7          	OR	A
 1533 E832  28 0F       	JR	Z,RUP24
 1534 E834  C5          	PUSH	BC
 1535 E835  E5          	PUSH	HL
 1536 E836  EB          	EX	DE,HL
 1537 E837  09          	ADD	HL,BC
 1538 E838  54          	LD	D,H
 1539 E839  5D          	LD	E,L
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 120
CE48    INC

 1540 E83A  2B          	DEC	HL
 1541 E83B  ED B8       	LDDR
 1542 E83D  E1          	POP	HL
 1543 E83E  ED A0       	LDI
 1544 E840  C1          	POP	BC
 1545 E841  18 ED       	JR	RUP23
 1546                   	;
 1547 E843  D5          RUP24:	PUSH	DE
 1548 E844  ED 5B 035F  	LD	DE,(PSTBEG)
 1549 E848  CD C493     	CALL	LIN11
 1550 E84B  23          RUP25:	INC	HL
 1551 E84C  7E          	LD	A,(HL)
 1552 E84D  23          	INC	HL
 1553 E84E  B6          	OR	(HL)
 1554 E84F  20 FA       	JR	NZ,RUP25
 1555 E851  EB          	EX	DE,HL
 1556 E852  73          	LD	(HL),E
 1557 E853  23          	INC	HL
 1558 E854  72          	LD	(HL),D
 1559 E855  13          	INC	DE
 1560 E856  13          	INC	DE
 1561 E857  ED 53 03D7  	LD	(SVARPT),DE
 1562 E85B  E1          	POP	HL
 1563 E85C  54          	LD	D,H
 1564 E85D  5D          	LD	E,L
 1565 E85E  7E          RUP26:	LD	A,(HL)
 1566 E85F  B7          	OR	A
 1567 E860  23          	INC	HL
 1568 E861  20 FB       	JR	NZ,RUP26
 1569 E863  C1          	POP	BC
 1570 E864  E3          	EX	(SP),HL
 1571 E865  C5          	PUSH	BC
 1572 E866  EB          	EX	DE,HL
 1573 E867  C9          	RET
 1574                   
 1575                   ; BASIC: Zeile(n) loeschen
 1576                   
 1577 E868  C8          DELETE:	RET	Z
 1578 E869  CD C986     	CALL	DCHEX
 1579 E86C  CA C442     	JP	Z,LIN13		; Zeiger auf folgende Zeilennummer stellen
 1580 E86F  CD C8D6     	CALL	CPCOMM		; Komma?
 1581 E872  D5          	PUSH	DE
 1582 E873  CD C986     	CALL	DCHEX
 1583 E876  E1          	POP	HL
 1584 E877  C0          	RET	NZ
 1585 E878  EB          	EX	DE,HL
 1586 E879  E5          	PUSH	HL
 1587 E87A  CD C4BB     	CALL	ZPOIT		; naechste Zeile
 1588 E87D  30 0A       	JR	NC,DELET1	; UL-ERROR
 1589 E87F  D1          	POP	DE
 1590 E880  F5          	PUSH	AF
 1591 E881  C5          	PUSH	BC
 1592 E882  CD C4BE     	CALL	ZPOIT1
 1593 E885  C1          	POP	BC
 1594 E886  DA C450     	JP	C,LIN6		; einsortieren
 1595 E889  C3 C44D     DELET1:	JP	ULER		; UL-ERROR
 1596                   
 1597                   ; BASIC: Programm unterbrechen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 121
CE48    INC

 1598                   
 1599 E88C  CD C8BE     PAUSE:	CALL	TCHAR1		; mit oder ohne Paramater?
 1600 E88F  20 0F       	JR	NZ,PAUS2
 1601 E891  CD E37D     PAUS1:	CALL	KBDS		; Tastaturabfrage
 1602 E894  30 FB       	JR	NC,PAUS1
 1603 E896  FE 03       	CP	3		; BRK?
 1604 E898  C8          	RET	Z
 1605 E899  FE 0A       	CP	LF		; CUU?
 1606 E89B  20 F4       	JR	NZ,PAUS1
 1607 E89D  C3 DDE4     	JP	CI		; Eingabe ASCII
 1608                   	;
 1609 E8A0  CD D421     PAUS2:	CALL	ARGVL1		; Wert abholen
 1610 E8A3  4F          	LD	C,A
 1611 E8A4  3E 10       PAUS3:	LD	A,16		; 16*6ms = 96 Millisekunden
 1612 E8A6  CD FC21     	CALL	WAIT		; UP WAIT direkt aufrufen
 1613                   ;	LD	E,14H		; WAIT
 1614                   ;	CALL	PV5
 1615 E8A9  CD E37D     	CALL	KBDS
 1616 E8AC  30 0A       	JR	NC,PAUS4
 1617 E8AE  FE 03       	CP	3		; BRK?
 1618 E8B0  C8          	RET	Z
 1619 E8B1  FE 0A       	CP	LF		; CUU?
 1620 E8B3  20 03       	JR	NZ,PAUS4
 1621 E8B5  C3 DDE4     	JP	CI		; Eingabe ASCII
 1622                   	;
 1623 E8B8  0D          PAUS4:	DEC	C		; Zaehler verringern
 1624 E8B9  20 E9       	JR	NZ,PAUS3	; weiter warten
 1625 E8BB  C9          	RET
 1626                   
 1627                   ; BASIC: Signalton
 1628                   
 1629 E8BC  06 01       BBEEP:	LD	B,1		; ohne Angabe 1x
 1630 E8BE  CD C8BE     	CALL	TCHAR1		; Parameter angegeben?
 1631 E8C1  28 04       	JR	Z,BBP1
 1632 E8C3  CD D421     	CALL	ARGVL1		; Wert abholen
 1633 E8C6  47          	LD	B,A		; Anzahl
 1634 E8C7  3E 07       BBP1:	LD	A,7		; Beep
 1635 E8C9  1E 00       	LD	E,0		; CRT
 1636 E8CB  CD F02D     	CALL	PV5
 1637 E8CE  10 F7       	DJNZ	BBP1
 1638 E8D0  C9          	RET
 1639                   
 1640                   ; Hilfsroutine fuer mehrfachen Aufruf: naechsten Wert abholen
 1641                   
 1642 E8D1  CD C8D6     MC8D4:	CALL	CPCOMM		; Komma?
 1643 E8D4  C3 D421     	JP	ARGVL1		; Wert abholen
 1644                   
 1645                   ; BASIC: Fenster einstellen
 1646                   
 1647 E8D7  CD C8BE     WINDOW:	CALL	TCHAR1		; Parameter angegeben?
 1648 E8DA  28 2D       	JR	Z,WDW2		; nein, dann volles Fenster
 1649 E8DC  CD D421     	CALL	ARGVL1		; 1. Wert abholen
 1650 E8DF  47          	LD	B,A		; B = erste Zeile
 1651 E8E0  C5          	PUSH	BC
 1652 E8E1  CD E8D1     	CALL	MC8D4		; 2. Wert holen
 1653 E8E4  57          	LD	D,A		; D = letzte Zeile
 1654 E8E5  D5          	PUSH	DE
 1655 E8E6  CD E8D1     	CALL	MC8D4		; 3. Wert holen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 122
CE48    INC

 1656 E8E9  D1          	POP	DE
 1657 E8EA  5F          	LD	E,A		; E = erste Spalte
 1658 E8EB  D5          	PUSH	DE
 1659 E8EC  CD E8D1     	CALL	MC8D4		; 4. Wert holen
 1660 E8EF  D1          	POP	DE		; A = letzte Spalte
 1661 E8F0  E3          	EX	(SP),HL		; H = erste Zeile
 1662 E8F1  6B          	LD	L,E		; L = erste Spalte
 1663 E8F2  93          	SUB	E		; Anzahl Spalten
 1664                   ;	JR	C,SNERR2	; Anfang > Ende (wird von WININ ueberwacht)
 1665 E8F3  3C          	INC	A
 1666 E8F4  5F          	LD	E,A		; E = Fensterbreite
 1667 E8F5  7A          	LD	A,D		; letzte Zeile
 1668 E8F6  94          	SUB	H		; Anzahl Zeilen
 1669                   ;	JR	C,SNERR2	; Anfang > Ende (wird von WININ ueberwacht)
 1670 E8F7  3C          	INC	A
 1671 E8F8  57          	LD	D,A		; D = Fensterhoehe
 1672 E8F9  CD F06A     WDW1:	CALL	IRMON
 1673 E8FC  3A B79B     	LD	A,(WINNR)	; aktuelle Fensternummer
 1674 E8FF  CD F7F3     	CALL	WININ		; Fenster initialisieren
 1675 E902  CD F087     	CALL	IRMOF
 1676 E905  38 1E       	JR	C,SNERR2	; Fehler aufgetreten
 1677 E907  E1          	POP	HL
 1678 E908  C9          	RET
 1679                   	;
 1680 E909  E5          WDW2:	PUSH	HL		; Standardfenstergoesse bei BASIC:
 1681 E90A  21 0100     	LD	HL,100H		; 30 Zeilen, 40 Zeichen breit
 1682 E90D  11 1E28     	LD	DE,1E28H	; (oben und unten eine Zeile ungenutzt)
 1683 E910  18 E7       	JR	WDW1
 1684                   
 1685                   ; BASIC: in IRM schreiben (8000h bis BFFFh):
 1686                   
 1687 E912  CD C96C     VPOKE:	CALL	EPRVL4		; Parameter erfassen (Adresse)
 1688 E915  D5          	PUSH	DE
 1689 E916  CD E8D1     	CALL	MC8D4		; Wert abholen
 1690 E919  E3          	EX	(SP),HL
 1691 E91A  11 8000     	LD	DE,8000H	; IRM-Offset
 1692 E91D  19          	ADD	HL,DE
 1693 E91E  38 05       	JR	C,SNERR2	; < 8000h
 1694 E920  CB 74       	BIT	6,H
 1695 E922  CA E9AE     	JP	Z,LOC1		; < C000h -> in IRM schreiben
 1696 E925  C3 C348     SNERR2:	JP	SNER		; SN-ERROR
 1697                   
 1698                   ; BASIC: PRINT AT:
 1699                   
 1700 E928  3A 03FD     PRAT:	LD	A,(PRTFLG)
 1701 E92B  CB 4F       	BIT	1,A
 1702 E92D  CB CF       	SET	1,A
 1703 E92F  32 03FD     	LD	(PRTFLG),A
 1704 E932  20 F1       	JR	NZ,SNERR2
 1705 E934  D5          	PUSH	DE
 1706 E935  E5          	PUSH	HL
 1707 E936  CD F06A     	CALL	IRMON
 1708                   ;
 1709                   ; seit CAOS 3.1 wurden die aktuellen Fensterdaten im Fenstervektorspeicher des
 1710                   ; Fensters Nr. 8 und 9 zwischengespeichert und diese Werte somit ueberschrieben.
 1711                   ; CAOS 3.4 machte es vor, dass es besser geht. Hier werden die aktuellen Werte
 1712                   ; im Fenstervektorspeicher des aktuellen Fensters gesichert
 1713                   ; 29.12.2020: Funktionalitaet fuer CAOS 4.8 uebernommen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 123
CE48    INC

 1714                   ;
 1715                   	; im Fenstervektorspeicher sichern
 1716 E939  3A B79B     	LD	A,(WINNR)	; aktuelle Fenster-Nr.
 1717 E93C  21 0000     	LD	HL,0		; WINON
 1718 E93F  11 2028     	LD	DE,2028H	; WINLG
 1719 E942  01 C633     	LD	BC,WININB	; WINON=HL, WINLG=DE, CURSO=BC einstellen
 1720 E945  CD FB81     	CALL	CLROMC		; im ROM-C ausfuehren
 1721 E948  CD F087     	CALL	IRMOF
 1722 E94B  E1          	POP	HL
 1723 E94C  CD E97B     	CALL	LOCAT		; Cursor positionieren
 1724 E94F  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1725 E952  CD C8CC     	CALL	CPSTX		; Semikolon?
 1726 E955  3B          	DB	';'
 1727 E956  7E          	LD	A,(HL)
 1728 E957  FE DF       	CP	0DFH
 1729 E959  38 1B       	JR	C,PRAT2		; <DFH
 1730 E95B  FE E3       	CP	0E3H
 1731 E95D  30 17       	JR	NC,PRAT2	; >E2H
 1732 E95F  CD E622     	CALL	PREX4		; INK, PAPER, COLOR
 1733 E962  E5          PRAT1:	PUSH	HL
 1734 E963  CD F06A     	CALL	IRMON
 1735 E966  3A B79B     	LD	A,(WINNR)	; aktuelle Fenster-Nr.
 1736 E969  01 C5ED     	LD	BC,WINAKB	; gesicherte Werte zurueck holen
 1737 E96C  CD FB81     	CALL	CLROMC		; im ROM-C ausfuehren
 1738 E96F  CD F087     	CALL	IRMOF
 1739 E972  E1          	POP	HL
 1740 E973  D1          	POP	DE
 1741 E974  C1          	POP	BC
 1742 E975  C9          	RET
 1743                   	;
 1744 E976  CD CB03     PRAT2:	CALL	PRINT2		; Routine im BASIC-ROM aufrufen
 1745 E979  18 E7       	JR	PRAT1
 1746                   
 1747                   ; BASIC: Cursor positionieren:
 1748                   
 1749 E97B  CD C8BD     LOCAT:	CALL	TCHAR		; naechstes Zeichen holen
 1750 E97E  CD C8CC     	CALL	CPSTX		; Klammer auf?
 1751 E981  28          	DB	'('
 1752 E982  CD D421     LOCATE:	CALL	ARGVL1		; Wert abholen
 1753 E985  57          	LD	D,A
 1754 E986  E5          	PUSH	HL
 1755 E987  21 B79F     	LD	HL,WINLG+1
 1756 E98A  CD EAF3     	CALL	IRMRD
 1757 E98D  E1          	POP	HL
 1758 E98E  3D          	DEC	A
 1759 E98F  BA          	CP	D
 1760 E990  38 3C       	JR	C,SNERR3
 1761 E992  D5          	PUSH	DE
 1762 E993  CD E8D1     	CALL	MC8D4		; Wert abholen
 1763 E996  D1          	POP	DE
 1764 E997  4F          	LD	C,A
 1765 E998  E5          	PUSH	HL
 1766 E999  21 B79E     	LD	HL,WINLG
 1767 E99C  CD EAF3     	CALL	IRMRD		; Fenstergroesse lesen
 1768 E99F  E1          	POP	HL
 1769 E9A0  3D          	DEC	A
 1770 E9A1  B9          	CP	C
 1771 E9A2  38 2A       	JR	C,SNERR3
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 124
CE48    INC

 1772 E9A4  79          	LD	A,C
 1773 E9A5  E5          	PUSH	HL
 1774 E9A6  21 B7A0     	LD	HL,CURSO
 1775 E9A9  CD EAF8     	CALL	IRMWR
 1776 E9AC  7A          	LD	A,D
 1777 E9AD  23          	INC	HL
 1778 E9AE  CD EAF8     LOC1:	CALL	IRMWR		; in IRM schreiben
 1779 E9B1  E1          	POP	HL
 1780 E9B2  C9          	RET
 1781                   
 1782                   ; BASIC: Eingabe eines Zeichens:
 1783                   
 1784 E9B3  E5          INKEY:	PUSH	HL
 1785 E9B4  CD E37D     	CALL	KBDS		; Tastaturabfrage
 1786 E9B7  30 0F       	JR	NC,INKEY3
 1787 E9B9  3E 01       	LD	A,1
 1788 E9BB  CD D17B     	CALL	STADTB
 1789 E9BE  CD DDE4     	CALL	CI		; Eingabe ASCII
 1790 E9C1  2A 03C2     INKEY1:	LD	HL,(STRDAT+2)
 1791 E9C4  77          	LD	(HL),A
 1792 E9C5  C3 D1A9     INKEY2:	JP	SLEN3
 1793                   	;
 1794 E9C8  AF          INKEY3:	XOR	A
 1795 E9C9  CD D17B     	CALL	STADTB
 1796 E9CC  18 F7       	JR	INKEY2
 1797                   
 1798 E9CE  C3 C348     SNERR3:	JP	SNER		; SN-ERROR
 1799                   
 1800                   ; BASIC: Vordergrundfarbe einstellen:
 1801                   
 1802 E9D1  CD D421     INK:	CALL	ARGVL1		; Wert abholen
 1803 E9D4  FE 20       	CP	32
 1804 E9D6  30 66       	JR	NC,FCERR	; FC-ERROR	(bisher SN-ERROR)
 1805 E9D8  87          	ADD	A,A
 1806 E9D9  87          	ADD	A,A		; *8
 1807 E9DA  87          	ADD	A,A
 1808 E9DB  57          	LD	D,A		; neuer Farbwert
 1809 E9DC  CD E5B1     	CALL	LOCOL		; Farbwert lesen
 1810 E9DF  E6 07       	AND	7		; Hintergrund-Bits erhalten
 1811 E9E1  18 1C       	JR	COL2
 1812                   
 1813                   ; BASIC: Vordergrund- und Hintergrundfarbe einstellen:
 1814                   
 1815 E9E3  CD C8BE     BCOLOR:	CALL	TCHAR1
 1816 E9E6  28 56       	JR	Z,FCERR		; FC-ERROR	(bisher SN-ERROR)
 1817 E9E8  CD E9D1     	CALL	INK		; Vordergrund
 1818 E9EB  CD C8BE     	CALL	TCHAR1
 1819 E9EE  C8          	RET	Z
 1820 E9EF  CD C8D6     	CALL	CPCOMM		; Komma?
 1821                   ;	JR	PAPER		; Hintergrund
 1822                   
 1823                   ; BASIC: Hintergrundfarbe einstellen:
 1824                   
 1825 E9F2  CD D421     PAPER:	CALL	ARGVL1		; Wert abholen
 1826 E9F5  FE 08       COL1:	CP	8
 1827 E9F7  30 45       	JR	NC,FCERR	; FC-ERROR	(bisher SN-ERROR)
 1828 E9F9  57          	LD	D,A
 1829 E9FA  CD E5B1     	CALL	LOCOL		; Farbwert lesen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 125
CE48    INC

 1830 E9FD  E6 F8       	AND	0F8H		; Vordergrund-Bits erhalten
 1831 E9FF  B2          COL2:	OR	D		; neuen Farbwert einbauen
 1832 EA00  E5          	PUSH	HL
 1833 EA01  21 B7A3     	LD	HL,COLOR
 1834 EA04  18 A8       	JR	LOC1		; neuer Farbwert
 1835                   
 1836                   ; BASIC: Punkt loeschen:
 1837                   
 1838 EA06  1E 2F       PRESET:	LD	E,2FH		; UP PUDE
 1839 EA08  01          	DB	1	; LD BC,n
 1840                   
 1841                   ; BASIC: Punkt setzen:
 1842                   
 1843 EA09  1E 30       PSET:	LD	E,30H		; UP PUSE
 1844 EA0B  D5          	PUSH	DE
 1845 EA0C  CD C96C     	CALL	EPRVL4		; Parameter erfassen
 1846 EA0F  E5          	PUSH	HL		; Adresszeiger
 1847 EA10  7B          	LD	A,E
 1848 EA11  21 B7D3     	LD	HL,HOR
 1849 EA14  CD EAF8     	CALL	IRMWR		; X-Koordinate (low)
 1850 EA17  7A          	LD	A,D
 1851 EA18  23          	INC	HL
 1852 EA19  CD EAF8     	CALL	IRMWR		; X-Koordinate (high)
 1853 EA1C  E3          	EX	(SP),HL
 1854 EA1D  CD E8D1     	CALL	MC8D4		; Wert abholen
 1855 EA20  E3          	EX	(SP),HL
 1856 EA21  23          	INC	HL		; HL=VERT
 1857 EA22  CD EAF8     	CALL	IRMWR		; Y-Koordinate
 1858 EA25  E1          GRAPH2:	POP	HL		; HL=Adresszeiger
 1859 EA26  CD C8BE     	CALL	TCHAR1		; optionaler Parameter vorhanden?
 1860 EA29  28 0E       	JR	Z,GRAPH4	; nein
 1861 EA2B  CD E8D1     	CALL	MC8D4		; Wert abholen nach A
 1862 EA2E  17          	RLA
 1863 EA2F  17          	RLA			; Rotieren in Bites fuer Vordergundfarbe
 1864 EA30  17          	RLA
 1865 EA31  E5          	PUSH	HL
 1866 EA32  21 B7D6     	LD	HL,FARB		; Grafik-Farbe
 1867 EA35  CD EAF8     	CALL	IRMWR		; in IRM schreiben
 1868 EA38  E1          	POP	HL		; HL=Adresszeiger
 1869 EA39  D1          GRAPH4:	POP	DE		; E=UP-Nr. fuer PUSE, PUDE, LINE, CIRCLE
 1870 EA3A  CD F02D     	CALL	PV5
 1871 EA3D  D0          	RET	NC		; kein FC-ERROR	(bisher SN-ERROR)
 1872 EA3E  C3 C967     FCERR:	JP	FCER		; FC-ERROR
 1873                   
 1874                   ; BASIC: Tonausgabe:
 1875                   
 1876 EA41  CD D421     SOUND:	CALL	ARGVL1		; 1. Wert abholen
 1877 EA44  E5          	PUSH	HL
 1878 EA45  21 B782     	LD	HL,ARG1		; Argumente hier ablegen
 1879 EA48  06 04       	LD	B,4		; 4 Argumente holen
 1880 EA4A  CD EAF8     SOUND1:	CALL	IRMWR		; Argument einschreiben
 1881 EA4D  23          	INC	HL
 1882 EA4E  E3          	EX	(SP),HL		; Umschaltung auf Programmzeiger
 1883 EA4F  05          	DEC	B
 1884 EA50  28 08       	JR	Z,SOUND2	; fertig mit 4 Werten
 1885 EA52  C5          	PUSH	BC
 1886 EA53  CD E8D1     	CALL	MC8D4		; 2. bis 4. Wert abholen
 1887 EA56  C1          	POP	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 126
CE48    INC

 1888 EA57  E3          	EX	(SP),HL		; Umschaltung auf ARG-Zeiger
 1889 EA58  18 F0       	JR	SOUND1
 1890                   	;
 1891 EA5A  CD C8BE     SOUND2:	CALL	TCHAR1		; weiterer Parameter?
 1892 EA5D  28 16       	JR	Z,SOUND3
 1893 EA5F  CD E8D1     	CALL	MC8D4		; optionalen 5. Wert (Lautstaerke) abholen
 1894 EA62  E3          	EX	(SP),HL
 1895 EA63  CD EAF8     	CALL	IRMWR		; und einschreiben nach ARG3
 1896 EA66  23          	INC	HL
 1897 EA67  E3          	EX	(SP),HL
 1898 EA68  CD C8BE     	CALL	TCHAR1		; weiterer Parameter?
 1899 EA6B  28 08       	JR	Z,SOUND3
 1900 EA6D  CD E8D1     	CALL	MC8D4		; optionalen 6. Wert (Tondauer) abholen
 1901 EA70  E3          	EX	(SP),HL
 1902 EA71  CD EAF8     	CALL	IRMWR		; und einschreiben nach ARG3+1
 1903 EA74  E3          	EX	(SP),HL
 1904 EA75  1E 35       SOUND3:	LD	E,35H		; UP-Nr. fuer TON
 1905 EA77  C1          	POP	BC		; Stack bereinigen
 1906 EA78  C3 F02D     	JP	PV5		; Tonausgabe aufrufen
 1907                   
 1908                   ; BASIC: String1 in String2 suchen
 1909                   
 1910 EA7B  CD CD36     INSTR:	CALL	SNALY6		; Klammer auf?
 1911 EA7E  CD C8D6     	CALL	CPCOMM		; Komma?
 1912 EA81  E5          	PUSH	HL
 1913 EA82  CD D330     	CALL	LEN1		; Laenge holen
 1914 EA85  28 B7       	JR	Z,FCERR		; FC-ERROR
 1915 EA87  47          	LD	B,A
 1916 EA88  23          	INC	HL
 1917 EA89  23          	INC	HL
 1918 EA8A  5E          	LD	E,(HL)
 1919 EA8B  23          	INC	HL
 1920 EA8C  56          	LD	D,(HL)
 1921 EA8D  E1          	POP	HL
 1922 EA8E  D5          	PUSH	DE
 1923 EA8F  C5          	PUSH	BC
 1924 EA90  CD CD3A     	CALL	SNALY
 1925 EA93  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1926 EA96  C1          	POP	BC
 1927 EA97  D1          	POP	DE
 1928 EA98  E5          	PUSH	HL
 1929 EA99  D5          	PUSH	DE
 1930 EA9A  C5          	PUSH	BC
 1931 EA9B  CD D330     	CALL	LEN1		; Laenge holen
 1932 EA9E  28 9E       	JR	Z,FCERR		; FC-ERROR
 1933 EAA0  23          	INC	HL
 1934 EAA1  23          	INC	HL
 1935 EAA2  4E          	LD	C,(HL)
 1936 EAA3  23          	INC	HL
 1937 EAA4  66          	LD	H,(HL)
 1938 EAA5  69          	LD	L,C
 1939 EAA6  C1          	POP	BC
 1940 EAA7  4F          	LD	C,A
 1941 EAA8  D1          	POP	DE
 1942 EAA9  E5          	PUSH	HL
 1943 EAAA  C5          INSTR1:	PUSH	BC
 1944 EAAB  D5          	PUSH	DE
 1945 EAAC  1A          	LD	A,(DE)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 127
CE48    INC

 1946 EAAD  BE          INSTR2:	CP	(HL)
 1947 EAAE  28 0F       	JR	Z,INSTR5
 1948 EAB0  23          	INC	HL
 1949 EAB1  0D          	DEC	C
 1950 EAB2  20 F9       	JR	NZ,INSTR2
 1951 EAB4  AF          INSTR3:	XOR	A
 1952 EAB5  E1          	POP	HL
 1953 EAB6  E1          	POP	HL
 1954 EAB7  E1          	POP	HL
 1955 EAB8  11 CDF3     INSTR4:	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 1956 EABB  D5          	PUSH	DE
 1957 EABC  C3 D0C0     	JP	POS1
 1958                   	;
 1959 EABF  23          INSTR5:	INC	HL
 1960 EAC0  E5          	PUSH	HL
 1961 EAC1  2B          	DEC	HL
 1962 EAC2  23          INSTR6:	INC	HL
 1963 EAC3  0D          	DEC	C
 1964 EAC4  28 0E       	JR	Z,INSTR7
 1965 EAC6  13          	INC	DE
 1966 EAC7  05          	DEC	B
 1967 EAC8  28 11       	JR	Z,INSTR8
 1968 EACA  1A          	LD	A,(DE)
 1969 EACB  BE          	CP	(HL)
 1970 EACC  28 F4       	JR	Z,INSTR6
 1971 EACE  E1          	POP	HL
 1972 EACF  D1          	POP	DE
 1973 EAD0  C1          	POP	BC
 1974 EAD1  0D          	DEC	C
 1975 EAD2  18 D6       	JR	INSTR1
 1976                   	;
 1977 EAD4  13          INSTR7:	INC	DE
 1978 EAD5  05          	DEC	B
 1979 EAD6  E1          	POP	HL
 1980 EAD7  20 DB       	JR	NZ,INSTR3
 1981 EAD9  18 01       	JR	INSTR9
 1982                   	;
 1983 EADB  E1          INSTR8:	POP	HL
 1984 EADC  D1          INSTR9:	POP	DE
 1985 EADD  D1          	POP	DE
 1986 EADE  D1          	POP	DE
 1987 EADF  A7          	AND	A
 1988 EAE0  ED 52       	SBC	HL,DE
 1989 EAE2  7D          	LD	A,L
 1990 EAE3  18 D3       	JR	INSTR4
 1991                   
 1992                   ; BASIC: F-Taste belegen:
 1993                   
 1994 EAE5  CD D421     BKEY:	CALL	ARGVL1		; Wert abholen
 1995 EAE8  FE 10       	CP	16		; F0 ... F15 zugelassen
 1996 EAEA  D2 EB8D     	JP	NC,SNERR4
 1997 EAED  1E 39       	LD	E,39H		; UP-Nr. fuer KEY
 1998 EAEF  01          	DB	1	; LC BC,nn
 1999                   
 2000                   ; BASIC: F-Tasten auflisten:
 2001                   
 2002 EAF0              KEYLIST:
 2003 EAF0  1E 3A       	LD	E,3AH		; UP-Nr. fuer KEYLI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 128
CE48    INC

 2004 EAF2  01          	DB	1	; LC BC,nn
 2005                   
 2006                   ; BASIC: Byte aus IRM lesen:
 2007                   
 2008 EAF3  1E 29       IRMRD:	LD	E,29H		; UP-Nr. fuer LDAM
 2009 EAF5  C3 F02D     JPV5:	JP	PV5
 2010                   
 2011                   ; BASIC: Byte in IRM schreiben:
 2012                   
 2013 EAF8  1E 28       IRMWR:	LD	E,28H		; UP-Nr. fuer LDMA
 2014 EAFA  18 F9       	JR	JPV5
 2015                   
 2016                   ; BASIC: Module schalten:
 2017                   
 2018 EAFC  CD D421     SWITCH:	CALL	ARGVL1		; 1. Wert abholen
 2019 EAFF  F5          	PUSH	AF		; Steckplatz
 2020 EB00  CD E8D1     	CALL	MC8D4		; 2. Wert abholen
 2021 EB03  57          	LD	D,A		; Steuerbyte
 2022 EB04  F1          	POP	AF
 2023 EB05  E5          	PUSH	HL
 2024 EB06  6F          	LD	L,A		; Steckplatz
 2025 EB07  3E 02       	LD	A,2		; schalten
 2026 EB09  1E 26       	LD	E,26H		; UP-Nr. fuer MODU
 2027 EB0B  CD F02D     	CALL	PV5
 2028 EB0E  E1          	POP	HL
 2029 EB0F  C9          	RET
 2030                   
 2031                   ; BASIC: Testen, ob Bildpunkt gesetzt ist:
 2032                   
 2033 EB10  CD CD36     PTEST:	CALL	SNALY6		; Klammer auf?
 2034 EB13  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 2035 EB16  E5          	PUSH	HL		; Programmzeiger auf Stack legen
 2036 EB17  7B          	LD	A,E
 2037 EB18  21 B7D3     	LD	HL,HOR		; X-Koordinate eintragen
 2038 EB1B  CD EAF8     	CALL	IRMWR		; Low
 2039 EB1E  7A          	LD	A,D
 2040 EB1F  23          	INC	HL
 2041 EB20  CD EAF8     	CALL	IRMWR		; High
 2042 EB23  23          	INC	HL		; VERT
 2043 EB24  E3          	EX	(SP),HL		; HL=Programmzeiger, (Stack)=VERT
 2044 EB25  0E 00       	ld	c,0		; Y-Koordinate nicht angegeben
 2045 EB27  7E          	LD	A,(HL)
 2046 EB28  FE 2C       	CP	','		; weiterer Parameter?
 2047 EB2A  20 0A       	JR	NZ,PTEST1	; nein
 2048 EB2C  CD E8D1     	CALL	MC8D4		; 2. Wert holen
 2049 EB2F  E3          	EX	(SP),HL		; HL=VERT
 2050 EB30  CD EAF8     	CALL	IRMWR		; Y-Koordinate eintragen
 2051 EB33  E3          	EX	(SP),HL		; HL=Programmzeiger
 2052 EB34  0E FF       	ld	c,-1		; Y-Koordinate angegeben
 2053 EB36  CD C8DB     PTEST1:	CALL	CPBRGT		; Klammer zu?
 2054 EB39  D1          	POP	DE		; VERT - wird nicht mehr benoetigt
 2055 EB3A  E3          	EX	(SP),HL		; Adresszeiger auf Stack
 2056 EB3B  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2057 EB3E  D5          	PUSH	DE		; Sprungadresse auf Stack
 2058 EB3F  E5          	PUSH	HL		; urspruenglicher Stack-Wert
 2059 EB40  1E 2F       	LD	E,2FH		; UP-Nr. fuer PUDE
 2060 EB42  CD F02D     	CALL	PV5
 2061 EB45  DA C967     	JP	C,FCER		; ausserhalb -> FC-ERROR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 129
CE48    INC

 2062 EB48  F5          	PUSH	AF		; Z-Flag erhalten
 2063 EB49  DD CB 01 5E 	BIT	3,(IX+1)	; HiRes?
 2064 EB4D  28 20       	JR	Z,PTEST4	; Farbwert steht bereits in Register A
 2065 EB4F  F1          	POP	AF
 2066 EB50  06 00       	LD	B,0
 2067 EB52  28 19       	JR	Z,PTEST3	; Punkt war geloescht
 2068 EB54  21 B7D6     	LD	HL,FARB
 2069 EB57  CD EAF8     	CALL	IRMWR		; Grafikfarbe eintragen fuer folgendes PUSE
 2070 EB5A  0F          	RRCA
 2071 EB5B  0F          	RRCA			; Vordergrundfarbe nach Bit 0-3 rotieren
 2072 EB5C  0F          	RRCA
 2073 EB5D  E6 0F       	AND	0Fh
 2074 EB5F  20 02       	JR	NZ,PTEST2	; Farbe 1-15
 2075 EB61  3E 08       	LD	A,8		; Farbe 0 => 8 (beides ist schwarz)
 2076 EB63  47          PTEST2:	LD	B,A		; Rueckgabewert = Farbe 1..15
 2077 EB64  1E 30       	LD	E,30H		; UP-Nr. fuer PUSE
 2078 EB66  CD F02D     	CALL	PV5		; Punkt wieder setzen
 2079 EB69  0C          	inc	c		; war Y-Koordinate angegeben?
 2080 EB6A  28 01       	jr	z,PTEST3	; ja, dann Farbcode zurueck geben
 2081 EB6C  41          	ld	b,c		; ansonsten 1 fuer Punkt gesetzt
 2082 EB6D  78          PTEST3:	LD	A,B		; Rueckgabewert (0=geloescht oder Farbcode)
 2083 EB6E  06          	DB	06H		; LD B,0F1H
 2084 EB6F  F1          PTEST4:	POP	AF
 2085 EB70  18 65       	JR	JHPOS		; POP HL, JP POS1
 2086                   
 2087                   ; BASIC: IRM lesen (8000h bis BFFFh):
 2088                   
 2089 EB72  CD CDE1     VPEEK:	CALL	SNLY14		; Syntax-Check '('
 2090 EB75  E3          	EX	(SP),HL
 2091 EB76  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2092 EB79  D5          	PUSH	DE
 2093 EB7A  CD C96F     	CALL	EPRVL3		; Wert bestimmen
 2094 EB7D  E5          	PUSH	HL
 2095 EB7E  21 8000     	LD	HL,8000H	; IRM-Offset
 2096 EB81  19          	ADD	HL,DE
 2097 EB82  38 09       	JR	C,SNERR4	; < 8000h
 2098 EB84  CB 74       	BIT	6,H
 2099 EB86  20 05       	JR	NZ,SNERR4	; > BFFFh
 2100 EB88  CD EAF3     	CALL	IRMRD
 2101 EB8B  18 4A       	JR	JHPOS		; POP HL, JP POS1
 2102                   
 2103 EB8D  C3 C348     SNERR4:	JP	SNER		; SN-ERROR
 2104                   
 2105                   ; BASIC-Erweiterung 3: Funktionen
 2106                   ;**************************************************************
 2107                   ;* VERTEILER ZU ZUSAETZLICHEN STANDARDFUNKTIONEN
 2108                   ;* E: <HL> AUF SIGN. ZEICHEN NACH TOKEN
 2109                   ;*    <BC> =<<SP>>  (TOKEN-SGTOK)*2
 2110                   ;* A: <HL> AUF SIGN. ZEICHEN NACH TOKEN
 2111                   ;**************************************************************
 2112                   
 2113 EB90  79          BEXP3:	LD	A,C		; zulaessig?
 2114 EB91  FE 62       	CP	62H
 2115 EB93  28 DD       	JR	Z,VPEEK
 2116 EB95  FE 6E       	CP	6EH
 2117 EB97  CA EB10     	JP	Z,PTEST
 2118 EB9A  FE 7C       	CP	7CH
 2119 EB9C  28 1A       	JR	Z,CSRLN
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 130
CE48    INC

 2120 EB9E  FE 76       	CP	76H
 2121 EBA0  28 39       	JR	Z,VGET
 2122 EBA2  D6 3E       	SUB	3EH
 2123 EBA4  38 E7       	JR	C,SNERR4	; nein
 2124 EBA6  FE 07       	CP	7
 2125 EBA8  30 E3       	JR	NC,SNERR4	; nein
 2126                   ;--------------------------------
 2127 EBAA  EB          	EX	DE,HL
 2128 EBAB  01 FDA3     	LD	BC,TOKJP	; Token-Adresstabelle
 2129 EBAE  E1          	POP	HL
 2130 EBAF  6F          	LD	L,A
 2131 EBB0  09          	ADD	HL,BC
 2132 EBB1  4E          	LD	C,(HL)
 2133 EBB2  23          	INC	HL
 2134 EBB3  66          	LD	H,(HL)
 2135 EBB4  69          	LD	L,C
 2136 EBB5  E5          	PUSH	HL		; Routine
 2137 EBB6  EB          	EX	DE,HL		; anspringen
 2138 EBB7  C9          	RET
 2139                   
 2140                   ; BASIC: aktuelle Zeilennummer holen:
 2141                   
 2142 EBB8  CD CDE1     CSRLN:	CALL	SNLY14		; Syntax-Check '('
 2143 EBBB  E3          	EX	(SP),HL
 2144 EBBC  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2145 EBBF  D5          	PUSH	DE
 2146 EBC0  CD D424     	CALL	ARGVL2
 2147 EBC3  E5          	PUSH	HL
 2148 EBC4  A7          	AND	A		; Fenster beruecksichtigen?
 2149 EBC5  3E 00       	LD	A,0
 2150 EBC7  20 06       	JR	NZ,CSRLN1
 2151 EBC9  21 B79D     	LD	HL,WINON+1
 2152 EBCC  CD EAF3     	CALL	IRMRD
 2153 EBCF  47          CSRLN1:	LD	B,A
 2154 EBD0  21 B7A1     	LD	HL,CURSO+1
 2155 EBD3  CD EAF3     	CALL	IRMRD
 2156 EBD6  80          	ADD	A,B		; aktuelle Zeile
 2157 EBD7  E1          JHPOS:	POP	HL
 2158 EBD8  C3 D0C0     CSRLN2:	JP	POS1
 2159                   
 2160                   ; BASIC: Zeichen von Bildschirm zurueck lesen
 2161                   
 2162 EBDB  E3          VGET:	EX	(SP),HL
 2163 EBDC  3E 01       	LD	A,1
 2164 EBDE  CD D17B     	CALL	STADTB
 2165 EBE1  CD F06A     	CALL	IRMON
 2166 EBE4  ED 5B B7A0  	LD	DE,(CURSO)
 2167 EBE8  CD E087     	CALL	DABR
 2168 EBEB  7E          	LD	A,(HL)
 2169 EBEC  CD F087     	CALL	IRMOF
 2170 EBEF  C3 E9C1     	JP	INKEY1		; als Zeichen zurueckgeben
 2171                   
 2172                   ; BASIC: Kanal schliessen:
 2173                   
 2174 EBF2  0E 00       CLOSE:	LD	C,0
 2175 EBF4  7E          	LD	A,(HL)
 2176 EBF5  FE 49       	CP	'I'		; Eingabe?
 2177 EBF7  28 05       	JR	Z,CLOS1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 131
CE48    INC

 2178 EBF9  0C          	INC	C
 2179 EBFA  FE 4F       	CP	'O'		; Ausgabe?
 2180 EBFC  20 8F       	JR	NZ,SNERR4
 2181 EBFE  C5          CLOS1:	PUSH	BC
 2182 EBFF  23          	INC	HL
 2183 EC00  7E          	LD	A,(HL)
 2184 EC01  FE 23       	CP	'#'
 2185 EC03  20 88       CLOS2:	JR	NZ,SNERR4	; SN-ERROR
 2186 EC05  23          	INC	HL
 2187 EC06  CD D421     	CALL	ARGVL1		; Wert abholen
 2188 EC09  E6 03       	AND	3		; 4 Geraete
 2189 EC0B  C1          	POP	BC
 2190 EC0C  C8          	RET	Z		; Console -> nichts tun
 2191 EC0D  E5          	PUSH	HL
 2192 EC0E  17          	RLA			; *2
 2193 EC0F  81          	ADD	A,C		; Ein-/Ausgabe
 2194 EC10  F5          	PUSH	AF
 2195 EC11  3D          	DEC	A
 2196 EC12  47          	LD	B,A
 2197 EC13  3E FF       	LD	A,-1
 2198 EC15  17          CLOS3:	RLA			; Bit platzieren
 2199 EC16  10 FD       	DJNZ	CLOS3
 2200 EC18  21 0307     	LD	HL,IOCHNL	; E/A-Flag
 2201 EC1B  A6          	AND	(HL)		; Bit loeschen
 2202 EC1C  77          	LD	(HL),A
 2203 EC1D  F1          	POP	AF
 2204 EC1E  E1          	POP	HL
 2205 EC1F  CB F7       	SET	6,A		; close
 2206 EC21  D5          	PUSH	DE
 2207 EC22  5F          	LD	E,A
 2208 EC23  16 03       	LD	D,3		; BRK-Code
 2209 EC25  CD E00E     	CALL	BASIO		; Kanal schliessen
 2210 EC28  D1          	POP	DE
 2211 EC29  C9          	RET
 2212                   
 2213                   ; BASIC-Erweiterung JOYST(i)
 2214                   ; kompatibel zum KC 87 mit einem Joystick
 2215                   ;
 2216 EC2A  CD CDE1     JOYST:	CALL	SNLY14		; Syntax-Check '('
 2217 EC2D  E5          	PUSH	HL
 2218 EC2E  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2219 EC31  D5          	PUSH	DE
 2220 EC32  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 2221 EC35  7B          	LD	A,E
 2222 EC36  3D          	DEC	A
 2223 EC37  B2          	OR	D		; Argument gleich 1?
 2224 EC38  3E 00       	LD	A,0
 2225 EC3A  20 9C       	JR	NZ,CSRLN2	; nein: Rueckgabewert 0
 2226 EC3C  DB 90       	IN	A,(90h)		; M008 PIO A Daten
 2227 EC3E  2F          	CPL
 2228 EC3F  57          	LD	D,A
 2229 EC40  E6 0F       	AND	00001111b	; nur Richtungsbits, CY=0
 2230 EC42  1F          	RRA
 2231 EC43  30 02       	JR	NC,JOYST1
 2232 EC45  F6 10       	OR	00010000b	; <Up> auf Bit 3, CY=0
 2233 EC47  1F          JOYST1:	RRA
 2234 EC48  30 02       	JR	NC,JOYST2
 2235 EC4A  F6 04       	OR	00000100b	; <Down> auf Bit 2
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 132
CE48    INC

 2236 EC4C  5F          JOYST2:	LD	E,A
 2237 EC4D  3E 30       	LD	A,00110000b	; Feuertasten
 2238 EC4F  A2          	AND	D
 2239 EC50  B3          	OR	E
 2240 EC51  18 85       	JR	CSRLN2		; Rueckgabewert in A
 2241                   
 2242                   ; BASIC: Zufallsgenerator:
 2243                   
 2244 EC53  ED 5F       RANDOM:	LD	A,R		; Zufallswert aus Refresh-Register
 2245 EC55  32 031D     	LD	(RNDVR3+2),A	; in CONST[0] eintragen
 2246 EC58  3E 07       	ld	a,7		; und Index auf 7 setzen,
 2247 EC5A  32 031B     	ld	(rndvr3),a	; damit dieser Wert sofort benutzt wird.
 2248 EC5D  C9          	RET
 2249                   
 2250                   ; BASIC: Kanal oeffnen:
 2251                   
 2252 EC5E  7E          OPEN:	LD	A,(HL)
 2253 EC5F  23          	INC	HL
 2254 EC60  FE 49       	CP	'I'		; Eingabe?
 2255 EC62  28 19       	JR	Z,OPEN1
 2256 EC64  FE 4F       	CP	'O'		; Ausgabe?
 2257 EC66  20 9B       	JR	NZ,CLOS2	; SN-ERROR
 2258 EC68  CD DE25     	CALL	OUTCHL		; Kanal-Ausgabe
 2259 EC6B  CD DDC8     	CALL	TESTCO
 2260 EC6E  C8          	RET	Z
 2261 EC6F  3E D5       	LD	A,0D5H		; *.UUU
 2262 EC71  CD DCB2     	CALL	CASS1		; Dateiname aufbereiten
 2263 EC74  21 03EA     	LD	HL,INTPRB	; Druckpuffer=Dateiname
 2264 EC77  AF          	XOR	A
 2265 EC78  CD DDD5     	CALL	CO		; Ausgabe Zeichen
 2266 EC7B  E1          	POP	HL
 2267 EC7C  C9          	RET
 2268                   	;
 2269 EC7D  CD DE5F     OPEN1:	CALL	INCHNL		; Kanal-Eingabe
 2270 EC80  3A 0309     	LD	A,(ININD)	; IN-Index
 2271 EC83  E6 03       	AND	3
 2272 EC85  C8          	RET	Z
 2273 EC86  3E D5       	LD	A,0D5H		; *.UUU
 2274 EC88  CD DCB2     	CALL	CASS1		; Dateiname aufbereiten
 2275 EC8B  21 03EA     	LD	HL,INTPRB	; Druckpuffer=Dateiname
 2276 EC8E  CD DDE4     	CALL	CI		; Eingabe eines Zeichens
 2277 EC91  E1          	POP	HL
 2278 EC92  C9          	RET
 2279                   
 2280                   ; BASIC: Linie zeichnen:
 2281                   
 2282 EC93  01 043E     BLINE:	LD	BC,43EH		; 4 Parameter, UP LINE
 2283 EC96  18 03       	JR	GRAPH
 2284                   
 2285                   ; BASIC: Kreis zeichnen:
 2286                   
 2287 EC98  01 033F     CIRCLE:	LD	BC,33FH		; 3 Parameter, UP CIRCLE
 2288 EC9B  C5          GRAPH:	PUSH	BC
 2289 EC9C  CD C96C     	CALL	EPRVL4		; Parameter erfassen
 2290 EC9F  C1          	POP	BC
 2291 ECA0  C5          	PUSH	BC
 2292 ECA1  E5          	PUSH	HL
 2293 ECA2  21 B782     	LD	HL,ARG1		; hier ablegen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 133
CE48    INC

 2294 ECA5  7B          GRAPH1:	LD	A,E
 2295 ECA6  CD EAF8     	CALL	IRMWR		; Ablage der Parameter
 2296 ECA9  23          	INC	HL
 2297 ECAA  7A          	LD	A,D
 2298 ECAB  CD EAF8     	CALL	IRMWR
 2299 ECAE  23          	INC	HL
 2300 ECAF  05          	DEC	B
 2301 ECB0  CA EA25     	JP	Z,GRAPH2	; alle Parameter erfasst
 2302 ECB3  E3          	EX	(SP),HL
 2303 ECB4  C5          	PUSH	BC
 2304 ECB5  CD C8D6     	CALL	CPCOMM		; Komma?
 2305 ECB8  CD C96C     	CALL	EPRVL4		; naechsten Parameter
 2306 ECBB  C1          	POP	BC
 2307 ECBC  E3          	EX	(SP),HL
 2308 ECBD  18 E6       	JR	GRAPH1
 2309                   	;
 2310                   ;GRAPH2:	POP	HL
 2311                   ;	CALL	GFARB		; optionaler Parameter (Farbwert)
 2312                   ;	POP	DE		; E=UP-Nr. fuer LINE oder CIRCLE
 2313                   ;	JP	PV5
 2314                   
 2315                   ; BASIC: DEVICE einstellen
 2316                   ;	Aufruf: DEVICE nr, wobei nr=0 fuer TAPE usw.
 2317                   
 2318 ECBF  CD C8BE     BDEV:	CALL	TCHAR1		; Parameter angegeben?
 2319 ECC2  3E FF       	LD	A,0FFH		; ohne Parameter auflisten was es gibt
 2320 ECC4  C4 D421     	CALL	NZ,ARGVL1	; ansonsten Wert holen
 2321 ECC7  E5          	PUSH	HL
 2322 ECC8  CD F06A     	CALL	IRMON		; IRM ein
 2323 ECCB  CD FBCF     	CALL	SETDEV		; und Geraet entsprechend einstellen
 2324 ECCE  DA F8A1     	JP	C,BD2		; Treiber nicht aktiv -> IO-ERROR
 2325 ECD1  3E FE       	LD	A,0FEh
 2326 ECD3  CD FBCF     	CALL	SETDEV		; Name des Treibers anzeigen
 2327 ECD6  CD F4C3     	CALL	CRLF
 2328 ECD9  CD F087     BD1:	CALL	IRMOF		; IRM aus
 2329 ECDC  E1          	POP	HL
 2330 ECDD  C9          	RET
 2331                   
 2332                   ; BASIC: MC-Programm laden
 2333                   ;	Aufruf: BLOAD "name.typ", wobei Name bei DEVICE=TAPE entfallen kann
 2334                   ; PE:	HL	Zeiger auf Kommando
 2335                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2336                   
 2337 ECDE  CD C8BE     BLOAD:	CALL	TCHAR1		; Parameter angegeben?
 2338 ECE1  28 14       	JR	Z,BLOAD2	; ohne Parameter
 2339 ECE3  CD CD3A     	CALL	SNALY
 2340 ECE6  E5          	PUSH	HL		; Kommandozeile
 2341                   ;	LD	A,12		; max. Laenge Dateiname+Typ
 2342 ECE7  CD ED2D     	CALL	MASK		; Zeichenkette in DE
 2343 ECEA  EB          	EX	DE,HL		; Dateiname in HL
 2344 ECEB  CD F06A     BLOAD1:	CALL	IRMON
 2345 ECEE  AF          	XOR	A
 2346 ECEF  32 B781     	LD	(ARGN),A	; ARGN=0 (kein Ladeoffset)
 2347 ECF2  CD F6DA     	CALL	LOAD		; UP 10H direkt aufrufen
 2348 ECF5  18 E2       	JR	BD1
 2349                   	;
 2350 ECF7  E5          BLOAD2:	PUSH	HL
 2351 ECF8  CD ED6D     	CALL	DEV		; Kassette?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 134
CE48    INC

 2352 ECFB  28 EE       	JR	Z,BLOAD1	; ja, das ist OK ohne Name
 2353 ECFD  1E 24       	LD	E,36		; MO-ERROR
 2354 ECFF  C3 C356     	JP	ERROO		; Error anzeigen
 2355                   
 2356                   ; BASIC: DIR anzeigen aktuelles Speichergeraet
 2357                   ;	Aufruf: FILES "maske", wobei Maske optional ist
 2358                   ; PE:	HL	Zeiger auf Kommando
 2359                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2360                   
 2361 ED02  CD C8BE     FILES:	CALL	TCHAR1		; Parameter angegeben?
 2362 ED05  28 10       	JR	Z,FILES3	; ohne Parameter
 2363 ED07  CD CD3A     	CALL	SNALY
 2364 ED0A  E5          	PUSH	HL		; Kommandozeile
 2365 ED0B  CD ED2D     	CALL	MASK		; Zeichenkette in DE
 2366 ED0E  CD F06A     FILES2:	CALL	IRMON		; IRM ein
 2367 ED11  CD E4E1     	CALL	PV7
 2368 ED14  08          	DB	8		; DEVICE-Funktion DIR aufrufen
 2369 ED15  18 C2       	JR	BD1
 2370                   	;
 2371 ED17  E5          FILES3:	PUSH	HL		; Kommandozeile
 2372 ED18  11 EDF6     	LD	DE,MASK0	; zeigt auf eine 0
 2373 ED1B  18 F1       	JR	FILES2		; gesamtes Verzeichnis anzeigen
 2374                   
 2375                   ; BASIC: Verzeichnis wechseln
 2376                   ;	Aufruf: CD "verzeichnisname"
 2377                   ; PE:	HL	Zeiger auf Kommando
 2378                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2379                   
 2380 ED1D              CHDIR:	;CALL	TCHAR1		; Parameter angegeben?
 2381 ED1D  CD CD3A     	CALL	SNALY
 2382 ED20  E5          	PUSH	HL		; Kommandozeile
 2383 ED21  CD ED2D     	CALL	MASK		; Zeichenkette "Verzeichnis" in DE bereitstellen
 2384 ED24  CD F06A     	CALL	IRMON		; IRM ein
 2385 ED27  CD E4E1     	CALL	PV7
 2386 ED2A  09          	DB	9		; DEVICE-Funktion CD aufrufen
 2387 ED2B  18 AC       	JR	BD1
 2388                   
 2389                   ; Zeichenkette "Maske" bzw. "Verzeichnis" in DE bereitstellen
 2390                   ; PE:	HL	Zeiger auf Ende einer Zeichenkette, direkt nach dem " am Ende
 2391                   ;
 2392 ED2D  2B          MASK:	DEC	HL		; zurueck auf letztes Zeichen
 2393 ED2E  7E          	LD	A,(HL)
 2394 ED2F  FE 22       	CP	22H		; Anfuehrungszeichen?
 2395 ED31  28 FA       	JR	Z,MASK		; dann auch noch davor gehen
 2396 ED33  23          	INC	HL
 2397 ED34  E5          	PUSH	HL
 2398 ED35  CD D33F     	CALL	ASC1		; DE zeigt jetzt auf Beginn der Maske nach dem "
 2399 ED38  E1          	POP	HL
 2400 ED39  AF          	XOR	A		; A=0 und CY=0
 2401 ED3A  ED 52       	SBC	HL,DE
 2402 ED3C  44          	LD	B,H
 2403 ED3D  4D          	LD	C,L		; BC = Laenge der Zeichenkette
 2404 ED3E  EB          	EX	DE,HL		; HL = Beginn der Zeichenkette
 2405 ED3F  11 0362     	LD	DE,0362H	; INPBUF+1	; Eingabepuffer
 2406 ED42  D5          	PUSH	DE
 2407 ED43  ED B0       	LDIR
 2408 ED45  12          	LD	(DE),A		; 0 anhaengen
 2409 ED46  D1          	POP	DE		; Maske in EDIT-PUFFER
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 135
CE48    INC

 2410 ED47  C9          	RET
 2411                   
 2412                   ; Sprung aus CAOS-ROM-C in INIT-Routine des ROM-Moduls (z.B. M052-USB)
 2413                   ; PE:	A	Schaltzustand Modul ein
 2414                   ;	B	Steckplatz
 2415                   
 2416 ED48  57          JROM:	LD	D,A		; Schaltzustand
 2417 ED49  68          	LD	L,B		; Steckplatz
 2418 ED4A  E5          	PUSH	HL		; Steckplatz merken zum wieder ausschalten
 2419 ED4B  CD F0E2     	CALL	MODUSW		; M052 einschalten (und MODST aktualisieren)
 2420                   ;	IN	A,(PIOAD)
 2421                   ;	AND	7Fh		; USER-ROM abschalten (wegen Aufruf aus TEMO)
 2422                   ;	OUT	(PIOAD),A
 2423                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 ED4E  DD CB 04    	 DB	0DDh,0CBh,4
    2 ED51  BF          	 DB	7 SHL 3 OR 10000111b
 2424 ED52  D3 86       	OUT	(PORT2),A	; CAOS-ROM C aus!
 2425 ED54  45          	LD	B,L		; Steckplatz
 2426 ED55  21 ED5C     	LD	HL,JREX		; Rueckkehr hierher
 2427 ED58  E5          	PUSH	HL
 2428 ED59  C3 C020     	JP	0C020h		; Sprung in Modul-ROM -> Treiber initialisieren
 2429                   	;
 2430 ED5C  E1          JREX:	POP	HL		; L=Stekplatz des Moduls
 2431 ED5D  16 00       	LD	D,0		; Modul AUS
 2432 ED5F  CD F0E2     	CALL	MODUSW		; Modul wieder aus schalten
 2433 ED62  C3 FB95     	JP	CON		; Sprung zurueck in CAOS-ROM C
 2434                   ;_____________________________________________________________
 2435                   ;							**40**
 2436                   ; Berechnen der Quadratwurzel
 2437                   ; PE:	HL	16 Bit-Zahl (vorzeichenlos)
 2438                   ; PA:	A	Ergebnis 8 Bit
 2439                   ; VR:	AF,HL,DE
 2440                   
 2441 ED65  CD FB95     SQR:	CALL	CON
 2442 ED68  C3 D2B3     	JP	SQRC
 2443                   ;
 2444                   ; DEVICE ermitteln:
 2445                   ; PA:	A	DEVICE-Nummer*32
 2446                   ;	Z=1	TAPE
 2447                   ;	CY=0
 2448                   ;
 2449 ED6B  26 A9       DEVH:	LD	H,High(DEVTAB)	; (HL)=Sprungadresse
 2450 ED6D  DD 7E 08    DEV:	LD	A,(IX+8)	; Device-Nr. in Bit 2-4
 2451 ED70  07          DEVROT:	RLCA			;	in Bit 3-5
 2452 ED71  07          	RLCA			;	in Bit 4-6
 2453 ED72  07          	RLCA			;	in Bit 5-7
 2454 ED73  E6 E0       	AND	11100000b	; Device-Nr. ausfiltern, Z=1 wenn Device=0
 2455 ED75  C9          	RET
 2456                   
 2457                   ; Initialisierungstabelle fuer M021:
 2458                   
 2459 ED76  03          CENINI:	DB	3
 2460                   
 2461 ED77  92 05       JOYINI:	 DB	92h,5		; PIO-A Steuerwort
 2462 ED79  E0          	  DB	0E0h		; Interruptvektor
 2463 ED7A  CF          	  DB	11001111b	; Einzelbit-Steuermodus
 2464 ED7B  7F          	  DB	01111111b	; Nur Bit 7 = Ausgabe (Strobe)
 2465 ED7C  97          	  DB	10010111b	; Interrupt bei jeder Bitaenderung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 136
CE48    INC

 2466 ED7D  C0          	  DB	11000000b	; Ueberwache Bits 0..5
 2467                   
 2468 ED7E  93 02       	 DB	93h,2		; PIO-B Steuerwort
 2469 ED80  CF          	  DB	11001111b	; Bitbetrieb
 2470 ED81  00          	  DB	00000000b	; alles Ausgaenge
 2471                   
 2472 ED82  90 01       	 DB	90h,1		; PIO-A Daten
 2473 ED84  80          	  DB	10000000b	; Strobe passiv
 2474                   ;
 2475                   ; ISR fuer CTC2: Tonlaenge
 2476                   ;
 2477 ED85  F5          ISRC2:	PUSH	AF
 2478 ED86  E5          	PUSH	HL
 2479 ED87  CD E482     	CALL	TOFF		; kehrt mit EI zurueck
 2480 ED8A  E1          	POP	HL
 2481 ED8B  F1          	POP	AF
 2482 ED8C  ED 4D       	RETI
 2483                   
 2484                   ; Reaktion auf ShCLR:
 2485                   
 2486 ED8E  F5          HCPGM:	PUSH	AF
 2487 ED8F  DD 7E 04    	LD	A,(IX+4)	; CAOS-C merken
 2488 ED92  F5          	PUSH	AF
 2489                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 ED93  DD CB 04    	 DB	0DDh,0CBh,4
    2 ED96  FF          	 DB	7 SHL 3 OR 11000111b
 2490 ED97  D3 86       	OUT	(PORT2),A	; CAOS-C on
 2491 ED99  CD CA85     	CALL	HCPGMC
 2492 ED9C  F1          	POP	AF
 2493 ED9D  CD E2A3     	CALL	OUT86		; CAOS-C wie vorher
 2494 EDA0  F1          	POP	AF
 2495 EDA1  C9          	RET
 2496                   ;
 2497                   ; Version 0 fuer TAPE- und DISK-Treiber melden
 2498                   ;
 2499 EDA2  AF          VER0:	XOR	A		; Version 0.0
 2500 EDA3  C9          	RET
 2501                   ;_____________________________________________________________
 2502                   ;							**4A**
 2503                   ; Dezimalausgabe des Wertes in HL
 2504                   ; PE:	HL	Zahl
 2505                   ; VR:	AF, HL, BC
 2506                   
 2507 EDA4  D5          HLDEZ:	PUSH	DE		; bei Rekursion: letzten Rest retten
 2508 EDA5  01 FFF6     	LD	BC,-10
 2509 EDA8  11 FFFF     	LD	DE,-1		; Zaehler fuer Ergebnis (Anzahl Sub's)
 2510 EDAB  09          HLDEZ1:	ADD	HL,BC
 2511 EDAC  13          	INC	DE
 2512 EDAD  38 FC       	JR	C,HLDEZ1	; DE = HL/10
 2513 EDAF  01 000A     	LD	BC,10
 2514 EDB2  09          	ADD	HL,BC		; letzten Abzug korrigieren; HL = Rest
 2515 EDB3  EB          	EX	DE,HL		; 10er / Rest tauschen
 2516 EDB4  7C          	LD	A,H
 2517 EDB5  B5          	OR	L		; Zehner = 0 ?
 2518 EDB6  C4 EDA4     	CALL	NZ,HLDEZ	; Rekursion wenn Zehner vorhanden
 2519 EDB9  7B          	LD	A,E
 2520 EDBA  C6 30       	ADD	A,'0'		; Rest -> ASCII in A
 2521 EDBC  CD F3BA     	CALL	OCHR		; Ziffer ausgeben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 137
CE48    INC

 2522 EDBF  D1          	POP	DE		; voriger Rest
 2523 EDC0  C9          	RET
 2524                   ;
 2525                   ; Tabelle der ESC-Funktionen:
 2526                   ;
 2527 EDC1  E1D7        ESCTAB:	DW	ESC0		; Tabulatorsprung			ESC'0'
 2528 EDC3  F942        	DW	ESC1		; Anzeige Bild 0	Zugriff Bild 0	ESC'1'
 2529 EDC5  F947        	DW	ESC2		;	  Bild 1		Bild 1	ESC'2'
 2530 EDC7  F94C        	DW	ESC3		;	  Bild 0		Bild 1	ESC'3'
 2531 EDC9  F951        	DW	ESC4		;	  Bild 1		Bild 0	ESC'4'
 2532 EDCB  F0CB        	DW	ESC5		; MODUL-Anzeige				ESC'5'
 2533 EDCD  F0D3        	DW	ESC6		; SYSTEM-Anzeige			ESC'6'
 2534 EDCF  F990        	DW	ESC7		; Pixel invertieren			ESC'7'
 2535 EDD1  E2D3        	DW	ESC8		; Farbe invertieren			ESC'8'
 2536 EDD3  F999        	DW	ESC9		; Farbebene ein/aus			ESC'9'
 2537 EDD5  F9A0        	DW	ESCA		; HiRes ein/aus				ESC'A'
 2538 EDD7  F9B6        	DW	ESCB		; HRG ein/aus				ESC'B'
 2539 EDD9  F98D        	DW	ESCC		; IBM/CAOS-Zeichensatz			ESC'C'
 2540 EDDB  F0EA        	DW	ESCD		; DEVICE-Umschaltung			ESC'D'
 2541 EDDD  E000        	DW	0E000H		; Soft-Reset				ESC'E'
 2542 EDDF  F000        	DW	0F000H		; Soft-Power-On				ESC'F'
 2543 EDE1  F98A        	DW	ESCG		; Umschaltung 2-Monitor-Betrieb		ESC'G'
 2544 EDE3  F0F2        	DW	ESCH		; Hilfefunktion (Idee aus CAOS 6.0)	ESC'H'
 2545 EDE5              ESCX:
 2546                   
 2547 EDE5  49 4E 49 54 INIT:	DB	'INIT',cr,0	; CAOS 4.8: Autostart-Kommando
 2548 EDEB  49 4E 49 54 UUU:	DB	'INITIAL.UUU'	; Standard-Dateiname fuer %INIT
 2549 EDF6  00          MASK0:	DB	0		; Maske fuer BASIC-Befehl FILES ohne Parameter
 2550                   
 2551                   	ABSFILL	0EDF7h,<ROM-E-Ende>
 2552                   
 2553                   ; High-Byte der Adresse muss konstant sein!
 2554                   ; je 1 Byte fuer Eingabe + Ausgabe pro Kanal
 2555                   
 2556 EDF7  16 24       BUPTAB:	DB	16H, 24H	; INTB, OCHR	Kanel #0 - Konsole
 2557 EDF9  37 38       	DB	37H, 38H	; MBIN, MBOUT	Kanal #1 - Kassette
 2558 EDFB  06 02       	DB	06H, 02H	; USIN1, UOT1	Kanal #2 - Anwenderkanal 2
 2559 EDFD  07 03       	DB	07H, 03H	; USIN2, UOT2	Kanal #3 - Anwenderkanal 3
 2560                   
 2561 EDFF              VERSION:
 2562 EDFF  48          	DB	48H		; CAOS-Version 4.8
  246 EE00              LARGE:
  247         0000      if duenn
  249                   else
  250                   	INCLUDE ZSGROSS.INC	; Zeichensatz Grossbuchstaben Standard
    1                   ;*****************************************
    2                   ;**	CAOS 4.8 Zeichensatz Gross	**
    3                   ;**					**
    4                   ;**	Adresse:  EE00h bis EFFFh	**
    5                   ;**	Codes 20h-5Fh			**
    6                   ;**					**
    7                   ;**	letzte Aenderung: 05.02.2018	**
    8                   ;*****************************************
    9                   
   10 EE00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 000H, 000H	; 20H
   11 EE08  30 78 78 30 	DB	030H, 078H, 078H, 030H, 030H, 000H, 030H, 000H	; 21H !
   12 EE10  EE 66 CC 00 	DB	0EEH, 066H, 0CCH, 000H, 000H, 000H, 000H, 000H	; 22H "
   13 EE18  36 36 FE 6C 	DB	036H, 036H, 0FEH, 06CH, 0FEH, 0D8H, 0D8H, 000H	; 23H #
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 138
ZSGROSS INC

   14 EE20  30 7C D0 7C 	DB	030H, 07CH, 0D0H, 07CH, 036H, 0FCH, 030H, 000H	; 24H $
   15 EE28  00 C6 CC 18 	DB	000H, 0C6H, 0CCH, 018H, 030H, 066H, 0C6H, 000H	; 25H %
   16 EE30  38 6C 38 76 	DB	038H, 06CH, 038H, 076H, 0DCH, 0CCH, 076H, 000H	; 26H &
   17 EE38  1C 0C 18 00 	DB	01CH, 00CH, 018H, 000H, 000H, 000H, 000H, 000H	; 27H '
   18 EE40  18 30 60 60 	DB	018H, 030H, 060H, 060H, 060H, 030H, 018H, 000H	; 28H (
   19 EE48  60 30 18 18 	DB	060H, 030H, 018H, 018H, 018H, 030H, 060H, 000H	; 29H )
   20 EE50  00 66 3C FF 	DB	000H, 066H, 03CH, 0FFH, 03CH, 066H, 000H, 000H	; 2AH *
   21 EE58  00 30 30 FC 	DB	000H, 030H, 030H, 0FCH, 030H, 030H, 000H, 000H	; 2BH +
   22 EE60  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 01CH, 00CH, 018H	; 2CH ,
   23 EE68  00 00 00 FE 	DB	000H, 000H, 000H, 0FEH, 000H, 000H, 000H, 000H	; 2DH -
   24 EE70  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 030H, 030H, 000H	; 2EH .
   25 EE78  06 0C 18 30 	DB	006H, 00CH, 018H, 030H, 060H, 0C0H, 080H, 000H	; 2FH /
   26                   
   27 EE80  7C C6 CE DE 	DB	07CH, 0C6H, 0CEH, 0DEH, 0F6H, 0E6H, 07CH, 000H	; 30H 0
   28 EE88  30 70 30 30 	DB	030H, 070H, 030H, 030H, 030H, 030H, 0FCH, 000H	; 31H 1
   29 EE90  78 CC 0C 38 	DB	078H, 0CCH, 00CH, 038H, 060H, 0CCH, 0FCH, 000H	; 32H 2
   30 EE98  FC 18 30 78 	DB	0FCH, 018H, 030H, 078H, 00CH, 0CCH, 078H, 000H	; 33H 3
   31 EEA0  1C 3C 6C CC 	DB	01CH, 03CH, 06CH, 0CCH, 0FEH, 00CH, 01EH, 000H	; 34H 4
   32 EEA8  FC C0 F8 0C 	DB	0FCH, 0C0H, 0F8H, 00CH, 00CH, 0CCH, 078H, 000H	; 35H 5
   33 EEB0  38 60 C0 F8 	DB	038H, 060H, 0C0H, 0F8H, 0CCH, 0CCH, 078H, 000H	; 36H 6
   34 EEB8  FC CC 0C 18 	DB	0FCH, 0CCH, 00CH, 018H, 030H, 030H, 030H, 000H	; 37H 7
   35 EEC0  78 CC CC 78 	DB	078H, 0CCH, 0CCH, 078H, 0CCH, 0CCH, 078H, 000H	; 38H 8
   36 EEC8  78 CC CC 7C 	DB	078H, 0CCH, 0CCH, 07CH, 00CH, 018H, 070H, 000H	; 39H 9
   37 EED0  00 00 30 30 	DB	000H, 000H, 030H, 030H, 000H, 030H, 030H, 000H	; 3AH :
   38 EED8  00 00 30 30 	DB	000H, 000H, 030H, 030H, 000H, 030H, 030H, 060H	; 3BH ;
   39 EEE0  18 30 60 C0 	DB	018H, 030H, 060H, 0C0H, 060H, 030H, 018H, 000H	; 3CH <
   40 EEE8  00 00 FC 00 	DB	000H, 000H, 0FCH, 000H, 0FCH, 000H, 000H, 000H	; 3DH =
   41 EEF0  60 30 18 0C 	DB	060H, 030H, 018H, 00CH, 018H, 030H, 060H, 000H	; 3EH >
   42 EEF8  78 CC 0C 18 	DB	078H, 0CCH, 00CH, 018H, 030H, 000H, 030H, 000H	; 3FH ?
   43                   
   44 EF00  7C C6 DE D6 	DB	07CH, 0C6H, 0DEH, 0D6H, 0DEH, 0C0H, 078H, 000H	; 40H @
   45 EF08  30 78 CC CC 	DB	030H, 078H, 0CCH, 0CCH, 0FCH, 0CCH, 0CCH, 000H	; 41H A
   46 EF10  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 066H, 066H, 0FCH, 000H	; 42H B
   47 EF18  3C 66 C0 C0 	DB	03CH, 066H, 0C0H, 0C0H, 0C0H, 066H, 03CH, 000H	; 43H C
   48 EF20  F8 6C 66 66 	DB	0F8H, 06CH, 066H, 066H, 066H, 06CH, 0F8H, 000H	; 44H D
   49 EF28  FE 62 68 78 	DB	0FEH, 062H, 068H, 078H, 068H, 062H, 0FEH, 000H	; 45H E
   50 EF30  FE 62 68 78 	DB	0FEH, 062H, 068H, 078H, 068H, 060H, 0F0H, 000H	; 46H F
   51 EF38  3C 66 C0 C0 	DB	03CH, 066H, 0C0H, 0C0H, 0CEH, 066H, 03CH, 000H	; 47H G
   52 EF40  CC CC CC FC 	DB	0CCH, 0CCH, 0CCH, 0FCH, 0CCH, 0CCH, 0CCH, 000H	; 48H H
   53 EF48  78 30 30 30 	DB	078H, 030H, 030H, 030H, 030H, 030H, 078H, 000H	; 49H I
   54 EF50  1E 0C 0C 0C 	DB	01EH, 00CH, 00CH, 00CH, 0CCH, 0CCH, 078H, 000H	; 4AH J
   55 EF58  E6 66 6C 70 	DB	0E6H, 066H, 06CH, 070H, 06CH, 066H, 0E6H, 000H	; 4BH K
   56 EF60  F0 60 60 60 	DB	0F0H, 060H, 060H, 060H, 062H, 066H, 0FEH, 000H	; 4CH L
   57 EF68  C6 EE FE D6 	DB	0C6H, 0EEH, 0FEH, 0D6H, 0C6H, 0C6H, 0C6H, 000H	; 4DH M
   58 EF70  C6 E6 F6 DE 	DB	0C6H, 0E6H, 0F6H, 0DEH, 0CEH, 0C6H, 0C6H, 000H	; 4EH N
   59 EF78  38 6C C6 C6 	DB	038H, 06CH, 0C6H, 0C6H, 0C6H, 06CH, 038H, 000H	; 4FH O
   60                   
   61 EF80  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 060H, 060H, 0F0H, 000H	; 50H P
   62 EF88  78 CC CC CC 	DB	078H, 0CCH, 0CCH, 0CCH, 0DCH, 078H, 01CH, 000H	; 51H Q
   63 EF90  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 06CH, 066H, 0E6H, 000H	; 52H R
   64 EF98  7C C6 F0 3C 	DB	07CH, 0C6H, 0F0H, 03CH, 00EH, 0C6H, 07CH, 000H	; 53H S
   65 EFA0  FC B4 30 30 	DB	0FCH, 0B4H, 030H, 030H, 030H, 030H, 078H, 000H	; 54H T
   66 EFA8  CC CC CC CC 	DB	0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 078H, 000H	; 55H U
   67 EFB0  CC CC CC 78 	DB	0CCH, 0CCH, 0CCH, 078H, 078H, 030H, 030H, 000H	; 56H V
   68 EFB8  C6 C6 C6 D6 	DB	0C6H, 0C6H, 0C6H, 0D6H, 0FEH, 0EEH, 0C6H, 000H	; 57H W
   69 EFC0  C6 C6 6C 38 	DB	0C6H, 0C6H, 06CH, 038H, 06CH, 0C6H, 0C6H, 000H	; 58H X
   70 EFC8  CC CC CC 78 	DB	0CCH, 0CCH, 0CCH, 078H, 030H, 030H, 078H, 000H	; 59H Y
   71 EFD0  FE C6 8C 18 	DB	0FEH, 0C6H, 08CH, 018H, 032H, 066H, 0FEH, 000H	; 5AH Z
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 139
ZSGROSS INC

   72 EFD8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH	; 5BH Vollzeichen
   73 EFE0  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 018H, 018H, 000H	; 5CH senkr. Strich
   74 EFE8  00 FE 06 06 	DB	000H, 0FEH, 006H, 006H, 000H, 000H, 000H, 000H	; 5DH Negationszeichen
   75 EFF0  10 38 6C C6 	DB	010H, 038H, 06CH, 0C6H, 000H, 000H, 000H, 000H	; 5EH ^
   76 EFF8  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 000H, 0FFH	; 5FH _
  251                   endif
  252                   	INCLUDE	CF48.INC	; ROM-F (F000-FDFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM F		**
    3                   ;**					**
    4                   ;**	Adresse:  F000h bis FDFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 05.01.2024	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0F000H
   10                   				;			  feste Adresse
   11 F000  C3 F14F     	JP	PWRON		; >> POWER ON <<		F000
   12 F003  C3 F039     	JP	PV1		; DEFB nr			F003
   13 F006  18 4F       	JR	PV2		; (ARGC)=nr			F006
   14 F008  02          ZEI2:	DB	2	; UOUT1					F008
   15 F009  18 4A       	JR	PV3		; E=nr				F009
   16 F00B  03          ZEI3:	DB	3	; UOUT2					F00B
   17 F00C  C3 E041     	JP	PV4		; E=nr, IRM e/a			F00C
   18 F00F  C3 F09E     	JP	RCALL		; DEFW offset			F00F
   19 F012  C3 F156     	JP	BYE		; JUMP-Einsprung		F012
   20 F015  18 16       	JR	PV5		; E=nr, IRM/Stack		F015
   21 F017  04          INTT1:	DB	4	; KBD					F017
   22 F018  C3 F06A     	JP	IRMON		;				F018
   23 F01B  C3 F087     	JP	IRMOF		;				F01B
   24 F01E  18 04       	JR	PV6		; (ARGC)=nr			F01E
   25 F020  00          OUTT1:	DB	0	; CRT					F020
   26 F021  C3 E4E1     	JP	PV7		; DEVICE-Aufruf, DEFB nr.	F021
   27                   				; PV7 ab CAOS 4.7 verfuegbar
   28 F024  C5          PV6:	PUSH	BC
   29 F025  CD F06A     	CALL	IRMON
   30 F028  CD F057     	CALL	PV2
   31 F02B  18 07       	JR	PV51
   32                   
   33 F02D  C5          PV5:	PUSH	BC
   34 F02E  CD F06A     	CALL	IRMON
   35 F031  CD F055     	CALL	PV3
   36 F034  CD F087     PV51:	CALL	IRMOF
   37 F037  C1          	POP	BC
   38 F038  C9          	RET
   39                   
   40 F039  F3          PV1:	DI
   41 F03A  E5          	PUSH	HL
   42 F03B  E1          	POP	HL
   43 F03C  E1          	POP	HL
   44 F03D  23          	INC	HL		; nr uebergehen
   45 F03E  E5          	PUSH	HL
   46 F03F  2B          	DEC	HL		; (HL)=nr
   47 F040  3B          	DEC	SP
   48 F041  3B          	DEC	SP
   49 F042  FB          	EI
   50 F043  F5          	PUSH	AF
   51 F044  D5          	PUSH	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 140
CF48    INC

   52 F045  5E          PV23:	LD	E,(HL)
   53 F046  16 00       PV22:	LD	D,0
   54 F048  2A B7B0     	LD	HL,(SUTAB)
   55 F04B  19          	ADD	HL,DE
   56 F04C  19          	ADD	HL,DE		; HL=Pos. in Tab
   57 F04D  5E          	LD	E,(HL)
   58 F04E  23          	INC	HL
   59 F04F  56          	LD	D,(HL)
   60 F050  EB          	EX	DE,HL
   61 F051  D1          	POP	DE
   62 F052  F1          	POP	AF
   63 F053  E3          	EX	(SP),HL
   64 F054  C9          	RET			; UP anspringen
   65                   
   66 F055  37          PV3:	SCF			; VR: F
   67                   ;	JR	PV21
   68 F056  ED          	DB	0EDH		; ED A7 = NOP (Trick aus CAOS 3.4 uebernommern)
   69 F057  A7          PV2:	AND	A		; VR: F
   70 F058  E5          PV21:	PUSH	HL
   71 F059  D5          	PUSH	DE
   72 F05A  C5          	PUSH	BC
   73 F05B  E5          	PUSH	HL
   74 F05C  21 E0B8     	LD	HL,POP3		; Return-Adresse
   75 F05F  E3          	EX	(SP),HL		; auf Stack legen
   76 F060  E5          	PUSH	HL
   77 F061  F5          	PUSH	AF
   78 F062  D5          	PUSH	DE
   79 F063  38 E1       	JR	C,PV22		; falls PV3
   80 F065  21 B780     	LD	HL,ARGC		; sonst E beschaffen aus ARGC
   81 F068  18 DB       	JR	PV23
   82                   ;
   83                   ; IRM ein und Stack auf (SYSP) setzen
   84                   ; aktuellen SP in IY merken
   85                   ; VR:	BC, F
   86                   ;
   87 F06A  C1          IRMON:	POP	BC		; Rueckkehradresse
   88 F06B  FD E5       	PUSH	IY		; Inhalt von IY auf Anwenderstack legen
   89 F06D  FD 21 0000  	LD	IY,0		; SP in IY merken
   90 F071  FD 39       	ADD	IY,SP		; (kein UP veraendert IY waehrend IRM ON!)
   91 F073  F3          	DI
   92 F074  DD 77 0B    	LD	(IX+11),A	; Inhalt von Register A merken
   93 F077  DB 88       	IN	A,(PIOAD)
   94 F079  F6 24       	OR	00100100b	; IRM+LED ein
   95 F07B  D3 88       	OUT	(PIOAD),A
   96 F07D  ED 7B B7AE  	LD	SP,(SYSP)	; System-SP verwenden
   97 F081  FB          	EI
   98 F082  DD 7E 0B    	LD	A,(IX+11)	; Register A regenerieren
   99 F085  C5          	PUSH	BC
  100 F086  C9          	RET			; wie JP (BC)
  101                   ;
  102                   ; IRM ausschalten und Stack auf IY setzen
  103                   ; VR:	BC
  104                   ;
  105 F087  C1          IRMOF:	POP	BC		; analog IRMON
  106 F088  DD 77 0B    	LD	(IX+11),A	; Inhalt von Register A merken
  107 F08B  DB 88       	IN	A,(PIOAD)
  108 F08D  CB 97       	RES	2,A		; IRM+LED aus
  109 F08F  CB AF       	RES	5,A		; (F unveraendert)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 141
CF48    INC

  110 F091  F3          	DI
  111 F092  D3 88       	OUT	(PIOAD),A
  112 F094  FD F9       	LD	SP,IY		; gemerkten Anwender-SP regenerieren
  113 F096  FB          	EI
  114 F097  DD 7E 0B    	LD	A,(IX+11)	; Register A regenerieren
  115 F09A  FD E1       	POP	IY		; Inhalt von IY von Anwenderstack holen
  116 F09C  C5          	PUSH	BC
  117 F09D  C9          	RET
  118                   
  119                   ; Relativer UP-Aufruf ohne Registerzerstoerung:
  120                   
  121 F09E  E3          RCALL:	EX	(SP),HL
  122 F09F  D5          	PUSH	DE
  123 F0A0  5E          	LD	E,(HL)
  124 F0A1  23          	INC	HL
  125 F0A2  56          	LD	D,(HL)		; DE=Offset
  126 F0A3  23          	INC	HL
  127 F0A4  EB          	EX	DE,HL
  128 F0A5  19          	ADD	HL,DE		; addieren
  129 F0A6  E3          	EX	(SP),HL		; Zieladresse
  130 F0A7  EB          	EX	DE,HL		; DE von Stack
  131 F0A8  F3          	DI
  132 F0A9  33          	INC	SP
  133 F0AA  33          	INC	SP
  134 F0AB  E3          	EX	(SP),HL		; HL von Stack
  135 F0AC  3B          	DEC	SP
  136 F0AD  3B          	DEC	SP
  137 F0AE  FB          	EI
  138 F0AF  C9          	RET			; Ziel anspringen
  139                   
  140                   ;BNROST: LD	A,(IX+2)	; Blocknummer
  141 F0B0  CD F3A9     AHOSTR:	CALL	AHEX		; Register A und folgende Zeichenkette
  142                   ;_____________________________________________________________
  143                   ;							**23**
  144                   ; Ausgabe einer Zeichenkette
  145                   ; Zeichektette hinter dem CALL, Ende mit 00h
  146                   ; PE/PA: -
  147                   ; VR:	AF
  148                   
  149 F0B3  E3          OSTR:	EX	(SP),HL
  150 F0B4  CD F8EA     	CALL	ZKOUT		; Zeichenkette ausgeben
  151 F0B7  E3          	EX	(SP),HL
  152 F0B8  C9          	RET
  153                   
  154                   ; Module listen, lesen, schalten:
  155                   
  156 F0B9  7F7F        SWI7F:	DW	7F7FH
  157 F0BB  53 57 49 54 	DB	'SWITCH'
  158 F0C1  01          	DB	1
  159 F0C2  A7          	AND	A		; Argumente?
  160 F0C3  01 C346     	LD	BC,SWIC		; Module lesen/schalten
  161 F0C6  20 1F       	JR	NZ,JROMC2	; im ROM-C ausfuehren
  162                   
  163                   ; Module auflisten
  164 F0C8  CD F0D3     	CALL	ESC6		; interne Module listen
  165                   	;
  166 F0CB  CD FB95     ESC5:	CALL	CON
  167 F0CE  CD C294     	CALL	MODULC		; externe Module listen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 142
CF48    INC

  168 F0D1  18 06       	JR	ESC61
  169                   
  170                   ;SYS7F:	DW	7F7FH		; Dieses Menuewort ist ab CAOS 4.6 nicht
  171                   ;	DB	'SYSTEM'	; mehr erforderlich - macht SWITCH mit!
  172                   ;	DB	11H
  173 F0D3  CD FB95     ESC6:	CALL	CON
  174 F0D6  CD C1BD     	CALL	SYSTC		; Systemcheck (interne Module 0-5)
  175 F0D9  ED 5B B7A0  ESC61:	LD	DE,(CURSO)	; aktuelle Cursorposition mitnehmen
  176 F0DD  C3 FB84     MCOFF:	JP	COFF
  177                   
  178                   ; Module lesen und Schalten
  179 F0E0  2E 02       MODUL2:	LD	L,2		; 2=USER-ROM
  180 F0E2  3E 02       MODUSW:	LD	A,2		; Modul schalten
  181                   ;_____________________________________________________________
  182                   ;							**26**
  183                   ; Module lesen und Schalten
  184                   ; PE:	A=0 oder 1	Lesen
  185                   ;	A=2 oder >2	Schalten
  186                   ;	L	Steckplatz
  187                   ;	D	Steuerbyte
  188                   ; PA:	H	Modultyp (Strukturbyte)
  189                   ;	D	Modulsteuerbyte
  190                   ; VR:	AF,H,BC
  191                   
  192 F0E4  01 C3AF     MODU:	LD	BC,MODUC
  193 F0E7  C3 FB81     JROMC2:	JP	CLROMC		; im ROM-C ausfuehren
  194                   
  195 F0EA  CD FB95     ESCD:	CALL	CON
  196 F0ED  CD D624     	CALL	ESCDD		; DEVICE-Umschaltung
  197 F0F0  18 E7       	JR	ESC61
  198                   
  199 F0F2  CD FB95     ESCH:	CALL	CON
  200 F0F5  CD D979     	CALL	HELP		; alle erreichbaren Menueworte auflisten
  201 F0F8  ED 5B B7A0  	LD	DE,(CURSO)	; aktuelle Cursorposition
  202 F0FC  1E 00       	LD	E,0		; jedoch Spalte 0 setzen
  203 F0FE  18 DD       	JR	MCOFF
  204                   
  205                   ; Betriebssystem wechseln:
  206                   
  207 F100  7F7F        JUMP7F:	DW	7F7FH
  208 F102  4A 55 4D 50 	DB	'JUMP'
  209 F106  03          	DB	3
  210 F107  7D          	LD	A,L		; Steckplatz
  211                   ;_____________________________________________________________
  212                   ;							**27**
  213                   ; Sprung in ein neues Betriebssystem
  214                   ; PE:	A	Modulsteckplatz 8-FF
  215                   ;		oder CAOS-ROM-Ebene 0-7
  216                   
  217         0001      if SYSROM
  218                   ;
  219                   ; 13.06.2021:
  220                   ; JUMP-Erweiterung: Wechsel der 8 CAOS-System-Ebenen
  221                   ; JUMP 0 bis JUMP 7 springt in die verschiedenen Systeme
  222                   ;
  223 F108  FE 08       JUMP:	CP	8		; externes Modul ab Steckplatz 8?
  224 F10A  DC FB95     	CALL	C,CON		; bei JUMP 0-7: ROM-C einschalten
  225 F10D  DA C64A     	JP	C,JUMPC		; und weiter zu JUMP-Erweiterung im ROM-C
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 143
CF48    INC

  226                   else
  229                   endif
  230 F110  47          	LD	B,A
  231 F111  0E 80       	LD	C,80H
  232 F113  ED 78       	IN	A,(C)
  233 F115  3C          	INC	A		; Kennbyte FF?
  234 F116  20 13       	JR	NZ,JUM0
  235 F118  CD F0B3     	CALL	OSTR
  236 F11B  4B 65 69 6E 	DB	'Kein Modul!'
  237 F126  07 0D 0A 00 	DB	7,CR,LF,0
  238 F12A  C9          	RET
  239                   	;
  240 F12B  C5          JUM0:	PUSH	BC
  241 F12C  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  242 F12E  06 07       	LD	B,7		; ab Platz 7!
  243 F130  04          JUM1:	INC	B
  244 F131  28 0D       	JR	Z,JUM2		; bis FF
  245 F133  ED 78       	IN	A,(C)
  246 F135  2F          	CPL
  247 F136  E6 70       	AND	70H		; Speichermodul?
  248 F138  20 F6       	JR	NZ,JUM1
  249 F13A  ED 79       	OUT	(C),A		; aus
  250 F13C  68          	LD	L,B
  251 F13D  77          	LD	(HL),A
  252 F13E  18 F0       	JR	JUM1
  253                   	;
  254 F140  C1          JUM2:	POP	BC
  255 F141  3E FF       	LD	A,0FFH		; Ausgabe FF (Adresse C000)
  256 F143  68          	LD	L,B
  257 F144  77          	LD	(HL),A		; Eintrag
  258 F145  F3          	DI
  259 F146  ED 79       	OUT	(C),A		; einschalten
  260 F148  DB 88       	IN	A,(PIOAD)
  261 F14A  E6 7E       	AND	01111110b	; interne ROMs abschalten
  262 F14C  C3 B7B4     	JP	NCAOS		; Sprung ueber IRM
  263                   
  264                   ; Einschalt-Initialisierung:
  265                   
  266 F14F  3E E3       PWRON:	LD	A,0E3H		; RAM4 WR einschalten, CAOS-Bank 0
  267 F151  D3 86       	OUT	(PORT2),A	; und CAOS-C ein
  268 F153  C3 C051     	JP	PWRONC		; Programm im ROM-C weiter abarbeiten ...
  269                   ;
  270                   ; Tasten-RESET und JUMP-Einsprung:
  271                   ;
  272 F156  31 01C4     BYE:	LD	SP,STACK	; System-Stack setzen
  273 F159  3E E3       	LD	A,0E3H		; RAM4 WR einschalten, CAOS-Bank 0
  274 F15B  D3 86       	OUT	(PORT2),A	; und CAOS-C ein
  275 F15D  CD C0A9     	CALL	SYSI		; Systeminitialisierung
  276 F160  CD CA13     PWR4:	CALL	V24INI		; M003 suchen und initialisieren
  277 F163  CD FB84     	CALL	COFF		; CAOS-C ausschalten (Standard)
  278 F166  01 0880     	LD	BC,880H		; auf Steckplatz 8
  279 F169  ED 78       	IN	A,(C)		; ROM-Modul mit Strukturbyte
  280 F16B  3D          	DEC	A		; 01 vorhanden?
  281 F16C  20 16       	JR	NZ,PWR6		; nein!
  282 F16E  DD CB 08 B6 	RES	6,(IX+8)	; Autostartmodul setzt INIT-Kommando zurueck
  283 F172  3E 41       	LD	A,41H		; 43H bis CAOS 4.6, also mit Schreibfreigabe
  284 F174  ED 79       	OUT	(C),A		; R/O einschalten auf Adresse 4000H
  285 F176  32 B808     	LD	(MODST+8),A	; Schaltzustand eintragen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 144
CF48    INC

  286 F179  DD 7E 04    	LD	A,(IX+4)
  287 F17C  E6 FC       	AND	0FCH		; internen RAM4 ausschalten
  288 F17E  CD E2A3     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  289 F181  C3 4000     	JP	4000H		; Adresse 4000h im Modul anspringen
  290                   	;
  291 F184  06 FC       PWR6:	LD	B,0FCH
  292 F186  ED 78       	IN	A,(C)
  293 F188  FE A7       	CP	0A7H		; Floppy vorhanden?
  294 F18A  20 37       	JR	NZ,PWR7		; nein
  295                   ;	OUT	(C),A		; einschalten mit Steuerbyte A7H
  296                   ; Befehl kann entfallen, da die Kopplung fuer die Treibersuche bereits ein ist!
  297 F18C  01 B3F3     	LD	BC,UROK		; 0B3F3H
  298 F18F  ED 78       	IN	A,(C)		; Betriebsart ermitteln
  299 F191  3D          	DEC	A
  300 F192  28 3B       	JR	Z,PWR8		; 1=CP/M-Betriebsart erkannt
  301 F194  FE 04       	CP	4
  302 F196  28 37       	JR	Z,PWR8		; 5=CAOS-Betriebsart erkannt
  303 F198  CD F0B3     	CALL	OSTR
  304 F19B  0C 0A       	DB	0CH,LF		; Ansonsten: Autostart mit JUMP FC
  305 F19D  41 75 74 6F 	DB	'Autostart Floppy'
  306 F1AD  0D 0A 00    	DB	CR,LF,0
  307 F1B0  06 00       	LD	B,0
  308 F1B2  CD F663     PWR5:	CALL	BRKT		; BRK-Taste gedrueckt?
  309 F1B5  38 18       	JR	C,PWR8		; ja, dann kein Autostart
  310 F1B7  10 F9       	DJNZ	PWR5		; 256-mal abfragen
  311 F1B9  3E 01       	LD	A,1
  312 F1BB  32 B781     	LD	(ARGN),A	; ein Parameter fuer JUMP FC vorgeben
  313 F1BE  3E FC       	LD	A,0FCH
  314 F1C0  CD F108     	CALL	JUMP		; Startversuch
  315                   ;	JR	PWR8
  316                   
  317                   ; neu ab CAOS 4.8: Autostart INIT (z.B. bei USB)
  318                   
  319 F1C3  CD ED6D     PWR7:	CALL	DEV		; aktuelles Device in Bit 2-4
  320 F1C6  3C          	INC	A		; Steckplatz
  321 F1C7  26 A9       	LD	H,High(DevTab)
  322 F1C9  6F          	LD	L,A
  323 F1CA  7E          	LD	A,(HL)		; Steckplatz des aktuellen Device?
  324 F1CB  FE 08       	CP	8		; externes Modul?
  325 F1CD  30 04       	JR	NC,PWR9		; ja
  326 F1CF  DD CB 08 B6 PWR8:	RES	6,(IX+8)	; Autostart (INIT) bei TAPE und DISK unterbinden
  327 F1D3  AF          PWR9:	XOR	A
  328 F1D4  32 B781     	LD	(ARGN),A	; MENU ohne Parameter ausfuehren!
  329 F1D7  18 08       	JR	MEN0
  330                   ;
  331                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  332                   ;
  333                   ; Epilogverwaltung:		(bereits in CAOS 2.5 von Frank Klemm realisiert)
  334                   ; -----------------		HEX/DEZ-Argumenta ab CAOS 4.8
  335                   ; Epiloge 0 ... 1F
  336                   ;
  337                   ; Bit:  4      3      2      1      0
  338                   ;	I      I      I	     I	    \
  339                   ;  0 = hex     -------+-------	   IRM 
  340                   ;  1 = dezimal   Anzahl der
  341                   ;	         Argumente	  on/off
  342                   ;
  343                   ; wenn Epilog 1F -> dann keine Auswer-
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 145
CF48    INC

  344                   ; tung der Argumente, DE Zeiger auf Args
  345                   ;
  346                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  347                   ;
  348                   ; Menue Display
  349                   ;
  350 F1D9  7F7F        	DW	7F7FH
  351 F1DB  4D 45 4E 55 	DB	'MENU'
  352 F1DF  01          	DB	1
  353 F1E0  E1          	POP	HL		; Stack clear
  354 F1E1  01 DA43     MEN0:	LD	BC,SHORT	; Kurzform CAOS-Titelzeile mit DEVICE anzeigen
  355 F1E4  CD FB81     	CALL	CLROMC		; im ROM-C ausfuehren
  356                   ;_____________________________________________________________
  357                   ;							**46**
  358                   ; Menue anzeigen und Uebergang zur Kommandoeingabe
  359                   ; PE:	(IX+9)	Prologbyte
  360                   ;	ARGN=1	ARG1 auswerten
  361                   ;	ARG1=0	MENU normal anzeigen
  362                   ;	ARG1=1	versteckte Menueworte mit anzeigen
  363                   ;	ARG1=2	Adressen mit anzeigen
  364                   ;	ARGN=3	versteckte Menueworte und Adressen anzeigen
  365                   ; PA/VR: -
  366                   
  367 F1E7  2A B781     MENU:	LD	HL,(ARGN)
  368 F1EA  1E 00       	LD	E,0		; Parameter zum Testen in E bereithalten
  369 F1EC  2D          	DEC	L		; ARGN=1?
  370 F1ED  20 01       	JR	NZ,MEN1		; nein, E=0 verwenden
  371 F1EF  5C          	LD	E,H		; E=ARG1
  372 F1F0  21 C000     MEN1:	LD	HL,0C000H	; Menuewortsuche immer ab C000H
  373 F1F3  4D          	LD	C,L
  374 F1F4  45          	LD	B,L		; BC=0 (Suchlaenge)
  375 F1F5  CD F4C3     MEN2:	CALL	CRLF
  376 F1F8  3E 02       MEN3:	LD	A,2		; CLLN
  377 F1FA  CD F383     	CALL	OPRCHR		; Prompt ausgeben
  378 F1FD  CD F663     	CALL	BRKT
  379 F200  38 66       	JR	C,LOOP2		; Break
  380 F202  DD 7E 09    	LD	A,(IX+9)	; Prologbyte
  381 F205  ED B1       MEN4:	CPIR
  382 F207  E2 F268     	JP	PO,LOOP2	; ausgesucht
  383 F20A  ED A1       	CPI			; 2mal nacheinander?
  384 F20C  E2 F268     	JP	PO,LOOP2	; ausgesucht
  385 F20F  20 F4       	JR	NZ,MEN4		; nicht 2mal
  386 F211  7E          MEN5:	LD	A,(HL)
  387 F212  FE 20       	CP	20h		; Epilog (0..1Fh)?
  388 F214  38 26       	JR	C,MEN8
  389 F216  CB 43       	bit	0,e		; versteckte Menueworte anzeigen?
  390 F218  28 06       	jr	z,MEN6		; nein
  391 F21A  FE 7B       	CP	'z'+1		; <= 'z'?
  392 F21C  30 DA       	JR	NC,MEN3		; groesser als 'z'
  393 F21E  18 10       	jr	MEN7
  394                   	;
  395 F220  FE 30       MEN6:	CP	'0'		; >= '0' und
  396 F222  38 D4       	JR	C,MEN3		; kleiner als '0'
  397 F224  FE 5B       	CP	'Z'+1		; <= 'Z'?
  398 F226  30 D0       	JR	NC,MEN3		; groesser als 'Z'
  399 F228  FE 41       	CP	'A'		; >= 'A' oder
  400 F22A  30 04       	JR	NC,MEN7		; groesser als 'A'
  401 F22C  FE 3B       	CP	':'+1		; <= ':'?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 146
CF48    INC

  402 F22E  30 C8       	JR	NC,MEN3		; groesser als ':'
  403 F230  CD F3BA     MEN7:	CALL	OCHR
  404 F233  ED A1       	CPI			; INC HL, DEC BC
  405 F235  EA F211     	JP	PE,MEN5		; BC>0, also weiter
  406 F238  3E 02       	LD	A,2		; CLLN
  407 F23A  18 29       	JR	LOOP1		; ausgesucht
  408                   	;
  409 F23C              MEN8:	;LD	A,(CURSO)	; aktuelle Position
  410                   	;DEC	A		; leere Menuzeile?
  411                   	;JR	Z,MEN3		; diese unterdruecken
  412 F23C  CB 4B       	bit	1,e
  413 F23E  28 B5       	jr	z,MEN2		; keine Adressen anzeigen
  414 F240  3A B79E     	ld	a,(winlg)
  415 F243  FE 0F       	cp	15		; Fensterbreite fuer Adressen ausreichend?
  416 F245  38 AE       	jr	c,MEN2		; nein, dann nicht anzeigen!
  417 F247  3E 0B       	ld	a,11
  418 F249  32 B7A0     	ld	(curso),a	; Spalte fuer Adressanzeige
  419 F24C  23          	inc	hl
  420 F24D  CD F399     	call	hlhx		; Startadresse anzeigen
  421 F250  2B          	dec	hl
  422 F251  18 A2       	JR	MEN2
  423                   ;
  424                   ; 12.12.2020: Der Schutz von BASIC-Programmen wird ab CAOS 4.8 nicht mehr
  425                   ; unterstuetzt. Das heisst, das Programm wird bei BYE nicht mehr geloescht.
  426                   ;
  427 F253              BASBYE:
  428                   ;	LD	A,(DATFLG)	; geschuetzt?
  429                   ;	AND	A
  430                   ;	JR	Z,BASB1
  431                   ;	CALL	IRMOF
  432                   ;	CALL	NEW1		; NEW
  433                   ;	CALL	IRMON
  434                   ;BASB1:
  435 F253  16 00       	LD	D,0
  436 F255  CD F0E0     	CALL	MODUL2		; BASIC-ROM abschalten
  437                   ;	JP	LOOP
  438                   ;_____________________________________________________________
  439                   ;							**12**
  440                   ; Eingabeschleife:
  441                   
  442 F258  DB 88       LOOP:	IN	A,(PIOAD)
  443 F25A  E6 DF       	AND	11011111b	; LED aus
  444 F25C  F6 04       	OR	00000100b	; IRM ein
  445 F25E  D3 88       	OUT	(PIOAD),A
  446 F260  CD FB84     	CALL	COFF
  447 F263  3E 0D       	LD	A,CR		; Zeilenanfang
  448 F265  CD F383     LOOP1:	CALL	OPRCHR		; Prompt ausgeben
  449 F268  CD F26D     LOOP2:	CALL	INPUT
  450 F26B  18 EB       	JR	LOOP
  451                   
  452                   ; Menuekommandoroutine
  453                   
  454 F26D  CD F47D     INPUT:	CALL	INLIN		; Eingabe
  455 F270  30 0A       	JR	NC,INPT1	; mit Enter abgeschlossen
  456 F272  3E 0B       	LD	A,0BH		; bei BRK
  457 F274  CD E0AC     	CALL	CRT		; Cursor hoch
  458 F277  3E 02       CRT02:	LD	A,2		; und
  459 F279  C3 E0AC     	JP	CRT		; Zeile loeschen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 147
CF48    INC

  460                   	;
  461 F27C  13          INPT1:	INC	DE		; Zeichen nach Prompt
  462 F27D  1A          	LD	A,(DE)
  463 F27E  E6 DF       	AND	0DFH		; leer?
  464 F280  C8          	RET	Z
  465 F281  3A B802     	LD	A,(MODST+2)	; Schaltzustand USER-ROM
  466 F284  32 B780     	LD	(ARGC),A	; CAOS 4.6: hier uebergeben an USER-Programme
  467 F287  06 00       	 ld	b,0		; gesamten Speicher durchsuchen
  468 F289  CD F332     	 call	ms1		; ab C000H
  469 F28C  38 3A       	JR	C,INPT5		; gefunden
  470 F28E  21 B805     	 ld	hl,modst+5
  471 F291  CB 46       	 bit	0,(hl)
  472 F293  20 08       	JR	NZ,INPT2	; CAOS-C war bereits an
  473 F295  CD FB95     	CALL	CON
  474 F298  CD F330     	 call	msuch		; durchsuchen im CAOS-ROM-C
  475 F29B  38 2B       	JR	C,INPT5		; gefunden
  476 F29D  D5          INPT2:	PUSH	DE		; Suchkette
  477 F29E  16 D1       	LD	D,0D1H		; 1. Ebene (BASIC nicht mit durchsuchen)
  478 F2A0  CD F0E0     INPT3:	CALL	MODUL2		; USER-ROM-C Ebene ein
  479                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 F2A3  DD CB 04    	 DB	0DDh,0CBh,4
    2 F2A6  BF          	 DB	7 SHL 3 OR 10000111b
  480 F2A7  D3 86       	OUT	(PORT2),A	; CAOS-ROM-C aus!
  481 F2A9  EB          	EX	DE,HL
  482 F2AA  E3          	EX	(SP),HL		; DE=Suchkette, (SP)=SWITCH-Ebene
  483 F2AB  EB          	EX	DE,HL
  484 F2AC  CD F330     	 call	msuch		; Menuewort in USER-ROM suchen
  485 F2AF  E3          	 ex	(sp),hl		; (SP)=Ende+1 der gefundenen Kette
  486 F2B0  38 10       	JR	C,INPT4		; gefunden
  487 F2B2  06 10       	LD	B,10H		; Offset zur naechsten Ebene: C1, D1, E1, F1
  488 F2B4  09          	 add	hl,bc		; naechste Ebene berechnen (C ist 0)
  489 F2B5  EB          	 ex	de,hl		; DE=Schaltzustand
  490 F2B6  E3          	 ex	(sp),hl		; (SP)=Suchkette		
  491 F2B7  30 E7       	JR	NC,INPT3	; naechste Ebene
  492 F2B9  ED 5B B77F  	LD	DE,(ARGC-1)	; CAOS 4.6: D = USERC-Schaltzustand vor Suche
  493 F2BD  CD F0E0     	CALL	MODUL2		; USER-ROMC wie zuvor
  494 F2C0  18 2E       	JR	ERR1		; invalid command
  495                   	;
  496 F2C2  21 B805     INPT4:	 ld	hl,modst+5
  497                   ;	 ld	(hl),0		; CAOS-C ausschalten
  498 F2C5  CB 86       	 res	0,(hl)		; CAOS-C ausschalten
  499 F2C7  E1          	 pop	hl
  500 F2C8  23          INPT5:	INC	HL		; Epilogbyte uebergehen
  501 F2C9  E5          	PUSH	HL		; Startadresse
  502 F2CA  FE 1F       	CP	1FH		; Textparameter?
  503 F2CC  C8          	RET	Z		; ohne arg zu erfassen!
  504 F2CD  F5          	PUSH	AF		; Epilogbyte
  505 F2CE  0E 10       	LD	C,16		; Zahlenbasis hexadezimal
  506 F2D0  E6 10       	AND	10h		; Dezimal-Argumente?
  507 F2D2  28 02       	JR	Z,INPT6
  508 F2D4  0E 0A       	LD	C,10		; Zahlenbasis dezimal
  509 F2D6  CD F511     INPT6:	CALL	GARGC		; bis zu 10 Argumente erfassen
  510 F2D9  C1          	POP	BC		; B=Epilogbyte
  511 F2DA  38 32       	JR	C,ERR4		; bad args
  512 F2DC  3A B781     	LD	A,(ARGN)	; Anzahl Argumente
  513 F2DF  48          	LD	C,B
  514 F2E0  CB A0       	RES	4,B		; Bit fuer Zahlenbasis ausblenden
  515 F2E2  CB 28       	SRA	B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 148
CF48    INC

  516 F2E4  B8          	CP	B
  517 F2E5  38 19       	JR	C,ERR3		; zu wenig arg
  518 F2E7  CB 41       	BIT	0,C
  519 F2E9  CD F5F3     	CALL	LARG		; Arg's laden
  520 F2EC  C0          	RET	NZ		; mit IRM on
  521 F2ED  C3 E047     	JP	SCROFF		; mit IRM off
  522                   
  523 F2F0  CD F0B3     ERR1:	CALL	OSTR
  524 F2F3  4B 6F 6D 6D 	DB	'Kommando?',7,0
  525 F2FE  18 2C       	JR	ERRCR
  526                   	;
  527 F300  CD F0B3     ERR3:	CALL	OSTR
  528 F303  5A 75 20 77 	DB	'Zu wenig',0
  529 F30C  18 0F       	JR	ERRA
  530                   	;
  531 F30E  CD F0B3     ERR4:	CALL	OSTR
  532 F311  46 65 68 6C 	DB	'Fehlerhafte',0
  533 F31D  CD F0B3     ERRA:	CALL	OSTR
  534 F320  20 41 72 67 	DB	' Argumente',7,0
  535 F32C  E1          ERRCR:	 pop	hl		; Stack clear
  536 F32D  C3 F4C3     	JP	CRLF
  537                   
  538 F330  06 20       MSUCH:	 ld	b,20h		; 2000h Bytes
  539 F332  21 C000     MS1:	LD	HL,0C000H	; Standard-Suchbeginn
  540 F335  4D          ZS0:	LD	C,L		; C=0
  541 F336  DD 7E 09    	LD	A,(IX+9)	; aktuelles Prologbyte
  542                   ;_____________________________________________________________
  543                   ;							**1D**
  544                   ; Zeichenkette/Menuewort suchen
  545                   ; PE:	A	Prologbyte (bei CAOS: 7FH)
  546                   ;	BC	Laege des Suchbereiches
  547                   ;	DE	Anfang der Vergleichskette (Ende mit 0-20h)
  548                   ;	HL	Anfang des Suchbereichs
  549                   ; PA:	DE	Ende+1 Vergleichskette (wenn gefunden)
  550                   ;	HL	Ende+1 gefundene Kette
  551                   ;	CY=1	Kette gefunden
  552                    ;	 dann  A=Epilogbyte 
  553                    ;	       BC=Anfang der Vergleichskette
  554                    ;	 sonst A=Prologbyte
  555                    ;	       BC=0
  556                    ;	       DE=Anfang der Vergleichskette
  557                   ; VR:	AF,BC,DE,HL
  558                   
  559 F339  A7          ZSUCH:	 and	a		; CY=0
  560 F33A  ED B1       	CPIR			; (CY wird nicht veraendert)
  561 F33C  E0          	RET	PO		; Prolog nicht gefunden
  562 F33D  ED A1       	CPI
  563 F33F  20 F8       	JR	NZ,ZSUCH	; nur 1x gefunden
  564 F341  D5          	 push	de		; Beginn der Vergleichskette retten
  565 F342  F5          	 push	af		; Prologbyte
  566 F343  1A          ZS1:	LD	A,(DE)		; Zeichen von Vergleichskette
  567 F344  13          	INC	DE
  568 F345  FE 21       	CP	21H
  569 F347  38 0D       	JR	C,ZS3		; Kettenende bei Vergleichskette erkannt
  570 F349  CB 6E       	BIT	5,(HL)		; Grossbuchstabe im Speicher?
  571 F34B  CC F538     	CALL	Z,UPCASE	; dann Zeichen von Vergleichskette upcasen
  572 F34E  ED A1       	CPI
  573 F350  28 F1       	JR	Z,ZS1		; stimmt ueberein
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 149
CF48    INC

  574 F352  F1          ZS2:	 pop	af		; verwendetes Prologbyte restaurieren
  575 F353  D1          	 pop	de		; und wieder zu Beginn der Vergleichskette
  576 F354  18 E3       	JR	ZSUCH		; Suche fortsetzen
  577                   	;
  578 F356  7E          ZS3:	LD	A,(HL)		; Zeichen aus Speicher weiter testen
  579 F357  FE 20       	CP	20H		; bis Epilogbyte (0..1Fh) kommt
  580 F359  38 08       	JR	C,ZS4		; Epilog gefunden
  581                   ;	JR	Z,ZS2		; SPC (war in CAOS 4.3 und 4.4 nicht zugelassen)
  582 F35B  FE 80       	CP	80H
  583 F35D  30 F3       	JR	NC,ZS2		; Zeichen ab 80H nicht zugelassen
  584 F35F  23          	INC	HL
  585 F360  0B          	DEC	BC		; Befehl am 11.04.2010 ergaenzt
  586 F361  18 F3       	JR	ZS3
  587                   	;
  588 F363  C1          ZS4:	 pop	bc
  589 F364  C1          	 pop	bc		; Anfang der Vergleichskette
  590 F365  C9          	 ret			; CY ist 1 vom CP 20H
  591                   ;_____________________________________________________________
  592                   ;							**13**
  593                   ; Normalein- und Ausgabe: CRT und KBD
  594                   ; PE:	-
  595                   ; PA:	HL	alter Ausgabezeiger
  596                   ; VR:	HL
  597                   
  598 F366  CD F376     NORM:	CALL	NIN		; Normaleingabe
  599                   ;_____________________________________________________________
  600                   ;							**20**
  601                   ; Setzen eines neuen Output Kanals
  602                   
  603 F369  21 F020     NOUT:	LD	HL,OUTT1
  604                   ;_____________________________________________________________
  605                   ;							**1E**
  606 F36C  E5          SOUT:	PUSH	HL
  607 F36D  2A B7B9     	LD	HL,(OUTAB)	; bisheriger Zeiger
  608 F370  E3          	EX	(SP),HL
  609 F371  22 B7B9     	LD	(OUTAB),HL	; neuer Zeiger
  610 F374  E1          	POP	HL
  611 F375  C9          	RET
  612                   ;_____________________________________________________________
  613                   ;							**21**
  614                   ; Setzen eines neuen Input Kanals
  615                   
  616 F376  21 F017     NIN:	LD	HL,INTT1
  617                   ;_____________________________________________________________
  618                   ;							**1F**
  619 F379  E5          SIN:	PUSH	HL
  620 F37A  2A B7BB     	LD	HL,(INTAB)	; bisheriger Zeiger
  621 F37D  E3          	EX	(SP),HL
  622 F37E  22 B7BB     	LD	(INTAB),HL	; neuer Zeiger
  623 F381  E1          	POP	HL
  624 F382  C9          	RET
  625                   
  626                   ; Steuerzeichen und Prompt ausgeben
  627                   ; PE: A=Steuerzeichen
  628 F383  CD E0AC     OPRCHR:	CALL	CRT
  629 F386  3A B7EC     	LD	A,(PROMPT)
  630 F389  FE 20       	CP	' '
  631 F38B  30 2D       	JR	NC,OCHR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 150
CF48    INC

  632 F38D  3E 25       	LD	A,'%'		; Standard
  633 F38F  18 29       	JR	OCHR		; Prompt
  634                   ;_____________________________________________________________
  635                   ;							**1B**
  636                   ; Zwei 16-Bit-Werte hexadezimal anzeigen und
  637                   ; ein Leerzeichen danach
  638                   ; VR:	AF
  639 F391  CD F394     HLDE:	CALL	HLDE1		; 1x aufrufen, dann reinlaufen
  640 F394  CD F399     HLDE1:	CALL	HLHX		; HL anzeigen
  641 F397  EB          	EX	DE,HL		; HL <-> DE tauschen
  642 F398  C9          	RET
  643                   ;_____________________________________________________________
  644                   ;							**1A**
  645                   ; 16-Bit-Wert hexadezimal anzeigen und ein Leerzeichen danach
  646                   ; VR:	AF
  647 F399  7C          HLHX:	LD	A,H
  648 F39A  CD F3A9     	CALL	AHEX
  649 F39D  7D          ALSPC:	LD	A,L
  650 F39E  CD F3A9     AHSPC:	CALL	AHEX
  651                   ;_____________________________________________________________
  652                   ;							**2B**
  653                   ; Leerzeichen anzeigen
  654                   ; VR:	AF
  655 F3A1  3E 20       SPACE:	LD	A,' '		; Leerzeichen
  656 F3A3  18 15       	JR	OCHR
  657                   ;_____________________________________________________________
  658                   ;							**2D**
  659                   ; Cursor in Home-Position
  660                   ; VR:	AF
  661 F3A5  3E 10       HOME:	LD	A,10H		; Home-Code
  662 F3A7  18 11       	JR	OCHR
  663                   ;_____________________________________________________________
  664                   ;							**1C**
  665                   ; 8-Bit-Wert hexadezimal anzeigen
  666                   ; VR:	AF
  667 F3A9  F5          AHEX:	PUSH	AF
  668 F3AA  0F          	RRCA			; Tetradentausch
  669 F3AB  0F          	RRCA
  670 F3AC  0F          	RRCA
  671 F3AD  0F          	RRCA
  672 F3AE  CD F3B2     	CALL	AHEX0		; erst aufrufen,
  673 F3B1  F1          	POP	AF		; dann reinlaufen
  674 F3B2  E6 0F       AHEX0:	AND	0FH		; Maske
  675 F3B4  C6 90       	ADD	A,90H		; uebliche
  676 F3B6  27          	DAA			; Routine
  677 F3B7  CE 40       	ADC	A,40H		; fuer die
  678 F3B9  27          	DAA			; Hexausgabe
  679                   ;_____________________________________________________________
  680                   ;							**24**
  681                   ; Ausgabe eines Zeichens ueber def. Kanal
  682                   ; VR:	AF
  683 F3BA  E5          OCHR:	PUSH	HL
  684 F3BB  2A B7B9     	LD	HL,(OUTAB)	; Ausgabekanal
  685 F3BE  D5          INTA1:	PUSH	DE		; siehe auch PV1 (sehr aehnlich)
  686 F3BF  C5          	PUSH	BC
  687 F3C0  5E          	LD	E,(HL)		; UP-Nr. der Routine
  688 F3C1  16 00       	LD	D,0
  689 F3C3  2A B7B0     	LD	HL,(SUTAB)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 151
CF48    INC

  690 F3C6  F5          	PUSH	AF
  691 F3C7  19          	ADD	HL,DE
  692 F3C8  19          	ADD	HL,DE
  693 F3C9  F1          	POP	AF
  694 F3CA  5E          	LD	E,(HL)
  695 F3CB  23          	INC	HL
  696 F3CC  56          	LD	D,(HL)		; DE = Adresse der Routine
  697 F3CD  EB          	EX	DE,HL
  698                   	; hier CAOS-C ausschalten
  699 F3CE  CD E1D6     	CALL	JPHL		; Routine aufrufen
  700                   	; hier CAOS-C wieder einschalten wie er war
  701 F3D1  C3 E0B8     POP31:	JP	POP3		; auch fuer PV2 bis PV6!
  702                   ;_____________________________________________________________
  703                   ;							**16**
  704                   ; Eingabe eines Zeichens ueber def. Kanal
  705                   ;
  706 F3D4  E5          INTB:	PUSH	HL
  707 F3D5  2A B7BB     	LD	HL,(INTAB)	; Eingabekanal
  708 F3D8  18 E4       	JR	INTA1
  709                   ;_____________________________________________________________
  710                   ;							**04**
  711                   ; Eingabe eines Zeichens mit Cursoreinblendung
  712                   ;
  713 F3DA  E5          KBD:	PUSH	HL
  714 F3DB  D5          	PUSH	DE
  715 F3DC  C5          	PUSH	BC
  716 F3DD  DD CB 08 76 KBD1:	BIT	6,(IX+8)	; F-Taste aktiv?
  717 F3E1  20 60       	JR	NZ,KBD9		; ja
  718 F3E3  1E 00       KBD2:	LD	E,0
  719 F3E5  CD F039     KBD3:	CALL	PV1
  720 F3E8  25          	DB	25h		; CUCP - blinken
  721 F3E9  1C          	INC	E		; e/a-Merker
  722 F3EA  06 0F       	LD	B,15		; F00h mal
  723 F3EC  CD E388     KBD4:	CALL	KBDZ		; abfragen
  724 F3EF  38 07       	JR	C,KBD5
  725 F3F1  0B          	DEC	BC
  726 F3F2  78          	LD	A,B
  727 F3F3  B1          	OR	C
  728 F3F4  20 F6       	JR	NZ,KBD4		; warten,
  729 F3F6  18 ED       	JR	KBD3		; dann Cursor wieder weg usw.
  730                   	;
  731 F3F8  CB 43       KBD5:	BIT	0,E		; gerade ein?
  732 F3FA  28 04       	JR	Z,KBD5a
  733 F3FC  CD F039     	CALL	PV1		; Cursor wegnehmen
  734 F3FF  25          	DB	25h		; CUCP
  735 F400  57          KBD5a:	LD	D,A
  736 F401  DD CB 08 6E 	BIT	5,(IX+8)	; Click ein?
  737 F405  C4 E2C6     	CALL	NZ,CLIK		; Click-Ton erzeugen
  738 F408  7A          	LD	A,D
  739 F409  21 B7A2     	LD	HL,STBT
  740 F40C  CB 66       	BIT	4,(HL)		; ESC aktiv?
  741 F40E  28 0D       	JR	Z,KBD6
  742 F410  ED 5B B7A0  	LD	DE,(CURSO)
  743 F414  CD E1A1     	CALL	CRT1		; ESC ausfuehren
  744 F417  ED 53 B7A0  	LD	(CURSO),DE
  745 F41B  18 C6       	JR	KBD2
  746                   	;
  747 F41D  FE 1B       KBD6:	CP	ESC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 152
CF48    INC

  748 F41F  20 04       	JR	NZ,KBD7
  749 F421  CB E6       	SET	4,(HL)		; ESC merken
  750 F423  18 BE       KBD2J:	JR	KBD2
  751                   	;
  752 F425  FE F1       KBD7:	CP	0F1H		; F-Taste?
  753 F427  38 A8       	JR	C,POP31
  754 F429  E6 0F       	AND	0FH
  755 F42B  47          	LD	B,A
  756 F42C  21 B900     	LD	HL,FTASTE	; 0B900H
  757 F42F  7E          KBD8:	LD	A,(HL)
  758 F430  2C          	INC	L
  759 F431  28 B0       	JR	Z,KBD2		; Speicherende
  760 F433  A7          	AND	A
  761 F434  20 F9       	JR	NZ,KBD8		; Position im Puffer
  762 F436  10 F7       	DJNZ	KBD8		; auszaehlen
  763 F438  7D          	LD	A,L
  764 F439  FE 9C       	CP	9CH
  765 F43B  30 A6       	JR	NC,KBD2		; Speicherende
  766 F43D  DD CB 08 F6 	SET	6,(IX+8)	; F-Taste aktiv
  767 F441  18 08       	JR	KBD10
  768                   	;
  769 F443  CD F663     KBD9:	CALL	BRKT		; Abbruch?
  770 F446  38 1A       	JR	C,KBD12
  771 F448  2A B7D1     	LD	HL,(FTAST)	; Zeiger auf
  772 F44B  7E          KBD10:	LD	A,(HL)		; naechstes CHR
  773 F44C  FE 1B       	CP	ESC
  774 F44E  20 0B       	JR	NZ,KBD11
  775 F450  23          	INC	HL
  776 F451  22 B7D1     	LD	(FTAST),HL
  777 F454  21 B7A2     	LD	HL,STBT
  778 F457  CB E6       	SET	4,(HL)		; ESC merken
  779 F459  18 82       KBD1J:	JR	KBD1
  780                   	;
  781 F45B  23          KBD11:	INC	HL
  782 F45C  22 B7D1     	LD	(FTAST),HL	; Zeiger retten
  783 F45F  A7          	AND	A		; NUL-Ende?
  784 F460  20 06       	JR	NZ,KBD13
  785 F462  DD CB 08 B6 KBD12:	RES	6,(IX+8)	; ja - inaktiv
  786 F466  18 BB       	JR	KBD2J
  787                   	;
  788 F468  21 B7A2     KBD13:	LD	HL,STBT
  789 F46B  CB 66       	BIT	4,(HL)		; ESC aktiv?
  790 F46D  CA F3D1     	JP	Z,POP31
  791 F470  ED 5B B7A0  	LD	DE,(CURSO)
  792 F474  CD E1A1     	CALL	CRT1		; ESC ausfuehren
  793 F477  ED 53 B7A0  	LD	(CURSO),DE
  794 F47B  18 DC       	JR	KBD1J
  795                   ;_____________________________________________________________
  796                   ;							**17**
  797                   ; Eingabe einer Zeile mit Funktion aller Cursortasten,
  798                   ; Abschluss mit <ENTER> oder Abbruch <BRK>
  799                   ; Cursor danach am Anfang der naechsten Zeile
  800                   ;
  801                   ; PA:	CY=0	Eingabe mit Enter beendet (ab CAOS 4.3)
  802                   ;	CY=1	Eingabe mit BRK beendet (ab CAOS 4.3)
  803                   ;	DE	VRAM-Adresse auf Beginn der Eingabezeile
  804                   ; VR:	AF, DE
  805                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 153
CF48    INC

  806 F47D  CD F3D4     INLIN:	CALL	INTB
  807 F480  CD F3BA     	CALL	OCHR
  808 F483  FE 03       	CP	3		; BRK?
  809 F485  37          	SCF
  810 F486  28 04       	JR	Z,INLI1
  811 F488  FE 0D       	CP	CR		; ENTER?
  812 F48A  20 F1       	JR	NZ,INLIN
  813 F48C  F5          INLI1:	PUSH	AF		; CY=1 bei BRK, CY=0 bei Enter
  814 F48D  CD F4C3     	CALL	CRLF		; Cursor an Anfang der naechsten Zeile (PA: A=0)
  815 F490  ED 5B B7A0  	LD	DE,(CURSO)
  816 F494  BA          	CP	D		; Zeile 1 durch PAGE-Mode?
  817 F495  20 04       	JR	NZ,INLI2
  818 F497  3A B79F     	LD	A,(WINLG+1)	; Anzahl Zeilen
  819 F49A  57          	LD	D,A		; D muss dann in letzte Zeile zeigen
  820 F49B  15          INLI2:	DEC	D		; Zeile darueber
  821 F49C  E5          	PUSH	HL		; HL sichern
  822 F49D  CD E087     	CALL	DABR		; VRAM-Adresse ermitteln
  823 F4A0  EB          	EX	DE,HL		; VRAM-Adresse in DE zurueckgeben
  824 F4A1  E1          	POP	HL		; HL unveraendert
  825 F4A2  F1          	POP	AF		; PA: CY=BRK
  826 F4A3  C9          NOOP:	RET
  827                   ;
  828                   ; Sprung zu einer Adresse mit Registeruebergabe
  829                   ; Syntax: %go ADR [HL [DE [BC [A] ] ] ]
  830                   ;
  831 F4A4  7F7F        GO7F:	DW	7F7FH
  832 F4A6  47 4F 20    	DB	'GO '
  833 F4A9  03          	DB	3		; mindestens 1 Argument erforderlich
  834 F4AA  AF          	XOR	A
  835 F4AB  32 B781     	LD	(ARGN),A
  836                   ; alter Code, 4 Byte lang:
  837                   ;	PUSH	HL		; Adresse auf den Stack
  838                   ;	EX	DE,HL		; ARG2 von DE nach HL
  839                   ;	LD	D,B
  840                   ;	LD	E,C		; ARG3 von BC nach DE
  841                   ; 28.10.2022: neuer Code von ZM.ASM uebernommen, 3 Byte lang
  842                   ; BC(Arg3) => DE(Arg2) => HL(Arg1) => Stack
  843 F4AE  C5          	PUSH	BC		; (SP)=(ARG3)
  844 F4AF  E3          	EX	(SP),HL		; Stack = (ARG1), HL=(ARG3)
  845 F4B0  EB          	EX	DE,HL		; DE = (ARG3), HL=(ARG2)
  846 F4B1  ED 4B B788  	LD	BC,(ARG4)	; BC = (ARG4)
  847 F4B5  3A B78A     	LD	A,(ARG5)	; A = (ARG5)
  848 F4B8  C9          	RET			; JMP (ARG1)
  849                   ;_____________________________________________________________
  850                   ;							**19**
  851                   ; ERROR anzeigen
  852                   
  853 F4B9  CD F0B3     ERRM:	CALL	OSTR
  854 F4BC  45 52 52 4F 	DB	'ERROR',7,0
  855                   ;_____________________________________________________________
  856                   ;							**2C**
  857                   ; Neue Zeile mit CR,LF
  858                   ; PA:	A=0
  859                   ; VR:	AF
  860                   ;
  861 F4C3  CD F0B3     CRLF:	CALL	OSTR
  862 F4C6  0D 0A 00    	DB	CR,LF,0
  863 F4C9  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 154
CF48    INC

  864                   ;_____________________________________________________________
  865                   ;							**18**
  866                   ; Erfassung einer eingegebenen Hex-Zahl
  867                   ; PE:	DE	Zeichenkette
  868                   ; PA:	DE	Ende der Zeichenkette
  869                   ;	(NUMNX)	Laenge der Zeichenkette
  870                   ;	(NUMVX)	umgewandelte Zahl
  871                   ;	HL=NUMNX
  872                   ;	CY=1	Fehler
  873                   ; VR:	AF, DE, HL
  874                   ;
  875 F4CA  C5          RHEX:	PUSH	BC		; RHEX darf BC nicht veraendern
  876 F4CB  0E 10       	LD	C,16		; Hexadezimalzahlen
  877 F4CD  CD F4D6     	CALL	RZAHL
  878 F4D0  C1          	POP	BC
  879 F4D1  C9          	RET
  880                   ;_____________________________________________________________
  881                   ;							**4B**
  882                   ; Erfassung einer eingegebenen Dezimal-Zahl
  883                   ; PE:	DE	Zeichenkette
  884                   ; PA:	DE	Ende der Zeichenkette
  885                   ;	(NUMNX)	Laenge der Zeichenkette
  886                   ;	(NUMVX)	umgewandelte Zahl
  887                   ;	HL=NUMNX
  888                   ;	CY=1	Fehler
  889                   ; VR:	AF, C, DE, HL
  890                   ;
  891 F4D2  0E 0A       RDEZ:	LD	C,10		; Dezimalzahlen
  892 F4D4  1B          	DEC	DE	; (anstelle von JR RZAHL)
  893                   
  894                   ; Erfassung einer eingegebenen Dez- oder Hex-Zahl
  895                   ; PE:	DE	Adresse Zeichenkette (im VRAM)
  896                   ;	C	Zahlenbasis (2..32)
  897                   ; PA:	(NUMNX)	Anzahl der HEX-Zeichen (0-4)
  898                   ;	(NUMVX)	Wert der erfassten Zahl
  899                   ;	HL=NUMNX
  900                   ;	CY=1	Fehler
  901                   ; VR:	AF, C, DE, HL
  902                   ;
  903 F4D5  13          RHX0:	INC	DE
  904 F4D6  1A          RZAHL:	LD	A,(DE)
  905 F4D7  FE 20       	CP	' '		; Trennzeichen
  906 F4D9  28 FA       	JR	Z,RHX0		; uebergehen
  907 F4DB  AF          	XOR	A
  908 F4DC  21 B798     	LD	HL,NUMVX+1
  909 F4DF  77          	LD	(HL),A
  910 F4E0  2B          	DEC	HL		; HL=NUMVX
  911 F4E1  77          	LD	(HL),A
  912 F4E2  2B          	DEC	HL		; HL=NUMNX
  913 F4E3  77          	LD	(HL),A		; alles auf 0 setzen
  914                   ; Erfassen der ASCII-Zeichen
  915 F4E4  1A          RHX1:	LD	A,(DE)
  916 F4E5  E6 DF       	AND	0DFH		; CY=0
  917 F4E7  C8          	RET	Z		; Ende-Dummy oder Space
  918 F4E8  1A          	LD	A,(DE)		;	       aus: 3A..40 41..60 61..80 81..FF
  919 F4E9  D6 30       	SUB	'0'		;	      wird: 0A..10 11..30 31..50 51..CF
  920 F4EB  D8          	RET	C		; kleiner als '0'
  921 F4EC  FE 0A       	CP	10
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 155
CF48    INC

  922 F4EE  38 06       	JR	C,RHX2		; 0..9
  923 F4F0  D6 11       	SUB	17		; HEX-Korrektur	    F9..FF 00..1F 20..3F 40..BE
  924 F4F2  E6 DF       	AND	11011111b	; klein -> gross    D9..DF 00..1F 00..1F 40..9E
  925 F4F4  C6 0A       	ADD	10		; kleiner als 'A'   E3..E9 0A..29 0A..29 4A..A8
  926 F4F6  B9          RHX2:	CP	C		; > Zahlenbasis?
  927 F4F7  3F          	CCF
  928 F4F8  D8          	RET	C
  929 F4F9  34          	INC	(HL)		; NUMNX erhoehen
  930 F4FA  23          RHX3:	INC	HL
  931 F4FB  D5          	PUSH	DE
  932 F4FC  56          	LD	D,(HL)	
  933 F4FD  CD FB9D     	CALL	MULA		;(NUMVX)*Basis + Ziffer
  934 F500  D1          	POP	DE
  935 F501  77          	LD	(HL),A
  936 F502  78          	LD	A,B		; naechste Stelle
  937 F503  CB 45       	BIT	0,L		; HL=NUMVX ?
  938 F505  20 F3       	JR	NZ,RHX3		; wiederholen
  939 F507  2B          	DEC	HL
  940 F508  2B          	DEC	HL		; HL=NUMNX
  941 F509  ED 44       	NEG			; CY=1 wenn A<>0
  942 F50B  D8          	RET	C		; Fehler: Zahl zu gross
  943 F50C  13          	INC	DE		; Zeiger auf naechstes Zeichen
  944 F50D  18 D5       	JR	RHX1
  945                   ;_____________________________________________________________
  946                   ;							**22**
  947                   ; Bis zu 10 hexadezimale Argumente erfassen
  948                   ; PE:	DE	Adresse im VRAM
  949                   ; PA:	(ARGN) und (ARG1) bis (ARG10)
  950                   ;	CY=1	Fehler
  951                   ; VR:	AF, BC, DE, HL
  952                   ;
  953 F50F  0E 10       GARG:	LD	C,16		; Zahlenbasis = hexadezimal
  954                   ;_____________________________________________________________
  955                   ;							**4C**
  956                   ; Bis zu 10 Argumente erfassen, beliebige Zahlenbasis
  957                   ; PE:	C	Zahlenbasis 10 oder 16
  958                   ;	DE	Adresse im VRAM
  959                   ; PA:	(ARGN) und (ARG1) bis (ARG10)
  960                   ;	CY=1	Fehler
  961                   ; VR:	AF, BC, DE, HL
  962                   ;
  963 F511  AF          GARGC:	XOR	A
  964 F512  32 B781     	LD	(ARGN),A	; (ARGN)=0
  965 F515  CD F4D6     GARG1:	CALL	RZAHL		; Argument erfassen
  966 F518  D8          	RET	C		; Fehler
  967 F519  7E          	LD	A,(HL)		; NUMNX lesen
  968 F51A  B7          	OR	A		; Ende erreicht?
  969 F51B  C8          	RET	Z		; fertig
  970 F51C  3A B781     	LD	A,(ARGN)
  971 F51F  3C          	INC	A		; Argumente mitzaehlen
  972 F520  FE 0B       	CP	11		; 10 Argumente?
  973 F522  3F          	CCF
  974 F523  D8          	RET	C		; zu viele Argumente
  975 F524  32 B781     	LD	(ARGN),A
  976 F527  87          	ADD	A,A		; ARGN*2
  977 F528  F6 80       	OR	LOW(ARGC)
  978 F52A  D5          	PUSH	DE
  979 F52B  5F          	LD	E,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 156
CF48    INC

  980 F52C  16 B7       	LD	D,HIGH(ARGN)
  981 F52E  23          	INC	HL
  982 F52F  ED A0       	LDI			; Low(ARGx)
  983 F531  ED A0       	LDI			; High(Argx)
  984 F533  03          	INC	BC
  985 F534  03          	INC	BC		; BC korrigieren
  986 F535  D1          	POP	DE
  987 F536  18 DD       	JR	GARG1
  988                   
  989                   ; Kleinbuchstaben in A in Grossbuchstaben umwandeln:
  990 F538  FE 61       UPCASE:	CP	'a'
  991 F53A  D8          	RET	C
  992 F53B  FE 7B       	CP	'z' + 1
  993 F53D  D0          	RET	NC
  994 F53E  E6 DF       	AND	11011111b
  995 F540  C9          	RET
  996                   
  997 F541  DD 36 05 00 KPUFF:	LD	(IX+5),LOW(CASS)
  998 F545  DD 36 06 B7 	LD	(IX+6),HIGH(CASS)
  999 F549  C9          	RET
 1000                   ;_____________________________________________________________
 1001                   ;							**43**
 1002                   ; E/A-Kanal initialisieren
 1003                   ; PE:	HL	Tabelle mit Initialisierungsdaten
 1004                   ;		1. Byte: E/A-Adresse
 1005                   ;		2. Byte: Anzahl
 1006                   ;		danach die Initialisierungsbytes
 1007                   ; VR:	F, HL
 1008                   
 1009 F54A  C5          INIEA:	PUSH	BC
 1010 F54B  4E          	LD	C,(HL)		; erstes Byte: Portadresse
 1011 F54C  23          	INC	HL
 1012 F54D  46          	LD	B,(HL)		; zweites Byte: Anzahl
 1013 F54E  23          	INC	HL
 1014 F54F  ED B3       	OTIR			; ... Bytes
 1015 F551  C1          	POP	BC
 1016 F552  C9          	RET
 1017                   ;
 1018                   ; CAOS-interne Initialisierung meherer E/A-Kanaele ohne DI/EI
 1019                   ; PE:	HL	Initialisierungsdaten mit vorangestelltem Byte fuer Anzahl
 1020                   ; PA:	D=0
 1021                   ; VR:	D, F, HL
 1022                   ;
 1023 F553  56          INIMEX:	LD	D,(HL)		; Anzahl Kanaele
 1024 F554  23          	INC	HL
 1025 F555  CD F54A     INIMX1:	CALL	INIEA
 1026 F558  15          	DEC	D
 1027 F559  20 FA       	JR	NZ,INIMX1
 1028 F55B  C9          	RET
 1029                   ;_____________________________________________________________
 1030                   ;							**44**
 1031                   ; Initialisierung mehrerer E/A-Kanaele
 1032                   ; PE:	HL	Tabelle mit Initialisierungsdaten
 1033                   ;	D	Anzahl der Kanaele
 1034                   ; VR:	F, D, HL
 1035                   
 1036 F55C  F3          INIME:	DI
 1037 F55D  CD F555     	CALL	INIMX1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 157
CF48    INC

 1038 F560  FB          	EI
 1039 F561  C9          	RET
 1040                   ;
 1041                   ; Dateiname abfragen
 1042                   ; PA:	HL	Zeiger auf den eingegebenen Namen
 1043                   ;	CY=1	mit BRK abgebrochen
 1044                   ;
 1045 F562  21 0006     NAME:	LD	HL,6
 1046 F565  CD F0B3     NAMHL:	CALL	OSTR
 1047 F568  4E 61 6D 65 	DB	'Name :',0
 1048 F56F  CD F47D     	CALL	INLIN		; Dateiname abfragen
 1049 F572  D8          	RET	C		; BRK
 1050 F573  19          	ADD	HL,DE		; Beginn Name
 1051 F574  C9          	RET
 1052                   
 1053 F575  7F7F        SAVE7F:	DW	7F7FH
 1054 F577  53 41 56 45 	DB	'SAVE'
 1055 F57B  05          	DB	5
 1056 F57C  CD F562     	CALL	NAME		; Dateiname abfragen
 1057 F57F  D8          	RET	C		; mit BRK abgebrochen
 1058                   ;_____________________________________________________________
 1059                   ;							**36**
 1060                   ; Datei speichern
 1061                   ;
 1062                   ; PE:   HL	Dateiname
 1063                   ; PA:   CY=1    Fehler oder BRK
 1064                   ; VR:	AF, BC, DE, HL
 1065                   ;
 1066 F580  CD E4D8     SAVE:	CALL	CLC		; Kassettenpuffer loeschen
 1067                   ;	LD	DE,CASS		; DE wird von CLC uebergeben
 1068 F583  E5          	PUSH	HL		; Dateiname
 1069 F584  01 000C     	LD	BC,12		; 15.06.2019: von 11 auf 12 geaendert
 1070 F587  ED B0       	LDIR			; Name in Puffer kopieren
 1071 F589  AF          	XOR	A
 1072 F58A  12          	LD	(DE),A		; Ende-0 anhaengen
 1073 F58B  21 B781     	LD	HL,ARGN		; alle Argumente inklusive ARGN
 1074 F58E  1E 10       	LD	E,10H
 1075 F590  0E 15       	LD	C,15H
 1076 F592  ED B0       	LDIR			; in den Puffer kopieren
 1077 F594  CD F541     	CALL	KPUFF		; Standard-Puffer setzen
 1078 F597  E1          	POP	HL		; Dateiname
 1079 F598  CD E4E1     	CALL	PV7		; Vorblock ausgeben
 1080 F59B  02          	DB	2		; ISRO
 1081 F59C  D8          	RET	C		; Fehler, bereits beim initialisieren
 1082 F59D  2A B784     	LD	HL,(ARG2)	; Endadresse+1
 1083 F5A0  ED 5B B782  	LD	DE,(ARG1)	; Anfangsadresse
 1084 F5A4  A7          	AND	A
 1085 F5A5  ED 52       	SBC	HL,DE		; Anzahl Datenbytes
 1086 F5A7  E5          	push	hl		; Anzahl auf Stack 
 1087 F5A8  2A B782     SAV1:	LD	HL,(ARG1)	; Adresse fuer aktuellen Block
 1088 F5AB  11 B700     	LD	DE,CASS
 1089 F5AE  01 0080     	LD	BC,128
 1090 F5B1  3A B801     	LD	A,(MODST+1)
 1091 F5B4  E6 01       	AND	1
 1092 F5B6  20 0E       	JR	NZ,SAV3		; IRM ein
 1093 F5B8  41          	LD	B,C
 1094 F5B9  CD E047     SAV2:	CALL	SCROFF
 1095 F5BC  7E          	LD	A,(HL)		; vom RAM
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 158
CF48    INC

 1096 F5BD  CD E050     	CALL	SCRON
 1097 F5C0  12          	LD	(DE),A		; in den Puffer
 1098 F5C1  23          	INC	HL
 1099 F5C2  13          	INC	DE
 1100 F5C3  10 F4       	DJNZ	SAV2
 1101 F5C5  01          	DB	01H	; LD BC,nn	ueberspringt LDIR = ED B0
 1102                   ;	JR	SAV4
 1103                   	;
 1104 F5C6  ED B0       SAV3:	LDIR			; kopieren
 1105 F5C8  22 B782     SAV4:	LD	(ARG1),HL	; Adresse fuer naechsten Block eintragen
 1106 F5CB  E1          	pop	hl		; Anzahl
 1107 F5CC  CD F638     	CALL	SUP5		; Blocknummer anzeigen
 1108 F5CF  01 00A0     	LD	BC,160		; kurzer Vorton
 1109 F5D2  38 12       	JR	C,SAV5		; BRK -> Datei schliessen
 1110 F5D4  11 0080     	ld	de,128		; Blocklaenge
 1111 F5D7  ED 52       	sbc	hl,de		; Ende erreicht?
 1112 F5D9  28 0B       	jr	z,SAV5		; ja, genau das Blockende
 1113 F5DB  3F          	CCF
 1114 F5DC  30 08       	jr	NC,SAV5		; ja, letzter Block mit weniger Bytes
 1115 F5DE  E5          	push	hl		; restliche Anzahl
 1116 F5DF  CD E4E1     	CALL	PV7		; Datenblock ausgeben
 1117 F5E2  00          	DB	0		; MBO
 1118 F5E3  30 C3       	JR	NC,SAV1		; kein Fehler
 1119 F5E5  E1          	pop	hl		; restliche Byte-Anzahl vom Stack nehmen
 1120                   	;
 1121 F5E6  F5          SAV5:   PUSH    AF              ; Fehlerstatus merken
 1122 F5E7  CD E4E1     	CALL	PV7		; Ausgabe Endeblock 0FFH
 1123 F5EA  03          	DB	3		; CSRO
 1124 F5EB  CD E4D8     	CALL	CLC		; CAOS 4.6: Puffer loeschen nicht mehr in CSRO
 1125 F5EE  CD F4C3     	CALL	CRLF		; CAOS 4.6: Zeilenvorschub nicht mehr in CSRO
 1126 F5F1  F1          	POP     AF              ; CY=1 bei Fehler
 1127 F5F2  C9          	RET
 1128                   ;_____________________________________________________________
 1129                   ;							**15**
 1130                   ; Laden der Argumente in Register
 1131                   ; PA:	HL, DE, BC, A mit Daten der Argumente
 1132                   ;
 1133 F5F3  ED 4B B786  LARG:	LD	BC,(ARG3)
 1134 F5F7  ED 5B B784  	LD	DE,(ARG2)
 1135 F5FB  2A B782     	LD	HL,(ARG1)
 1136 F5FE  3A B781     	LD	A,(ARGN)
 1137 F601  C9          	RET
 1138                   
 1139                   ; Lesen eines Blockes mit Ausschrift Blocknummer bzw. Name
 1140                   ;
 1141                   ; PE:	(IX+3)	zu lesender Block
 1142                   ; PA:	CY=1	BRK gedrueckt nach Lesefehler oder Fehler bei Device nicht TAPE
 1143                   ; VR:	AF,BC	(Block<>1) ( 00>  )
 1144                   ;	AF,BC,HL (Block=1) ( Name )
 1145                   
 1146 F602  DD 34 03    RDBLK:	INC	(IX+3)		; erwarteter Block
 1147 F605  CD E4E1     LUP1:	CALL	PV7
 1148 F608  01          	DB	1		; MBI
 1149 F609  30 1C       LUP2:	JR	NC,LUP3		; kein Fehler aufgetreten
 1150                   
 1151 F60B  CD ED6D     	CALL	DEV		; Kassette?
 1152 F60E  37          	SCF			; Fehlerflag wieder setzen
 1153 F60F  C0          	RET	NZ		; Abbruch bei Fehler wenn kein TAPE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 159
CF48    INC

 1154                   
 1155                   ; bei Kassette nach Wiederholung fragen:
 1156 F610  CD F63F     	CALL	BLERR		; fehlerhaften Block mit ? anzeigen
 1157 F613  CD F4C3     	CALL	CRLF		; neue Zeile
 1158 F616  DD 7E 03    	LD	A,(IX+3)
 1159 F619  3D          	DEC	A		; Vorblock mit Nr. 01 erwartet?
 1160 F61A  28 E9       	JR	Z,LUP1		; dann weiter versuchen...
 1161 F61C  CD F3DA     	CALL	KBD		; Tastaturabfrage
 1162 F61F  FE 03       	CP	3		; BRK?
 1163 F621  37          	SCF
 1164 F622  C8          	RET	Z
 1165 F623  FE 0A       	CP	LF		; CUD? (fehlerhaften Block uebernehmen?)
 1166 F625  20 DE       	JR	NZ,LUP1
 1167 F627  DD 7E 02    LUP3:	LD	A,(IX+2)	; gelesener Block
 1168 F62A  DD 46 03    	LD	B,(IX+3)	; zu lesender Block
 1169 F62D  B8          	CP	B		; richtige Blocknummer?
 1170 F62E  28 1B       	JR	Z,LUP4		; ja
 1171 F630  3C          	INC	A		; Block FF?
 1172 F631  28 1B       	JR	Z,LUP5		; Endeblock immer als richtig werten
 1173 F633  CD F63B     	CALL	BLNOT		; falsche Blocknummer mit * anzeigen
 1174 F636  18 CD       	JR	LUP1		; weiter versuchen
 1175                   	;
 1176 F638  AF          SUP5:	XOR	A		; nichts anzeigen nach der Blocknummer
 1177 F639  18 18       	JR	AHSTR
 1178                   	;
 1179 F63B  3E 2A       BLNOT:	LD	A,'*'		; falsche Blocknummer mit * anzeigen
 1180 F63D  18 14       	JR	AHSTR
 1181                   	;
 1182 F63F  CD F0B3     BLERR:	CALL	OSTR		; fehlerhaften Block mit ? anzeigen		
 1183 F642  09 09 09 20 	DB	9,9,9,' ',0	; hinter der letzten korrekten Blocknummer
 1184 F647  3E 3F       	LD	A,'?'		; Pruefsumme fehlerhaft
 1185 F649  18 08       	JR	AHSTR
 1186                   
 1187 F64B  3D          LUP4:	DEC	A		; Block 01?
 1188 F64C  28 1F       	JR	Z,LUP6		; Dateiname anzeigen
 1189 F64E  CD F277     LUP5:	CALL	CRT02		; falls eine fehlerhafte Zeile dabei war
 1190                   ;SUP5:				; Zeile komplett loeschen mit CLLN
 1191 F651  3E 3E       	LD	A,'>'		; korrekte Blocknummer
 1192 F653  F5          AHSTR:	PUSH	AF
 1193 F654  DD 7E 02    	LD	A,(IX+2)	; Blocknummer
 1194 F657  CD F3A9     	CALL	AHEX		; hexadezimal anzeigen
 1195 F65A  F1          	POP	AF
 1196 F65B  CD F3BA     	CALL	OCHR		; Kennung (>, *, ?) anhaengen
 1197 F65E  3E 19       	LD	A,19H
 1198 F660  CD E0AC     	CALL	CRT		; zurueck zum Zeilenanfang
 1199                   ;	JP	BRKT
 1200                   ;_____________________________________________________________
 1201                   ;							**2A**
 1202                   ; Test auf BRK-Anforderung
 1203                   
 1204 F663  CD E37D     BRKT:	CALL	KBDS		; Tastaturabfrage
 1205 F666  D0          	RET	NC		; keine Taste gedrueckt
 1206 F667  FE 03       	CP	3		; war das die BRK-Taste?
 1207 F669  37          	SCF			; CY=1
 1208 F66A  C8          	RET	Z		; ja, BRK erkannt
 1209 F66B  A7          	AND	A		; CY=0
 1210 F66C  C9          	RET
 1211                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 160
CF48    INC

 1212                   ; Dateiname aus Vorblock anzeigen (fuer TAPELIST und LOAD)
 1213                   ; 15.06.2019: Anzahl von 11 auf 12 geaendert wegen 8.3 im Vorblock
 1214                   ; 02.04.2021: wieder 11 (wegen TAPELIST/BASIC)
 1215                   ; 15.05.2021: 12 bei LOAD und 11 bei TAPELIST als Kompromiss
 1216                   ; 11.09.2021: Register HL wird nicht mehr veraendert
 1217 F66D  06 0C       LUP6:	LD	B,12		; Kontrolle/Anzeige 11 gueltige Zeichen
 1218 F66F  48          TLNAME:	LD	C,B
 1219 F670  E5          	PUSH	HL
 1220 F671  21 B700     	LD	HL,CASS		; Dateiname in Kassettenpuffer
 1221 F674  7E          LUP7:	LD	A,(HL)		; auf gueltige Zeichen testen
 1222 F675  B7          	OR	A
 1223 F676  28 10       	JR	Z,LUP8		; 00h ist OK
 1224 F678  FE 20       	CP	20h
 1225 F67A  38 21       	JR	C,LUP10		; <20h also raus
 1226 F67C  FE 7F       	CP	7Fh
 1227 F67E  38 08       	JR	C,LUP8		; 20h..7Eh ist OK
 1228 F680  FE D3       	CP	0D3h
 1229 F682  38 19       	JR	C,LUP10		; 7Fh..D2h raus
 1230 F684  FE DA       	CP	0DAh		; D3..D5 sind BASIC-Dateitypen,
 1231                   				; D7..D9 sind geschuetzte BASIC-Dateitypen
 1232 F686  30 15       	JR	NC,LUP10	; >D9h also raus
 1233 F688  2C          LUP8:	INC	L
 1234 F689  10 E9       	DJNZ	LUP7
 1235 F68B  68          	LD	L,B		; L=0 wieder zurueck auf Anfang Kassettenpuffer
 1236 F68C  41          	LD	B,C		; anzuzeigende Anzahl
 1237 F68D  7E          LUP9:	LD	A,(HL)		; aus Kassettenpuffer anzeigen
 1238 F68E  E6 7F       	AND	7Fh		; hohe Zeichen fuer BASIC-Dateiname
 1239 F690  23          	INC	HL
 1240                   ;	OR	A		; CY=0 (kein Fehler)
 1241 F691  20 02       	JR	NZ,LUP11
 1242 F693  3E 20       	LD	A,' '		; statt 00 Leerzeichen anzeigen
 1243 F695  CD F3BA     LUP11:	CALL	OCHR		; Dateiname anzeigen
 1244 F698  10 F3       	DJNZ	LUP9
 1245 F69A  CD F3A1     	CALL	SPACE		; Leerzeichen zwischen Dateiname + Adressen
 1246 F69D  E1          LUP10:	POP	HL
 1247 F69E  A7          	AND	A		; kein Fehler
 1248 F69F  C9          	RET			; (CRT und damit OCHR/SPACE veraendern AF nicht)
 1249                   
 1250 F6A0  CD F0B3     NOMC:	CALL	OSTR
 1251 F6A3  4B 65 69 6E 	DB	'Keine MC-Datei!',CR,LF,0
 1252 F6B5  CD FC1C     CLJP:	CALL	CSRI		; Datei schliessen
 1253 F6B8  37          	SCF			; Fehlerflag setzen
 1254 F6B9  C9          	RET
 1255                   
 1256 F6BA  7F7F        VERI7F:	DW	7F7FH
 1257 F6BC  56 45 52 49 	DB	'VERIFY',1
 1258                   ;_____________________________________________________________
 1259                   ;							**11**
 1260                   ; Kassettendatei kontrollieren
 1261                   
 1262 F6C3  CD ED6D     VERIF:	CALL	DEV		; Kassette?
 1263 F6C6  C0          	RET	NZ		; nur bei TAPE sinnvoll
 1264 F6C7  DD 77 07    	LD	(IX+7),A	; A=0
 1265 F6CA  18 1D       	JR	LOAD1
 1266                   
 1267 F6CC  7F7F        LOAD7F:	DW	7F7FH
 1268 F6CE  4C 4F 41 44 	DB	'LOAD',1
 1269 F6D3  CD ED6D     	CALL	DEV		; Kassette?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 161
CF48    INC

 1270 F6D6  C4 F562     	CALL	NZ,NAME		; Dateiname abfragen falls nicht TAPE
 1271 F6D9  D8          	RET	C		; mit BRK abgebrochen
 1272                   ;_____________________________________________________________
 1273                   ;							**10**
 1274                   ; Datei einlesen
 1275                   
 1276 F6DA  DD 36 07 01 LOAD:	LD	(IX+7),1	; Daten lesen
 1277 F6DE  3A B781     	LD	A,(ARGN)
 1278 F6E1  FE 02       	CP	2
 1279 F6E3  38 04       	JR	C,LOAD1		; Autostart?
 1280 F6E5  DD CB 07 CE 	SET	1,(IX+7)	; unterdruecken
 1281 F6E9  CD F541     LOAD1:	CALL	KPUFF		; Standardpuffer setzen
 1282 F6EC  CD E4E1     	CALL	PV7		; HL = Dateiname
 1283 F6EF  04          	DB	4		; ISRI (Vorblock einlesen)
 1284 F6F0  30 05       	JR	NC,LOAD0	; kein Fehler aufgetreten
 1285 F6F2  CD ED6D     	CALL	DEV		; Kassette?
 1286 F6F5  37          	SCF			; Fehlerflag setzen
 1287 F6F6  C0          	RET	NZ		; Abbruch wenn nicht Kassette
 1288 F6F7  CD F609     LOAD0:	CALL	LUP2		; Blockinhalt auswerten (Name anzeigen usw.)
 1289 F6FA  38 B9       LOAD2:	JR	C,CLJP		; BRK -> CSRI -> Fehler
 1290 F6FC  DD CB 07 46 	BIT	0,(IX+7)
 1291 F700  28 47       	JR	Z,LOAD5		; Verify
 1292 F702  3A B710     	LD	A,(CASS+10H)	; Anzahl der Argumente beim Abspeichern
 1293 F705  D6 02       	SUB	2		; 0 oder 1 Argument ist falsch
 1294 F707  FE 09       	CP	9		; MC?
 1295 F709  30 95       	JR	NC,NOMC		; Fehler: kein gueltiger CAOS-Vorblock
 1296                   ;
 1297                   ; 11.09.2021: ARGN aus Vorblock wird nun um 2 verringert in den Bits 2-4 von
 1298                   ; (IX+7) abgelegt. Das spart das doppelte Laden von (CASS+10H) und vereinfacht
 1299                   ; den Test auf Autostart nach dem Einlesen der Datei
 1300                   ;
 1301 F70B  07          	RLCA			; Anzahl ARG-2
 1302 F70C  07          	RLCA			; nach Bits 2..4 rotieren
 1303                   ;
 1304                   ; 12.09.2021: Da (IX+7) bei LOAD mit 1 und bei VERIFY mit 0 initialisiert wird,
 1305                   ; muessen die Bits nicht maskiert werden und die Bits 2..4 koennen direkt
 1306                   ; gesetzt werden mittels OR
 1307                   ;
 1308 F70D  DD B6 07    	OR	(IX+7)
 1309                   ;	AND	00011100b	; Bits 0..1 und 5..7 zuruecksetzen
 1310                   ;	XOR	(IX+7)		; a = (a XOR b) XOR b fuer Bits 2..4
 1311 F710  DD 77 07    	LD	(IX+7),A	; in IX+7 merken fuer spaetere Auswertung
 1312 F713  2A B715     	LD	HL,(CASS+15H)	; SADR
 1313 F716  E5          	PUSH	HL
 1314 F717  ED 5B B713  	LD	DE,(CASS+13H)	; EADR+1
 1315 F71B  2A B711     	LD	HL,(CASS+11H)	; AADR
 1316 F71E  3A B781     	LD	A,(ARGN)
 1317 F721  A7          	AND	A		; Ladeoffset?
 1318 F722  28 11       	JR	Z,LOAD3		; nein
 1319 F724  ED 4B B782  	LD	BC,(ARG1)	; Offset
 1320 F728  09          	ADD	HL,BC		; Anfangsadresse und Endadresse
 1321 F729  EB          	EX	DE,HL		; umrechnen
 1322 F72A  09          	ADD	HL,BC
 1323 F72B  EB          	EX	DE,HL
 1324 F72C  DD CB 07 66 	BIT	4,(IX+7)	; 4 bis 7 Argumente?
 1325 F730  20 03       	JR	NZ,LOAD3
 1326 F732  E3          	EX	(SP),HL
 1327 F733  09          	ADD	HL,BC		; Startadresse auch umrechnen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 162
CF48    INC

 1328 F734  E3          	EX	(SP),HL
 1329 F735  CD F391     LOAD3:	CALL	HLDE		; Anfangsadresse und Endadresse anzeigen
 1330 F738  3A B710     	LD	A,(CASS+10H)
 1331 F73B  FE 03       	CP	3
 1332 F73D  38 05       	JR	C,LOAD4		; keine Startadresse
 1333 F73F  E3          	EX	(SP),HL
 1334 F740  CD F399     	CALL	HLHX		; Startadresse anzeigen
 1335 F743  E3          	EX	(SP),HL
 1336 F744  C1          LOAD4:	POP	BC		; Startadresse merken
 1337 F745  ED 43 B786  	LD	(ARG3),BC
 1338 F749  CD F4C3     LOAD5:	CALL	CRLF		; Zeilenvorschub nach Dateiname + Adressen
 1339 F74C  EB          	EX	DE,HL		; DE = Ladeadresse
 1340                   ; Load-Hauptschleife
 1341 F74D  CD F602     LOAD6:	CALL	RDBLK		; 128-Byte-Block einlesen
 1342 F750  38 A8       	JR	C,LOAD2		; BRK -> CSRI -> Fehler melden
 1343 F752  DD CB 07 46 	BIT	0,(IX+7)
 1344 F756  28 26       	JR	Z,LOAD11	; Verify
 1345 F758  E5          	PUSH	HL		; Endadresse
 1346 F759  ED 52       	SBC	HL,DE		; noch zu lesende Bytes
 1347 F75B  01 0080     	LD	BC,128		; Blockgroesse 128 Byte
 1348 F75E  B7          	OR	A		; CY=0, damit auch EADR<AADR funktioniert!
 1349 F75F  ED 42       	SBC	HL,BC		; voller Block?
 1350 F761  09          	ADD	HL,BC
 1351 F762  30 01       	JR	NC,LOAD7	; ja
 1352 F764  4D          	LD	C,L		; restliche Anzahl
 1353 F765  21 B700     LOAD7:	LD	HL,CASS		; Standard-Kassettenpuffer
 1354 F768  3A B801     	LD	A,(MODST+1)
 1355 F76B  E6 01       	AND	1
 1356 F76D  20 16       	JR	NZ,LOAD9	; IRM ist ein
 1357 F76F  41          	LD	B,C
 1358 F770  7E          LOAD8:	LD	A,(HL)		; Byteweise aus dem Puffer
 1359 F771  CD E047     	CALL	SCROFF
 1360 F774  12          	LD	(DE),A		; in den RAM kopieren
 1361 F775  23          	INC	HL
 1362 F776  13          	INC	DE
 1363 F777  CD E050     	CALL	SCRON
 1364 F77A  10 F4       	DJNZ	LOAD8
 1365 F77C  18 09       	JR	LOAD10
 1366                   ;
 1367                   ; CAOS 4.7:
 1368                   ; Bei VERIFY wird mit Blocknummer FF der Vergleich beendet
 1369                   ;
 1370 F77E  DD 34 02    LOAD11:	INC	(IX+2)		; Blocknummer FF?
 1371 F781  28 0A       	JR	Z,LOAD12	; ja, bei VERIFY Einlesen beenden
 1372 F783  18 C8       	JR	LOAD6
 1373                   	;
 1374 F785  ED B0       LOAD9:	LDIR			; gelesenen Block kopieren
 1375 F787  E1          LOAD10:	POP	HL
 1376 F788  ED 52       	SBC	HL,DE		; Endadresse erreicht?
 1377 F78A  19          	ADD	HL,DE		; EADR regenerieren (Z-Flag bleibt erhalten)
 1378                   ;
 1379                   ; CAOS 4.6:
 1380                   ; Damit das Einlesen auch bei Diskette funktioniert, muss zusaetzlich oder
 1381                   ; ausschliesslich (?) der Adressvergleich stattfinden! Da hier nur MC-Dateien
 1382                   ; gelesen werden, ist eigentlich keine Abfrage auf Blocknr. FF erforderlich
 1383                   ;
 1384 F78B  20 C0       	JR	NZ,LOAD6
 1385 F78D  CD E4D8     LOAD12:	CALL	CLC		; CAOS 4.6: Puffer loeschen nicht mehr in CSRI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 163
CF48    INC

 1386 F790  CD F4C3     	CALL	CRLF		; CAOS 4.6: Zeilenvorschub nicht mehr in CSRI
 1387                   	;
 1388 F793  CD E4E1     	CALL	PV7		; Datei schliessen
 1389 F796  05          	DB	5		; CSRI
 1390 F797  D8          	RET	C		; Fehler
 1391 F798  DD 7E 07    	LD	A,(IX+7)
 1392 F79B  E6 03       	AND	3		; Bits 0+1 testen
 1393 F79D  3D          	DEC	A
 1394 F79E  C0          	RET	NZ		; kein Start oder Verify
 1395 F79F  DD 7E 07    	LD	A,(IX+7)
 1396 F7A2  E6 1C       	AND	00011100b	; Bits 2..4 testen (ARGN-2 in Vorblock)
 1397 F7A4  DD 36 07 00 	LD	(IX+7),0	; Befehl fehlte in CAOS 4.3!
 1398 F7A8  C8          	RET	Z		; kein Fehler, kein Autostart bei ARGN=2
 1399 F7A9  2A B786     	LD	HL,(ARG3)	; Startadresse
 1400 F7AC  E9          	JP	(HL)		; anspringen
 1401                   
 1402 F7AD  7F7F        	DW	7F7FH
 1403 F7AF  43 4F 4C 4F 	DB	'COLOR'
 1404 F7B4  11          	DB	11H		; Argumente dezimal ab CAOS 4.8
 1405 F7B5  CD FB95     	CALL	CON		; CAOS ROM-C ein
 1406 F7B8  C3 C57B     	JP	COLRC		; dort abarbeiten
 1407                   ;_____________________________________________________________
 1408                   ;							**0F**
 1409 F7BB  CD FB95     COLR:	CALL	CON
 1410 F7BE  C3 C59C     	JP	SETCO
 1411                   
 1412 F7C1  7F7F        	DW	7F7FH
 1413 F7C3  44 49 53 50 	DB	'DISPLAY'
 1414 F7CA  03          	DB	3
 1415                   ;_____________________________________________________________
 1416                   ;							**3B**
 1417 F7CB  CD FB95     DISP:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1418 F7CE  CD C81B     	CALL	DISPC
 1419 F7D1  18 1D       	JR	JCOFF
 1420                   
 1421 F7D3  7F7F        	DW	7F7FH
 1422 F7D5  4D 4F 44 49 	DB	'MODIFY'
 1423 F7DB  03          	DB	3
 1424                   ;_____________________________________________________________
 1425                   ;							**2E**
 1426 F7DC  01 C84C     MODI:	LD	BC,MODIC
 1427 F7DF  18 1A       	JR	JROMC		; im ROM-C ausfuehren
 1428                   ;
 1429                   ;***************************************************************
 1430                   ; Fensterverwaltung
 1431                   ; %WINDOW		aktiviert Fenster 0 in voller Groesse
 1432                   ; %WINDOW nr		aktiviert Fenster nr
 1433                   ; %WINDOW aa bb cc dd e	Fenster definieren
 1434                   ;         |  |  |  |  |
 1435                   ;         |  |  |  |  |_ Fenster-Nr. in (ARG5)
 1436                   ;         |  |  |  |____ Spaltenzahl in (ARG4)
 1437                   ;         |  |  |_______ Spaltenanfang in Register C
 1438                   ;         |  |__________ Zeilenanzahl in Register E
 1439                   ;         |_____________ Zeilenanfang in Register L
 1440                   ;
 1441 F7E1  7F7F        WIND7F:	DW	7F7FH
 1442 F7E3  57 49 4E 44 	DB	'WINDOW'
 1443 F7E9  11          	DB	11H		; Argumente dezimal!
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 164
CF48    INC

 1444 F7EA  CD FB95     	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1445 F7ED  CD C5B7     	CALL	WINDC
 1446 F7F0  C3 FB84     JCOFF:	JP	COFF
 1447                   ;_____________________________________________________________
 1448                   ;							**3C**
 1449                   ; PE:	A	Fensternummer 0..9
 1450                   ;	HL	Fensteranfang
 1451                   ;	DE	Fenstrergroesse
 1452                   ; PA:	CY=1	Fehler
 1453                   ; VR:	AF, BC, DE, HL
 1454                   ;
 1455 F7F3  01 C617     WININ:	LD	BC,WININC
 1456 F7F6  18 03       	JR	JROMC		; im ROM-C ausfuehren
 1457                   ;_____________________________________________________________
 1458                   ;							**3D**
 1459                   ; PE:	A	Fensternummer 0..9
 1460                   ; PA:	CY=1	Fehler
 1461                   ; VR:	AF, BC, DE, HL
 1462                   ;
 1463 F7F8  01 C5E7     WINAK:	LD	BC,WINAKC
 1464 F7FB  C3 FB81     JROMC:	JP	CLROMC		; im ROM-C ausfuehren
 1465                   ;_____________________________________________________________
 1466                   ;
 1467                   ; F-Taste belegen bzw. Belegung auflisten
 1468                   ;
 1469 F7FE  7F7F        	DW	7F7FH
 1470 F800  4B 45 59    	DB	'KEY'
 1471 F803  01          	DB	1		; Parameter hexadezimal
 1472 F804  FE 01       	CP	1		; Parameter angegeben?
 1473 F806  30 05       	JR	NC,KEYL		; ja, F-Taste bearbeiten
 1474                   ;_____________________________________________________________
 1475                   ;							**3A**
 1476 F808  01 C531     KEYLI:	LD	BC,KEYLIC	; Keylist
 1477 F80B  18 EE       	JR	JROMC		; im ROM-C ausfuehren
 1478                   
 1479 F80D  7D          KEYL:	LD	A,L		; Nummer
 1480                   ;_____________________________________________________________
 1481                   ;							**39**
 1482 F80E  01 C485     KEY:	LD	BC,KEYC		; Taste belegen
 1483 F811  18 E8       	JR	JROMC		; im ROM-C ausfuehren
 1484                   ;_____________________________________________________________
 1485                   ;							**25**
 1486                   ; Cursor komplementieren
 1487                   ;
 1488 F813  E5          CUCP:	PUSH	HL
 1489 F814  D5          	PUSH	DE
 1490 F815  C5          	PUSH	BC
 1491 F816  F5          	PUSH	AF
 1492 F817  CD E059     	CALL	PADR0		; Adresse im VRAM berechnen
 1493 F81A  38 20       	JR	C,CUCP3		; ausserhalb
 1494 F81C  E5          	PUSH	HL
 1495 F81D  CD E087     	CALL	DABR
 1496 F820  7E          	LD	A,(HL)
 1497 F821  E1          	POP	HL
 1498 F822  A7          	AND	A		; Dummy?
 1499 F823  20 0A       	JR	NZ,CUCP1
 1500 F825  3E 06       	LD	A,6		; vorletzte
 1501 F827  B5          	OR	L		; Cursorzeile
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 165
CF48    INC

 1502 F828  6F          	LD	L,A
 1503 F829  7E          	LD	A,(HL)
 1504 F82A  EE FE       	XOR	0FEH		; Strichcursor 7 Pixel breit
 1505 F82C  77          	LD	(HL),A
 1506 F82D  18 0D       	JR	CUCP3
 1507                   	;
 1508 F82F  ED 5B B7EE  CUCP1:	LD	DE,(CUMUST)	; Muster
 1509 F833  06 08       	LD	B,8		; Zeichenhoehe
 1510 F835  1A          CUCP2:	LD	A,(DE)
 1511 F836  AE          	XOR	(HL)		; verknuepfen
 1512 F837  77          	LD	(HL),A
 1513 F838  13          	INC	DE
 1514 F839  2C          	INC	L
 1515 F83A  10 F9       	DJNZ	CUCP2		; 8-mal
 1516 F83C  C3 E0B7     CUCP3:	JP	POP4
 1517                   ;_____________________________________________________________
 1518                   ;							**30**
 1519                   ; Punkt setzen
 1520                   ; PE:	(HOR)	Horizontalkoordinate
 1521                   ;	(VERT)	Vertikalkoordinate
 1522                   ;	(FARB)	Bildpunktfarbe
 1523                   ; PA:	CY=1	Punkt auaerhalb (Fehler)
 1524                   ; VR:	AF
 1525                   ;
 1526 F83F  CD FB95     PUSE:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1527 F842  CD C79D     	CALL	PUSEC		; Punkt setzen
 1528 F845  18 06       	JR	COF
 1529                   ;_____________________________________________________________
 1530                   ;							**2F**
 1531                   ; Punkt loeschen
 1532                   ; PE:	(HOR)	Horizontalkoordinate
 1533                   ;	(VERT)	Vertikalkoordinate
 1534                   ;	(FARB)	Bildpunktfarbe
 1535                   ; PA:	CY=1	Punkt auaerhalb (Fehler)
 1536                   ;	Z=1	Punkt war nicht gesetzt
 1537                   ;	A	Farbbyte
 1538                   ; VR:	AF
 1539                   ;
 1540 F847  CD FB95     PUDE:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1541 F84A  CD C7A8     	CALL	PUDEC		; Punkt loeschen
 1542 F84D  C3 FB84     COF:	JP	COFF
 1543                   ;_____________________________________________________________
 1544                   ;							**3F**
 1545                   ; Kreis zeichnen
 1546                   ; PE:	(ARG1)	X-Koordinate Mittelpunkt
 1547                   ;	(ARG2)	Y-Koordinate Mittelpunkt
 1548                   ;	(ARG3)	Radius
 1549                   ;	(FARB)	Farbe des Kreises
 1550                   ; PA:	-
 1551                   ; VR:	AF, BC, DE, HL, BC', DE', HL'
 1552                   
 1553 F850  01 C6E4     CIRCL:	LD	BC,CIRCLC	; Kreis
 1554 F853  18 A6       	JR	JROMC		; im ROM-C ausfuehren
 1555                   ;_____________________________________________________________
 1556                   ;							**3E**
 1557                   ; Linie zeichnen
 1558                   ; PE:	(ARG1)	X-Koordinate-Anfang
 1559                   ;	(ARG2)	Y-Koordinate-Anfang
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 166
CF48    INC

 1560                   ;	(ARG3)	X-Koordinate-Ende
 1561                   ;	(ARG4)	Y-Koordinate-Ende
 1562                   ;	(FARB)	Farbe der Linie
 1563                   ; PA:	-
 1564                   ; VR:	AF, BC, DE, HL, AF', BC', DE', HL'
 1565                   
 1566 F855  01 C667     LINE:	LD	BC,LINEC	; Linie
 1567 F858  18 A1       	JR	JROMC
 1568                   ;_____________________________________________________________
 1569                   ;							**37**
 1570                   ; Byteweise Eingabe:
 1571                   ; PE:	D	Steuerbyte
 1572                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 1573                   ;	Bit 5,(IX+7) Blocknummernanzeige unterdruecken?
 1574                   ; PA:	A	Datenbyte (nicht bei Close)
 1575                   ;	CY=1	Fehler
 1576                   ; VR:	AF, DE, HL
 1577                   ;
 1578 F85A  CD FB95     MBIN:	CALL	CON		; CAOS-ROM C ein
 1579 F85D  CD CD9F     	CALL	MBIC		; Byte einlesen
 1580 F860  18 EB       	JR	COF		; CAOS-ROM C aus
 1581                   ;_____________________________________________________________
 1582                   ;							**38**
 1583                   ; Byteweise Ausgabe:
 1584                   ; PE:	A	Datenbyte
 1585                   ;	D	Steuerbyte
 1586                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 1587                   ;	Bit 5,(IX+7) Blocknummernanzeige unterdruecken?
 1588                   ; PA:	CY=1	Fehler
 1589                   ; VR:	AF, DE, HL
 1590                   ;
 1591 F862  CD FB95     MBOUT:	CALL	CON		; CAOS-ROM C ein
 1592 F865  CD CD06     	CALL	MBOC		; Byte ausgeben
 1593 F868  18 E3       	JR	COF		; CAOS-ROM C aus
 1594                   
 1595                   ; aktuelles Menuewort wieder loeschen (fuer HELP-Funktion)
 1596                   
 1597 F86A  16 0C       CLR12:	LD	D,12		; maximal 12 Zeichen
 1598 F86C  3E 1F       CLR12a:	LD	A,1FH		; DEL
 1599 F86E  CD F3BA     	CALL	OCHR		; loeschen
 1600 F871  15          	DEC	D
 1601 F872  20 F8       	JR	NZ,CLR12a
 1602 F874  C9          	RET
 1603                   
 1604                   ; BASIC-I/O-Verteiler
 1605                   ; PE:	E	Steuerbyte
 1606                   ;	Bit 0..2 Kanalauswahl
 1607                   ;		00 = Eingabe Kanal 0 = Tastatur
 1608                   ;		01 = Ausgabe Kanal 0 = Bildschirm
 1609                   ;		02 = Eingabe Kanal 1 = Kassette
 1610                   ;		03 = Ausgabe Kanal 1 = Kassette
 1611                   ;		04 = Eingabe Kanal 2 = Anwenderkanal 1
 1612                   ;		05 = Ausgabe Kanal 2 = Anwenderkanal 1
 1613                   ;		06 = Eingabe Kanal 3 = Anwenderkanal 2
 1614                   ;		07 = Ausgabe Kanal 3 = Anwenderkanal 2
 1615                   ;	Bit 3	Init = Datei oeffnen
 1616                   ;	Bit 4	BIT8 - ungenutzt?
 1617                   ;	Bit 5	Ruecksprung zu CAOS (BYE)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 167
CF48    INC

 1618                   ;	Bit 6	Close = Datei schliessen
 1619                   ;	Bit 7	Abfrage Tastaturstatus
 1620                   ;	HL	Zeiger, bei Init beginnt Dateiname 2 Byte danach
 1621                   ;	D	Datenbyte bei Ausgabe
 1622                   ; PA:	A	Datenbyte bei Eingabe
 1623                   ;	E	Steuerbyte
 1624                   ;	Bit 3	nach Init zurueckgesetzt
 1625                   ;	Bit 7	Tastaturstatus 0=Taste gedrueckt
 1626                   ; VR:	AF, DE
 1627                   
 1628 F875  E5          BASPV:	PUSH	HL		; HL sichern (Dateiname)
 1629 F876  C5          	PUSH	BC		; BC sichern
 1630 F877  CD F06A     	CALL	IRMON		; IRM ein und System-SP setzen
 1631 F87A  CB 6B       	BIT	5,E
 1632 F87C  C2 F253     	JP	NZ,BASBYE	; BYE -> BASIC-ROM aus -> CAOS
 1633 F87F  D5          	PUSH	DE		; E = Steuerbyte
 1634 F880  23          	INC	HL
 1635 F881  23          	INC	HL
 1636 F882  CB 7B       	BIT	7,E
 1637 F884  20 56       	JR	NZ,BSA2		; Tastaturstatus
 1638 F886  E5          	PUSH	HL
 1639 F887  7B          	LD	A,E		; Kanalnummer
 1640 F888  E6 07       	AND	7		; 0-3
 1641 F88A  21 EDF7     	LD	HL,BUPTAB	; Tabelle der Unterprogramme
 1642 F88D  85          	ADD	A,L
 1643 F88E  6F          	LD	L,A
 1644 F88F  7A          	LD	A,D		; Parameter
 1645 F890  53          	LD	D,E		; Steuerbyte
 1646 F891  5E          	LD	E,(HL)		; UP-Nummer
 1647 F892  E1          	POP	HL		; Dateiname
 1648 F893  CD F055     	CALL	PV3		; Aufruf (UP-Nr. in E)
 1649 F896  D1          	POP	DE		; E = Steuerbyte
 1650 F897  57          	LD	D,A		; D = Ausgabeparameter
 1651 F898  30 0D       	JR	NC,BSA0		; kein Fehler
 1652 F89A  7B          	LD	A,E		; Steuerbyte
 1653 F89B  E6 06       	AND	6		; Kanalgruppe ausfiltern
 1654 F89D  FE 02       	CP	2		; MBIN/MBOUT?
 1655 F89F  20 06       	JR	NZ,BSA0		; bei allen anderen Kanaelen CY uninteressant
 1656                   
 1657                   ; Sprung zu BASIC: ?IO ERROR
 1658 F8A1  CD F087     BD2:	CALL	IRMOF		; IRM aus
 1659 F8A4  C3 DC82     	JP	IOERR		; Sprung zu Fehler-Routine in den BASIC-ROM
 1660                   
 1661 F8A7  7B          BSA0:	LD	A,E		; Steuerbyte
 1662 F8A8  E6 4F       	AND	4FH		; Kanalnummer und Close-Bit ausfiltern
 1663 F8AA  EE 43       	XOR	43H		; Close bei Kassettenausgabe?
 1664 F8AC  20 25       	JR	NZ,BSA1
 1665 F8AE  CD ED6D     	CALL	DEV		; DEVICE=Kassette?
 1666 F8B1  20 20       	JR	NZ,BSA1		; VERIFY nur bei TAPE ausfuehren
 1667 F8B3  CD F0B3     	CALL	OSTR
 1668 F8B6  56 45 52 49 	DB	'VERIFY ?(Y):',0
 1669 F8C3  CD F3DA     	CALL	KBD
 1670 F8C6  CD E391     	CALL	CSTBT		; anzeigen, was eingegeben wurde
 1671 F8C9  F5          	PUSH	AF
 1672 F8CA  CD F4C3     	CALL	CRLF		; auf neue Zeile wechseln
 1673 F8CD  F1          	POP	AF
 1674 F8CE  FE 59       	CP	'Y'
 1675 F8D0  CC F6C3     	CALL	Z,VERIF		; bei "Y" VERIFY ausfuehren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 168
CF48    INC

 1676 F8D3  7A          BSA1:	LD	A,D		; Ausgabeparameter
 1677 F8D4  CB 9B       	RES	3,E		; Init ruecksetzen
 1678 F8D6  CD F087     	CALL	IRMOF		; IRM aus und BASIC-SP wiederherstellen
 1679 F8D9  C1          	POP	BC		; BC regenerieren
 1680 F8DA  E1          	POP	HL		; HL regenerieren
 1681 F8DB  C9          	RET
 1682                   	;
 1683 F8DC  CD E37D     BSA2:	CALL	KBDS		; Tastaturstatusabfrage
 1684 F8DF  D1          	POP	DE
 1685 F8E0  57          	LD	D,A		; Zeichencode in D zurueck geben
 1686 F8E1  30 F0       	JR	NC,BSA1		; keine Taste gedrueckt
 1687 F8E3  CB BB       	RES	7,E		; Rueckmeldung, dass Taste gedrueckt wurde
 1688 F8E5  18 EC       	JR	BSA1
 1689                   
 1690                   
 1691 F8E7  CD F3BA     ZKOUT0:	CALL	OCHR
 1692                   ;_____________________________________________________________
 1693                   ;							**45**
 1694 F8EA  7E          ZKOUT:	LD	A,(HL)
 1695 F8EB  23          	INC	HL
 1696 F8EC  A7          	AND	A
 1697 F8ED  20 F8       	JR	NZ,ZKOUT0
 1698 F8EF  C9          	RET
 1699                   ;_____________________________________________________________
 1700                   ;							**35**
 1701                   ; Tonausgabe
 1702                   ;
 1703                   ; (ARG1) => HL	L = Tonhoehe 1 (ZK fuer CTC 0, 0=kein Ton)
 1704                   ;		H = Vorteiler 1 (0, 1)
 1705                   ; (ARG2) => DE	E = Tonhoehe 2 (ZK fuer CTC 1, 0=kein Ton)
 1706                   ;		D = Vorteiler 2 (0, 1)
 1707                   ; (ARG3) => BC	C = Lautstaerke in 2er-Schritten (0 ... 1FH)
 1708                   ;		B = Tondauer in 20ms-Schritten (0 ... FFH)
 1709                   ;		    bzw. 0 = Dauerton)
 1710                   
 1711 F8F0  CD F5F3     TON:	CALL	LARG		; Argumente laden
 1712 F8F3  DD CB 08 4E TON1:	BIT	1,(IX+8)	; noch alter Ton?
 1713 F8F7  20 FA       	JR	NZ,TON1		; warten
 1714                   ; hier Einsprung von Beep und Click:
 1715 F8F9  79          TON2:	LD	A,C		; Lautstaerke
 1716 F8FA  E6 1E       	AND	00011110b	; maskieren (Bit 1-4)
 1717 F8FC  EE 9F       	XOR	10011111b	; Komplement da nullaktiv
 1718 F8FE  4F          	LD	C,A
 1719 F8FF  78          	LD	A,B		; Tondauer
 1720 F900  A7          	AND	A		; 0=Dauerton?
 1721 F901  F3          	DI
 1722 F902  28 0D       	JR	Z,TON3		; ja, keine CTC2 starten
 1723 F904  CB B9       	RES	7,C		; nein, Blinken aus
 1724 F906  DD CB 08 CE 	SET	1,(IX+8)	; neuer Ton
 1725 F90A  3E C7       	LD	A,11000111b	; EI, Zaehler 50Hz
 1726 F90C  D3 8E       	OUT	(CTC2),A	; CTC2
 1727 F90E  78          	LD	A,B		; Dauer
 1728 F90F  D3 8E       	OUT	(CTC2),A
 1729 F911  DB 89       TON3:	IN	A,(PIOBD)
 1730 F913  E6 60       	AND	01100000b	; RAM8 maskieren
 1731 F915  B1          	OR	C		; Lautstaerke einbauen
 1732 F916  D3 89       	OUT	(PIOBD),A	; Lautstaerke ausgeben
 1733 F918  FB          	EI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 169
CF48    INC

 1734                   
 1735                   ; 01.05.2021 (nach Idee von Frank Ludwig)
 1736                   ; Kanal 1 wird mit 90 Grad Phasenverschiebung programmiert, damit die
 1737                   ; Tonausgabe bei gleichen Parametern fuer Kanal 0 und 1 besser klingt
 1738                   
 1739 F919  01 038C     	LD	BC,0300h+CTC0	; B=Steuerbyte "Kanal Reset"
 1740 F91C  7D          	LD	A,L		; Tonhoehe 1
 1741 F91D  CD F924       	CALL	TON4		; Tonkanal 1 starten (CY ist 0)
 1742 F920  0C          	INC	C		; CTC1
 1743 F921  EB          	EX	DE,HL		; Tonkanal 2 starten
 1744 F922  7D          	LD	A,L		; Tonhoehe 2
 1745 F923  1F          	RRA			; halbe ZK fuer 90Grad Phasenverschiebung
 1746 F924  ED 41       TON4:	OUT	(C),B		; CTC-Kanal anhalten
 1747 F926  CE 00       	ADC	0		; +CY um ZK=1 zu beruecksichtigen
 1748 F928  C8          	RET	Z		; kein Ton (ZK=0)
 1749 F929  CB 3C       	SRL	H		; Bit 0 (Vorteiler) nach CY
 1750 F92B  67          	LD	H,A		; ZK fuer Phasenverschiebung nach H
 1751 F92C  3E 28       	LD	A,00101000b	; Steuerbyte "Zeitgeber" vor 3x RRA
 1752 F92E  1F          	RRA			;   (ohne Kanal Reset)
 1753 F92F  1F          	RRA			; Vorteiler nach Bit 5 rotieren
 1754 F930  1F          	RRA
 1755 F931  F3          	DI
 1756 F932  ED 79       	OUT	(C),A		; CTC als Zeitgeber starten
 1757 F934  ED 61       	OUT	(C),H		; bei CTC1 ZK fuer Phasenverschiebung ausgeben		
 1758 F936  ED 79       	OUT	(C),A		; CTC nochmals mit echter ZK programmieren
 1759 F938  FB          	EI			; Interrupts wieder ein nach letztem OUT
 1760 F939  ED 69       	OUT	(C),L		; jetzt volle ZK nach ersten Nulldurchgang
 1761 F93B  C9          	RET
 1762                   
 1763                   ; ESC-Funktionen:
 1764                   
 1765 F93C  21 B7A2     ESCPRG:	LD	HL,STBT		; ShSTOP
 1766 F93F  CB E6       	SET	4,(HL)		; Kennung, dass ESC-Funktion folgt
 1767 F941  C9          	RET
 1768                   
 1769 F942  01 B200     ESC1:	LD	BC,VRAM0+00H	; 0B200H
 1770 F945  18 0D       	JR	ESCVR
 1771                   
 1772 F947  01 AD05     ESC2:	LD	BC,VRAM1+05H	; 0AD05H
 1773 F94A  18 08       	JR	ESCVR
 1774                   
 1775 F94C  01 AD04     ESC3:	LD	BC,VRAM1+04H	; 0AD04H
 1776 F94F  18 03       	JR	ESCVR
 1777                   
 1778 F951  01 B201     ESC4:	LD	BC,VRAM0+01H	; 0B201H
 1779 F954  60          ESCVR:	LD	H,B
 1780 F955  2E 00       	LD	L,0
 1781 F957  22 B7CB     	LD	(VRAM),HL
 1782                   
 1783                   ; 08.08.2020: Beim Bildwechsel die Fenster- und Cursorposition merken
 1784                   ;	( Idee von Tim Hennig am 25.07.2020 )
 1785                   
 1786 F95A  3A B7A2     	LD	A,(STBT)	; Bit 7 gesetzt, wenn 2 Monitore
 1787 F95D  07          	RLCA			; Bit 7 -> CY
 1788 F95E  30 1D       	JR	NC,NOBW		; nein, 2 Bilder (KC85/4-Modus)
 1789                   
 1790 F960  DD 7E 01    	LD	A,(IX+1)	; Istzustand
 1791 F963  A9          	XOR	C		; Sollzustand
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 170
CF48    INC

 1792 F964  CB 57       	BIT	2,A		; Wechsel Bild-Zugriff?
 1793 F966  28 15       	JR	Z,NOBW		; nein
 1794 F968  21 B79B     	LD	HL,WINNR	; B79B
 1795 F96B  11 AADD     	LD	DE,WIN2		; Tauschbereich	
 1796 F96E  06 0B       	LD	B,CCTL0-WINNR	; 11 Byte (Fensternummer + Fenstervektor)
 1797 F970  1A          SWAP:	LD	A,(DE)
 1798 F971  ED A0       	LDI
 1799 F973  03          	INC	BC		; BC korrigieren
 1800 F974  2B          	DEC	HL
 1801 F975  77          	LD	(HL),A
 1802 F976  23          	INC	HL
 1803 F977  10 F7       	DJNZ	SWAP
 1804 F979  ED 5B B7A0  	LD	DE,(CURSO)	; gespeicherte Cursor-Position
 1805                   
 1806 F97D  06 FA       NOBW:	LD	B,0FAH		; Maske
 1807 F97F  78          AXO84:	LD	A,B		; AND/XOR/OUT84
 1808                   ;	DI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1809 F980  DD A6 01    	AND	(IX+1)
 1810 F983  A9          	XOR	C
 1811 F984  DD 77 01    OUT84:	LD	(IX+1),A
 1812 F987  D3 84       	OUT	(PORT1),A
 1813                   ;	EI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1814 F989  C9          	RET
 1815                   ;
 1816                   ; Umschaltung Grafikmode mit ESC-G
 1817                   ;
 1818 F98A  0E 80       ESCG:	LD	C,10000000b	; 2-Monitor-Bit ein/aus
 1819 F98C  21          	DB	21H	; LD HL,nn
 1820                   
 1821 F98D  0E 20       ESCC:	LD	C,00100000b	; IBM <-> CAOS
 1822 F98F  21          	DB	21H	; LD HL,nn
 1823                   
 1824 F990  0E 04       ESC7:	LD	C,00000100b	; Invers-Bit
 1825 F992  21 B7A2     XORSTB:	LD	HL,STBT
 1826 F995  7E          	LD	A,(HL)
 1827 F996  A9          	XOR	C
 1828 F997  77          	LD	(HL),A
 1829 F998  C9          	RET
 1830                   
 1831 F999              ESC9:	;DI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1832 F999  DD 7E 01    	LD	A,(IX+1)	; VR: A
 1833 F99C  EE 02       	XOR	2
 1834 F99E  18 E4       	JR	OUT84		; BC unveraendert
 1835                   
 1836 F9A0  21 B7A2     ESCA:	LD	HL,STBT
 1837 F9A3  CB B6       	RES	6,(HL)		; HRG aus
 1838 F9A5  01 FF08     ESCAB:	LD	BC,0FF08h
 1839 F9A8  CD F97F     	CALL	AXO84
 1840 F9AB  A1          	AND	C
 1841 F9AC  80          	ADD	A,B		; CY = Bit 3
 1842 F9AD  F3          	DI			; Befehl ab CAOS 4.5 zusaetzlich
 1843 F9AE  DB 89       	IN	A,(PIOBD)
 1844 F9B0  17          	RLA			; als Bit 0 einschieben
 1845 F9B1  0F          	RRCA			; auf Bit 7 rotieren
 1846 F9B2  D3 89       	OUT	(PIOBD),A
 1847 F9B4  FB          	EI			; Befehl ab CAOS 4.5 zusaetzlich
 1848 F9B5  C9          	RET
 1849                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 171
CF48    INC

 1850 F9B6  21 B7A2     ESCB:	LD	HL,STBT
 1851 F9B9  CB F6       	SET	6,(HL)		; HRG ein
 1852 F9BB  18 E8       	JR	ESCAB
 1853                   
 1854                   ; Druckerinitialisierung V.24 oder Centronics:
 1855 F9BD  7F7F        LST7F:	DW	7F7FH
 1856 F9BF  4C 53 54 44 	DB	'LSTDEV'
 1857 F9C5  01          	DB	1
 1858                   ;_____________________________________________________________
 1859                   ;							**47**
 1860                   ; PE:	(ARGN) - Anzahl der Argumente (0 bis 5)
 1861                   ;	(ARG1)	Modulschacht des zu nutzenden Moduls
 1862                   ;	(ARG2)	Kanal des V.24-Moduls (1/2)
 1863                   ;	(ARG3)	USER-Ausgabekanal (2/3)
 1864                   ;	(ARG4)	Reaktion auf SHIFT CLEAR
 1865                   ;	(ARG5)	Druckertyp
 1866                   ; PA:	-
 1867                   ; VR:	AF, BC, DE, HL
 1868                   ;
 1869 F9C6  01 C8C2     V24OUT:	LD	BC,LSTC		; Druckerinitialisierung
 1870 F9C9  C3 FB81     	JP	CLROMC		; im ROM-C ausfuehren
 1871                   
 1872                   ; Duplexroutine
 1873                   
 1874 F9CC  7F7F        V24D7F:	DW	7F7FH
 1875 F9CE  56 32 34 44 	DB	'V24DUP'
 1876 F9D4  01          	DB	1
 1877                   ;_____________________________________________________________
 1878                   ;							**48**
 1879                   ; PE:	(ARGN)	Anzahl der Argumente (0 oder 3)
 1880                   ;	(ARG1)	Modulschacht V.24-Moduls (8, C ...)
 1881                   ;	(ARG2)	Kanal des V.24-Moduls (1/2)
 1882                   ;	(ARG3)	USER-Aus/Eingabekanal (2/3)
 1883                   ; PA:	-
 1884                   ; VR:	AF, BC, DE, HL
 1885                   ;
 1886 F9D5  01 C9A3     V24DUP:	LD	BC,V24DC	; Duplex-Initialisierung
 1887 F9D8  CD FB81     	CALL	CLROMC		; im ROM-C ausfuehren
 1888 F9DB  DC F4B9     	CALL	C,ERRM		; Fehler
 1889 F9DE  C9          	RET
 1890                   
 1891                   ; Druckroutine mit Protokoll
 1892                   
 1893 F9DF  CD E0AC     ECHO:	CALL	CRT		; Zeichen auf Bildschirm anzeigen
 1894 F9E2  DD CB 04 7E PRINT:	BIT	7,(IX+4)	; CAOS-C bereits ein?
 1895 F9E6  C2 CA35     	JP	NZ,PRINTC	; direkt zur Druckausgabe
 1896 F9E9  C5          	PUSH	BC
 1897 F9EA  01 CA35     	LD	BC,PRINTC	; Druckroutine
 1898 F9ED  CD FB81     	CALL	CLROMC		; im ROM-C ausfuehren
 1899 F9F0  C1          	POP	BC
 1900 F9F1  C9          	RET
 1901                   
 1902                   ; Druckroutine fuer M001:			17 Byte
 1903                   ;
 1904                   ; PE:	A	Zeichen
 1905                   ; VR:	-
 1906                   
 1907 F9F2  C5          M001PR:	PUSH	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 172
CF48    INC

 1908 F9F3  F5          	PUSH	AF
 1909 F9F4  0E 05       	LD	C,05h		; M001 PIO Port B (Steuersignale)
 1910 F9F6  ED 40       CBUSY1:	IN	B,(C)
 1911 F9F8  CB 50       	BIT	2,B		; BUSY?
 1912 F9FA  20 FA       	JR	NZ,CBUSY1
 1913 F9FC  06 01       	LD	B,00000001b	; Bit 0 = Strobe
 1914 F9FE  F3          	DI			; DI wegen Joysticktreiber
 1915 F9FF  D3 04       	OUT	(04h),A		; M001 PIO Port A (Daten)
 1916 FA01  18 0F       	JR	CSTROB
 1917                    
 1918                   ; Druckroutine fuer M021:
 1919                   ;
 1920                   ; PE:	A	Zeichen
 1921                   ; VR:	-
 1922                   
 1923 FA03  C5          M021PR:	PUSH	BC
 1924 FA04  F5          	PUSH	AF
 1925 FA05  0E 90       	LD	C,90h		; M021 PIO Port A (Steuersignale)
 1926 FA07  ED 40       CBUSY2:	IN	B,(C)
 1927 FA09  CB 70       	BIT	6,B		; BUSY?
 1928 FA0B  20 FA       	JR	NZ,CBUSY2
 1929 FA0D  06 80       	LD	B,10000000b	; Bit 7 = Strobe
 1930 FA0F  F3          	DI			; DI wegen Joysticktreiber
 1931 FA10  D3 91       	OUT	(91h),A		; M021 PIO Port B (Daten)
 1932 FA12  AF          CSTROB:	XOR	A		; Strobe-Impuls aktiv
 1933 FA13  ED 79       	OUT	(C),A		; war vorher ED 71 = OUT (C),0
 1934 FA15  FB          	EI			; (erst nach naechstem Befehl)
 1935 FA16  ED 41       	OUT	(C),B		; Strobe-Impuls passiv
 1936 FA18  F1          	POP	AF
 1937 FA19  C1          	POP	BC
 1938 FA1A  C9          	RET
 1939                   
 1940                   ; Druckroutine fuer V.24:
 1941                   ;
 1942                   ; PE:	A	Zeichen
 1943                   ; VR:	-
 1944                   
 1945 FA1B  C5          V24PR:	PUSH	BC
 1946 FA1C  F5          	PUSH	AF
 1947 FA1D  CD FA72     	CALL	LCSO		; SIO-Offset fuer V24OUT ermitteln
 1948 FA20  C6 0A       V24PR0:	ADD	A,0Ah		; SIO-Steuerport
 1949 FA22  4F          	LD	C,A
 1950 FA23  ED 78       V24PR1:	IN	A,(C)
 1951 FA25  E6 04       	AND	00000100b	; bereit?
 1952 FA27  28 FA       	JR	Z,V24PR1	; nein, warten
 1953                   	;
 1954 FA29  0D          V24PR2:	DEC	C
 1955 FA2A  0D          	DEC	C		; SIO-Datenport
 1956 FA2B  F1          	POP	AF
 1957 FA2C  ED 79       	OUT	(C),A		; Ausgabe
 1958 FA2E  C1          	POP	BC
 1959 FA2F  C9          	RET
 1960                   
 1961                   ; Ausgabe V.24-Duplex:
 1962                   ;
 1963                   ; PE:	A	Zeichen
 1964                   ; VR:	-
 1965                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 173
CF48    INC

 1966 FA30  C5          V24OT:	PUSH	BC
 1967 FA31  F5          	PUSH	AF
 1968 FA32  CD FA7A     	CALL	LCSOD		; SIO-Offset fuer V24DUP ermitteln
 1969 FA35  18 E9       	JR	V24PR0
 1970                   
 1971                   ; Eingabe V.24-Duplex (Interrupt):
 1972                   ;
 1973                   ; PA:	A	Zeichen
 1974                   ;	CY	Status (1 = BRK, 0 = Zeichen gueltig)
 1975                   ; VR:	AF
 1976                   ;
 1977 FA37  3E EE       V24I:	LD	A,11101110b	; Steuerbyte fuer Interrupt-Betrieb
 1978 FA39  18 03       	JR	V24IN0
 1979                   
 1980                   ; Eingabe V.24-Duplex (Polling):
 1981                   ;
 1982                   ; PA:	A	Zeichen
 1983                   ;	CY	Status (1 = BRK, 0 = Zeichen gueltig)
 1984                   ; VR:	AF
 1985                   ;
 1986 FA3B  3A B7E8     V24IN:	LD	A,(HCPZ2)
 1987 FA3E  C5          V24IN0:	PUSH	BC
 1988 FA3F  D5          	PUSH	DE
 1989 FA40  57          	LD	D,A		; Steuerbyte
 1990 FA41  E6 04       	AND	00000100b	; Kanal A oder B?
 1991 FA43  0F          	RRCA
 1992 FA44  0F          	RRCA
 1993 FA45  C6 0A       	ADD	A,0Ah		; SIO-Steuerport
 1994 FA47  4F          	LD	C,A
 1995 FA48  3E 68       	LD	A,01101000b	; Sendeeinstellungen
 1996 FA4A  A2          	AND	D
 1997 FA4B  5F          	LD	E,A
 1998 FA4C  ED 78       V24IN1:	IN	A,(C)
 1999 FA4E  E6 01       	AND	00000001b	; CY=0, Daten abholbereit?
 2000 FA50  3E 05       	LD	A,5		; WR5 auswaehlen
 2001 FA52  F3          	DI			; Interrupts waehrend I/O-Sequenz sperren
 2002 FA53  ED 79       	OUT	(C),A
 2003 FA55  20 0B       	JR	NZ,V24IN2
 2004 FA57  3E 82       	LD	A,10000010b	; DTR+RTS ein
 2005 FA59  B3          	OR	E
 2006 FA5A  ED 79       	OUT	(C),A		; Senderfreigabe
 2007 FA5C  FB          	EI
 2008 FA5D  CD F663     	CALL	BRKT
 2009 FA60  30 EA       	JR	NC,V24IN1
 2010 FA62  ED 59       V24IN2:	OUT	(C),E		; DTR+RTS aus: Sender sperren
 2011 FA64  FB          	EI
 2012 FA65  38 08       	JR	C,V24IN3
 2013 FA67  0D          	DEC	C		; SIO-Datenport auswaehlen
 2014 FA68  0D          	DEC	C
 2015 FA69  ED 40       	IN	B,(C)
 2016 FA6B  3E 7F       	LD	A,01111111b	; Maske fuer 7 Bit
 2017 FA6D  B2          	OR	D
 2018 FA6E  A0          	AND	B		; maskieren, CY=0
 2019 FA6F  D1          V24IN3:	POP	DE
 2020 FA70  C1          	POP	BC
 2021 FA71  C9          	RET
 2022                   
 2023                   ; SIO-Offset fuer V24OUT
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 174
CF48    INC

 2024                   ; PA: A (SIO-Offset)
 2025                   ; VR: AF
 2026 FA72  3A B7E1     LCSO:	LD	A,(HCPZ)
 2027 FA75  E6 04       LCSO1:	AND	00000100b	; Kanal A oder B?
 2028 FA77  0F          	RRCA
 2029 FA78  0F          	RRCA
 2030 FA79  C9          	RET
 2031                   
 2032                   ; SIO-Offset fuer V24DUP
 2033 FA7A  3A B7E8     LCSOD:	LD	A,(HCPZ2)
 2034 FA7D  18 F6       	JR	LCSO1
 2035                   ;
 2036                   ; ISR SIO B (Empfangsinterrupt)
 2037                   ; fuer MC-Load, MC-Start, Umschaltung auf Fremdtastatur
 2038                   ;
 2039 FA7F  E5          ISRSB:	PUSH	HL
 2040 FA80  D5          	PUSH	DE
 2041 FA81  C5          	PUSH	BC
 2042 FA82  F5          	PUSH	AF
 2043 FA83  21 A800     	LD	HL,V24PL	; Steckplatz M003
 2044 FA86  CD E39E     	CALL	IRMGET		; aus IRM lesen (Rueckkehr mit EI)
 2045 FA89  47          	LD	B,A		; Steckplatz M003 holen
 2046 FA8A  0E 80       	LD	C,80h
 2047 FA8C  3E 01       	LD	A,1
 2048 FA8E  ED 79       	OUT	(C),A		; Modul einschalten
 2049 FA90  D9          	EXX			; auf Zweitregistersatz wechseln
 2050 FA91  D5          	 PUSH	DE		; DE' sichern
 2051 FA92  C5          	 PUSH	BC		; BC' sichern
 2052 FA93  DB 88       	 IN	A,(PIOAD)
 2053 FA95  47          	 LD	B,A		; Schaltzustand IRM in Register B' merken
 2054 FA96  DD 4E 04    	 LD	C,(IX+4)	; Schaltzustand CAOS-C  in Reg. C' merken
 2055                   	 SETIXA	7,4		; SET 7,(IX+4),A
    1 FA99  DD CB 04    	 DB	0DDh,0CBh,4
    2 FA9C  FF          	 DB	7 SHL 3 OR 11000111b
 2056 FA9D  D3 86       	 OUT	(PORT2),A	; CAOS-C einschalten
 2057 FA9F  D9          	EXX
 2058 FAA0  21 D832     	LD	HL,V24POL
 2059 FAA3  F3          	DI
 2060 FAA4  DB 09       	IN	A,(9)		; empfangenes Zeichen von SIO abholen
 2061 FAA6  CD F54A     	CALL	INIEA		; DTR off
 2062 FAA9  CD E59A     	CALL	IRET		; EI; RETI
 2063                   
 2064 FAAC  FE 0D       	CP	CR		; Fremdtastatur?
 2065 FAAE  28 2B       	JR	Z,ISB2
 2066 FAB0  FE 1B       	CP	ESC		; MC-Programm?
 2067 FAB2  20 0A       	JR	NZ,ISB1
 2068                   
 2069 FAB4  CD FA37     	CALL	V24I		; Folgezeichen nach ESC abholen
 2070 FAB7  D6 54       	SUB	'T'		; ESC-T ?
 2071 FAB9  28 2C       	JR	Z,ISB4		; -> MC laden
 2072 FABB  3D          	DEC	A		; ESC-U ?
 2073 FABC  28 72       	JR	Z,ISB6		; -> MC starten
 2074                   
 2075 FABE  26 B8       ISB1:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
 2076 FAC0  68          	LD	L,B		; Steckplatz
 2077 FAC1  CD E39E     	CALL	IRMGET		; Schaltzustand vor ISR ermitteln
 2078 FAC4  21 D825     	LD	HL,V24INT	; SIO Kanal B wieder auf Interrupt einstellen
 2079 FAC7  0E 80       	LD	C,80h
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 175
CF48    INC

 2080 FAC9  F3          	DI
 2081 FACA  CD F54A     	CALL	INIEA		; initialisieren
 2082 FACD  ED 79       	OUT	(C),A		; M003-Schaltzustand wiederherstellen
 2083 FACF  FB          	EI
 2084 FAD0  D9          	EXX
 2085 FAD1  79          	 LD	A,C
 2086 FAD2  CD E2A3     	 CALL	OUT86		; CAOS-C wie vor Interrupt
 2087 FAD5  C1          	 POP	BC		; BC' regenerieren
 2088 FAD6  D1          	 POP	DE		; DE' regenerieren
 2089 FAD7  D9          	EXX
 2090 FAD8  C3 E0B7     	JP	POP4		; POP	AF,BC,DE,HL   RET
 2091                   
 2092 FADB  F3          ISB2:	DI
 2093 FADC  DD 36 F2 AF 	LD	(IX-14),LOW(ISRT)	; neue Tastatur-ISR fuer SIO-B in
 2094 FAE0  DD 36 F3 E3 	LD	(IX-13),HIGH(ISRT)	; Interrupttabelle 01E2H+01E3H
 2095 FAE4  FB          	EI
 2096 FAE5  18 D7       	JR	ISB1
 2097                   ;
 2098                   ; MC laden (ESC-T, Adresse, Anzahl, Daten):
 2099                   ;
 2100 FAE7  21 B801     ISB4:	LD	HL,MODST+1	; IRM = internes Modul 1
 2101 FAEA  CD E39E     	CALL	IRMGET		; Modulsteuerwort holen
 2102 FAED  E6 01       	AND	1
 2103 FAEF  07          	RLCA			; auf Bit 2 rotieren
 2104 FAF0  07          	RLCA
 2105 FAF1  D9          	EXX			; auf Zweitregistersatz wechseln
 2106 FAF2  57          	 LD	D,A
 2107 FAF3  3E 7B       	 LD	A,01111011b	; USER-C aus
 2108 FAF5  A0          	 AND	B		; gemerkte Schaltzustaende
 2109 FAF6  B2          	 OR	D		; gewuenschter IRM-Schaltzustand
 2110 FAF7  57          	 LD	D,A
 2111 FAF8  D9          	EXX
 2112                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FAF9  DD CB 04    	 DB	0DDh,0CBh,4
    2 FAFC  BF          	 DB	7 SHL 3 OR 10000111b
 2113 FAFD  D3 86       	OUT	(PORT2),A	; CAOS-C ausschalten
 2114 FAFF  CD FA37     	CALL	V24I
 2115 FB02  6F          	LD	L,A		; HL = Adresse
 2116 FB03  CD FA37     	CALL	V24I
 2117 FB06  67          	LD	H,A
 2118 FB07  CD FA37     	CALL	V24I
 2119 FB0A  5F          	LD	E,A		; DE = Anzahl Bytes
 2120 FB0B  CD FA37     	CALL	V24I
 2121 FB0E  57          	LD	D,A
 2122 FB0F  CD FA37     ISB5:	CALL	V24I
 2123 FB12  38 14       	JR	C,ISB8		; Break
 2124 FB14  4F          	LD	C,A		; C = Datenbyte
 2125 FB15  D9          	EXX
 2126 FB16  7A          	 LD	A,D		; logischer IRM-Schaltzustand
 2127 FB17  D9          	EXX
 2128 FB18  F3          	DI
 2129 FB19  D3 88       	OUT	(PIOAD),A	; USER-C aus und IRM schalten
 2130 FB1B  71          	LD	(HL),C		; Daten in Speicher poken
 2131 FB1C  D9          	EXX
 2132 FB1D  78          	 LD	A,B		; gemerkter IRM-Schaltzustand
 2133 FB1E  D3 88       	 OUT	(PIOAD),A	; USER-C und IRM wiederherstellen
 2134 FB20  FB          	 EI
 2135 FB21  D9          	EXX
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 176
CF48    INC

 2136 FB22  23          	INC	HL
 2137 FB23  1B          	DEC	DE		; Zaehler verringern
 2138 FB24  7B          	LD	A,E
 2139 FB25  B2          	OR	D		; bis Anzahl=0
 2140 FB26  20 E7       	JR	NZ,ISB5
 2141 FB28              ISB8:	SETIXA	7,4		; SET 7,(IX+4),A
    1 FB28  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB2B  FF          	 DB	7 SHL 3 OR 11000111b
 2142 FB2C  D3 86       	OUT	(PORT2),A	; CAOS-C einschalten
 2143 FB2E  18 8E       	JR	ISB1
 2144                   ;
 2145                   ; MC starten (ESC-U, Adresse):
 2146                   ;
 2147 FB30  CD FA37     ISB6:	CALL	V24I
 2148 FB33  5F          	LD	E,A		; DE = Startadresse
 2149 FB34  CD FA37     	CALL	V24I
 2150 FB37  57          	LD	D,A
 2151 FB38  21 D825     	LD	HL,V24INT	; SIO Kanal B wieder auf Interrupt einstellen
 2152 FB3B  D9          	EXX
 2153 FB3C  78          	 LD	A,B		; gemerkter IRM-Schaltzustand
 2154 FB3D  D9          	EXX
 2155 FB3E  F6 04       	OR	00000100b	; IRM einschalten
 2156 FB40  F3          	DI
 2157 FB41  CD F54A     	CALL	INIEA		; uminitialisieren
 2158 FB44  D3 88       	OUT	(PIOAD),A	; IRM schalten
 2159                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FB46  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB49  BF          	 DB	7 SHL 3 OR 10000111b
 2160 FB4A  D3 86       	OUT	(PORT2),A	; CAOS-C ausschalten
 2161 FB4C  ED 7B B7AE  	LD	SP,(SYSP)
 2162 FB50  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
 2163 FB52  68          	LD	L,B		; Steckplatz
 2164 FB53  7E          	LD	A,(HL)		; M003-Schaltzustand vor ISR ermitteln
 2165 FB54  ED 79       	OUT	(C),A		; und wiederherstellen
 2166 FB56  FB          	EI
 2167 FB57  21 F258     	LD	HL,LOOP		; Rueckkehradresse nach Programmaufruf
 2168 FB5A  E5          	PUSH	HL
 2169 FB5B  EB          	EX	DE,HL
 2170 FB5C  E9          	JP	(HL)		; Programm jetzt starten
 2171                   
 2172                   ; Datenbyte eintragen fuer MODIC, FLOAD
 2173                   ; PE:	HL	Adresse
 2174                   ;	A	Datenbyte
 2175                   ;
 2176 FB5D  CD FB84     LDMAE:	CALL	COFF
 2177 FB60  F5          	PUSH	AF
 2178 FB61  3A B801     	LD	A,(MODST+1)
 2179 FB64  E6 01       	AND	1		; IRM off?
 2180 FB66  CC E047     	CALL	Z,SCROFF	; IRM aus falls erforderlich
 2181 FB69  F1          	POP	AF
 2182 FB6A  77          	LD	(HL),A		; Byte eintragen
 2183 FB6B  18 0C       	JR	JCON
 2184                   
 2185                   ; Datenbyte holen (fuer DISPC, MODIC, FSAVE, view)
 2186 FB6D  CD FB84     LDAME:	CALL	COFF		; CAOS-C aus
 2187 FB70  3A B801     	LD	A,(MODST+1)
 2188 FB73  E6 01       	AND	1		; IRM aus?
 2189 FB75  CC E047     	CALL	Z,SCROFF	; IRM aus falls erforderlich
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 177
CF48    INC

 2190 FB78  7E          	LD	A,(HL)		; Byte holen
 2191 FB79  CD E050     JCON:	CALL	SCRON		; IRM wieder ein
 2192 FB7C  18 17       	JR	CON
 2193                   ;_____________________________________________________________
 2194                   ;							**31**
 2195                   ; CAOS-Arbeitsbereich verlagern
 2196                   ; PE:	A	HW-Teil der IX-Arbeitszellen
 2197                   
 2198 FB7E  01 C17F     SIXD:	LD	BC,SIXC
 2199                   ;	reinlaufen in CLROMC
 2200                   ;-------------------------------------------------------------
 2201                   ; Aufruf eines UP im CAOS-ROMC
 2202                   ;  mit Einschalten des ROMC beim Aufruf
 2203                   ;  und ausschalten falls erforderlich beim Ruecksprung
 2204                   ; PE: BC=Adresse des UP im CAOS-ROMC
 2205                   
 2206                   ;CALLC:	EX	(SP),HL		; HL = Adresse der Routine
 2207                   ;	LD	C,(HL)
 2208                   ;	INC	HL		; PTR+1
 2209                   ;	LD	B,(HL)		; BC = CALL-Adresse
 2210                   ;	INC	HL		; PTR+2
 2211                   ;	EX	(SP),HL		; CALL-Adresse auf Stack	 HL  >ADR<
 2212 FB81  CD FB94     CLROMC:	CALL	CONBC
 2213                   ;
 2214                   ; CAOS-ROM-C ausschalten falls erforderlich:
 2215                   ; VR:	-
 2216                   ;
 2217 FB84  F5          COFF:	PUSH	AF
 2218 FB85  3A B805     	LD	A,(MODST+5)	; Schaltzustand Moduladresse 5
 2219 FB88  E6 01       	AND	1
 2220 FB8A  20 06       	JR	NZ,CNSW		; bleibt ein!
 2221                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FB8C  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB8F  BF          	 DB	7 SHL 3 OR 10000111b
 2222 FB90  D3 86       CSW:	OUT	(PORT2),A
 2223 FB92  F1          CNSW:	POP	AF
 2224 FB93  C9          	RET
 2225                   ;
 2226                   ; CAOS-ROM-C einschalten:
 2227                   ;
 2228 FB94  C5          CONBC:	PUSH	BC              ; Sprung in das durch BC adressierte UP
 2229 FB95  F5          CON:	PUSH	AF
 2230                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 FB96  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB99  FF          	 DB	7 SHL 3 OR 11000111b
 2231 FB9A  18 F4       	JR	CSW
 2232                   ;_____________________________________________________________
 2233                   ;							**41**
 2234                   ; Berechnung des Produktes zweier 8-Bit-Zahlen
 2235                   ; PE:	D, C	Faktoren (8 Bit)
 2236                   ; PA:	BA	Produkt (16 Bit)
 2237                   ; VR:	AF,DE,B
 2238                   
 2239                   ; Multiplikation BA=C*D	
 2240 FB9C  AF          MULT:	XOR	A		; Startwert 0
 2241                   
 2242                   ; MULCA: BA=D*C+A 
 2243 FB9D  06 08       MULA:	LD	B,8		; 8 Bit Multiplikation/Rotation
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 178
CF48    INC

 2244 FB9F  CB 1A       	RR	D
 2245 FBA1  30 01       MUL1:	JR	NC,MUL2		; Bit nicht gesetzt
 2246 FBA3  81          	ADD	A,C		; aufaddieren
 2247 FBA4  1F          MUL2:	RRA
 2248 FBA5  CB 1A       	RR	D		; jetzt 16 Bit rotieren
 2249 FBA7  10 F8       	DJNZ	MUL1		; und weiter addieren
 2250 FBA9  47          	LD	B,A		; Ergebnis in
 2251 FBAA  7A          	LD	A,D		; BA
 2252 FBAB  C9          	RET
 2253                   ;
 2254                   ; CAOS 4.6 - Geraeteumschaltung und Anzeige
 2255                   ; %DEVICE	Auflisten der installierten Treiber
 2256                   ; %DEVICE n	Umschaltung Geraet n (0..7)
 2257                   ;
 2258 FBAC  7F7F        	DW	7F7Fh
 2259 FBAE  44 45 56 49 	DB	'DEVICE',1
 2260 FBB5  A7          	AND	A		; Parameter angegeben?
 2261 FBB6  28 15       	JR	Z,DRLIST	; nein, Treiber auflisten
 2262 FBB8  7D          	LD	A,L
 2263 FBB9  FE 08       	CP	8
 2264 FBBB  D2 F4B9     	JP	NC,ERRM		; n>8
 2265 FBBE  CD FBCF     	CALL	SETDEV		; Treiber einstellen
 2266 FBC1  DA F4B9     	JP	C,ERRM		; Treiber nicht aktiv
 2267 FBC4  CD FBCA     	CALL	DEVANZ		; Ergebnis anzeigen
 2268 FBC7  C3 F4C3     	JP	CRLF
 2269                   
 2270                   ; Geraetecode in Bits 2-4 (IX+8) eintragen und Treiberadressen in SUTAB kopieren
 2271                   ; PE:	A	Geraetecode 0...7
 2272                   ;		0 = Kassette - Standard
 2273                   ;		1 = Diskette - D004/D008
 2274                   ;		2 = USB (M052)
 2275                   ;		3 = Netzwerk (M052)
 2276                   ;		4-7 noch nicht benutzt
 2277                   ;		8-FE	Name des aktuellen Treibers anzeigen
 2278                   ;		FF	alle Treiber auflisten
 2279                   ; PA:	CY=1	ausgewaehlter Treiber nicht aktiv
 2280                   ;	IX+8	Bit 2-4 entsprechend Treibernummer gesetzt
 2281                   ; VR:	AF,BC,DE,HL
 2282                   
 2283 FBCA  3E FE       DEVANZ:	LD	A,0FEh		; aktuellen Treiber anzeigen
 2284 FBCC  21          	db	21h
 2285 FBCD  3E FF       DRLIST:	LD	A,0FFh		; Treiber auflisten
 2286                   ;_____________________________________________________________
 2287                   ;							**49**
 2288                   ; Geraetetreiber auswaehlen, abfragen oder anzeigen
 2289                   ; PE:	A 	0..7	- Auswahl Geraetetreiber Nr. 0-7
 2290                   ;		8	- aktuellen Treiber abfragen
 2291                   ;		9-FEH	- aktuellen Treibername anzeigen
 2292                   ;		FFH	- Auflisten aller Treiber
 2293                   ; PA:	CY=1	ausgewhlter Treiber nicht aktiv
 2294                   ;	bei CY=0	HL = Zeiger auf Treibername
 2295                   ;			Z=1 - Kassettentreiber
 2296                   ; VR:	AF,BC,DE,HL
 2297                   
 2298 FBCF  01 D5B9     SETDEV:	LD	BC,SET_DD	; Routine im ROM C/D aufrufen
 2299 FBD2  18 AD       	JR	CLROMC		; im ROM-C ausfuehren
 2300                   
 2301                   ; Verzeichnis anzeigen:
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 179
CF48    INC

 2302                   
 2303 FBD4  7F7F        	DW	7F7FH
 2304 FBD6  44 49 52 20 	DB	'DIR '
 2305 FBDA  1F          	DB	1FH		; Textargument zulaessig (Maske in DE)
 2306 FBDB  CD E4E1     	CALL	PV7
 2307 FBDE  08          	DB	8
 2308 FBDF  C9          	RET
 2309                   
 2310                   ; Laufwerk wechseln:
 2311                   
 2312 FBE0  7F7F        	DW	7F7FH
 2313 FBE2  43 44 20    	DB	'CD '		; ersetzt bisheriges Menuewort DRIVE
 2314 FBE5  1F          	DB	1FH		; Textargument zulaessig (Verzeichnis)
 2315 FBE6  CD E4E1     	CALL	PV7
 2316 FBE9  09          	DB	9
 2317 FBEA  C9          	RET
 2318                   
 2319                   ; Datei loeschen:
 2320                   
 2321 FBEB  7F7F        	DW	7F7FH
 2322 FBED  45 52 41 20 	DB	'ERA '
 2323 FBF1  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
 2324 FBF2  CD E4E1     	CALL	PV7
 2325 FBF5  0A          	DB	10
 2326 FBF6  C9          	RET
 2327                   
 2328                   ; Datei umbenennen:
 2329                   
 2330 FBF7  7F7F        	DW	7F7FH
 2331 FBF9  52 45 4E 20 	DB	'REN '
 2332 FBFD  1F          	DB	1FH		; Textargument zulaessig (2 Dateinamen)
 2333 FBFE  CD E4E1     	CALL	PV7
 2334 FC01  0B          	DB	11
 2335 FC02  C9          	RET
 2336                   
 2337                   ; ********	DEVICE-Routinen mit Modulschaltung aufrufen	********
 2338                   ;_____________________________________________________________
 2339                   ;							**01**
 2340                   ; Einen Block ausgeben:
 2341                   ; PE:	BC	Laenge Vorton
 2342                   ;	(IX+2)	Block-Nr. -1
 2343                   ; PA:	DE=HL	Pufferende + 1
 2344                   ;	(IX+2)	Block-Nr.
 2345                   ; VR:	AF,BC,DE,HL
 2346                   
 2347 FC03  CD E4E1     MBO:	CALL	PV7
 2348 FC06  00          	DB	0
 2349 FC07  C9          	RET
 2350                   ;_____________________________________________________________
 2351                   ;							**05**
 2352                   ; Einen Block einlesen:
 2353                   ; PE:	IX+5/6	Pufferadresse
 2354                   ; PA:	CY=1	Fehler
 2355                   ; VR:	AF,BC
 2356                   
 2357 FC08  CD E4E1     MBI:	CALL	PV7
 2358 FC0B  01          	DB	1
 2359 FC0C  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 180
CF48    INC

 2360                   ;_____________________________________________________________
 2361                   ;							**08**
 2362                   ; Initialisierung Bandausgabe / Datei zum Schreiben oeffnen:
 2363                   ; PE:	Kassettenpuffer mit Daten des Vorblocks
 2364                   ;	HL	Dateiname
 2365                   ; PA:	CY=1	Fehler
 2366                   ; VR:	AF,BC,DE,HL
 2367                   
 2368 FC0D  CD E4E1     ISRO:	CALL	PV7
 2369 FC10  02          	DB	2
 2370 FC11  C9          	RET
 2371                   ;_____________________________________________________________
 2372                   ;							**09**
 2373                   ; Abschluss Bandausgabe / Dateiausgabe schliessen:
 2374                   ; PE:	BC	Laenge Vorton
 2375                   ; PA:	CY=1	Fehler
 2376                   ; VR:	AF,BC,DE,HL
 2377                   
 2378 FC12  CD E4E1     CSRO:	CALL	PV7
 2379 FC15  03          	DB	3
 2380 FC16  C9          	RET
 2381                   ;_____________________________________________________________
 2382                   ;							**0A**
 2383                   ; Initialisierung Bandeingabe:
 2384                   ; (Datei zum Lesen oeffnen)
 2385                   ; PE:	HL	Dateiname
 2386                   ; PA:	CY=1	Fehler
 2387                   ; VR:	AF,BC
 2388                   
 2389 FC17  CD E4E1     ISRI:	CALL	PV7
 2390 FC1A  04          	DB	4
 2391 FC1B  C9          	RET
 2392                   ;_____________________________________________________________
 2393                   ;							**0B**
 2394                   ; Abschluss Bandeingabe / Dateieingabe schliessen:
 2395                   ; PA:	CY=1	Fehler
 2396                   
 2397 FC1C  CD E4E1     CSRI:	CALL	PV7
 2398 FC1F  05          	DB	5
 2399 FC20  C9          	RET
 2400                   ;_____________________________________________________________
 2401                   ;							**14**
 2402                   ; Warteschleife ohne Interrupt
 2403                   ; PE:	A	Zeitwert t = (A) * 6 ms
 2404                   ; PA:	-
 2405                   ; VR:	AF, B
 2406                   
 2407 FC21  47          WAIT:	LD	B,A
 2408 FC22  AF          	XOR	A
 2409 FC23  CD E2C0     WAIT1:	CALL	WTUP		; 6ms-Zeitschleife
 2410 FC26  10 FB       	DJNZ	WAIT1
 2411 FC28  C9          	RET
 2412                   ;
 2413                   ; Tastaturcodetabelle:
 2414                   ;				 Taste		Scancode:
 2415 FC29  57 77       KTAB:	DB	'Ww'		;		00 01
 2416 FC2B  41 61       	DB	'Aa'		;		02 03
 2417 FC2D  32 22       	DB	'2"'		;		04 05
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 181
CF48    INC

 2418 FC2F  08 19       	DB	8,19H		; CUL		06 07
 2419 FC31  10 0C       	DB	10H,0CH		; HOME		08 09
 2420 FC33  2D 3D       	DB	'-='		;		0A 0B
 2421 FC35  F2 F8       	DB	0F2H,0F8H	; F2		0C 0D
 2422 FC37  59 79       	DB	'Yy'		;		0E 0F	
 2423 FC39  45 65       	DB	'Ee'		;		10 11
 2424 FC3B  53 73       	DB	'Ss'		;		12 13
 2425 FC3D  33 23       	DB	'3#'		;		14 15
 2426 FC3F  5E 5D       	DB	'^]'		;		16 17
 2427 FC41  01 0F       	DB	1,0FH		; CLR		18 19
 2428 FC43  3A 2A       	DB	':*'		;		1A 1B
 2429 FC45  F3 F9       	DB	0F3H,0F9H	; F3		1C 1D
 2430 FC47  58 78       	DB	'Xx'		;		1E 1F
 2431 FC49  54 74       	DB	'Tt'		;		20 21
 2432 FC4B  46 66       	DB	'Ff'		;		22 23
 2433 FC4D  35 25       	DB	'5%'		;		24 25
 2434 FC4F  50 70       	DB	'Pp'		;		26 27
 2435 FC51  1F 02       	DB	1FH,2		; DEL		28 29
 2436 FC53  30 40       	DB	'0',40H		;		2A 2B
 2437 FC55  F5 FB       	DB	0F5H,0FBH	; F5		2C 2D
 2438 FC57  56 76       	DB	'Vv'		;		2E 2F
 2439 FC59  55 75       	DB	'Uu'		;		30 31
 2440 FC5B  48 68       	DB	'Hh'		;		32 33
 2441 FC5D  37 27       	DB	'7',27H		; 7 / Apostroph	34 35
 2442 FC5F  4F 6F       	DB	'Oo'		;		36 37
 2443 FC61  1A 14       	DB	1AH,14H		; INS		38 39
 2444 FC63  39 29       	DB	'9)'		;		3A 3B
 2445 FC65  03 04       	DB	3,4		; BRK		3C 3D
 2446 FC67  4E 6E       	DB	'Nn'		;		3E 3F
 2447 FC69  49 69       	DB	'Ii'		;		40 41
 2448 FC6B  4A 6A       	DB	'Jj'		;		42 43
 2449 FC6D  38 28       	DB	'8('		;		44 45
 2450 FC6F  20 5B       	DB	' ['		; SPC		46 47
 2451 FC71  4B 6B       	DB	'Kk'		;		48 49
 2452 FC73  2C 3C       	DB	',<'		;		4A 4B
 2453 FC75  13 1B       	DB	13H,ESC		; STOP		4C 4D
 2454 FC77  4D 6D       	DB	'Mm'		;		4E 4F
 2455 FC79  5A 7A       	DB	'Zz'		;		50 51
 2456 FC7B  47 67       	DB	'Gg'		;		52 53
 2457 FC7D  36 26       	DB	'6&'		;		54 55
 2458 FC7F  1C 1D       	DB	1CH,1DH		; LIST/RUN	56 57
 2459 FC81  4C 6C       	DB	'Ll'		;		58 59
 2460 FC83  2E 3E       	DB	'.>'		;		5A 5B
 2461 FC85  F6 FC       	DB	0F6H,0FCH	; F6		5C 5D
 2462 FC87  42 62       	DB	'Bb'		;		5E 5F
 2463 FC89  52 72       	DB	'Rr'		;		60 61
 2464 FC8B  44 64       	DB	'Dd'		;		62 63
 2465 FC8D  34 24       	DB	'4$'		;		64 65
 2466 FC8F  5F 5C       	DB	'_\'		;		66 67
 2467 FC91  2B 3B       	DB	'+;'		;		68 69
 2468 FC93  2F 3F       	DB	'/?'		;		6A 6B
 2469 FC95  F4 FA       	DB	0F4H,0FAH	; F4		6C 6D
 2470 FC97  43 63       	DB	'Cc'		;		6E 6F
 2471 FC99  51 71       	DB	'Qq'		;		70 71
 2472 FC9B  16 05       	DB	16H,5		; CAPS		72 73
 2473 FC9D  31 21       	DB	'1!'		;		74 75
 2474 FC9F  0A 12       	DB	LF,12H		; CUD		76 77
 2475 FCA1  0B 11       	DB	0BH,11H		; CUU		78 79
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 182
CF48    INC

 2476 FCA3  09 18       	DB	9,18H		; CUR		7A 7B
 2477 FCA5  F1 F7       	DB	0F1H,0F7H	; F1		7C 7D
 2478 FCA7  0D 0E       	DB	CR,0EH		; ENTER		7E 7F
 2479                   ;
 2480                   ; Steuercodetabelle:
 2481                   ;
 2482 FCA9  F4A3        CRTTAB:	DW	NOOP	; 00
 2483 FCAB  E21E        	DW	CLR	; 01
 2484 FCAD  E295        	DW	CLLN	; 02
 2485 FCAF  F4A3        	DW	NOOP	; 03=BRK
 2486 FCB1  F4A3        	DW	NOOP	; 04=Sh-BRK
 2487 FCB3  E1D7        	DW	ESC0	; 05=TAB
 2488 FCB5  F4A3        	DW	NOOP	; 06 (bei CAOS 3.3 invers)
 2489 FCB7  E2A9        	DW	BEEP	; 07
 2490 FCB9  E1FD        	DW	CUL	; 08
 2491 FCBB  E1E6        	DW	CUR	; 09
 2492 FCBD  E1EF        	DW	CUD	; 0A
 2493 FCBF  E20D        	DW	CUU	; 0B
 2494 FCC1  E273        	DW	CLS	; 0C
 2495 FCC3  E283        	DW	CBL	; 0D=Enter
 2496 FCC5  F4A3        	DW	NOOP	; 0E=Sh-Enter
 2497 FCC7  E1F9        	DW	HCOPY	; 0F
 2498 FCC9  E281        	DW	HOMEPG	; 10
 2499 FCCB  E212        	DW	PAGEM	; 11
 2500 FCCD  E219        	DW	SCROL	; 12
 2501 FCCF  F4A3        	DW	NOOP	; 13=STOP
 2502 FCD1  E2ED        	DW	CLICK	; 14
 2503 FCD3  F4A3        	DW	NOOP	; 15
 2504 FCD5  F4A3        	DW	NOOP	; 16=CAPS
 2505 FCD7  F4A3        	DW	NOOP	; 17
 2506 FCD9  E207        	DW	CEL	; 18
 2507 FCDB  E283        	DW	CBL	; 19
 2508 FCDD  E254        	DW	INS	; 1A
 2509 FCDF  F93C        	DW	ESCPRG	; 1B
 2510 FCE1  F4A3        	DW	NOOP	; 1C=LIST
 2511 FCE3  F4A3        	DW	NOOP	; 1D=RUN
 2512 FCE5  E1ED        	DW	NL	; 1E=CONT
 2513 FCE7  E221        	DW	DEL	; 1F
 2514                   ;
 2515                   ; BASIC-Token	(Bit 7 im 1. Byte gesetzt!)
 2516                   ;
 2517 FCE9              TOKTAB:	TOKEN	INKEY$		; D5
    1 FCE9  C9          	  DB	'I' + Y
    1 FCEA  4E          	  DB	'N' + Y
    1 FCEB  4B          	  DB	'K' + Y
    1 FCEC  45          	  DB	'E' + Y
    1 FCED  59          	  DB	'Y' + Y
    1 FCEE  24          	  DB	'$' + Y
 2518                   	TOKEN	JOYST		; D6
    1 FCEF  CA          	  DB	'J' + Y
    1 FCF0  4F          	  DB	'O' + Y
    1 FCF1  59          	  DB	'Y' + Y
    1 FCF2  53          	  DB	'S' + Y
    1 FCF3  54          	  DB	'T' + Y
 2519                   	TOKEN	STRING$		; D7
    1 FCF4  D3          	  DB	'S' + Y
    1 FCF5  54          	  DB	'T' + Y
    1 FCF6  52          	  DB	'R' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 183
CF48    INC

    1 FCF7  49          	  DB	'I' + Y
    1 FCF8  4E          	  DB	'N' + Y
    1 FCF9  47          	  DB	'G' + Y
    1 FCFA  24          	  DB	'$' + Y
 2520                   	TOKEN	INSTR		; D8
    1 FCFB  C9          	  DB	'I' + Y
    1 FCFC  4E          	  DB	'N' + Y
    1 FCFD  53          	  DB	'S' + Y
    1 FCFE  54          	  DB	'T' + Y
    1 FCFF  52          	  DB	'R' + Y
 2521                   	TOKEN	RENUMBER	; D9
    1 FD00  D2          	  DB	'R' + Y
    1 FD01  45          	  DB	'E' + Y
    1 FD02  4E          	  DB	'N' + Y
    1 FD03  55          	  DB	'U' + Y
    1 FD04  4D          	  DB	'M' + Y
    1 FD05  42          	  DB	'B' + Y
    1 FD06  45          	  DB	'E' + Y
    1 FD07  52          	  DB	'R' + Y
 2522                   	TOKEN	DELETE		; DA
    1 FD08  C4          	  DB	'D' + Y
    1 FD09  45          	  DB	'E' + Y
    1 FD0A  4C          	  DB	'L' + Y
    1 FD0B  45          	  DB	'E' + Y
    1 FD0C  54          	  DB	'T' + Y
    1 FD0D  45          	  DB	'E' + Y
 2523                   	TOKEN	PAUSE		; DB
    1 FD0E  D0          	  DB	'P' + Y
    1 FD0F  41          	  DB	'A' + Y
    1 FD10  55          	  DB	'U' + Y
    1 FD11  53          	  DB	'S' + Y
    1 FD12  45          	  DB	'E' + Y
 2524                   	TOKEN	BEEP		; DC
    1 FD13  C2          	  DB	'B' + Y
    1 FD14  45          	  DB	'E' + Y
    1 FD15  45          	  DB	'E' + Y
    1 FD16  50          	  DB	'P' + Y
 2525                   	TOKEN	WINDOW		; DD
    1 FD17  D7          	  DB	'W' + Y
    1 FD18  49          	  DB	'I' + Y
    1 FD19  4E          	  DB	'N' + Y
    1 FD1A  44          	  DB	'D' + Y
    1 FD1B  4F          	  DB	'O' + Y
    1 FD1C  57          	  DB	'W' + Y
 2526                   	TOKEN	BORDER		; DE
    1 FD1D  C2          	  DB	'B' + Y
    1 FD1E  4F          	  DB	'O' + Y
    1 FD1F  52          	  DB	'R' + Y
    1 FD20  44          	  DB	'D' + Y
    1 FD21  45          	  DB	'E' + Y
    1 FD22  52          	  DB	'R' + Y
 2527                   	TOKEN	INK		; DF
    1 FD23  C9          	  DB	'I' + Y
    1 FD24  4E          	  DB	'N' + Y
    1 FD25  4B          	  DB	'K' + Y
 2528                   	TOKEN	PAPER		; E0
    1 FD26  D0          	  DB	'P' + Y
    1 FD27  41          	  DB	'A' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 184
CF48    INC

    1 FD28  50          	  DB	'P' + Y
    1 FD29  45          	  DB	'E' + Y
    1 FD2A  52          	  DB	'R' + Y
 2529                   	TOKEN	AT		; E1
    1 FD2B  C1          	  DB	'A' + Y
    1 FD2C  54          	  DB	'T' + Y
 2530                   	TOKEN	COLOR		; E2
    1 FD2D  C3          	  DB	'C' + Y
    1 FD2E  4F          	  DB	'O' + Y
    1 FD2F  4C          	  DB	'L' + Y
    1 FD30  4F          	  DB	'O' + Y
    1 FD31  52          	  DB	'R' + Y
 2531                   	TOKEN	SOUND		; E3
    1 FD32  D3          	  DB	'S' + Y
    1 FD33  4F          	  DB	'O' + Y
    1 FD34  55          	  DB	'U' + Y
    1 FD35  4E          	  DB	'N' + Y
    1 FD36  44          	  DB	'D' + Y
 2532                   	TOKEN	PSET		; E4
    1 FD37  D0          	  DB	'P' + Y
    1 FD38  53          	  DB	'S' + Y
    1 FD39  45          	  DB	'E' + Y
    1 FD3A  54          	  DB	'T' + Y
 2533                   	TOKEN	PRESET		; E5
    1 FD3B  D0          	  DB	'P' + Y
    1 FD3C  52          	  DB	'R' + Y
    1 FD3D  45          	  DB	'E' + Y
    1 FD3E  53          	  DB	'S' + Y
    1 FD3F  45          	  DB	'E' + Y
    1 FD40  54          	  DB	'T' + Y
 2534                   	TOKEN	BLOAD		; E6
    1 FD41  C2          	  DB	'B' + Y
    1 FD42  4C          	  DB	'L' + Y
    1 FD43  4F          	  DB	'O' + Y
    1 FD44  41          	  DB	'A' + Y
    1 FD45  44          	  DB	'D' + Y
 2535                   	TOKEN	VPEEK		; E7
    1 FD46  D6          	  DB	'V' + Y
    1 FD47  50          	  DB	'P' + Y
    1 FD48  45          	  DB	'E' + Y
    1 FD49  45          	  DB	'E' + Y
    1 FD4A  4B          	  DB	'K' + Y
 2536                   	TOKEN	VPOKE		; E8
    1 FD4B  D6          	  DB	'V' + Y
    1 FD4C  50          	  DB	'P' + Y
    1 FD4D  4F          	  DB	'O' + Y
    1 FD4E  4B          	  DB	'K' + Y
    1 FD4F  45          	  DB	'E' + Y
 2537                   	TOKEN	LOCATE		; E9
    1 FD50  CC          	  DB	'L' + Y
    1 FD51  4F          	  DB	'O' + Y
    1 FD52  43          	  DB	'C' + Y
    1 FD53  41          	  DB	'A' + Y
    1 FD54  54          	  DB	'T' + Y
    1 FD55  45          	  DB	'E' + Y
 2538                   	TOKEN	KEYLIST		; EA
    1 FD56  CB          	  DB	'K' + Y
    1 FD57  45          	  DB	'E' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 185
CF48    INC

    1 FD58  59          	  DB	'Y' + Y
    1 FD59  4C          	  DB	'L' + Y
    1 FD5A  49          	  DB	'I' + Y
    1 FD5B  53          	  DB	'S' + Y
    1 FD5C  54          	  DB	'T' + Y
 2539                   	TOKEN	KEY		; EB
    1 FD5D  CB          	  DB	'K' + Y
    1 FD5E  45          	  DB	'E' + Y
    1 FD5F  59          	  DB	'Y' + Y
 2540                   	TOKEN	SWITCH		; EC
    1 FD60  D3          	  DB	'S' + Y
    1 FD61  57          	  DB	'W' + Y
    1 FD62  49          	  DB	'I' + Y
    1 FD63  54          	  DB	'T' + Y
    1 FD64  43          	  DB	'C' + Y
    1 FD65  48          	  DB	'H' + Y
 2541                   	TOKEN	PTEST		; ED
    1 FD66  D0          	  DB	'P' + Y
    1 FD67  54          	  DB	'T' + Y
    1 FD68  45          	  DB	'E' + Y
    1 FD69  53          	  DB	'S' + Y
    1 FD6A  54          	  DB	'T' + Y
 2542                   	TOKEN	CLOSE		; EE
    1 FD6B  C3          	  DB	'C' + Y
    1 FD6C  4C          	  DB	'L' + Y
    1 FD6D  4F          	  DB	'O' + Y
    1 FD6E  53          	  DB	'S' + Y
    1 FD6F  45          	  DB	'E' + Y
 2543                   	TOKEN	OPEN		; EF
    1 FD70  CF          	  DB	'O' + Y
    1 FD71  50          	  DB	'P' + Y
    1 FD72  45          	  DB	'E' + Y
    1 FD73  4E          	  DB	'N' + Y
 2544                   	TOKEN	RANDOMIZE	; F0
    1 FD74  D2          	  DB	'R' + Y
    1 FD75  41          	  DB	'A' + Y
    1 FD76  4E          	  DB	'N' + Y
    1 FD77  44          	  DB	'D' + Y
    1 FD78  4F          	  DB	'O' + Y
    1 FD79  4D          	  DB	'M' + Y
    1 FD7A  49          	  DB	'I' + Y
    1 FD7B  5A          	  DB	'Z' + Y
    1 FD7C  45          	  DB	'E' + Y
 2545                   	TOKEN	VGET$		; F1
    1 FD7D  D6          	  DB	'V' + Y
    1 FD7E  47          	  DB	'G' + Y
    1 FD7F  45          	  DB	'E' + Y
    1 FD80  54          	  DB	'T' + Y
    1 FD81  24          	  DB	'$' + Y
 2546                   	TOKEN	LINE		; F2
    1 FD82  CC          	  DB	'L' + Y
    1 FD83  49          	  DB	'I' + Y
    1 FD84  4E          	  DB	'N' + Y
    1 FD85  45          	  DB	'E' + Y
 2547                   	TOKEN	CIRCLE		; F3
    1 FD86  C3          	  DB	'C' + Y
    1 FD87  49          	  DB	'I' + Y
    1 FD88  52          	  DB	'R' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 186
CF48    INC

    1 FD89  43          	  DB	'C' + Y
    1 FD8A  4C          	  DB	'L' + Y
    1 FD8B  45          	  DB	'E' + Y
 2548                   	TOKEN	CSRLIN		; F4 bis hierher in CAOS 3.1 bis 4.4
    1 FD8C  C3          	  DB	'C' + Y
    1 FD8D  53          	  DB	'S' + Y
    1 FD8E  52          	  DB	'R' + Y
    1 FD8F  4C          	  DB	'L' + Y
    1 FD90  49          	  DB	'I' + Y
    1 FD91  4E          	  DB	'N' + Y
 2549                   	TOKEN	DEVICE		; F5 (DRIVE in CAOS 4.5, 4.6 und HCBASIC.COM)
    1 FD92  C4          	  DB	'D' + Y
    1 FD93  45          	  DB	'E' + Y
    1 FD94  56          	  DB	'V' + Y
    1 FD95  49          	  DB	'I' + Y
    1 FD96  43          	  DB	'C' + Y
    1 FD97  45          	  DB	'E' + Y
 2550                   	TOKEN	FILES		; F6
    1 FD98  C6          	  DB	'F' + Y
    1 FD99  49          	  DB	'I' + Y
    1 FD9A  4C          	  DB	'L' + Y
    1 FD9B  45          	  DB	'E' + Y
    1 FD9C  53          	  DB	'S' + Y
 2551                   	TOKEN	CHDIR		; F7 bis hierher in CAOS 4.7
    1 FD9D  C3          	  DB	'C' + Y
    1 FD9E  48          	  DB	'H' + Y
    1 FD9F  44          	  DB	'D' + Y
    1 FDA0  49          	  DB	'I' + Y
    1 FDA1  52          	  DB	'R' + Y
 2552 FDA2  80          	DB	80H		; Ende-Kennung
 2553                   ;
 2554                   ; zugehoerige Sprungtabelle fuer BASIC-Token
 2555                   ;
 2556 FDA3  E9B3        TOKJP:	DW	INKEY		; D5
 2557 FDA5  EC2A        	DW	JOYST		; D6
 2558 FDA7  E62A        	DW	STRING		; D7
 2559 FDA9  EA7B        	DW	INSTR		; D8
 2560 FDAB  E689        TADR5:	DW	RENUM		; D9
 2561 FDAD  E868        	DW	DELETE		; DA
 2562 FDAF  E88C        	DW	PAUSE		; DB
 2563 FDB1  E8BC        	DW	BBEEP		; DC
 2564 FDB3  E8D7        	DW	WINDOW		; DD
 2565 FDB5  D421        	DW	ARGVL1		; DE (BORDER)
 2566 FDB7  E9D1        	DW	INK		; DF
 2567 FDB9  E9F2        	DW	PAPER		; E0
 2568 FDBB  C348        	DW	SNER		; E1 (Funktion AT)
 2569 FDBD  E9E3        	DW	BCOLOR		; E2
 2570 FDBF  EA41        	DW	SOUND		; E3
 2571 FDC1  EA09        	DW	PSET		; E4
 2572 FDC3  EA06        	DW	PRESET		; E5
 2573 FDC5  ECDE        	DW	BLOAD		; E6
 2574 FDC7  C348        	DW	SNER		; E7 (Funktion VPEEK)
 2575 FDC9  E912        	DW	VPOKE		; E8
 2576 FDCB  E982        	DW	LOCATE		; E9
 2577 FDCD  EAF0        	DW	KEYLIST		; EA
 2578 FDCF  EAE5        	DW	BKEY		; EB
 2579 FDD1  EAFC        	DW	SWITCH		; EC
 2580 FDD3  C348        	DW	SNER		; ED (Funktion PTEST)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 187
CF48    INC

 2581 FDD5  EBF2        	DW	CLOSE		; EE
 2582 FDD7  EC5E        	DW	OPEN		; EF
 2583 FDD9  EC53        	DW	RANDOM		; F0
 2584 FDDB  C348        	DW	SNER		; F1 (Funktion VGET)
 2585 FDDD  EC93        	DW	BLINE		; F2
 2586 FDDF  EC98        	DW	CIRCLE		; F3
 2587 FDE1  C348        	DW	SNER		; F4 (Funktion CSRLIN)
 2588 FDE3  ECBF        	DW	BDEV		; F5 Speichergeraet einstellen
 2589 FDE5  ED02        	DW	FILES		; F6 Verzeichnis anzeigen
 2590 FDE7  ED1D        	DW	CHDIR		; F7 Verzeichnis wechseln
 2591 FDE9              TOKJPE:				; F8-FF noch frei
 2592                   
 2593                   	ABSFILL	0FDF8h,<ROM-F-Ende>
    7 FDE9  FF FF FF FF 	  DS	0FDF8h - $,0FFh
 2594                   
 2595                   ; Adresse FDF8h fest - wird von anderen Programmen (z.B. TEMO) mit genutzt!
 2596                   
 2597 FDF8  80 40 20 10 BITTAB:	DB	80H,40H,20H,10H,8,4,2,1
  253 FE00              SMALL:
  254         0000      if duenn
  256                   else
  257                   	INCLUDE	ZSKLEIN.INC	; Zeichensatz Kleinbuchstaben Standard
    1                   ;*****************************************
    2                   ;**	CAOS 4.8 Zeichensatz Klein	**
    3                   ;**					**
    4                   ;**	Adresse:  FE00h bis FFFFh	**
    5                   ;**	Codes 00h-1Fh und 60h-7Fh	**
    6                   ;**					**
    7                   ;**	letzte Aenderung: 28.05.2021	**
    8                   ;*****************************************
    9                   
   10 FE00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 082H, 0FEH	; 00H Dummy
   11 FE08  00 00 22 72 	DB	000H, 000H, 022H, 072H, 022H, 03EH, 000H, 000H	; 01H Backspace
   12 FE10  00 32 62 FE 	DB	000H, 032H, 062H, 0FEH, 062H, 032H, 000H, 000H	; 02H Zeile loeschen
   13 FE18  7E 81 B9 A5 	DB	07EH, 081H, 0B9H, 0A5H, 0B9H, 0A5H, 0B9H, 081H	; 03H Break
   14 FE20  55 FF 55 FF 	DB	055H, 0FFH, 055H, 0FFH, 055H, 0FFH, 055H, 0FFH	; 04H
   15 FE28  AA AA AA AA 	DB	0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH	; 05H
   16 FE30  FF 00 FF 00 	DB	0FFH, 000H, 0FFH, 000H, 0FFH, 000H, 0FFH, 000H	; 06H
   17 FE38  00 00 3C 42 	DB	000H, 000H, 03CH, 042H, 042H, 07EH, 000H, 000H	; 07H Beep
   18 FE40  00 30 60 FE 	DB	000H, 030H, 060H, 0FEH, 060H, 030H, 000H, 000H	; 08H Cursor links
   19 FE48  00 18 0C FE 	DB	000H, 018H, 00CH, 0FEH, 00CH, 018H, 000H, 000H	; 09H Cursor rechts
   20 FE50  10 10 10 54 	DB	010H, 010H, 010H, 054H, 07CH, 038H, 010H, 000H	; 0AH Cursor unten
   21 FE58  10 38 7C 54 	DB	010H, 038H, 07CH, 054H, 010H, 010H, 010H, 000H	; 0BH Cursor oben
   22 FE60  70 60 50 10 	DB	070H, 060H, 050H, 010H, 010H, 010H, 07CH, 000H	; 0CH Bildschirm loeschen
   23 FE68  00 02 1A 32 	DB	000H, 002H, 01AH, 032H, 07EH, 030H, 018H, 000H	; 0DH Enter
   24 FE70  AA 55 AA 55 	DB	0AAH, 055H, 0AAH, 055H, 0AAH, 055H, 0AAH, 055H	; 0EH
   25 FE78  3E 7C 7C 3E 	DB	03EH, 07CH, 07CH, 03EH, 03EH, 07CH, 0F8H, 0F8H	; 0FH Hardcopy
   26                   
   27 FE80  38 30 28 04 	DB	038H, 030H, 028H, 004H, 004H, 004H, 004H, 000H	; 10H Cursor Home
   28 FE88  FE 10 38 7C 	DB	0FEH, 010H, 038H, 07CH, 054H, 010H, 010H, 000H	; 11H Page-Modus
   29 FE90  10 10 54 7C 	DB	010H, 010H, 054H, 07CH, 038H, 010H, 0FEH, 000H	; 12H Scroll-Modus
   30 FE98  7E 81 9D A1 	DB	07EH, 081H, 09DH, 0A1H, 099H, 085H, 0B9H, 081H	; 13H Stop
   31 FEA0  00 3C 42 5A 	DB	000H, 03CH, 042H, 05AH, 05AH, 042H, 03CH, 000H	; 14H Tastenclick
   32 FEA8  88 44 22 11 	DB	088H, 044H, 022H, 011H, 088H, 044H, 022H, 011H	; 15H
   33 FEB0  00 FE 44 E4 	DB	000H, 0FEH, 044H, 0E4H, 04EH, 044H, 0FEH, 000H	; 16H Shift-Lock
   34 FEB8  11 22 44 88 	DB	011H, 022H, 044H, 088H, 011H, 022H, 044H, 088H	; 17H
   35 FEC0  02 32 1A FE 	DB	002H, 032H, 01AH, 0FEH, 01AH, 032H, 002H, 000H	; 18H Cursor an Zeilenende
   36 FEC8  80 98 B0 FE 	DB	080H, 098H, 0B0H, 0FEH, 0B0H, 098H, 080H, 000H	; 19H Cursor an Zeilenanfang
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 188
ZSKLEIN INC

   37 FED0  00 08 7C 06 	DB	000H, 008H, 07CH, 006H, 07CH, 008H, 000H, 000H	; 1AH INS
   38 FED8  CC CC 33 33 	DB	0CCH, 0CCH, 033H, 033H, 0CCH, 0CCH, 033H, 033H	; 1BH ESC
   39 FEE0  7E 81 A1 A1 	DB	07EH, 081H, 0A1H, 0A1H, 0A1H, 0A1H, 0BDH, 081H	; 1CH List
   40 FEE8  7E 81 B9 A5 	DB	07EH, 081H, 0B9H, 0A5H, 0B9H, 0A5H, 0A5H, 081H	; 1DH Run
   41 FEF0  7E 81 99 A5 	DB	07EH, 081H, 099H, 0A5H, 0A1H, 0A5H, 099H, 081H	; 1EH Cont
   42 FEF8  00 10 3E 60 	DB	000H, 010H, 03EH, 060H, 03EH, 010H, 000H, 000H	; 1FH DEL
   43                   
   44 FF00  3C 42 99 A1 	DB	03CH, 042H, 099H, 0A1H, 0A1H, 099H, 042H, 03CH	; 60H (c)
   45 FF08  00 00 78 0C 	DB	000H, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 61H a
   46 FF10  E0 60 7C 66 	DB	0E0H, 060H, 07CH, 066H, 066H, 066H, 0DCH, 000H	; 62H b
   47 FF18  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0C0H, 0CCH, 078H, 000H	; 63H c
   48 FF20  1C 0C 7C CC 	DB	01CH, 00CH, 07CH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 64H d
   49 FF28  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 65H e
   50 FF30  38 6C 60 F0 	DB	038H, 06CH, 060H, 0F0H, 060H, 060H, 0F0H, 000H	; 66H f
   51 FF38  00 00 76 CC 	DB	000H, 000H, 076H, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 67H g
   52 FF40  E0 60 6C 76 	DB	0E0H, 060H, 06CH, 076H, 066H, 066H, 0E6H, 000H	; 68H h
   53 FF48  30 00 70 30 	DB	030H, 000H, 070H, 030H, 030H, 030H, 0FCH, 000H	; 69H i
   54 FF50  0C 00 1C 0C 	DB	00CH, 000H, 01CH, 00CH, 00CH, 0CCH, 0CCH, 078H	; 6AH j
   55 FF58  E0 60 66 6C 	DB	0E0H, 060H, 066H, 06CH, 078H, 06CH, 0E6H, 000H	; 6BH k
   56 FF60  70 30 30 30 	DB	070H, 030H, 030H, 030H, 030H, 030H, 0FCH, 000H	; 6CH l
   57 FF68  00 00 CC FE 	DB	000H, 000H, 0CCH, 0FEH, 0FEH, 0D6H, 0C6H, 000H	; 6DH m
   58 FF70  00 00 F8 CC 	DB	000H, 000H, 0F8H, 0CCH, 0CCH, 0CCH, 0CCH, 000H	; 6EH n
   59 FF78  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0CCH, 0CCH, 078H, 000H	; 6FH o
   60                   
   61 FF80  00 00 DC 66 	DB	000H, 000H, 0DCH, 066H, 066H, 07CH, 060H, 0F0H	; 70H p
   62 FF88  00 00 76 CC 	DB	000H, 000H, 076H, 0CCH, 0CCH, 07CH, 00CH, 01EH	; 71H q
   63 FF90  00 00 DC 76 	DB	000H, 000H, 0DCH, 076H, 066H, 060H, 0F0H, 000H	; 72H r
   64 FF98  00 00 7C C0 	DB	000H, 000H, 07CH, 0C0H, 078H, 00CH, 0F8H, 000H	; 73H s
   65 FFA0  10 30 7C 30 	DB	010H, 030H, 07CH, 030H, 030H, 034H, 018H, 000H	; 74H t
   66 FFA8  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 75H u
   67 FFB0  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 078H, 030H, 000H	; 76H v
   68 FFB8  00 00 C6 D6 	DB	000H, 000H, 0C6H, 0D6H, 0FEH, 0FEH, 06CH, 000H	; 77H w
   69 FFC0  00 00 C6 6C 	DB	000H, 000H, 0C6H, 06CH, 038H, 06CH, 0C6H, 000H	; 78H x
   70 FFC8  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 79H y
   71 FFD0  00 00 FC 98 	DB	000H, 000H, 0FCH, 098H, 030H, 064H, 0FCH, 000H	; 7AH z
   72 FFD8  6C 00 78 0C 	DB	06CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 7BH ae
   73 FFE0  CC 00 78 CC 	DB	0CCH, 000H, 078H, 0CCH, 0CCH, 0CCH, 078H, 000H	; 7CH oe
   74 FFE8  CC 00 CC CC 	DB	0CCH, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 7DH ue
   75 FFF0  3C 66 66 6C 	DB	03CH, 066H, 066H, 06CH, 066H, 066H, 06CH, 0F0H	; 7EH sz
   76 FFF8  FF 81 81 81 	DB	0FFH, 081H, 081H, 081H, 081H, 081H, 081H, 0FFH	; 7FH
  258                   endif
  259                   	.DEPHASE
  260                   
    2                   	END
 0 Error(s) Detected.
 16512 Absolute Bytes. 1305 Symbols Detected.
0 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 078H, 03