SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   1
NORMAL  Z80

    1         0000      DUENN	EQU	0	; 0 = Zeichensatz klassisch, 1 = Zeichensatz duenn
    2                   INCLUDE	CAOS48.Z80
    1                   ;*************************************************
    2                   ;**						**
    3                   ;**	CAOS 4.8   (c) KC-Club 2021		**
    4                   ;**						**
    5                   ;*************************************************
    6                   ;**						**
    7                   ;**	Entwickler:				**
    8                   ;**		Mario Leubner			**
    9                   ;**		Daniel Elstner (CAOS 4.5)	**
   10                   ;**		Frank Ludwig (Teile in CAOS 4.8)**
   11                   ;**						**
   12                   ;**	CAOS-Versionen:				**
   13                   ;**	13.04.1994 - CAOS 4.2 Reassemblierung	**
   14                   ;**	17.02.1995 - CAOS 4.3			**
   15                   ;**	09.02.2003 - CAOS 4.4			**
   16                   ;**	06.09.2010 - CAOS 4.5			**
   17                   ;**	05.03.2016 - CAOS 4.6 beta2 (KC-Labor)	**
   18                   ;**	04.12.2018 - CAOS 4.7 final		**
   19                   ;**	03.02.2018 - CAOS 4.7 final & EDIT 0.4	**
   20                   ;**	10.04.2019 - CAOS 4.7 Patch 1		**
   21                   ;**	24.03.2020 - CAOS 4.8 beta1 (KC-Labor)	**
   22                   ;**	08.10.2020 - CAOS 4.8 beta2 (KC-Labor)	**
   23                   ;**	20.12.2020 - CAOS 4.8 beta3 (KC-Labor)	**
   24                   ;**	04.04.2021 - CAOS 4.8 beta4 (KC-Labor)	**
   25                   ;**	22.05.2021 - CAOS 4.8 beta5 (KC-Labor)	**
   26                   ;**	20.06.2021 - CAOS 4.8 final (KC-Labor)	**
   27                   ;**	12.09.2021 - CAOS 4.8 Patch 1		**
   28                   ;**	01.01.2022 - CAOS 4.8 Patch 2		**
   29                   ;**	21.05.2022 - CAOS 4.8 Patch 3		**
   30                   ;**						**
   31                   ;*************************************************
   32                   
   33                   ; !!! Versionsdatum nur noch in VORBLOCK.INC eintragen !!!
   34                   
   35         0000      BETA	equ	0		; 0 fuer Vollversion, 1 fuer beta-Version
   36                   	;benoetigt 1 Byte im ROM C
   37                   
   38                   ; Die Bits 2, 3 und 4 von Port2 (86h) sind beim KC85/4 nicht benutzt worden.
   39                   ; Fuer eine Nutzung beim KC85/5 gibt es mehrere Ideen/Optionen. Diese sind
   40                   ; untereinander nicht kompatibel. CAOS 4.8 ist zur Nutzung des 512K-Flash-ROM
   41                   ; mit Zeichensatz-Umschaltung vorbereitet. Die Erweiterung des RAM bzw. USER-ROM
   42                   ; ist dadurch nicht mehr vorgesehen. Wenn kein Flash-ROM installiert ist, kann
   43                   ; aber trotzdem durch nachgeladene Treiber z.B. der RAM mit 1 oder 2 MByte
   44                   ; genutzt werden. Die einzelnen Optionen nutzen folgende Bits:
   45                   ;
   46                   ; Option  234	Beschreibung
   47                   ; RAM1MB  xx-	Erweiterung des internen RAM auf 1MByte
   48                   ; RAM2MB  xxx	Erweiterung des internen RAM auf 2MByte
   49                   ; USER8   --x	Erweiterung des USER-ROM von 4 auf 8 Ebenen
   50                   ; CAOS2   --x	Zeichensatz-Umschaltung durch zweite CAOS-ROM-Ebene
   51                   ; SYSROM  xx-	Ansteuerung eines 512K Flash-ROM mit 8 CAOS-Versionen
   52                   
   53         0001      CAOS2	EQU	1		; Erweiterung zur Umschaltung des Zeichensatzes
   54                   	;benoetigt 8 Byte im ROM C
   55                   ; Diese Erweiterung setzt einen 16K grossen CAOS-ROM-C und einen 16K grossen
   56                   ; CAOS-ROM-E voraus. In der ersten Haelfte der ROM's wird das System mit dem
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   2
CAOS48  Z80

   57                   ; duennen Zeichensatz gebrannt, in der zweiten Haelfte der Standard-Zeichensatz.
   58                   ; Umgeschaltet wird mit Bit 4 von Port 86h (IX+4) bzw. SWITCH 5 10
   59                   
   60         0001      SYSROM	EQU	1		; Erweiterung fuer 8 Ebenen System-ROM
   61                   	;benoetigt 29 Byte im ROM C
   62                   	;benoetigt 5 Byte im ROM F
   63                   ; Diese Erweiterung setzt je einen Flash-ROM mit 8 CAOS-Versionen voraus.
   64                   ; Ueber die Bits 2 und 3 des Port 86h wird ein Zaehler initiiert, welcher die
   65                   ; aktuelle Ebene speichert und diese als Adresse an den Flash-ROM weiter gibt.
   66                   ; Ein H-Impuls an Bit 3 (86h) bei Bit 2=High setzt den Zaehler zurueck
   67                   ; Ein H-Impuls an Bit 3 (86h) bei Bit 2=Low zaehlt den Zaehler vorwaerts
   68                   ;
   69                   ; Umgeschalten werden die System-Ebenen mit JUMP 0 bis 7
   70                   
   71         0000      RAM1MB	EQU	0		; RAM8 mit 1MB verwalten?
   72                   	;benoetigt 26 Byte im ROM C
   73                   ; Diese Erweiterung setzt 1MByte RAM statt des 256K RAM im Grundgeraet voraus.
   74                   ; Die Idee dazu stammt von Frank Dachselt und war im Original sogar 2MByte gross
   75                   ; und zusaetzlich noch auf Moduladresse 06 mit dem zweiten Megabyte praesent.
   76                   ; Hardware: Die zusaetzlichen beiden RAM-Adressen werden auf Bit 2 und 3 des
   77                   ; Port2 (86h) gelegt (Bei 2MB war das Bit 4 auch noch mit genutzt)
   78                   ;
   79                   ; Diese Erweiterung kann nicht genutzt werden, wenn die Option SYSROM aktiv ist.
   80                   
   81         0000      USER8	EQU	0		; Erweiterung des USER-ROM in 8 Ebenen
   82                   	;benoetigt 2 Byte im ROM C
   83                   ; Diese Erweiterung setzt einen 64K ROM an Stelle des 32K USER-ROM voraus.
   84                   ;
   85                   ; Umgeschalten werden die 8 USER-ROM Ebenen mit Bit 4, 5 und 6 des Port 86h
   86                   ; SWITCH 2 nn ergibt dann:
   87                   ; nn=C1	Ebene 0	BASIC
   88                   ; nn=C9 Ebene 1
   89                   ; nn=D1	Ebene 2	DEBUGGER
   90                   ; nn=D9 Ebene 3
   91                   ; nn=E1	Ebene 4	ASM
   92                   ; nn=E9 Ebene 5
   93                   ; nn=F1	Ebene 6	EDIT
   94                   ; nn=F9 Ebene 7
   95                   ;
   96                   ; Diese Erweiterung kann nicht genutzt werden, wenn die Option CAOS2 aktiv ist.
   97                   
   98                   ; Uebersetzen ohne Erzeugen eines Listings:
   99                   ;	SLRZ80 CAOS48.@@Z/F
  100                   ; oder:	Z80ASM CAOS48.@@Z/F
  101                   ;	REN CAOS48.COM CAOS48.KCC
  102                   
  103                   ; Uebersetzen mit Erzeugen eines Listings:
  104                   ;	SLRZ80 CAOS48/F
  105                   ; oder:	Z80ASM CAOS48/F
  106                   ;	REN CAOS48.COM CAOS48.KCC
  107                   
  108                   ; Hardware:	(KC85/5+)
  109                   ;
  110                   ;256 KByte interner RAM (RAM0,RAM4,RAM8)
  111                   ; 64 KByte IRM (2 unabhaengige Bilder)
  112                   ; 16 KByte CAOS-ROM C000-FFFF
  113                   ; 32 KByte USER-ROM C000-DFFF (4 Ebenen)
  114                   ; Statt der einzelnen ROMs kann auch die 512K Flash-ROM-Erweiterung von
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   3
CAOS48  Z80

  115                   ; Andreas Schlechte verwendet werden. Dann stehen gleichzeitig 8 verschiedene
  116                   ; CAOS-Versionen zur Verfuegung und auch beide Zeichenstze von CAOS 4.8
  117                   ;---------------------------------------------------------------------
  118                   
  119                   ;**	Speicheruebersicht, Belegung der CAOS-ROMs	**
  120                   
  121                   ;Inhalt ROM-C:
  122                   ;C000	IRM-Defaulttabelle
  123                   ;C051	System-Initialisierung, Erzeugung Device-Treibertabellen
  124                   ;C1C0	SYSTEM-Check, Modulcheck
  125                   ;C349	Module lesen und schalten (SWITCH)
  126                   ;C488	F-Tastenbelegung (KEY, KEYLIST)
  127                   ;C57E	Farben setzen (COLOR)
  128                   ;C5BA	Fensterfunktionen (WINDOW, WINAK, WININ)
  129                   ;C64D	JUMP-Erweiterung 0-7 fuer FLASH-ROM-Baenke
  130                   ;C66A	Grafikfunktionen (LINE, PUSE, CIRCLE, PUDE)
  131                   ;C832	Speicherfunktionen (DISPLAY, MODIFY)
  132                   ;C8DE	Druckertreiber, V.24-Duplexbetrieb (Protokoll, Screen- oder Hardcopy)
  133                   ;CD22	Byteweise Ein-/Ausgaberoutinen (MBOUT, MBIN)
  134                   ;CE93	Tabelle der Modulnamen
  135                   
  136                   ;Inhalt ROM-D:
  137                   ;D003	TAPE-Treiber = Kassettenausgabe, Kassetteneingabe Standard
  138                   ;D0F9	DISK-Treiber = D004/D008 Floppy-Routinen
  139                   ;D1B6	Pixelausgabe, Fensterscrolling, Zeile loeschen
  140                   ;D2D0	Wurzelberechnung (SQR)
  141                   ;D2DE	Speichercheck VIEW
  142                   ;D320	Unterprogramme fuer Modulcheck
  143                   ;D34D	DISK: DIR, STAT, ERA, REN
  144                   ;D497	TYPE, DUMP, INIT
  145                   ;D5D6	DEVICE-Treiber umschalten, auflisten
  146                   ;D641	DISK: Laufwerk wechseln mit DRIVE
  147                   ;D6F5	TAPE: Kassetteninhalt auflisten mit TAPELIST
  148                   ;D7CC	Grafiksequenzen fuer die Drucker
  149                   ;D82B	V.24-Initialisierungstabellen
  150                   ;D858	Original der Unterprogrammtabelle SUTAB
  151                   ;D8F3	Treibertabellen fuer TAPE und DISK
  152                   ;D933	Portinittabellen
  153                   ;D959	M001-Initialisierungstabelle fuer Centronics
  154                   ;D965	Defaulttabelle fuer Joystick-Belegung
  155                   ;D971	ISRTAB	Interrupttabelle
  156                   ;D991	IBM-Codierungen fuer Druckerausgabe
  157                   ;D99F	CAOS-Versionsanzeige (HELP)
  158                   ;DAB8	IBM-Zeichensatz
  159                   
  160                   ;Inhalt ROM-E:
  161                   ;E000	RESET, BASIC-Verteiler
  162                   ;E055	CRT-Treiber (PADR, DABR, CRT-Grundprogramm)
  163                   ;E1D3	Routinen der Steuercodes
  164                   ;E2F2	Tastaturtreiber mit ISR CTC Kanal 3, PIO-B, SIO-B
  165                   ;E3E9	Joysticktreiber fuer M008/M021
  166                   ;E461	Kassetten-Routinen Eingabe/Ausgabe
  167                   ;E4DD	Programmverteiler PV7 fuer DEVICE-Umleitungen
  168                   ;E577	Interruptroutinen fuer Kassetten-Ein/Ausgabe
  169                   ;E599	BASIC-Erweiterungen
  170                   ;ED44	Sprung aus CAOS-ROM-C in ROM-Modul (z.B. M052-USB)
  171                   ;ED72	Initialisierungstabelle fuer M021
  172                   ;ED81	Interruptroutine fuer Tonlaenge (CTC2)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   4
CAOS48  Z80

  173                   ;ED8A	Reaktionsprogramm auf Shift+CLR
  174                   ;EDA0	Dezimalausgabe
  175                   ;EDB0	Tabelle der ESC-Funktionen
  176                   ;EDE1	Autostart-Kommando und Dateiname fuer DISK/USB
  177                   ;EDF7	Zuordnungstabelle der BASIC-Kanaele
  178                   ;EDFF	CAOS-Versionsnummer
  179                   ;EE00	Zeichenbildtabelle Grossbuchstaben
  180                   
  181                   ;Inhalt ROM-F:
  182                   ;F000	Power-ON, Sprungverteiler PV1-7, IRMON, IRMOF, RCALL
  183                   ;F0B4	Zeichenkette anzeigen (OSTR)
  184                   ;F0BA	Kommandos SWITCH und JUMP
  185                   ;F153	Systemstart mit Autostart ROM-Modul oder Floppy
  186                   ;F1DD	Kommandointerpreter, MENU, LOOP, ZSUCH
  187                   ;F363	Umschaltung Ein-/Ausgabe (NORM, NOUT, SOUT, NIN, SIN)
  188                   ;F390	Zeichenaus-/eingabe (HLHX, AHEX, OCHR, INTB, ...)
  189                   ;F3D9	Tastatureingabe KBD, INLIN
  190                   ;F4A3	Kommando go
  191                   ;F4CA	Hex- oder Dezimalzahlen/Argumente erfassen (RHEX, RDEZ, GARG)
  192                   ;F54A	Ports initialisieren (INIEA, INIMEX)
  193                   ;F562	Device-Kommandos (SAVE, VERIFY, LOAD)
  194                   ;F7B3	Kommandos COLOR, DISPLAY, MODIFY
  195                   ;F7E7	Kommandos WINDOW, KEY (mit Keylist)
  196                   ;F819	Cursordarstellung, Grafikroutinen (PUSE, PUDE, CIRCL, LINE)
  197                   ;F87B	BASIC-I/O-Verteiler
  198                   ;F8F4	Zeichenkette anzeigen (ZKOUT)
  199                   ;F8FD	Tonausgabe (TON)
  200                   ;F949	ESC-Programme
  201                   ;F9CA	Druckerinitialisierung (LSTDEV) und Duplexinitialisierung (V24DUP)
  202                   ;F9FF	Druckroutinen (M001, M021, V.24-Modul)
  203                   ;FA8C	SIO-Empfangsinterrupt (Tastatur, ESC...)
  204                   ;FB8E	CAOS-Arbeitsbereich verlagern (SIXD)
  205                   ;FB90	Aufruf eines UP im CAOS-ROM-C, CAOS-ROM C ein/aus schalten
  206                   ;FBAB	Multiplikation (MULT)
  207                   ;FBBB	Menuewort DEVICE
  208                   ;FBE3	Versteckte Menueworte DIR, CD, ERA, REN
  209                   ;FC12	DEVICE-Routinen MBO, MBI, ISRO, CSRO, ISRI, CSRI
  210                   ;FC30	Warteschleife (WAIT)
  211                   ;FC38	Tastencodetabelle KTAB
  212                   ;FCB8	CRTTAB	Steuerfunktionstabelle
  213                   ;FCF8	TOKTAB	BASIC-Token mit Sprungtabelle
  214                   ;FDB2	BASIC-Unterprogrammtabelle
  215                   ;FDF8	Bittabelle fuer Punktroutinen
  216                   ;FE00	Zeichenbildtabelle Kleinbuchstaben
  217                   
  218                   ;---------------------------------------------------------------------
  219                   
  220                   VB_NAME	MACRO
  221                   	DB	'CAOS48  KCC'	; Dateiname im Vorblock
  222                   	ENDM
  223         4000      AADR	EQU	4000H		; AADR
  224         8000      EADR	EQU	8000H		; EADR+1
  225                   
  226                   	INCLUDE	VORBLOCK.INC	; CAOS-Vorblock
    1                   ; Erzeugen des CAOS-Vorblock fuer CAOS 4.8 und USER-ROM:
    2                   
    3                   DATUM	MACRO
    4                   	DB	'28.10.2022'	; Versionsdatum nur hier aendern!
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   5
VORBLOCKINC

    5                   	ENDM
    6                   
    7                   	VB_NAME			; Dateiname
    1 0100  43 41 4F 53 	DB	'CAOS48  KCC'	; Dateiname im Vorblock
    8 010B  00 00 00 00 	DS	5,0
    9 0110  02          	DB	2		; 2 Adressen
   10 0111  4000        	DW	AADR		; Anfangsadresse
   11 0113  8000        	DW	EADR		; Endadresse+1
   12 0115  00 00 00 00 	DS	75,0
   13 0160  4B 43 2D 43 	DB	'KC-Club, M. Leubner:  '
   14                   	DATUM			; Versionsdatum
    1 0176  32 38 2E 31 	DB	'28.10.2022'	; Versionsdatum nur hier aendern!
  227                   
  228                   	INCLUDE	EQU48.INC	; Vereinbarungen, Uebersicht
    1                   ;*****************************************
    2                   ;**	CAOS 4.8			**
    3                   ;**					**
    4                   ;**	Macros und Vereinbarungen	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 28.08.2021	**
    7                   ;*****************************************
    8                   
    9                   MESSAGE	MACRO	MSG1,N,MSG2
   10                   	 .PRINTX MSG1 N MSG2
   11                   	ENDM
   12                   
   13                   ; Mit FF auffuellen, bis die absolute Adresse LOC erreicht ist:
   14                   ABSFILL	MACRO	LOC,WHAT
   15                   	 IF $ GT LOC
   16                   	  MESSAGE <Fehler! LOC:>,% $ - LOC,<Byte zu viel vor WHAT>
   17                   	 ELSE
   18                   	  IF2
   19                   	   MESSAGE <LOC:>,% LOC - $,<Byte frei vor WHAT>
   20                   	  ENDIF
   21                   	  DS	LOC - $,0FFh
   22                   	 ENDIF
   23                   	ENDM
   24                   
   25                   ; Undokumentierter Opcode:
   26                   ;	IN	F,(C)
   27                   INFC	MACRO
   28                   	 DB	0EDh,70h
   29                   	ENDM
   30                   
   31                   ; Undokumentierter Opcode:
   32                   ;	RES	BI,(IX+DISP),A
   33                   RESIXA	MACRO	BI,DISP
   34                   	 DB	0DDh,0CBh,DISP
   35                   	 DB	BI SHL 3 OR 10000111b
   36                   	ENDM
   37                   
   38                   ; Undokumentierter Opcode:
   39                   ;	SET	BI,(IX+DISP),A
   40                   SETIXA	MACRO	BI,DISP
   41                   	 DB	0DDh,0CBh,DISP
   42                   	 DB	BI SHL 3 OR 11000111b
   43                   	ENDM
   44                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   6
EQU48   INC

   45                   ; Setze Bit 7 des ersten Zeichens fuer BASIC-Token:
   46                   TOKEN	MACRO	STRING
   47                   Y	 DEFL	80h
   48                   	 IRPC	X,STRING
   49                   	  DB	'&X' + Y
   50                   Y	  DEFL	0
   51                   	 ENDM
   52                   	ENDM
   53                   
   54                   ;---------------------------------------
   55                   
   56                   ; Steuerzeichen:
   57                   
   58         000A      LF	EQU	0AH
   59         000D      CR	EQU	0DH
   60         001B      ESC	EQU	1BH
   61                   
   62                   ;---------------------------------------
   63                   
   64                   ; Portadressen im Grundgeraet:
   65                   
   66         0084      PORT1	EQU	84H	; Ausgabe-Port D08A	Merkzelle ist (IX+1)
   67                   			;	Bit 0 - Anzeige Bild 0 oder 1
   68                   			;	Bit 1 - Zugriff auf 0=Pixel- oder 1=Farbebene
   69                   			;	Bit 2 - Zugriff auf Bild 0 oder 1
   70                   			;	Bit 3 - 0=hohe Farbaufloesung oder 1=niedrige
   71                   			;	Bit 4-7 Auswahl der RAM8-Ebene (256K)
   72         0086      PORT2	EQU	86H	; Ausgabe-Port D09A	Merkzelle ist (IX+4)
   73                   			;	Bit 0 - RAM4 ein/aus
   74                   			;	Bit 1 - RAM4 Schreibschutz (1=aus)
   75                   			;	Bit 2 - Flash: Systemumschaltung, Reset-Impuls
   76                   			;	Bit 3 - Flash: Systemumschaltung, Zaehl-Impuls
   77                   			;	Bit 4 - Flash: Umschaltung Zeichensatz
   78                   			;	Bit 5-6 Auswahl der USER-ROM-Ebene
   79                   			;	Bit 7 - CAOS-ROM C ein/aus
   80         0088      PIOAD	EQU	88H	; System-PIO Datenbyte Port A
   81                   			;	Bit 0 - CAOS ROM-E ein/aus
   82                   			;	Bit 1 - RAM0 ein/aus
   83                   			;	Bit 2 - IRM ein/aus
   84                   			;	Bit 3 - Schreibschutz RAM0
   85                   			;	Bit 4 - K_OUT
   86                   			;	Bit 5 - System-LED
   87                   			;	Bit 6 - Motorschaltspannung
   88                   			;	Bit 7 - USER-ROM ein/aus
   89         0089      PIOBD	EQU	89H	; System-PIO Datenbyte Port B
   90                   			;	Bit 0 - Symmetrie-Flip-Flop Tonausgabe
   91                   			;	Bit 1 \
   92                   			;	Bit 2 - Lautstaerke Tonausgabe
   93                   			;	Bit 3 - 4 Bit (Low-aktiv)
   94                   			;	Bit 4 /
   95                   			;	Bit 5 - RAM8 ein/aus
   96                   			;	Bit 6 - Schreibschutz RAM8
   97                   			;	Bit 7 - Blinken ein/aus
   98         008A      PIOAS	EQU	8AH	; System-PIO Steuerbyte Port A
   99         008B      PIOBS	EQU	8BH	; System-PIO Steuerbyte Port B
  100         008C      CTC0	EQU	8CH	; CTC Kanal 0 (Tonhoehe 1)
  101         008D      CTC1	EQU	8DH	; CTC Kanal 1 (Kassettenausgabe)
  102         008E      CTC2	EQU	8EH	; CTC Kanal 2 (Tondauer)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   7
EQU48   INC

  103         008F      CTC3	EQU	8FH	; CTC Kanal 3 (Tastatur)
  104                   
  105                   ; Portadressen des Koppel-RAM (D004):
  106                   
  107         00F1      ERRTX	EQU	000F1H	; Fehlertext			(ab DEP 2.0)
  108         80F1      STBYT2	EQU	080F1H	; 2. Steuerbyte:		(ab DEP 2.0)
  109                   			;	Bit 0 - Anforderung
  110                   			;	Bit 1 - Laufwerkswechsel
  111                   			;	Bit 2 - Userwechsel
  112                   			;	Bit 3..6 reserviert
  113                   			;	Bit 7 - Fehlerrueckmeldung
  114         81F1      LWANF	EQU	081F1H	; Laufwerk ('A', 'B', ... 'P')
  115         82F1      UANF	EQU	082F1H	; User-Bereich (00H ... 0FH)
  116         83F1      DEPVER	EQU	083F1H	; DEP-Version BCD
  117         84F1      DATE	EQU	084F1H	; Datum BCD			(ab DEP 3.0)
  118                   			;	Jahr (00..99)
  119                   			;	Monat (1..12)
  120                   			;	Tag (1..31)
  121         87F1      TIME	EQU	087F1H	; Uhrzeit BCD			(ab DEP 3.0)
  122                   			;	Stunde (0..23)
  123                   			;	Minute (0..59)
  124                   			;	Sekunde (0..59)
  125                   
  126         80F2      FDATA	EQU	080F2H	; Daten- bzw. Sektorpuffer 128 Byte lang
  127         80F3      STBYT1	EQU	080F3H	; 1. Steuerbyte:
  128                   			;	Bit 0 - Anforderung
  129                   			;	Bit 1 - 1=schreiben/0=lesen
  130                   			;	Bit 3 - oeffnen
  131                   			;	Bit 6 - schliessen
  132                   			;	Bit 7 - Fehlerrueckmeldung
  133                   			;	Bit	5 4 2	Funktionsauswahl:
  134                   			;		0 0 0	Sektor lesen/schreiben
  135                   			;		0 0 1	DIR-Anforderung
  136                   			;		0 1 0	ERA
  137                   			;		0 1 1	STAT
  138                   			;		1 0 0	REN
  139                   			;		1 0 1	SETRO
  140                   			;		1 1 0	SETWR
  141                   			;		1 1 1	BASIC-Byte lesen/schreiben
  142         81F3      FCODE	EQU	081F3H	; Fehlercode
  143         82F3      DIRBUF	EQU	082F3H	; Puffer fuer Dateiname oder Directory
  144         8EF3      BASBYT	EQU	08EF3H	; Datenbyte fuer BASIC-Byte-Schnittstelle
  145         B3F3      UROK	EQU	0B3F3H	; Betriebsart	0 = Anfangswert
  146                   			;		1 = CP/M-System lauft
  147                   			;		2 = Not ready
  148                   			;		3 = Can't read
  149                   			;		4 = No system
  150                   			;		5 = CAOS-Betriebsart / DEP laeuft
  151                   
  152                   ;---------------------------------------
  153                   
  154                   ; Belegung Systembereich im RAM0:
  155                   
  156                   ; 0000-000Ah	Dateiname
  157                   ; 000Bh		Interrupt-Mode fuer USB (von M052-Software verwaltet)
  158                   ; 000C-000Fh	Datums-Stempel fuer Dateifunktion von USB (MS-DOS-Format)
  159                   ; 0010-00ADh	Arbeitszellen Systemsoftware
  160                   ; 00AE-00E0h	Interrupt-Routine von USB-Modul
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   8
EQU48   INC

  161                   ; 00E1-0107h	Arbeitszellen Systemsoftware
  162                   ; 0108-012Fh	Tasten-UP von CALC (bei Aktivierung mit %?i)
  163                   ; 0180-019Ch	temporaere Ladeadresse der Datei *.JOY ab CAOS 4.6
  164                   ; 0180-01C3h	Systemstack
  165                   
  166         01C4      STACK	EQU	01C4H	; Systemstack
  167                   
  168                   ; 01C4-01EFh	Interrupttabelle
  169                   ; 01F0-01FFh	IX-Arbeitszellen (Standard: IX=01F0h)
  170                   
  171                   ; Belegung der IX - Zellen:
  172                   
  173                   ; IX+0	Zeitkonstante fuer Kassettenroutinen
  174                   ; IX+1	Merkzelle fuer Ausgabeport 84H
  175                   ; IX+2	gelesene Blocknummer (Kassette)
  176                   ; IX+3	erwartete Blocknummer (Kassette)
  177                   ; IX+4	Merkzelle fuer Ausgabeport 86H
  178                   ; IX+5	Ein- Ausgabepufferadresse (low)
  179                   ; IX+6	Ein- Ausgabepufferadresse (high)
  180                   ; IX+7	Kennbyte fuer LOAD/VERIFY
  181                   ;	 BIT 0: =1 ->LOAD  =0 ->VERIFY
  182                   ;	 BIT 1: =1 kein Selbstart bei LOAD (in BASIC Kennung fuer 1. Block)
  183                   ;	 BIT 2-4 : Anzahl Argumente (bei SAVE)/ARGN>3 (Startoffset)
  184                   ;	 BIT 5-7 : BASIC: fuer CLOAD/CSAVE 
  185                   ; IX+8	Kennbyte Tastatur
  186                   ;	 BIT 0: gueltiges Byte (ASCII) in IX+13
  187                   ;	 BIT 1: Tonausgabe laeuft
  188                   ;	 BIT 2-4: aktuelles Speichergeraet
  189                   ;		  0=Kassette, 1=Diskette, 2=USB (M052), 3=Netzwerk (M052)
  190                   ;		  4=Headersave, 5..7 frei
  191                   ;	 BIT 5: Tastenclick ein/aus
  192                   ;	 BIT 6: Code kommt von F-Taste
  193                   ;	 BIT 7: 0=Shiftlock
  194                   ; IX+9	Prologbyte (normal 7FH)
  195                   ; IX+10	Autorepeatzaehler (Tastatur)
  196                   ; IX+11	Merkzelle fuer Akku (bei BWS on/off mit Stackverlagerung)
  197                   ;	und Pruefsummenberechnung fuer MB-Eingabe
  198                   ; IX+12	7-Bit-Scancode von Tastatur
  199                   ; IX+13	ASCII-Code von Tastatur
  200                   ; IX+14	Tastaturcodetabelle low
  201                   ; IX+15	Tastaturcodetabelle high
  202                   
  203                   ; von den BASIC-Erweiterungen genutzte Arbeitszellen im RAM:
  204                   
  205         0307      IOCHNL	EQU	0307H	; Ein-/Ausgabekanal
  206         0309      ININD	EQU	0309H	; IN-Index
  207         031B      RNDVR3	EQU	031BH	; Zufallszahl
  208         034E      ANF	EQU	034EH	; erste Zeilennummer
  209         0350      ENDE	EQU	0350H	; letzte Zeilennummer
  210         0352      NANF	EQU	0352H	; neue erste Zeilennummer
  211         0354      DISTAN	EQU	0354H	; Zeilennummernabstand
  212         035E      DATFLG	EQU	035EH	; List-, Editierschutz wenn <> 0
  213         035F      PSTBEG	EQU	035FH	; Programmstartadresse (Standardwert = 0401H)
  214         037E      COLRET	EQU	037EH	; Ablage Farbbyte
  215         03C0      STRDAT	EQU	03C0H	; 4 Byte: Laenge und Adresse des aktuellen Strings
  216         03D7      SVARPT	EQU	03D7H	; Adresse der Liste der einfachen und Stringvariablen
  217         03EA      INTPRB	EQU	03EAH	; Druckpuffer=Dateiname
  218         03FD      PRTFLG	EQU	03FDH	; PRINT-Erweiterung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page   9
EQU48   INC

  219                   
  220                   ; IRM-Belegung:
  221                   
  222         A800      V24PL	EQU	0A800H	; Steckplatz V.24-Modul				  1 Byte
  223                   ;INTV1		0A801H	; Initialisierungsdaten V.24-Druckausgabe	  8 Byte
  224                   ;INTV2		0A809H	; Initialisierungsdaten V.24-duplex		  9 Byte
  225                   	; bis	0A811H
  226                   ;		0A820H	; urspruenglich geplant fuer Arbeitszellen Maustreiber
  227                   	; bis	0A87FH	; frei					       (96 Byte)
  228                   
  229         A880      INITU	EQU	0A880h	; Kommandoablage von INITIAL.UUU als Tastencode
  230                   	; bis	0A8FFh	; und Assemblierpuffer von EDAS/ASM
  231                   
  232         A900      DEVTAB	EQU	0A900H	; Tabelle der 8 Geraetetreiber: 8*32=256 Byte gross
  233         AA00      SULEN	EQU	0AA00H	; letzte benutzte UP-Nr. in SUTAB
  234         AA01      SUT_IRM	EQU	0AA01H	; SUTAB per Default im IRM
  235                   	; bis	0AA9Ah	fuer UP 00 bis 4Ch				154 Byte
  236                   ;		0AA9BH	reserviert fuer kuenftige CAOS-Erweiterungen
  237                   	; bis	0AABEH	z.B. CAOS-UP's bis 5Eh				 36 Byte
  238                   ; 0AABFH		; frei						  1 Byte
  239         AAC0      JOYIRM	EQU	0AAC0H	; Joystick-Tabelle
  240                   	; bis	0AACBh							 12 Byte
  241                   
  242         AACC      JWORK	EQU	0AACCH	; Arbeitszellen vom Joystick-Editor
  243                   	; bis	0AADCH							 17 Byte
  244                   
  245         AADD      WIN2	EQU	0AADDH	; Schattenspeicher fuer WINNR bis WEND (Bildwechsel)
  246                   	; bis	0AAE7	; 30.09.2020 neu definiert			 11 Byte
  247                   
  248         AAE8      WTEMO	EQU	0AAE8H	; TEMO-Arbeitszellen zur Ablage von 2 Fenster-Daten
  249                   	; bis	0AAFFH							 24 Byte
  250                   
  251                   ;		0AB00H	; reserviert fuer anwenderspez. Systemerweiterungen
  252                   	; bis	0ACFFH	; z.B. Treiber UOUT1/2 oder UIN1/2		512 Byte
  253                   
  254         AD00      VRAM1	EQU	0AD00H	; ASCII-RAM Bild 1
  255                   	; bis	0B1FFH
  256         B200      VRAM0	EQU	0B200H	; ASCII-RAM Bild 0
  257                   	; bis	0B6FFh
  258         B700      CASS	EQU	0B700H	; 128 Byte Kassettenpuffer (bis	0B77FH)
  259         B780      ARGC	EQU	0B780H	; UP-Nummer fuer PV2 und PV6
  260         B781      ARGN	EQU	0B781H	; Anzahl Argumente
  261         B782      ARG1	EQU	0B782H	; Argument 1
  262         B784      ARG2	EQU	0B784H	;    "	   2
  263         B786      ARG3	EQU	0B786H	;    "	   3
  264         B788      ARG4	EQU	0B788H	;    "	   4
  265         B78A      ARG5	EQU	0B78AH	;    "	   5
  266         B78C      ARG6	EQU	0B78CH	;    "	   6
  267         B78E      ARG7	EQU	0B78EH	;    "	   7
  268         B790      ARG8	EQU	0B790H	;    "	   8
  269         B792      ARG9	EQU	0B792H	;    "	   9
  270         B794      ARG10	EQU	0B794H	;    "	  10
  271         B796      NUMNX	EQU	0B796H	; Anzahl Zeichen einer Hex-Zahl
  272         B797      NUMVX	EQU	0B797H	; Wert HEX-Zahl
  273         B799      HCADR	EQU	0B799H	; Hardcopy-Aufruf
  274         B79B      WINNR	EQU	0B79BH	; Nr. des aktuellen Bildschirmfensters
  275         B79C      WINON	EQU	0B79CH	; Fenster-Anfang
  276         B79E      WINLG	EQU	0B79EH	; Fenster-Groesse
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  10
EQU48   INC

  277         B7A0      CURSO	EQU	0B7A0H	; Cursor-Position
  278         B7A2      STBT	EQU	0B7A2H	; Bildschirm-Steuerbyte
  279                   		; Bit 0 = 1 Schreiben Pixel-IRM AUS
  280                   		; Bit 1 = 1 Schreiben Color-IRM AUS
  281                   		; Bit 2 = 1 Inversdarstellung EIN (ab CAOS 3.4)
  282                   		; Bit 3 = 1 Steuercode als Zeichen darstellen
  283                   		; Bit 4 = 1 ESC aktiv (ab CAOS 4.1)
  284                   		; Bit 5 = 1 IBM-Zeichensatz EIN (ab CAOS 4.3)
  285                   		; Bit 6 = 1 HRG-Modus EIN (ab CAOS 4.3)
  286                   		; Bit 7 = 1 2-Monitor-Modus aktiv (ab CAOS 4.8)
  287         B7A3      COLOR	EQU	0B7A3H	; Farbe
  288         B7A4      WEND	EQU	0B7A4H	; Reaktionsprogramm auf Bildschirmende
  289         B7A6      CCTL0	EQU	0B7A6H	; Zeichentabelle 0 20H...5FH
  290         B7A8      CCTL1	EQU	0B7A8H	;	"	 1 00H...1FH und 60H...7FH
  291         B7AA      CCTL2	EQU	0B7AAH	;	"	 2 A0H...DFH
  292         B7AC      CCTL3	EQU	0B7ACH	;	"	 3 80H...9FH und E0H...FFH
  293         B7AE      SYSP	EQU	0B7AEH	; System Stackpointer
  294         B7B0      SUTAB	EQU	0B7B0H	; Adresse der Unterprogrammtabelle
  295         B7B2      CTAB	EQU	0B7B2H	; CRT-Steuerprogramm-Tabelle
  296         B7B4      NCAOS	EQU	0B7B4H	; Sprung in neues System ueber IRM
  297         B7B9      OUTAB	EQU	0B7B9H	; Adresse fuer Zeiger auf UP-Nr. bei Ausgabe
  298         B7BB      INTAB	EQU	0B7BBH	; Adresse fuer Zeiger auf UP-Nr. bei Eingabe
  299         B7BD      UOUT1	EQU	0B7BDH	; Sprung zu USER-Ausgabekanal 2 (Drucker)
  300         B7C0      UIN1	EQU	0B7C0H	; Sprung zu USER-Eingabekanal 2
  301         B7C3      UOUT2	EQU	0B7C3H	; Sprung zu USER-Ausgabekanal 3 V.24-duplex
  302         B7C6      UIN2	EQU	0B7C6H	; Sprung zu USER-Eingabekanal 3 V.24-duplex
  303                   ;IOERR	EQU	0B7C9H	; Reaktionsprogramm fuer BASIC I/O-Error bis CAOS 4.7
  304         B7CB      VRAM	EQU	0B7CBH	; VRAM-Adresse des eingestellten Bildes
  305         B7CD      ZOTAB	EQU	0B7CDH	; Zwischenspeicher fuer OUTAB
  306         B7CF      ZWEND	EQU	0B7CFH	; Zwischenspeicher fuer WEND
  307         B7D1      FTAST	EQU	0B7D1H	; F-Tastenpointer
  308         B7D3      HOR	EQU	0B7D3H	; Grafik Horizontalposition (X-Wert)
  309         B7D5      VERT	EQU	0B7D5H	; Grafik Vertikalposition (Y-Wert)
  310         B7D6      FARB	EQU	0B7D6H	; Grafik Farbe
  311                   		; Bit 0=1	XOR-Funktion
  312                   		; Bit 1=1	Punkt loeschen
  313                   		; Bit 2=1	Farbebene nicht veraendern
  314                   		; Bit 3-7	Vordergrundfarbe + Blinken
  315         B7D7      MIXIT	EQU	0B7D7H	; IX-Merker (H-Teil von IX und I-Tabelle)
  316         B7D8      VORTN	EQU	0B7D8H	; Vortonlaenge fuer byteweise Kassettenausgabe
  317         B7DA      DTPTR	EQU	0B7DAH	; CASS-Pointer (Zeiger in Kassettenpuffer)
  318         B7DB      CTCMD	EQU	0B7DBH	; CTC2-Modus
  319         B7DC      BLINK	EQU	0B7DCH	; Blinkfrequenz
  320         B7DD      L3TAB	EQU	0B7DDH	; Adresse der ESC-Steuerfunktionstabelle
  321         B7DF      L3SIZ	EQU	0B7DFH	; Anzahl der ESC-Steuerfunktionenn
  322         B7E0      COUNT	EQU	0B7E0H	; Zeiteinheiten fuer 1. Autorepeat (Tastatur)
  323         B7E1      HCPZ	EQU	0B7E1H	; Steuerbyte Druckerausgabe
  324                   		; Bit 0=0	Protokollfunktion
  325                   		; Bit 0=1	Hardcopyfunktion
  326                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  327                   		; Bit 2=0/1	SIO-Kanal A oder B
  328                   		; Bit 3		-
  329                   		; Bit 4..7	Druckertyp (0 bis F)
  330                   		; Bit 7=0	Matrixdrucker
  331                   		; Bit 7=1	Schreibmaschine
  332         B7E2      INTV1	EQU	0B7E2H	; Adresse V.24-Init-Tabelle fuer Druckerausgabe
  333         B7E4      INTV1L	EQU	0B7E4H	; Laenge V.24-Initialisierungtabelle
  334         B7E5      INTV2	EQU	0B7E5H	; Adresse V.24-Init-Tabelle fuer Duplexroutine
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  11
EQU48   INC

  335         B7E7      INTV2L	EQU	0B7E7H	; Laenge V.24-Initialisierungstabelle
  336         B7E8      HCPZ2	EQU	0B7E8H	; Steuerbyte Duplexroutine
  337                   		; Bit 0		-
  338                   		; Bit 1=0/1	USER I/O-Kanal 1/2
  339                   		; Bit 2=0/1	SIO-Kanal A oder B
  340                   		; Bit 3		WR5 Bit 3: Senden ein/aus
  341                   		; Bit 4		-
  342                   		; Bit 5,6	WR5 Bit 5,6: 5-8 Bit pro Zeichen (Senden)
  343                   		; Bit 7		WR3 Bit 7: 7/8 Bit pro Zeichen (Empfang)
  344         B7E9      OFILT	EQU	0B7E9H	; Sprung zu Druckroutine (ungefiltert)
  345         B7EC      PROMPT	EQU	0B7ECH	; Systemprompt
  346         B7ED      LINTYP	EQU	0B7EDH	; Linientyp
  347         B7EE      CUMUST	EQU	0B7EEH	; Zeiger zu Cursormuster
  348         B7F0      JOYTAB	EQU	0B7F0H	; Zeiger zu Joystick-Tastencodes
  349                   ;		0B7F2H
  350                   ;		bis	; reservicert fuer Arbeitszellen von REAS und TEMO
  351                   ;		0B7F4H
  352         B7F5      FNAME	EQU	0B7F5H	; 11 Byte Dateiname+Typ fuer DEVICE-Routinen
  353         B800      MODST	EQU	0B800H	; Modulsteuerbytespeicher
  354                   	; bis	0B8FFH
  355         B900      FTASTE	EQU	0B900H	; Funktionstastenspeicher
  356                   	; bis	0B99BH
  357         B99C      WNDFN	EQU	0B99CH	; Fenstersvektorpeicher
  358                   	; bis	0B9FFH
  359                   
  360                   ; von den BASIC-Erweiterungen genutzte Routinen aus dem BASIC-ROM:
  361                   
  362         C00D      PRIST	EQU	0C00DH	; BASIC-Interpreter Kaltstart
  363         C08C      SECST	EQU	0C08CH	; BASIC-Interpreter Warmstart
  364         C327      TMEMO	EQU	0C327H	; Test, ob RAM fuer naechste Operationen reicht
  365         C348      SNER	EQU	0C348H	; Sprung zu SN-ERROR
  366         C356      ERROO	EQU	0C356H	; Ausgabe Fehlercode
  367         C442      LIN13	EQU	0C442H	; Zeiger auf Zeile mit naechstgroesserer Nummer stellen
  368         C44D      ULER	EQU	0C44DH	; Sprung zu UL-ERROR
  369         C450      LIN6	EQU	0C450H	; Zeile in Programm einsortieren	
  370         C48A      LIN10	EQU	0C48AH
  371         C493      LIN11	EQU	0C493H
  372         C4BB      ZPOIT	EQU	0C4BBH	; Zeiger auf Anfang naechste Zeile stellen
  373         C4BE      ZPOIT1	EQU	0C4BEH
  374         C641      NEW1	EQU	0C641H	; BASIC-Programm loeschen
  375         C689      CPREG	EQU	0C689H
  376         C8B7      DLI22	EQU	0C8B7H	; Ansprung Tokenverarbeitung
  377         C8BD      TCHAR	EQU	0C8BDH	; naechstes Zeichen holen
  378         C8BE      TCHAR1	EQU	0C8BEH
  379         C8CC      CPSTX	EQU	0C8CCH	; erwartetes Zeichen folgt als DB ..
  380         C8D6      CPCOMM	EQU	0C8D6H	; Komma?
  381         C8DB      CPBRGT	EQU	0C8DBH	; Klammer zu?
  382         C967      FCER	EQU	0C967H	; Sprung zu FC-ERROR
  383         C96F      EPRVL3	EQU	0C96FH	; Wert bestimmen
  384         C96C      EPRVL4	EQU	0C96CH
  385         C986      DCHEX	EQU	0C986H	; Zeilennummer pruefen und in Hexzahl wandeln
  386         C987      DCHEX1	EQU	0C987H
  387         CB03      PRINT2	EQU	0CB03H
  388         CD36      SNALY6	EQU	0CD36H
  389         CD3A      SNALY	EQU	0CD3AH
  390         CDE1      SNLY14	EQU	0CDE1H	; Syntax-Check '('
  391         CDF3      SNLY16	EQU	0CDF3H	; Syntax-Check ')'
  392         D0C0      POS1	EQU	0D0C0H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  12
EQU48   INC

  393         D17B      STADTB	EQU	0D17BH
  394         D17E      SADTB1	EQU	0D17EH
  395         D1A9      SLEN3	EQU	0D1A9H
  396         D1E1      STROP	EQU	0D1E1H	; String-Arithmetik
  397         D2F2      STRMV1	EQU	0D2F2H
  398         D302      STRZS3	EQU	0D302H
  399         D330      LEN1	EQU	0D330H	; Laenge holen
  400         D33F      ASC1	EQU	0D33FH
  401         D421      ARGVL1	EQU	0D421H	; Parameter abholen
  402         D424      ARGVL2	EQU	0D424H
  403         D6AE      SGN1	EQU	0D6AEH
  404         D834      NUMKON	EQU	0D834H
  405         DC82      IOERR	EQU	0DC82H	; Sprung zu ?IO ERROR
  406         DCB2      CASS1	EQU	0DCB2H	; Dateiname aufbereiten
  407         DDC8      TESTCO	EQU	0DDC8H
  408         DDD5      CO	EQU	0DDD5H	; Ausgabe eines Zeichens (ASCII)
  409         DDE4      CI	EQU	0DDE4H	; Eingabe eines Zeichens (ASCII)
  410         DE25      OUTCHL	EQU	0DE25H	; Ausgabe zu Kanal
  411         DE5F      INCHNL	EQU	0DE5FH	; Eingabe von Kanal
  229                   
  230                   	.PHASE	0C000H
  231                   
  232                   	INCLUDE	CC48.INC	; ROM-C (C000-CFFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM C		**
    3                   ;**					**
    4                   ;**	Adresse:  C000h bis CFFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 21.05.2022	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0C000H
   10                   
   11                   ;
   12                   ; IRM-Defaulttabelle:
   13                   ;
   14 C000  F4A7        KCTAB1:	DW	NOOP		; Hardcopy-Adresse		B799
   15 C002  00          WIN0:	DB	0		; WINNR
   16 C003  0000        	DW	0		; WINON
   17 C005  2028        	DW	2028H		; WINLG
   18 C007  0000        	DW	0		; CURSO
   19 C009  80          	DB	80H		; STBT		(2-Monitor-Bit 7 gesetzt ab CAOS 4.8)
   20 C00A  39          	DB	39H		; COLOR
   21 C00B  E282        	DW	SCRLPG		; WEND
   22 C00D  EE00        WIN1:	DW	LARGE		; CCTL0
   23 C00F  FE00        	DW	SMALL		; CCTL1
   24 C011  EE00        	DW	LARGE		; CCTL2
   25 C013  FE00        	DW	SMALL		; CCTL3
   26 C015  01C4        	DW	STACK		; SYSP
   27 C017  AA01        	DW	SUT_IRM		; SUTAB
   28 C019  FCAF        	DW	CRTTAB		; CTAB
   29 C01B  D3 88       	OUT	(PIOAD),A	; NCAOS
   30 C01D  C3 F012     	JP	0F012H
   31 C020  F020        	DW	OUTT1		; OUTAB = CRT (0)
   32 C022  F017        	DW	INTT1		; INTAB = KBD (4)
   33 C024  C3 F4A7     	JP	NOOP		; UOUT1
   34 C027  C3 F4A7     	JP	NOOP		; UIN1
   35 C02A  C3 F4A7     	JP	NOOP		; UOUT2
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  13
CC48    INC

   36 C02D  C3 F4A7     	JP	NOOP		; UIN2
   37 C030  DC82        	DW	IOERR		; IOERR (BASIC)
   38 C032  B200        	DW	VRAM0		; VRAM=0B200H (Bild 0)		B7C8
   39                   
   40 C034  47 0C       KCTAB2:	DB	47H,0CH		; CTC2 (blinken)		B7DB
   41 C036  EDBD        	DW	ESCTAB		; L3TAB (Tabelle der ESC-Routinen)
   42 C038  12          	DB	(ESCX-ESCTAB)/2	; L3SIZ (Anzahl der ESC-Funktionen)
   43 C039  05          	DB	5		; COUNT
   44 C03A  00          	DB	0		; HCPZ
   45 C03B  A801        	DW	0A801H		; INTV1
   46 C03D  08          	DB	8		; INTV1L
   47 C03E  A809        	DW	0A809H		; INTV2
   48 C040  09          	DB	9		; INTV2L
   49 C041  EE          	DB	11101110b	; HCPZ2 (8 Bit, Senden ein)
   50 C042  C3 F4A7     	JP	NOOP		; OFILT				B7E9
   51 C045  25          	DB	'%'		; PROMPT
   52 C046  FF          	DB	0FFH		; LINTYP
   53 C047  EFD8        	DW	0EFD8H		; CUMUST
   54 C049  AAC0        	DW	JOYIRM		; JOYTAB			B7F0
   55                   
   56                   ; Modulschaltzustaende (interne Module):
   57                   
   58 C04B  03          KCTAB3:	DB	3	; RAM0
   59 C04C  01          	DB	1	; IRM
   60 C04D  00          	DB	0	; USER-ROMC
   61 C04E  03          	DB	3	; RAM8
   62 C04F  03          	DB	3	; RAM4
   63 C050  00          	DB	0	; CAOSC
   64 C051              KCTAB4:
   65                   ;
   66                   ; Power-ON Initialisierung:
   67                   ;
   68 C051  F3          PWRONC:	DI
   69 C052  ED 5E       	IM	2
   70                   
   71                   ; 02.03.2019: vor Loeschen des Speichers die Ports initialisieren um sicherzu-
   72                   ; stellen, dass vor dem Speicherloeschen der RAM0 und der IRM eingeschaltet ist
   73 C054  31 01C4     	LD	SP,STACK	; dazu SP setzen um CALL zu ermoeglichen
   74 C057  21 D938     	LD	HL,IOTAB1	; Daten der Erstinitialisierung
   75 C05A  CD F557     	CALL	INIMEX		; komplett benutzen
   76                   
   77 C05D  01 0080     	LD	BC,0080H	; alle Module abschalten
   78 C060  ED 51       PWRC2:	OUT	(C),D		; D=0 vom vorhergehenden INIMEX
   79 C062  10 FC       	DJNZ	PWRC2
   80                   
   81 C064  31 C000     	LD	SP,0C000H	; Loeschbereich 0..BFFFh
   82 C067  01 6000     	LD	BC,6000H	; Anzahl = 60h * 256 Wort = C000h
   83 C06A  61          	LD	H,C
   84 C06B  69          	LD	L,C		; HL=0
   85 C06C  E5          PWRC1:	PUSH	HL		; schnelles Speicher loeschen (rueckwaerts)
   86 C06D  0D          	DEC	C
   87 C06E  20 FC       	JR	NZ,PWRC1
   88 C070  10 FA       	DJNZ	PWRC1
   89 C072  31 01C4     	LD	SP,STACK	; System-Stack setzen
   90                   
   91                   ; neu ab CAOS 4.8: Autostart INIT (z.B. bei USB) vorbereiten
   92                   ; (Die Aktivierung erfolgt erst bei der Initialisierung des Modul-Treibers)
   93 C075  21 EDE1     	LD	HL,INIT		; INIT-Kommando als Autostart
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  14
CC48    INC

   94 C078  22 B7D1     	LD	(FTAST),HL	; vorbereiten fuer Abarbeitung
   95                   
   96                   ; 08.10.2020: SYSI nach der Portinitialisierung aufrufen, sodass der KOUT-
   97                   ; Impuls zum Ruecksetzen der D005-Tastatur nur bei RESET kommt.
   98 C07B  CD C0AA     	CALL	SYSI2		; Systeminitialisierung (Rueckkehr mit EI)
   99 C07E  21 D96A     	LD	HL,JOYTBD	; vorbereitete Joystick-Tabelle
  100 C081  11 AAC0     	LD	DE,JOYIRM	; JOYTAB-Standardadresse im IRM
  101 C084  01 000C     	LD	BC,12
  102 C087  ED B0       	LDIR			; Tabelle in den IRM kopieren
  103                   
  104                   ; seit CAOS 4.1 werden an dieser Stelle die Fenster 0-9 in dieser Reihenfolge
  105                   ; mit den Standardwerten vorbelegt. Nebeneffekt: Beim Einschalten ist Fenster
  106                   ; Nr. 9 aktiv entgegen dem eigentlich erwarteten Fenster Nr. 0
  107                   ; -> Reihenfolge geaendert, nun ist Fenster 0 wieder aktiv wie bis CAOS 3.4
  108                   
  109 C089  3E 09       	LD	A,9		; Fenster Nr. 9
  110 C08B  32 B79B     PWRC3:	LD	(WINNR),A	; Nr. eintragen
  111 C08E  CD C60C     	CALL	WCOPY		; Fenstervektorspeicher initialisieren
  112 C091  D6 01       	SUB	1		; fuer 10 Fenster (9-0)
  113 C093  30 F6       	JR	NC,PWRC3
  114 C095  CD F950     	CALL	ESC3		; Anzeige Bild 0, Zugriff Bild 1
  115                   ;	LD	A,0CH
  116 C098  CD E0A6     	CALL	CLSX		; Bild 1: CLS
  117 C09B  CD F946     	CALL	ESC1		; Anzeige+Zugriff Bild 0
  118                   
  119 C09E  C3 F164     	JP	PWR4		; weiter im ROM-F
  120                   ;
  121                   ; System-Initialisierung (bei PWRON und RESET):
  122                   ;
  123 C0A1  F3          SYSI:	DI
  124 C0A2  ED 5E       	IM	2
  125 C0A4  21 D938     	LD	HL,IOTAB1	; PIO A,B und Ausgabe-Ports 84H/86H
  126 C0A7  CD F557     	CALL	INIMEX		; initialisieren
  127 C0AA  DD 21 01F0  SYSI2:	LD	IX,1F0H
  128 C0AE  DD 36 01 28 	LD	(IX+1),28H	; OUT84-Merker (Bild 0, RAM8 Ebene 0)
  129 C0B2  DD 36 04 E3 	LD	(IX+4),0E3H	; OUT86-Merker (RAM4 ein, USER-ROM Ebene 3)
  130 C0B6  DD 36 08 80 	LD	(IX+8),80H	; Defaultbelegung (Kassette, kein CAPS-Lock)
  131 C0BA  11 B799     	LD	DE,HCADR
  132 C0BD  21 C000     	LD	HL,KCTAB1	; Defaulttabelle
  133 C0C0  01 0034     	LD	BC,KCTAB2-KCTAB1; fuer IRM-Arbeitszellen
  134 C0C3  ED B0       	LDIR			; 1. Teil in IRM kopieren
  135 C0C5  1E DB       	LD	E,LOW(CTCMD)	; (D war 0B7h)
  136 C0C7  0E 17       	LD	C,KCTAB3-KCTAB2	; (B war 0)
  137 C0C9  ED B0       	LDIR			; 2. Teil in IRM kopieren
  138 C0CB  11 B800     	LD	DE,MODST	; Modulsteuerbytespeicher
  139 C0CE  3A B804     	LD	A,(MODST+4)	; RAM4 aktueller Schaltzustand
  140 C0D1  E6 04       	AND	4		; RAM4-Ebene herausloesen
  141 C0D3  0E 06       	LD	C,KCTAB4-KCTAB3	; (B war 0)
  142 C0D5  ED B0       	LDIR			; 3. Teil in IRM kopieren
  143 C0D7  21 B804     	LD	HL,MODST+4
  144 C0DA  B6          	OR	(HL)		; RAM4 bisherige Ebene wieder einbauen
  145 C0DB  77          	LD	(HL),A
  146                   
  147                   ; 08.08.2020: zusaetzlich fuer Cursor-Rettung bei Bildwechsel:
  148                   ; 20.05.2021: von PWRON zu RESET verlagert
  149                   
  150 C0DC  11 AADD     	LD	DE,WIN2		; Schattenspeicher
  151 C0DF  CD C5E6     	CALL	WINC2		; mit Standardwerten initialisieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  15
CC48    INC

  152                   
  153                   ; CAOS 4.6 - SUTAB vom ROM in den IRM kopieren:
  154                   
  155 C0E2  11 AA00     	ld	de,SUT_IRM-1	; SUTAB im IRM (beginnend mit SULEN)
  156 C0E5  21 D85D     	ld	hl,SUTB-1	; SUTAB im ROM
  157 C0E8  01 009B     	ld	BC,SUEND-SUTB+1	; Laenge
  158 C0EB  ED B0       	LDIR			; SUTAB zur Nutzung in den IRM kopieren
  159                   
  160 C0ED  3E 01       	LD	A,1		; Standardwert fuer IXH- und I-Register
  161 C0EF  CD C17B     	CALL	SIXC		; Initialisierung, ISR-Tabelle kopieren, EI
  162                   
  163                   ; Interrupt hier bereits freigegeben, damit Treiber-Initialisierung
  164                   ; Interrupts aktivieren kann (z.B. USB-Tastatur)?
  165                   
  166                   ; CAOS 4.6 - Device-Treibertabellen erzeugen
  167                   
  168 C0F2  11 A900     	LD	DE,DEVTAB	; Treibertabelle(n) im IRM aufbauen
  169 C0F5  3E 08       	LD	A,8		; fuer 8 Treiber
  170 C0F7  21 D8F8     DINIT:	LD	HL,DRV0		; zunaechst den Kassettentreiber
  171 C0FA  01 0020     	LD	BC,32		; je 32 Byte (Groesse festgeschrieben)
  172 C0FD  ED B0       	LDIR			; kopieren
  173 C0FF  3D          	DEC	A		; alle 8 Treiber auf Kassette initialisieren
  174 C100  20 F5       	JR	NZ,DINIT
  175 C102  32 A900     	LD	(DEVTAB),A	; Tape-Treiber mit '0' aktivieren
  176 C105  11 A920     	LD	DE,DEVTAB+32	; folgende Treiber als Nr. 1 eintragen
  177                   
  178                   ; Suche D004/D008 mit CAOS-Betriebsart (Treiber 1):
  179                   
  180 C108  01 FC80     	LD	BC,0FC80H	; Modulsteckplatz FC
  181 C10B  ED 78       	IN	A,(C)
  182 C10D  FE A7       	CP	0A7H		; Floppy vorhanden?
  183 C10F  20 1A       	JR	NZ,NODISK
  184 C111  3E 04       	LD	A,4		; nur Kopplung einschalten
  185 C113  32 B8FC     	LD	(MODST+0FCH),A	; in Modulsteuerbytespeicher eintragen
  186 C116  ED 79       	OUT	(C),A		; und schalten
  187 C118  01 B3F3     	LD	BC,UROK		; 0B3F3H
  188 C11B  ED 78       	IN	A,(C)
  189 C11D  FE 05       	CP	5		; CAOS-Betriebsart?
  190 C11F  20 0A       	JR	NZ,NODISK
  191                   
  192                   ; 01.01.2022:
  193                   ; Falls eine alte Original-CAOS-Diskette benutzt wird, wird diese Speicherzelle
  194                   ; mit der CAOS-Versionsnummer nicht beschrieben und enthaelt den Inhalt vom
  195                   ; Urlader. Dieser fuehrt zu falschen Versionsmeldungen. Deshalb wird hier eine
  196                   ; Versionsnummer kleiner als 2.0 eingetragen - somit funktioniert die DEP-
  197                   ; Versionsabfrage zuverlaessiger.
  198 C121  01 83F1     	LD	BC,DEPVER	; DEP-Version
  199 C124  ED 79       	OUT	(C),A		; Version 0.5 setzen
  200                   
  201                   ;	LD	HL,DRV1		; Floppy-Treiber
  202 C126  01 0020     	LD	BC,32
  203 C129  ED B0       	LDIR			; in Treibertabelle kopieren
  204                   
  205                   ; Suche USB- bzw. GIDE-Modul mit Treiber:
  206                   ;	DE	zeigt auf DEVTAB wo naechster Treiber hin kommt
  207                   
  208 C12B  06 08       NODISK:	LD	B,8		; ab Steckplatz 8 suchen
  209 C12D  0E 80       	LD	C,80H		; I/O-Adresse Modulsteuerung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  16
CC48    INC

  210 C12F  ED 78       USB1:	IN	A,(C)		; Kennbyte lesen
  211 C131  FE FD       	CP	0FDH		; Kennung M052?
  212 C133  28 09       	JR	Z,USB2
  213 C135  FE F9       	CP	0F9h		; Kennung M064?
  214 C137  28 05       	JR	Z,USB2
  215 C139  04          USB4:	INC	B		; naechster Steckplatz
  216 C13A  20 F3       	JR	NZ,USB1
  217 C13C  18 34       	JR	NOUSB		; Kein passendes Modul gefunden!
  218                   	;
  219 C13E  C5          USB2:	PUSH	BC		; Steckplatz B merken
  220 C13F  68          	LD	L,B
  221 C140  CD C37F     	call	SLOT1		; Modul auf 4000h einblenden
  222                   ;	ld	hl,4000h
  223 C143  7E          	ld	a,(hl)		; ROM-Inhalt 1. Byte
  224 C144  23          	inc	hl
  225 C145  BE          	cp	(hl)		; ROM-Inhalt 2. Byte
  226 C146  20 1A       	jr	nz,USB3		; Kennung 1+2 nicht identisch
  227 C148  FE 46       	cp	46h		; Kennung Treiber korrekt? 
  228 C14A  20 16       	jr	nz,USB3		; Kennung falsch
  229 C14C  23          	inc	hl		; SWITCH-AUS in Treibertabelle
  230 C14D  7B          	ld	a,e
  231 C14E  07          	rlca
  232 C14F  07          	rlca
  233 C150  07          	rlca			; Nr. des naechsten Treibers
  234 C151  12          	ld	(de),a		; Treibernummer eintragen in DEVTAB+0
  235 C152  13          	inc	de
  236 C153  E3          	EX	(SP),HL		; H=Steckplatz
  237 C154  7C          	ld	a,H
  238 C155  12          	ld	(de),a		; Steckplatz eintragen in DEVTAB+1
  239 C156  13          	inc	de
  240 C157  E3          	EX	(SP),HL
  241 C158  01 001E     	LD	BC,32-2
  242 C15B  ED B0       	LDIR			; restliche Treibertabelle aus ROM kopieren
  243 C15D  21 FFE3     	ld	hl,-1Dh
  244 C160  19          	ADD	HL,DE		; zurueck zu SWITCH-EIN des Moduls
  245 C161  7E          	ld	A,(HL)		; SWITCH-EIN
  246                   
  247 C162  C1          USB3:	POP	BC		; B = Steckplatz, C=80h
  248 C163  C5          	PUSH	BC
  249 C164  D5          	PUSH	DE		; Zeiger in DEVTAB retten
  250                   	; kein Befehl beeinflusst das Z-Flag !
  251 C165  CC ED44     	CALL	Z,JROM		; Treiber gefunden: INIT im Modul-ROM aufrufen
  252 C168  CD C398     	CALL	SLOT0		; alle Modulzustaende regenerieren
  253 C16B  D1          	POP	DE		; DEVTAB
  254 C16C  C1          	POP	BC		; B = Steckplatz, C=80h
  255 C16D  7A          	LD	A,D
  256 C16E  FE AA       	CP	1+High(DEVTAB)	; 0AAh
  257 C170  20 C7       	JR	NZ,USB4		; weitere Module suchen bis DEVTAB voll ist
  258 C172  3A A920     NOUSB:	LD	A,(DEVTAB+32)	; Treiber 1 vorhanden?
  259 C175  FE 01       	CP	1
  260 C177  CC D5DB     	CALL	Z,SET_DD	; dann aktivieren!
  261 C17A  C9          	RET
  262                   ;
  263                   ; CAOS-UP zur Verlagerung des IX-Arbeitsbereiches
  264                   ; PE:	A	HW-Teil der IX-Arbeitszellen
  265                   ;	A=FFH	zusaetzlich DEVICE-Tabelle und SUTAB neu aufbauen
  266                   ;
  267 C17B  FE FF       SIXC:	CP	0FFH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  17
CC48    INC

  268 C17D  CA C0A1     	JP	Z,SYSI		; grosse Initialisierung mit Device-Tabelle usw.
  269 C180  21 D976     	LD	HL,ISRTAB	; ISR-Tabelle im ROM
  270 C183  F3          	DI
  271 C184  32 B7D7     	LD	(MIXIT),A	; neuer Wert fuer IXH- und I-Register
  272 C187  ED 47       	LD	I,A		; I-Register aktualisieren
  273 C189  ED 5E       	IM	2
  274 C18B  1E D0       	LD	E,0D0H
  275 C18D  57          	LD	D,A
  276 C18E  01 0020     	LD	BC,ISRTX-ISRTAB	; Interrupttabelle fuer 16 Interrupts
  277 C191  ED B0       	LDIR			; kopieren aus dem ROM nach xxD0h bis xxF0h
  278 C193  DD 66 01    	LD	H,(IX+1)
  279 C196  DD 6E 04    	LD	L,(IX+4)	; alte Merker mitnehmen
  280 C199  DD 7E 08    	LD	A,(IX+8)
  281 C19C  D5          	PUSH	DE		; neuer Wert fuer IX = xxF0h
  282 C19D  DD E1       	POP	IX
  283 C19F  DD 77 08    	LD	(IX+8),A
  284 C1A2  DD 74 01    	LD	(IX+1),H	; mitgenommene Merker neu eintragen
  285 C1A5  DD 75 04    	LD	(IX+4),L
  286 C1A8  DD 36 0E 2F 	LD	(IX+14),LOW(KTAB) ; Tastaturtabelle
  287 C1AC  DD 36 0F FC 	LD	(IX+15),HIGH(KTAB)
  288 C1B0  DD 36 09 7F 	LD	(IX+9),7FH	; Standard-Prologbyte
  289 C1B4  21 D950     	LD	HL,IOTAB2	; PIO A,B und CTC
  290 C1B7  CD F557     	CALL	INIMEX		; Ports neu initialisieren
  291 C1BA  21 ED72     	LD	HL,CENINI
  292 C1BD  CD F557     	CALL	INIMEX		; M021 initialisieren
  293 C1C0  CD F545     	CALL	KPUFF		; Kassettenpuffer (IX+5 und IX+6) definieren
  294 C1C3  FB          	EI
  295 C1C4  C9          	RET
  296                   
  297                   ; Systemcheck oder Modulkontrollanzeige (interne Module):
  298                   
  299 C1C5  2E FF       SYSTC:	LD	L,-1		; mit Steckplatz 0 beginnen, vorher aber ROM E
  300 C1C7  CD C28C     	CALL	OSTR2
  301 C1CA  43 41 4F 53 	DB	'CAOSE',0
  302 C1D0  DB 88       	IN	A,(PIOAD)
  303 C1D2  E6 01       	AND	1		; CY=0, Z=?
  304 C1D4  18 3A       	JR	WONOF1
  305                   
  306 C1D6  3E 01       SYST0:	LD	A,1		; lesen
  307 C1D8  CD C3B7     	CALL	MODUC
  308 C1DB  CD D346     	CALL	LHD		; Anzeige Steckplatz, Kennbyte, Steuerbyte
  309                   
  310 C1DE  45          	LD	B,L		; Steckplatz
  311 C1DF  04          	INC	B		; +1 wegen folgendem DJNZ
  312 C1E0  10 12       	DJNZ	SYST1		; nach Steckplatz verzweigen
  313                   ; 0
  314 C1E2  CD F0B4     	CALL	OSTR
  315 C1E5  52 41 4D 30 	DB	'RAM0',0
  316 C1EA  DB 88       	IN	A,(PIOAD)
  317 C1EC  E6 0F       	AND	00001111b
  318 C1EE  FE 08       	CP	00001000b	; CY=NOT(Bit 3)
  319 C1F0  CB 4F       	BIT	1,A		; Schaltzustand
  320 C1F2  18 1C       	JR	WONOF1
  321                   ; 1
  322 C1F4  10 1C       SYST1:	DJNZ	SYST2
  323 C1F6  CD F0B4     	CALL	OSTR
  324 C1F9  42 49 4C 44 	DB	'BILD ',0
  325 C1FF  DD 7E 01    	LD	A,(IX+1)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  18
CC48    INC

  326 C202  E6 04       	AND	00000100b	; Zugriffs-Bit
  327 C204  0F          	RRCA		
  328 C205  0F          	RRCA
  329 C206  C6 30       	ADD	A,'0'
  330 C208  CD F3BE     	CALL	OCHR		; Bildnummer
  331 C20B  3A B801     	LD	A,(MODST+1)
  332 C20E  E6 01       	AND	1		; IRM on?
  333 C210  18 6F       WONOF1:	JR	SYST6
  334                   ; 2
  335 C212  10 1C       SYST2:	DJNZ	SYST3
  336 C214  CD F0B4     	CALL	OSTR
  337 C217  55 53 45 52 	DB	'USER ',0
  338 C21D  DD 7E 04    	LD	A,(IX+4)
  339 C220  07          	RLCA			; Bits 5,6
  340 C221  07          	RLCA
  341 C222  07          	RLCA			; nach Bits 0,1
  342 C223  E6 03       	AND	3
  343 C225  EE 33       	XOR	'3'
  344 C227  CD F3BE     	CALL	OCHR		; Ebene ausgeben
  345 C22A  DB 88       	IN	A,(PIOAD)
  346 C22C  E6 80       	AND	10000000b	; CY=0, Z=NOT(Bit 7)
  347 C22E  18 51       	JR	SYST6
  348                   ; 3
  349 C230  10 1E       SYST3:	DJNZ	SYST4
  350 C232  CD F0B4     	CALL	OSTR
  351 C235  52 41 4D 38 	DB	'RAM8 ',0
  352 C23B  DD 7E 01    	LD	A,(IX+1)
  353 C23E  0F          	RRCA			; Bits 4,5,6,7
  354 C23F  0F          	RRCA
  355 C240  0F          	RRCA
  356 C241  0F          	RRCA			; nach 0,1,2,3
  357                   ;	AND	0FH		; redundant: bereits in AHEX0
  358 C242  D6 02       	SUB	2
  359 C244  CD F3B6     	CALL	AHEX0		; Ebene ausgeben
  360 C247  DB 89       	IN	A,(PIOBD)
  361 C249  CB 6F       	BIT	5,A		; Schaltzustand
  362 C24B  07          	RLCA			; Schreibschutz (Bit 6)
  363 C24C  07          	RLCA			; ins Carry-Flag rotieren
  364 C24D  3F          	CCF			; und invertieren
  365 C24E  18 31       syst7:	JR	SYST6
  366                   ; 4
  367 C250  10 21       SYST4:	DJNZ	SYST5
  368 C252  CD F0B4     	CALL	OSTR
  369 C255  52 41 4D 34 	DB	'RAM4',0
  370 C25A  CD F3A5     	CALL	SPACE
  371 C25D  3A B804     	LD	A,(MODST+4)
  372 C260  0F          	RRCA
  373 C261  0F          	RRCA			; Bit 2
  374 C262  E6 01       	AND	1
  375 C264  C6 30       	ADD	A,'0'
  376 C266  CD F3BE     	CALL	OCHR		; Ebene 0/1
  377 C269  DD 7E 04    	LD	A,(IX+4)
  378 C26C  CB 47       	BIT	0,A		; Schaltzustand
  379 C26E  0F          	RRCA			; Schreibschutz (Bit 1)
  380 C26F  0F          	RRCA			; ins Carry-Flag rotieren
  381 C270  3F          	CCF			; und invertieren
  382 C271  18 0E       	JR	SYST6
  383                   ; 5
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  19
CC48    INC

  384 C273  CD F0B4     SYST5:	CALL	OSTR
  385 C276  43 41 4F 53 	DB	'CAOSC',0
  386 C27C  3A B805     	LD	A,(MODST+5)
  387 C27F  E6 01       	AND	1
  388 C281  CD D325     SYST6:	CALL	WONOF
  389 C284  2C          	INC	L		; Steckplatz+1
  390 C285  3E 06       	LD	A,6
  391 C287  BD          	CP	L
  392 C288  C2 C1D6     	JP	NZ,SYST0	; bei 06 abbrechen
  393 C28B  C9          	RET
  394                   
  395 C28C  CD F0B4     OSTR2:	CALL	OSTR
  396 C28F  2D 2D 20 2D 	DB	'-- -- -- ',0
  397 C299  C3 F0B4     	JP	OSTR
  398                   
  399                   ; Modulkontrollanzeige (externe Module):
  400                   
  401 C29C  AF          MODULC:	XOR	A
  402 C29D  D3 91       	OUT	(91h),A		; M008/M021 PIO-B Daten
  403 C29F  DB 91       	IN	A,(91h)
  404 C2A1  A7          	AND	A		; PIO vorhanden?
  405 C2A2  20 0D       	JR	NZ,MODC1	; nein, nicht anzeigen
  406 C2A4  CD C28C     	CALL	OSTR2
  407 C2A7  4A 4F 59 2F 	DB	'JOY/CEN',CR,LF,0
  408 C2B1  2E 07       MODC1:	LD	L,7		; ab Platz 7
  409 C2B3  E5          MODC2:	PUSH	HL
  410 C2B4  3E 01       	LD	A,1		; lesen
  411 C2B6  CD C3B7     	CALL	MODUC
  412 C2B9  7C          	LD	A,H
  413 C2BA  3C          	INC	A		; Kennbyte=FFh?
  414 C2BB  28 36       	JR	Z,MODC8		; kein Modul
  415                   
  416 C2BD  CD D346     	CALL	LHD		; Anzeige Steckplatz, Kennbyte, Steuerbyte
  417                   
  418 C2C0  4C          	LD	C,H
  419 C2C1  7C          	ld	a,h
  420 C2C2  FE F3       	cp	0f3h		; M062?
  421 C2C4  28 32       	jr	z,M062		; Test ob RAM- oder ROM-Version
  422 C2C6  FE FB       	cp	0fbh		; Software-Modul?
  423 C2C8  28 45       	jr	z,slot		; Inhalt analysieren!
  424 C2CA  FE FD       	cp	0fdh		; M052?
  425 C2CC  CA C332     	jp	z,M052		; Test, welche Variante vorliegt
  426 C2CF  21 CFE9     	ld	hl,muser
  427 C2D2  FE C0       	cp	0c0h
  428 C2D4  38 04       	jr	c,MODC3		; kleiner als C0
  429 C2D6  FE D8       	cp	0d8h
  430 C2D8  38 13       	jr	c,MODC6		; USER-Modul von C0-D7
  431 C2DA  21 CE98     MODC3:	LD	HL,MTAB
  432 C2DD  7E          MODC4:	LD	A,(HL)
  433 C2DE  23          	INC	HL
  434 C2DF  FE FF       	CP	0FFH		; Tabelle durchsucht?
  435 C2E1  28 0A       	JR	Z,MODC6
  436 C2E3  B9          	CP	C		; Strukturbyte in Tabelle MTAB?
  437 C2E4  28 07       	JR	Z,MODC6		; Text gefunden
  438 C2E6  7E          MODC5:	LD	A,(HL)
  439 C2E7  23          	INC	HL
  440 C2E8  A7          	AND	A		; Stringende?
  441 C2E9  20 FB       	JR	NZ,MODC5
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  20
CC48    INC

  442 C2EB  18 F0       	JR	MODC4
  443                   	;
  444 C2ED  CD F8EE     MODC6:	CALL	ZKOUT		; Modulname
  445 C2F0  CD F4C7     MODC7:	CALL	CRLF
  446 C2F3  E1          MODC8:	POP	HL
  447 C2F4  2C          	INC	L		; Steckplatz+1
  448 C2F5  20 BC       	JR	NZ,MODC2	; bis FFh
  449 C2F7  C9          	RET
  450                   ;
  451                   ; Test, ob M062 als 8*8K ROM oder 4*8K RAM vorliegt.
  452                   ; Zur Unterscheidung wird ein RAM-Test durchgefuehrt
  453                   ;
  454                   ; PE:	L=Steckplatz	H=Kennbyte = 0FBH
  455                   ;
  456 C2F8  CD C37F     M062:	call	SLOT1		; Modul auf 4000h einblenden
  457                   ;	ld	hl,4000h	; RAM-Inhalt lesen
  458 C2FB  7E          	ld	a,(hl)
  459 C2FC  34          	inc	(hl)		; Inhalt veraendern
  460 C2FD  BE          	cp	(hl)		; RAM oder ROM
  461 C2FE  77          	ld	(hl),a		; regenerieren
  462 C2FF  21 CFFF     	ld	hl,M062B	; ROM
  463 C302  28 03       	jr	z,SLOT2
  464 C304  21 CFF6     	ld	hl,M062A	; RAM
  465 C307  CD F8EE     SLOT2:	call	zkout		; Testergebnis anzeigen
  466 C30A  CD C398     SLOT3:	call	SLOT0		; Modulzustaende nach Tabelle regenerieren
  467 C30D  18 E1       	jr	MODC7		; weiter suchen auf naechstem Steckplatz
  468                   ;
  469                   ; Suche nach Inhalt der Softwaremodule M012, M026, M027 usw.
  470                   ; Es wird das erste Menwort gesucht, und dieses als Name angezeigt!
  471                   ; PE:	L=Steckplatz	H=Kennbyte = 0FBH
  472                   ;
  473 C30F  CD C37F     slot:	call	SLOT1		; Modul auf 4000h einblenden
  474                   ;	ld	hl,4000h	; Suchbereich Beginn
  475 C312  11 CFE8     	ld	de,MTAB2	; Vergleichskette 0-String
  476 C315  06 20       	ld	b,20h		; 8K durchsuchen
  477                   ;	ld	a,07Fh		; CAOS-Prologbyte fuer Menuewort-Suche
  478 C317  CD F339     	call	zs0		; erstes Menuewort suchen
  479 C31A  38 05       	jr	c,SLOT4		; Menuewort gefunden
  480 C31C  21 CFE0     	ld	hl,mtab1	; ansonsten als "Software" anzeigen
  481 C31F  18 07       	jr	SLOT6
  482                   	;
  483 C321  2B          SLOT4:	dec	hl
  484 C322  7E          	ld	a,(hl)
  485 C323  FE 7F       	cp	7fh		; zurueck bis zu Prologbyte
  486 C325  20 FA       	jr	nz,SLOT4
  487 C327  23          SLOT5:	inc	hl
  488 C328  7E          SLOT6:	ld	a,(hl)
  489 C329  FE 20       	cp	20h		; Epilog?
  490 C32B  38 DD       	jr	c,SLOT3		; ja
  491 C32D  CD F3BE     	call	ochr		; Menuewort anzeigen
  492 C330  18 F5       	jr	SLOT5
  493                   ;
  494                   ; Testen welche Variante des M052 vorliegt. Dazu werden die Datenports von der
  495                   ; Netzwerk-PIO gelesen und falls ein Wert ungleich FFh kommt, von einem
  496                   ; Kombimodul mit USB+Netzwerk ausgegangen.
  497                   ; M052-Portadressen: 28h..2Bh Netzwerk-PIO / 2Ch..2Fh USB-PIO
  498                   ;
  499                   ; PE:	L=Steckplatz	H=Kennbyte = 0FDH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  21
CC48    INC

  500                   
  501 C332  26 B8       M052:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  502 C334  7E          	ld	a,(hl)		; aktueller Zustand
  503 C335  CB D7       	set	2,a		; PIO's ein
  504 C337  45          	ld	b,l		; Steckplatz
  505 C338  0E 80       	ld	c,80h
  506 C33A  ED 79       	out	(c),a		; PIO's des M052 einschalten
  507 C33C  21 CFEE     	ld	hl,M052A
  508 C33F  DB 28       	in	a,(28h)		; M052 PIO NET Daten A
  509 C341  3C          	inc	a
  510 C342  20 08       	jr	nz,M052N1	; Netzwerk-PIO gefunden
  511 C344  DB 29       	in	a,(29h)		; M052 PIO NET Daten B
  512 C346  3C          	inc	a
  513 C347  20 03       	jr	nz,M052N1	; Netzwerk-PIO gefunden
  514 C349  21 CFF2     	ld	hl,M052B
  515 C34C  18 B9       M052N1:	JR	SLOT2		; Modulname anzeigen, Schaltzustaende regen.
  516                   
  517                   ; Module lesen und schalten (Menuewort):
  518                   
  519 C34E  53          SWIC:	LD	D,E		; Steuerbyte
  520 C34F  FE 01       	CP	1
  521 C351  F5          	PUSH	AF
  522 C352  28 0D       	JR	Z,SWI3		; nur lesen
  523 C354  2D          	DEC	L
  524 C355  20 09       	JR	NZ,SWI2		; nicht IRM
  525 C357  2C          	INC	L
  526 C358  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  527 C35A  5E          	LD	E,(HL)		; altes Steuerbyte lesen
  528 C35B  72          	LD	(HL),D		; neues Steuerbyte eintragen
  529 C35C  26 FF       	LD	H,0FFH		; Kennung internes Modul
  530 C35E  18 05       	JR	SWI4
  531                   	;
  532 C360  2C          SWI2:	INC	L
  533 C361  CD C3B7     SWI3:	CALL	MODUC		; lesen/schalten
  534 C364  5F          	LD	E,A
  535 C365  CD F3A1     SWI4:	CALL	ALSPC		; Steckplatz L anzeigen
  536 C368  7C          	LD	A,H
  537 C369  CD F3A2     	CALL	AHSPC		; Kennbyte Modul
  538 C36C  7B          	LD	A,E
  539 C36D  CD F3AD     	CALL	AHEX		; Steuerbyte alt
  540 C370  F1          	POP	AF
  541 C371  28 09       	JR	Z,SWI5		; das war nur lesen
  542 C373  3E 09       	LD	A,9
  543 C375  CD E38D     	CALL	CSTBT		; Pfeil nach rechts anzeigen
  544 C378  7A          	LD	A,D
  545 C379  CD F3AD     	CALL	AHEX		; Steuerbyte neu
  546 C37C  C3 F4C7     SWI5:	JP	CRLF
  547                   ;
  548                   ; Modul auf Adresse 4000h einblenden
  549                   ; (fuer M012, M026, M027, M052 und M062)
  550                   ; PE:	L =	Steckplatz
  551                   ; PA:	HL = 4000h fuer folgende Operationen
  552                   ; VR:	AF, BC, HL
  553                   ;
  554 C37F  01 0880     SLOT1:	LD	BC,0880h	; alle Module von 8 bis L abschalten
  555 C382  AF          slo1:	XOR	A		; Modul abschalten
  556 C383  ED 79       	OUT	(C),A		; war vorher ED 71 = OUT (C),0
  557 C385  04          	inc	b		; naechster Steckplatz
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  22
CC48    INC

  558 C386  7D          	ld	a,l		; Steckplatz, der zu untersuchen ist
  559 C387  B8          	cp	b		; Steckplatz erreicht?
  560 C388  20 F8       	jr	nz,slo1
  561 C38A  3E 41       	ld	a,41h		; Modul auf 4000h einschalten
  562 C38C  ED 79       	out	(c),a
  563                   	RESIXA	0,4		; RES 0,(IX+4),A
    1 C38E  DD CB 04    	 DB	0DDh,0CBh,4
    2 C391  87          	 DB	0 SHL 3 OR 10000111b
  564 C392  D3 86       	OUT	(PORT2),A	; RAM4 aus!
  565 C394  21 4000     	LD	HL,4000h	; Uebergabe der zu untersuchenden Adresse
  566 C397  C9          	RET
  567                   ;
  568                   ; Modulzustand regenerieren laut Modulsteuerbytetabelle
  569                   ; (erforderlich falls Modulsuche Aenderungen gemacht hat)
  570                   ; PE:	-
  571                   ; PA:	-
  572                   ; VR:	AF, HL, D
  573                   ;
  574 C398  21 B804     SLOT0:	ld	hl,modst+4	; beginnend ab RAM4
  575 C39B  56          slo0:	ld	d,(hl)		; gespeicherter Schaltzustand
  576 C39C  E5          	push	hl
  577                   ;	ld	a,2		; schalten
  578 C39D  CD C3B5     	call	MODUC2		; Schaltzustaende nach Tabelle regenerieren
  579 C3A0  E1          	pop	hl
  580 C3A1  2C          	inc	l		; naechster Steckplatz
  581 C3A2  20 F7       	jr	nz,slo0		; bis FFh
  582 C3A4  C9          	ret
  583                   ;
  584                   ; V.24-Modul suchen und einschalten:
  585                   ;
  586                   ; PE:	B	Steckplatz ab dem gesucht wird
  587                   ; PA:	B	Steckplatz des Moduls
  588                   ;	CY = 1	kein M003 vorhanden
  589                   ; VR:	AF, BC, D, HL
  590                   ;
  591 C3A5  0E 80       V24SU:	LD	C,80h
  592 C3A7  ED 78       V24S1:	IN	A,(C)
  593 C3A9  FE EE       	CP	0EEH		; M003?
  594 C3AB  28 05       	JR	Z,V24S2		; ja
  595 C3AD  04          	INC	B
  596 C3AE  20 F7       	JR	NZ,V24S1
  597 C3B0  37          	SCF			; nicht gefunden
  598 C3B1  C9          	RET
  599                   	;
  600 C3B2  68          V24S2:	LD	L,B		; Steckplatz
  601 C3B3  16 01       MODUC1:	LD	D,1		; EIN
  602 C3B5  3E 02       MODUC2:	LD	A,2		; Schalten
  603                   
  604                   ; Module schalten:
  605                   ;
  606                   ; PE:	A=1	Modultyp lesen (Register L)
  607                   ;	A=2	Modul schalten (Register D und L)
  608                   ;	L	Modulsteckplatz
  609                   ;	D	Modulsteuerbyte neu
  610                   ; PA:	H	Modultyp (Strukturbyte)
  611                   ;	D	Modulsteuerbyte neu
  612                   ;	A	Modulsteuerbyte alt
  613                   ; VR:	AF, D, H, BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  23
CC48    INC

  614                   
  615 C3B7  26 B8       MODUC:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  616 C3B9  0E 80       	LD	C,80H		; I/O-Adresse
  617 C3BB  45          	LD	B,L		; Steckplatz
  618 C3BC  FE 02       	CP	2		; 2 Parameter angegeben?
  619 C3BE  7E          	LD	A,(HL)		; urspruenglicher Schaltzustand
  620 C3BF  30 04       	JR	NC,MODU1	; Module schalten
  621 C3C1  56          	LD	D,(HL)		; Schaltzustand aus Steuerbytespeicher lesen
  622 C3C2  ED 60       RSTRB:	IN	H,(C)		; Strukturbyte aus Modul lesen
  623 C3C4  C9          	RET
  624                   
  625                   	;Modul schalten
  626 C3C5  F5          MODU1:	PUSH	AF		; alter Zustand
  627 C3C6  72          	LD	(HL),D		; neues Steuerbyte eintragen
  628 C3C7  67          	LD	H,A		; fuer 2. RAM4
  629 C3C8  7D          	LD	A,L
  630 C3C9  FE 06       	CP	6		; interne Module?
  631 C3CB  38 05       	JR	C,MODU2
  632 C3CD  ED 51       	OUT	(C),D		; Steuerbyte an Modul senden
  633 C3CF  F1          	POP	AF		; urspruenglicher Schaltzustand
  634 C3D0  18 F0       	JR	RSTRB		; und noch das Strukturbyte lesen
  635                   
  636                   	;interne Module
  637 C3D2  04          MODU2:	INC	B		; Steckplatz
  638 C3D3  F3          	DI			; damit PIO nicht von einer ISR geaendert wird
  639 C3D4  DB 88       	IN	A,(PIOAD)
  640 C3D6  10 0D       	DJNZ	MODU3		; 0: RAM0?
  641 C3D8  E6 F5       	AND	11110101b
  642 C3DA  67          	LD	H,A
  643 C3DB  7A          	LD	A,D
  644 C3DC  0F          	RRCA			; Bits 0,1 auf 7,0 rotieren
  645 C3DD  E6 81       	AND	10000001b	; CY = 0
  646 C3DF  17          	RLA			; 0 einfuegen, CY = Bit 7
  647 C3E0  17          	RLA			; Bit 0 = CY
  648 C3E1  07          	RLCA			; auf Bits 1,3 rotieren
  649 C3E2  B4          	OR	H
  650 C3E3  18 23       	JR	OUT88
  651                   
  652 C3E5  10 0A       MODU3:	DJNZ	MODU4		; 1: IRM?
  653 C3E7  E6 FB       	AND	11111011b
  654 C3E9  CB 42       	BIT	0,D
  655 C3EB  28 1B       	JR	Z,OUT88
  656 C3ED  F6 04       	OR	00000100b
  657 C3EF  18 17       	JR	OUT88
  658                   
  659 C3F1  10 19       MODU4:	DJNZ	MODU5		; 2: USER-ROM?
  660 C3F3  7A          	LD	A,D
  661 C3F4  2F          	CPL			; negieren
  662 C3F5  07          	RLCA			; Bits 4..5 auf 5..6 rotieren
  663 C3F6  E6 60       	AND	01100000b	; ausfiltern (2 Ebenen)
  664 C3F8  67          	LD	H,A
  665                   ;	DI
  666 C3F9  DD 7E 04    	LD	A,(IX+4)
  667 C3FC  E6 9F       	AND	10011111b
  668 C3FE  B4          	OR	H		; einbauen
  669 C3FF  CD E29F     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  670                   ;	EI
  671 C402  7A          	LD	A,D
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  24
CC48    INC

  672 C403  0F          	RRCA			; CY = Bit 0
  673 C404  DB 88       	IN	A,(PIOAD)
  674 C406  17          	RLA			; als Bit 0 einschieben
  675 C407  0F          	RRCA			; und auf Bit 7 rotieren
  676 C408  D3 88       OUT88:	OUT	(PIOAD),A
  677 C40A  18 21       	JR	STBFF
  678                   
  679 C40C  10 24       MODU5:	DJNZ	MODU6		; 3: RAM8?
  680 C40E  3E 03       	LD	A,00000011b	; on/off und Schreibschutz aus Steuerbyte
  681 C410  A2          	AND	D
  682 C411  0F          	RRCA			; Bits 0..1 auf 5..6 rotieren
  683 C412  0F          	RRCA
  684 C413  0F          	RRCA
  685 C414  67          	LD	H,A		; in H merken
  686                   ;	DI
  687 C415  DB 89       	IN	A,(PIOBD)
  688 C417  E6 9F       	AND	10011111b
  689 C419  B4          	OR	H		; on/off und Schreibschutz neu einstellen
  690 C41A  D3 89       	OUT	(PIOBD),A
  691                   ;	EI
  692 C41C  7A          	LD	A,D
  693 C41D  07          	RLCA			; Bits 2..5 auf 4..7 rotieren
  694 C41E  07          	RLCA
  695 C41F  C6 20       	ADD	A,20h		; Segment-Verschiebung
  696 C421  E6 F0       	AND	0F0h		; nur Bit 4-7 benutzen
  697 C423  67          	LD	H,A
  698                   ;	DI
  699 C424  DD 7E 01    	LD	A,(IX+1)
  700 C427  E6 0F       	AND	0Fh		; Bit 4-7 ruecksetzen
  701 C429  B4          	OR	H		; RAM8-Segment gemaess Steuerbyte einbauen
  702 C42A  CD F988     	CALL	OUT84		; (IX+1) und PORT1 einstellen
  703 C42D  FB          STBFF:	EI
  704 C42E  F1          	POP	AF		; urspruenglicher Zustand
  705 C42F  26 FF       	LD	H,0FFh		; internes Modul melden
  706 C431  C9          	RET
  707                   
  708         0001      IF CAOS2
  709 C432  10 51       MODU6:	DJNZ	MODU7		; 5=CAOSC
  710                   else
  712                   endif
  713 C434  7A          	LD	A,D		; 4=RAM4
  714 C435  AC          	XOR	H
  715 C436  E6 04       	AND	4		; Aenderung?
  716                   ;	DI
  717 C438  28 3F       	JR	Z,RAM41
  718 C43A  DD 7E 04    	LD	A,(IX+4)
  719 C43D  F6 03       	OR	3
  720 C43F  D3 86       	OUT	(PORT2),A	; RAM4 on
  721 C441  D5          	PUSH	DE
  722 C442  E5          	PUSH	HL
  723 C443  DB 88       	IN	A,(PIOAD)
  724 C445  F5          	PUSH	AF
  725 C446  CB 87       	RES	0,A
  726                   ; dieser Datenaustausch muss im DI laufen, da der CAOS-ROM E aus ist!
  727 C448  D3 88       	OUT	(PIOAD),A	; CAOSE off
  728 C44A  DD 7E 01    	LD	A,(IX+1)
  729 C44D  F5          	PUSH	AF
  730 C44E  E6 F9       	AND	11111001b
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  25
CC48    INC

  731 C450  2E 03       	LD	L,3		; 3 IRM-Ebenen
  732 C452  01 1000     	LD	BC,1000H	; 800H frei!
  733 C455  11 4000     	LD	DE,4000H
  734 C458  C6 02       R4IS:	ADD	A,2
  735 C45A  D3 84       	OUT	(PORT1),A	; IRM-Ebene
  736 C45C  67          	LD	H,A
  737 C45D  E5          	PUSH	HL
  738 C45E  21 A800     	LD	HL,0A800H
  739 C461  1A          R4MV:	LD	A,(DE)
  740 C462  ED A0       	LDI
  741 C464  2B          	DEC	HL
  742 C465  77          	LD	(HL),A
  743 C466  23          	INC	HL
  744 C467  EA C461     	JP	PE,R4MV
  745 C46A  E1          	POP	HL
  746 C46B  7C          	LD	A,H
  747 C46C  06 18       	LD	B,18H		; jetzt 1800H!
  748 C46E  2D          	DEC	L
  749 C46F  20 E7       	JR	NZ,R4IS
  750 C471  F1          	POP	AF
  751 C472  D3 84       	OUT	(PORT1),A	; IRM wie zuvor
  752 C474  F1          	POP	AF
  753 C475  D3 88       	OUT	(PIOAD),A	; CAOSE on
  754                   ; ab hier koennte wieder EI eingestellt werden, CAOS-ROM E ist wieder ein
  755 C477  E1          	POP	HL
  756 C478  D1          	POP	DE
  757 C479  DD 7E 04    RAM41:	LD	A,(IX+4)
  758 C47C  AA          	XOR	D
  759 C47D  E6 FC       	AND	11111100b	; Bits 0..1: a = (0 XOR d) = d
  760 C47F  AA          RAM42:	XOR	D		; Bits 2..7: a = (a XOR d) XOR d
  761 C480  CD E29F     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  762 C483  18 A8       	JR	STBFF
  763         0001      if CAOS2
  764 C485  DD 7E 04    MODU7:	LD	A,(IX+4)
  765 C488  AA          	XOR	D
  766 C489  E6 EF       	AND	11101111b	; Bit 4 schaltet ROM-Ebene (Zeichensatz) um
  767 C48B  18 F2       	JR	RAM42
  768                   endif
  769                   
  770                   ; F-Taste belegen:
  771                   
  772 C48D  21 B900     KEYC:	LD	HL,FTASTE	; 0B900H
  773 C490  A7          	AND	A
  774 C491  20 07       	JR	NZ,KEY0
  775 C493  06 9C       	LD	B,9CH
  776 C495  77          KEYCL:	LD	(HL),A		; loeschen
  777 C496  2C          	INC	L
  778 C497  10 FC       	DJNZ	KEYCL
  779 C499  C9          	RET
  780                   	;
  781 C49A  FE 10       KEY0:	CP	15+1
  782 C49C  D0          	RET	NC		; nur F1 bis FF
  783 C49D  47          	LD	B,A
  784 C49E  F6 F0       	OR	0F0H
  785 C4A0  4F          	LD	C,A
  786 C4A1  7E          KEY1:	LD	A,(HL)		; B Dummys auszaehlen
  787 C4A2  2C          	INC	L
  788 C4A3  C8          	RET	Z
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  26
CC48    INC

  789 C4A4  A7          	AND	A
  790 C4A5  20 FA       	JR	NZ,KEY1
  791 C4A7  10 F8       	DJNZ	KEY1
  792 C4A9  7D          	LD	A,L
  793 C4AA  FE 9C       	CP	9CH
  794 C4AC  D0          	RET	NC
  795 C4AD  ED 5B B7A0  	LD	DE,(CURSO)
  796 C4B1  CD C56A     	CALL	KEYDI		; praesentieren
  797 C4B4  CD F3D8     KEY2:	CALL	INTB
  798 C4B7  FE 13       	CP	13H
  799 C4B9  20 03       	JR	NZ,KEY3
  800 C4BB  04          	INC	B		; Umschaltung
  801 C4BC  18 F6       	JR	KEY2
  802                   	;
  803 C4BE  CB 40       KEY3:	BIT	0,B
  804 C4C0  28 0D       	JR	Z,KEY4		; interpretieren
  805 C4C2  FE 03       	CP	3
  806 C4C4  28 70       	JR	Z,KEY12		; BRK=Abbruch
  807 C4C6  FE 0D       	CP	CR
  808 C4C8  28 0A       	JR	Z,KEY5		; Enter=belegen
  809 C4CA  CD F3BE     	CALL	OCHR
  810 C4CD  18 E5       	JR	KEY2
  811                   	;
  812 C4CF  CD E38D     KEY4:	CALL	CSTBT
  813 C4D2  18 E0       	JR	KEY2
  814                   	;
  815 C4D4  E5          KEY5:	PUSH	HL		; Pos. in Puffer
  816 C4D5  CD E083     	CALL	DABR
  817 C4D8  EB          	EX	DE,HL
  818 C4D9  CD F4CE     	CALL	RHEX		; Fn lesen
  819 C4DC  E1          	POP	HL
  820 C4DD  38 06       	JR	C,KERR		; Formatfehler
  821 C4DF  3A B797     	LD	A,(NUMVX)
  822 C4E2  B9          	CP	C		; geaendert!
  823 C4E3  28 06       	JR	Z,KEY6
  824 C4E5  CD F4C7     KERR:	CALL	CRLF
  825 C4E8  C3 F4BD     	JP	ERRM
  826                   	;
  827 C4EB  13          KEY6:	INC	DE
  828 C4EC  13          	INC	DE
  829 C4ED  06 9B       	LD	B,9BH
  830 C4EF  2F          	CPL
  831 C4F0  A7          	AND	A
  832 C4F1  28 21       	JR	Z,KEY8		; KEY F
  833 C4F3  3C          	INC	A
  834 C4F4  47          	LD	B,A
  835 C4F5  4D          	LD	C,L
  836 C4F6  7E          KEY7:	LD	A,(HL)
  837 C4F7  2C          	INC	L
  838 C4F8  28 EB       	JR	Z,KERR		; Puffer voll!
  839 C4FA  A7          	AND	A
  840 C4FB  20 F9       	JR	NZ,KEY7
  841 C4FD  10 F7       	DJNZ	KEY7		; Ende suchen
  842 C4FF  2D          	DEC	L
  843 C500  7D          	LD	A,L
  844 C501  FE 9C       	CP	9CH
  845 C503  30 E0       	JR	NC,KERR		; Puffer voll!
  846 C505  44          	LD	B,H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  27
CC48    INC

  847 C506  C5          	PUSH	BC
  848 C507  91          	SUB	C
  849 C508  4F          	LD	C,A
  850 C509  06 00       	LD	B,0
  851 C50B  D5          	PUSH	DE
  852 C50C  11 B99B     	LD	DE,0B99BH
  853 C50F  ED B8       	LDDR			; Rest hinter
  854 C511  43          	LD	B,E
  855 C512  D1          	POP	DE
  856 C513  E1          	POP	HL
  857 C514  4F          KEY8:	LD	C,A
  858 C515  2D          KEY9:	DEC	L
  859 C516  7E          	LD	A,(HL)
  860 C517  A7          	AND	A
  861 C518  20 FB       	JR	NZ,KEY9		; zurueck bis 0
  862 C51A  2C          KEY10:	INC	L
  863 C51B  1A          	LD	A,(DE)
  864 C51C  13          	INC	DE
  865 C51D  77          	LD	(HL),A		; belegen
  866 C51E  B7          	OR	A
  867 C51F  28 08       	JR	Z,KEY11
  868 C521  78          	LD	A,B
  869 C522  95          	SUB	L
  870 C523  20 F5       	JR	NZ,KEY10
  871 C525  36 00       	LD	(HL),0
  872 C527  18 BC       	JR	KERR
  873                   	;
  874 C529  79          KEY11:	LD	A,C
  875 C52A  A7          	AND	A
  876 C52B  28 09       	JR	Z,KEY12		; KEY F
  877 C52D  04          	INC	B
  878 C52E  2C          	INC	L
  879 C52F  5D          	LD	E,L
  880 C530  54          	LD	D,H
  881 C531  68          	LD	L,B
  882 C532  06 00       	LD	B,0
  883 C534  ED B0       	LDIR			; Rest nach vorn
  884 C536  C3 F4C7     KEY12:	JP	CRLF
  885                   
  886                   ; Anzeige belegter F-Tasten:
  887                   
  888 C539  21 B901     KEYLIC:	LD	HL,FTASTE+1
  889 C53C  01 00F1     	LD	BC,0F1H
  890 C53F  7E          KEYLC1:	LD	A,(HL)
  891 C540  A7          	AND	A
  892 C541  28 07       	JR	Z,KEYLC2
  893 C543  CD C56A     	CALL	KEYDI		; Belegung
  894 C546  CD F4C7     	CALL	CRLF
  895 C549  04          	INC	B		; Zaehler
  896 C54A  2C          KEYLC2:	INC	L
  897 C54B  7D          	LD	A,L
  898 C54C  FE 9C       	CP	9CH
  899 C54E  30 03       	JR	NC,KEYLC3
  900 C550  0C          	INC	C
  901 C551  20 EC       	JR	NZ,KEYLC1	; F1 bis FF
  902 C553  04          KEYLC3:	INC	B
  903 C554  05          	DEC	B
  904 C555  C0          	RET	NZ
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  28
CC48    INC

  905 C556  CD F0B4     	CALL	OSTR
  906 C559  46 2D 54 61 	DB	'F-Tasten leer'
  907 C566  0D 0A 00    	DB	CR,LF,0
  908 C569  C9          	RET
  909                   
  910 C56A  3E 02       KEYDI:	LD	A,2
  911 C56C  CD F3BE     	CALL	OCHR		; Zeile loeschen
  912 C56F  79          	LD	A,C
  913 C570  CD F0B1     	CALL	AHOSTR		; Fn
  914 C573  20 3A 00    	DB	' :',0
  915 C576  7E          KEYD1:	LD	A,(HL)
  916 C577  B7          	OR	A
  917 C578  C8          	RET	Z
  918 C579  CD E38D     	CALL	CSTBT
  919 C57C  23          	INC	HL
  920 C57D  7D          	LD	A,L
  921 C57E  FE 9C       	CP	9CH
  922 C580  D0          	RET	NC
  923 C581  18 F3       	JR	KEYD1
  924                   
  925                   ; COLOR-Menuewort:
  926                   
  927 C583  A7          COLRC:	AND	A		; Anzahl Parameter
  928 C584  20 1E       	JR	NZ,SETCO	; 1 oder 2 -> Farben einstellen
  929 C586  67          	LD	H,A		; 0 = aktuelle Farben anzeigen
  930 C587  3A B7A3     	LD	A,(COLOR)
  931 C58A  0F          	RRCA
  932 C58B  0F          	RRCA
  933 C58C  0F          	RRCA
  934 C58D  E6 1F       	AND	1FH
  935 C58F  6F          	LD	L,A
  936 C590  CD EDA0     	CALL	HLDEZ		; Anzeige Vordergrundfarbe
  937 C593  CD F3A5     	CALL	SPACE
  938 C596  3A B7A3     	LD	A,(COLOR)
  939 C599  E6 07       	AND	7
  940 C59B  6F          	LD	L,A
  941 C59C  CD EDA0     	CALL	HLDEZ		; Anzeige Hintergrundfarbe
  942 C59F  CD F4C7     	CALL	CRLF
  943 C5A2  18 18       	JR	COLRC2
  944                   
  945                   ; COLOR-Unterprogramm = Farbe setzen (aus L und E)
  946                   
  947 C5A4  3E 1F       SETCO:	LD	A,1FH		; 1 oder 2 
  948 C5A6  A5          	AND	L		; Maske fuer Vordergrundfarbe
  949 C5A7  17          	RLA
  950 C5A8  17          	RLA
  951 C5A9  17          	RLA
  952 C5AA  6F          	LD	L,A
  953 C5AB  3A B781     	LD	A,(ARGN)
  954 C5AE  FE 02       	CP	2		; auch Hintergrund einstellen?
  955 C5B0  7B          	LD	A,E		; neue Hintergrundfarbe
  956 C5B1  30 03       	JR	NC,COLRC1
  957 C5B3  3A B7A3     	LD	A,(COLOR)	; alte Hintergrundfarbe
  958 C5B6  E6 07       COLRC1:	AND	7
  959 C5B8  B5          	OR	L
  960 C5B9  32 B7A3     	LD	(COLOR),A	; neuer Farbwert
  961 C5BC  C3 FB8A     COLRC2:	JP	COFF
  962                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  29
CC48    INC

  963                   ; WINDOW-Menuewort
  964                   ; 21.05.2021: Bedeutung der Argumente wie bei BASIC angepasst
  965                   ; PE:	A	Anzahl Argumente
  966                   ;	A=0	Standardfenster (volle Groesse) einstellen
  967                   ;	A=1	Fenster mit Nr. aufrufen
  968                   ;	A=4(5)	Fenster (mit Nr.) definieren
  969                   ;	L	Erste Zeile / Fensternummer bei A=1
  970                   ;	E	Letzte Zeile	(bisher Anzahl Zeilen)
  971                   ;	C	Erste Spalte
  972                   ;	(ARG4)	Letzte Spalte	(bisher Anzahl Spalten)
  973                   ;	(ARG5)	Fensternummer
  974                   ;
  975 C5BF  A7          WINDC:	AND	A		; Kein Argument?
  976 C5C0  28 21       	JR	Z,WINC0		; Standardfenster initialisieren
  977 C5C2  3D          	DEC	A		; 1 Arg?
  978 C5C3  28 29       	JR	Z,WINAKL	; Aufruf Nummer L
  979 C5C5  D6 03       	SUB	3
  980 C5C7  38 17       	JR	C,WINCJE	; 2..3 Arg => ERROR
  981 C5C9  28 03       	JR	Z,WINC1		; Fenster Nr. 0
  982 C5CB  3A B78A     	LD	A,(ARG5)	; Fenster nr definieren
  983 C5CE  47          WINC1:	LD	B,A		; Fensternummer
  984                   
  985 C5CF  7B          	LD	A,E		; letzte Zeile
  986 C5D0  95          	SUB	L		; erste Zeile
  987                   ;	JR	C,WINCE		; Anfang > Ende (wird von WININ ueberwacht)
  988 C5D1  3C          	INC	A
  989 C5D2  57          	LD	D,A		; Anzahl Zeilen (Fensterhoehe)
  990                   
  991 C5D3  3A B788     	LD	A,(ARG4)	; letzte Spalte
  992 C5D6  91          	SUB	C		; erste Spalte
  993                   ;	JR	C,WINCE		; Anfang > Ende (wird von WININ ueberwacht)
  994 C5D7  3C          	INC	A
  995 C5D8  5F          	LD	E,A		; Anzahl Spalten (Fensterbreite)
  996                   
  997 C5D9  65          	LD	H,L		; H = erste Zeile
  998 C5DA  69          	LD	L,C		; L = erste Spalte
  999 C5DB  78          	LD	A,B		; A = Fensternummer
 1000                   
 1001 C5DC  CD C61F     	CALL	WININC		; Fenster initialisieren
 1002 C5DF  D0          	RET	NC		; OK
 1003 C5E0  C3 F4BD     WINCJE:	JP	ERRM		; ansonsten Fehler anzeigen
 1004                   
 1005 C5E3  11 B79B     WINC0:	LD	DE,WINNR	; von Fensternummer
 1006 C5E6  21 C002     WINC2:	LD	HL,WIN0		; bis WEND-Adresse
 1007 C5E9  01 000B     	LD	BC,WIN1-WIN0	; mit Standardwerten aus ROM
 1008 C5EC  18 2E       	JR	LDIRET		; Fenster 0 neu initialisieren
 1009                   
 1010                   ; definiertes Fenster aufrufen:
 1011                   ; PE:	A	Fensternummer 0..9
 1012                   ; PA:	CY=1	Fehler
 1013                   ; VR:	AF,BC,DE,HL
 1014                   
 1015 C5EE  7D          WINAKL:	LD	A,L		; Fensternummer
 1016 C5EF  CD C60C     WINAKC:	CALL	WCOPY		; aktuelles Fenster retten
 1017 C5F2  32 B79B     	LD	(WINNR),A	; neue Fensternummer
 1018                   ;Einsprung fuer BASIC (PRINT AT)
 1019 C5F5  CD C5FF     WINAKB:	CALL	WINADR		; Adresse Vektorspeicher in DE
 1020 C5F8  D8          	RET	C		; Nr. ausserhalb
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  30
CC48    INC

 1021 C5F9  EB          	EX	DE,HL		; HL=Adresse der gespeicherten Fensterdaten
 1022 C5FA  11 B79C     	LD	DE,WINON	; gespeichertes Fenster laden
 1023 C5FD  18 1A       	JR	WCOP1
 1024                   
 1025                   ; Testet Fenster-Nr. und berechnet Position in Fenstervektorspeicher
 1026                   ; PE:	A	Fensternummer 0-9
 1027                   ; PA:	CY=1	Nr. zu gross
 1028                   ;	DE	Adresse im Fenstervektorspeicher
 1029                   
 1030 C5FF  C6 F6       WINADR:	ADD	A,-10
 1031 C601  D8          	RET	C		; zu gross
 1032 C602  87          	ADD	A,A	; *2
 1033 C603  5F          	LD	E,A
 1034 C604  87          	ADD	A,A	; *4
 1035 C605  87          	ADD	A,A	; *8
 1036 C606  83          	ADD	A,E	; *10
 1037 C607  5F          	LD	E,A
 1038 C608  16 B9       	LD	D,High(WNDFN)	; Adresse im Fenstervektorspeicher
 1039 C60A  A7          	AND	A		; CY=0
 1040 C60B  C9          	RET
 1041                   
 1042                   ; aktuelles Fenster (WINNR) in Fenstervektorspeicher retten
 1043                   ; PE:	A	Fensternummer 0..9
 1044                   ; PA:	CY=1	Nr. zu gross
 1045                   ;	BC=0
 1046                   ; VR:	F,BC,DE,HL
 1047                   
 1048 C60C  F5          WCOPY:	PUSH	AF
 1049 C60D  3A B79B     	LD	A,(WINNR)	; aktuelle Fensternummer
 1050 C610  CD C5FF     	CALL	WINADR		; Adresse berechnen
 1051 C613  38 0E       	JR	C,WINIE		; Fehler
 1052 C615  F1          	POP	AF
 1053 C616  21 B79C     	LD	HL,WINON	; ab Fensteranfang 10 Byte retten
 1054 C619  01 000A     WCOP1:	LD	BC,10		; Laenge Fenstervektor
 1055 C61C  ED B0       LDIRET:	LDIR
 1056 C61E  C9          	RET
 1057                   
 1058                   ; Initialisierung eines Fensters
 1059                   ; PE:	A	Fensternummer 0..9
 1060                   ;	HL	Fensteranfang
 1061                   ;	DE	Fenstrergroesse
 1062                   ; PA:	CY=1	Fehler
 1063                   ; VR:	AF,BC,DE,HL
 1064                   
 1065 C61F  F5          WININC:	PUSH	AF
 1066 C620  CD C626     	CALL	WININ1
 1067 C623  F1          WINIE:	POP	AF		; Fehlerende
 1068 C624  37          	SCF
 1069 C625  C9          	RET
 1070                   	;
 1071 C626  FE 0A       WININ1:	CP	10		; Fensternummer
 1072 C628  D0          	RET	NC		; nur 10 Fenster moeglich
 1073 C629  7A          	LD	A,D		; Zeilen
 1074 C62A  A7          	AND	A
 1075 C62B  C8          	RET	Z		; Zeilenanzahl=0 -> ERROR
 1076 C62C  84          	ADD	A,H
 1077 C62D  D8          	RET	C		; Anzahl+Anfang>256 -> ERROR
 1078 C62E  FE 21       	CP	33
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  31
CC48    INC

 1079 C630  D0          	RET	NC		; Anzahl+Anfang>32 -> ERROR
 1080 C631  7B          	LD	A,E		; Spalten
 1081 C632  A7          	AND	A
 1082 C633  C8          	RET	Z		; Spaltenanzahl=0 -> ERROR
 1083 C634  85          	ADD	A,L
 1084 C635  D8          	RET	C		; Anzahl+Anfang>256 -> ERROR
 1085 C636  FE 29       	CP	41
 1086 C638  D0          	RET	NC		; Anzahl+Anfang>40 -> ERROR
 1087 C639  F1          	POP	AF		; Ruecksprung nach WINIE vom Stack
 1088 C63A  F1          	POP	AF
 1089                   ;Einsprung fuer BASIC (PRINT AT)
 1090 C63B  D5          WININB:	PUSH	DE
 1091 C63C  E5          	PUSH	HL
 1092 C63D  CD C60C     	CALL	WCOPY		; aktuelles Fenster retten
 1093 C640  E1          	POP	HL
 1094 C641  D1          	POP	DE
 1095 C642  22 B79C     	LD	(WINON),HL	; Fensteranfang
 1096 C645  ED 53 B79E  	LD	(WINLG),DE	; Fenstergroesse
 1097 C649  ED 43 B7A0  	LD	(CURSO),BC	; BC=0
 1098 C64D  32 B79B     	LD	(WINNR),A	; Fensternummer
 1099 C650  A7          	AND	A		; CY=0
 1100 C651  C9          	RET
 1101                   
 1102         0001      if SYSROM
 1103                   ;
 1104                   ; 13.06.2021:
 1105                   ; JUMP-Erweiterung zum Sprung in 8 verschiedene CAOS-Versionen.
 1106                   ; PE:	A=0-7
 1107                   ;
 1108 C652  F3          JUMPC:	DI			; Interrupt global sperren
 1109 C653  11 B7A6     	LD	DE,NCAOS+2-LENX	; im IRM vor dem JUMP zu NCAOS
 1110 C656  D5          	PUSH	DE		; ist gleichzeitig Sprungziel
 1111 C657  21 C65F     	LD	HL,CODEX	; Umschalt-Code vom ROM
 1112 C65A  01 0010     	LD	BC,LENX		; Laenge
 1113 C65D  18 BD       	JR	LDIRET		; in IRM kopieren und dort starten
 1114                   ; ueberschreibt zwar CCTL-Zeichentabellen und auch den System-SP-Merker sowie
 1115                   ; den Zeiger auf die SUTAB - macht aber nichts, da mit dem Sprung zu F012H das
 1116                   ; gesamte System neu initialisiert wird (entspricht RESET)
 1117                   
 1118 C65F  47          CODEX:	LD	B,A		; CAOS-Ebene 0..7
 1119 C660  04          	INC	B		; Ebene 1-8
 1120 C661  3E E7       	ld	a,0E7h		; CAOS-C ein, RAM4 ein, Reset-Impuls ein
 1121 C663  D3 86       	OUT	(PORT2),A
 1122 C665  F6 08       R0:	OR	8		; Zaehl-Impuls ein
 1123 C667  D3 86       	OUT	(PORT2),A	; Impuls ausloesen
 1124 C669  E6 F3       	AND	0F3h		; RESET-Impuls und Zaehl-Impuls aus
 1125 C66B  D3 86       	OUT	(PORT2),A	; Impuls wieder aus
 1126 C66D  10 F6       	DJNZ	R0		; Bis n Impulse ausgegeben sind, danach:
 1127                   ;	JP	0F012H		; in neues System springen
 1128         0010      LENX	EQU $-CODEX
 1129                   endif
 1130                   
 1131                   ; Linie zeichnen					**3E**
 1132                   ; von (ARG1)/(ARG2) nach (ARG3)/(ARG4)
 1133                   
 1134 C66F  ED 5B B784  LINEC:	 LD	DE,(ARG2)	; YANF
 1135 C673  2A B788     	 LD	HL,(ARG4)	; YEND
 1136 C676  D9          	 EXX
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  32
CC48    INC

 1137 C677  ED 5B B782  	LD	DE,(ARG1)	; XANF
 1138 C67B  D5          	PUSH	DE
 1139 C67C  2A B786     	LD	HL,(ARG3)	; XEND
 1140 C67F  3E 08       	LD	A,8		; X=Master
 1141 C681  B7          	OR	A
 1142 C682  ED 52       	SBC	HL,DE		; HL=XSTEPS
 1143 C684  30 06       	JR	NC,LINC1	; vorwaerts
 1144 C686  19          	ADD	HL,DE
 1145 C687  EB          	EX	DE,HL
 1146 C688  F6 01       	OR	1		; rueckwaerts
 1147 C68A  ED 52       	SBC	HL,DE
 1148 C68C  D9          LINC1:	 EXX
 1149 C68D  D5          	 PUSH	DE		; YANF
 1150 C68E  ED 52       	 SBC	HL,DE		; HL'=YSTEPS
 1151 C690  30 06       	 JR	NC,LINC2	; steigend
 1152 C692  19          	 ADD	HL,DE
 1153 C693  EB          	 EX	DE,HL
 1154 C694  F6 02       	 OR	2		; fallend
 1155 C696  ED 52       	 SBC	HL,DE
 1156 C698  E5          LINC2:	 PUSH	HL		; YSTEPS
 1157 C699  D9          	 EXX			; HL=XSTEPS
 1158 C69A  C1          	POP	BC		; BC=YSTEPS
 1159 C69B  E5          	PUSH	HL
 1160 C69C  ED 42       	SBC	HL,BC		; flach/steil?
 1161 C69E  E1          	POP	HL
 1162 C69F  C5          	PUSH	BC
 1163 C6A0  30 05       	JR	NC,LINC3	; flach
 1164 C6A2  E3          	EX	(SP),HL
 1165 C6A3  CB 9F       	RES	3,A		; X=Slave
 1166 C6A5  CB D7       	SET	2,A		; Y=Master
 1167 C6A7  E5          LINC3:	PUSH	HL		; HL=MAX(STEPS)
 1168 C6A8  44          	LD	B,H
 1169 C6A9  4D          	LD	C,L		; Pixelzaehler
 1170 C6AA  D9          	 EXX
 1171 C6AB  C1          	 POP	BC		; BC'=MAX(...)
 1172 C6AC  D1          	 POP	DE		; DE'=MIN(...)
 1173 C6AD  60          	 LD	H,B
 1174 C6AE  69          	 LD	L,C
 1175 C6AF  CB 3C       	 SRL	H		; Slave mit 1/2
 1176 C6B1  CB 1D       	 RR 	L		; HL=1/2*MAX(...)
 1177 C6B3  D9          	 EXX
 1178 C6B4  D1          	POP	DE		; DE=YANF
 1179 C6B5  E1          	POP	HL		; HL=XANF
 1180                   
 1181                   ; Hauptschleife
 1182                   ; AF Bitregister
 1183                   ; HL lfd. X-Koordinate	HL' Slave
 1184                   ; DE lfd. Y-Koordinate	DE' -Master
 1185                   ; BC Punktezaehler	BC' +Master
 1186                   
 1187 C6B6  F5          LINCS:	PUSH	AF
 1188 C6B7  08          	EX	AF,AF'		; Bitreg merken
 1189 C6B8  F1          	POP	AF
 1190 C6B9  E5          	PUSH	HL
 1191 C6BA  21 B7ED     	LD	HL,LINTYP
 1192 C6BD  CB 06       	RLC	(HL)
 1193 C6BF  E1          	POP	HL
 1194 C6C0  DC C75D     	CALL	C,POINT		; Punkt setzen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  33
CC48    INC

 1195 C6C3  D9          	 EXX
 1196 C6C4  A7          	 AND	A
 1197 C6C5  ED 52       	 SBC	HL,DE		; -Master subtrahieren
 1198 C6C7  30 01       	 JR	NC,LINC4	; kein Uebertrag - kein Sprung!
 1199 C6C9  09          	 ADD	HL,BC		; +Master addieren (CY bleibt =1)
 1200 C6CA  D9          LINC4:	 EXX
 1201 C6CB  30 02       	JR	NC,LINC5
 1202 C6CD  F6 0C       	OR	0CH		; X und Y!
 1203 C6CF  CB 5F       LINC5:	BIT	3,A		; X?
 1204 C6D1  28 07       	JR	Z,LINC6
 1205 C6D3  23          	INC	HL
 1206 C6D4  CB 47       	BIT	0,A
 1207 C6D6  28 02       	JR	Z,LINC6
 1208 C6D8  2B          	DEC	HL
 1209 C6D9  2B          	DEC	HL
 1210 C6DA  CB 57       LINC6:	BIT	2,A		; Y?
 1211 C6DC  28 07       	JR	Z,LINC7
 1212 C6DE  13          	INC	DE
 1213 C6DF  CB 4F       	BIT	1,A
 1214 C6E1  28 02       	JR	Z,LINC7
 1215 C6E3  1B          	DEC	DE
 1216 C6E4  1B          	DEC	DE
 1217 C6E5  78          LINC7:	LD	A,B
 1218 C6E6  B1          	OR	C		; letzter Punkt?
 1219 C6E7  C8          	RET	Z	; CY=0
 1220 C6E8  0B          	DEC	BC
 1221 C6E9  08          	EX	AF,AF'		; Bitreg
 1222 C6EA  18 CA       	JR	LINCS
 1223                   
 1224                   ; Kreis zeichnen					**3F**
 1225                   
 1226 C6EC  3A B786     CIRCLC:	LD	A,(ARG3)	; Radius R
 1227 C6EF  4F          	LD	C,A
 1228 C6F0  51          	LD	D,C
 1229 C6F1  CD FBA2     	CALL	MULT		; BA=C*D
 1230 C6F4  60          	LD	H,B
 1231 C6F5  6F          	LD	L,A		; HL = R*R
 1232 C6F6  54          	LD	D,H
 1233 C6F7  5D          	LD	E,L		; DE = HL
 1234 C6F8  79          	LD	A,C
 1235 C6F9  06 00       	LD	B,0		; BC=Radius
 1236 C6FB  CB 21       	SLA	C
 1237 C6FD  CB 10       	RL	B		; BC=Radius*2
 1238 C6FF  0B          	DEC	BC
 1239 C700  C5          	PUSH	BC
 1240 C701  01 0001     	LD	BC,1
 1241 C704  D9          	EXX
 1242 C705  4F          	 LD	C,A
 1243 C706  06 00       	 LD	B,0		; BC=Radius
 1244                   ;
 1245 C708  E5          CLOOP:	 PUSH	HL
 1246 C709  21 B7ED     	 LD	HL,LINTYP	; Linientype beruecksichtigen
 1247 C70C  CB 06       	 RLC	(HL)		; CY=1 wenn Punkt zu setzen ist
 1248 C70E  E1          	 POP	HL
 1249 C70F  30 06       	 JR	NC,CIRN		; keinen Punkt setzen
 1250 C711  CD C737     	 CALL	QUA		; und jeweils 8
 1251 C714  CD C737     	 CALL	QUA		; Punkte setzen
 1252 C717  D9          CIRN:	EXX
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  34
CC48    INC

 1253 C718  A7          	AND	A
 1254 C719  ED 42       	SBC	HL,BC
 1255 C71B  03          	INC	BC
 1256 C71C  03          	INC	BC
 1257 C71D  ED 52       	SBC	HL,DE
 1258 C71F  19          	ADD	HL,DE
 1259 C720  D9          	EXX
 1260 C721  30 0C       	 JR	NC,CIR3
 1261 C723  D9          	EXX
 1262 C724  E3          	EX	(SP),HL
 1263 C725  EB          	EX	DE,HL
 1264 C726  A7          	AND	A
 1265 C727  ED 52       	SBC	HL,DE
 1266 C729  1B          	DEC	DE
 1267 C72A  1B          	DEC	DE
 1268 C72B  EB          	EX	DE,HL
 1269 C72C  E3          	EX	(SP),HL
 1270 C72D  D9          	EXX
 1271 C72E  0D          	 DEC	C
 1272 C72F  04          CIR3:	 INC	B
 1273 C730  79          	 LD	A,C
 1274 C731  B8          	 CP	B
 1275 C732  30 D4       	 JR	NC,CLOOP
 1276 C734  F1          	POP	AF
 1277 C735  B7          	OR	A	; CY=0 (wegen BASIC erforderlich)
 1278 C736  C9          	RET
 1279                   
 1280                   ; setzt 4 Punkte um Mittelpunkt
 1281                   
 1282 C737  78          QUA:	LD	A,B
 1283 C738  41          	LD	B,C
 1284 C739  4F          	LD	C,A
 1285 C73A  AF          	XOR	A
 1286 C73B  57          	LD	D,A
 1287 C73C  2A B784     	LD	HL,(ARG2)	; Y-Mittelpunkt
 1288 C73F  E5          	PUSH	HL
 1289 C740  59          	LD	E,C
 1290 C741  19          	ADD	HL,DE		; oberhalb vom Mittelpunkt
 1291 C742  CD C74B     	CALL	UPP		; 2 Punkte setzen
 1292 C745  AF          	XOR	A	; CY=0
 1293 C746  57          	LD	D,A
 1294 C747  E1          	POP	HL
 1295 C748  59          	LD	E,C
 1296 C749  ED 52       	SBC	HL,DE		; unterhalb vom Mittelpunkt
 1297                   	;			; und reinlaufen
 1298 C74B  E5          UPP:	PUSH	HL
 1299 C74C  2A B782     	LD	HL,(ARG1)	; X-Mittelpunkt
 1300 C74F  58          	LD	E,B
 1301 C750  A7          	AND	A	; CY=0
 1302 C751  ED 52       	SBC	HL,DE		; links vom Mittelpunkt
 1303 C753  D1          	POP	DE		; Y-Koordinate
 1304 C754  CD C75D     	CALL	POINT		; 1 Punkt setzen
 1305 C757  D5          	PUSH	DE
 1306 C758  57          	LD	D,A
 1307 C759  58          	LD	E,B
 1308 C75A  19          	ADD	HL,DE
 1309 C75B  19          	ADD	HL,DE		; rechts vom Mittelpunkt
 1310 C75C  D1          	POP	DE		; und reinlaufen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  35
CC48    INC

 1311                   
 1312                   ;***************************************************************
 1313                   ; universelles Punkt(re)set-Programm
 1314                   ; PE:	HL	X-Koordinate
 1315                   ;	DE	Y-Koordinate
 1316                   ;	(FARB)	Bit 3...7 : Farbe
 1317                   ;		Bit 2=1   : Farbebene nicht aendern
 1318                   ;		Bit 1=1   : PRESET
 1319                   ;		Bit 0=1   : PXOR
 1320                   ; VR:	-
 1321                   
 1322 C75D  E5          POINT:	PUSH	HL
 1323 C75E  D5          	PUSH	DE
 1324 C75F  C5          	PUSH	BC
 1325 C760  F5          	PUSH	AF
 1326 C761  CD C80C     	CALL	CALXY		; Grafikposition berechnen
 1327 C764  D4 C76A     	CALL	NC,PUSET	; Punkt setzen wenn OK
 1328 C767  C3 E0B3     	JP	POP4		; POP	AF,BC,DE,HL   RET
 1329                   	;
 1330 C76A  DD CB 01 5E PUSET:	BIT	3,(IX+1)	; HiRes?
 1331 C76E  28 29       	JR	Z,HIRES		; Punkt in Vordergrundfarbe setzen
 1332 C770  CB 4A       	BIT	1,D
 1333 C772  20 21       	JR	NZ,PUERA	; Punkt loeschen
 1334 C774  CB 42       	BIT	0,D
 1335 C776  20 03       	JR	NZ,PUXOR	; Punkt invertieren
 1336                   
 1337                   ; Punkt setzen:
 1338 C778  B6          	OR	(HL)		; Bit setzen
 1339 C779  18 03       	JR	PUCOL
 1340                   
 1341                   ; Punkt invertieren:
 1342 C77B  AE          PUXOR:	XOR	(HL)		; alternierend
 1343 C77C  CB 82       	RES	0,D
 1344 C77E  77          PUCOL:	LD	(HL),A		; in Pixel-RAM eintragen
 1345 C77F  CB 52       	BIT	2,D		; Bit 2 in CAOS 3.4 und ab CAOS 4.7 benutzt
 1346 C781  C0          	RET	NZ		; wenn Bit 2=1, dann Farbe nicht setzen
 1347 C782  DD 7E 01    	LD	A,(IX+1)
 1348 C785  5F          	LD	E,A
 1349 C786  EE 02       	XOR	2		; Farbebene
 1350                   ;	 DI
 1351                   ;	 OUT	(PORT1),A	; Umschaltung Farbebene
 1352 C788  CD F988     	CALL	OUT84		; Umschaltung Farbebene (IX+1) und PORT1
 1353 C78B  7E          	LD	A,(HL)
 1354 C78C  E6 07       	AND	7		; alte vFarbe loeschen
 1355 C78E  B2          	OR	D		; neue vFarbe einbauen
 1356 C78F  77          HIR2:	LD	(HL),A		; und in Color-RAM eintragen
 1357 C790  7B          HIR3:	LD	A,E
 1358                   ;	 OUT	(PORT1),A	; zurueck zu Pixelebene
 1359                   ;	 EI
 1360 C791  CD F988     	CALL	OUT84		; zurueck zu Pixelebene (IX+1) und PORT1
 1361 C794  C9          	RET
 1362                   
 1363                   ; Punkt loeschen:
 1364 C795  2F          PUERA:	CPL
 1365 C796  A6          	AND	(HL)		; loeschen
 1366 C797  77          	LD	(HL),A
 1367 C798  C9          	RET
 1368                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  36
CC48    INC

 1369                   ; Punkt im HIRES-Modus setzen:
 1370 C799  47          HIRES:	LD	B,A		; Bitmaske
 1371 C79A  B6          	OR	(HL)		; Bit setzen in
 1372 C79B  CB 5A       	BIT	3,D		; Pixelebene?
 1373 C79D  20 01       	JR	NZ,HIR1
 1374 C79F  A8          	XOR	B		; wieder loeschen
 1375 C7A0  77          HIR1:	LD	(HL),A
 1376 C7A1  DD 7E 01    	LD	A,(IX+1)
 1377 C7A4  5F          	LD	E,A
 1378 C7A5  EE 02       	XOR	2		; Farbebene
 1379                   ;	 DI
 1380                   ;	 OUT	(PORT1),A	; Umschaltung Farbebene
 1381 C7A7  CD F988     	CALL	OUT84		; Umschaltung Farbebene (IX+1) und PORT1
 1382 C7AA  78          	LD	A,B
 1383 C7AB  B6          	OR	(HL)		; Bit setzen in
 1384 C7AC  CB 62       	BIT	4,D		; Farbebene?
 1385 C7AE  20 DF       	JR	NZ,HIR2
 1386 C7B0  A8          	XOR	B		; wieder loeschen
 1387 C7B1  18 DC       	JR	HIR2
 1388                   
 1389                   ; Punkt setzen						**30**
 1390                   
 1391 C7B3  E5          PUSEC:	PUSH	HL
 1392 C7B4  D5          	PUSH	DE
 1393 C7B5  C5          	push	bc		; B-Register bei HIRES benutzt
 1394 C7B6  CD C803     	CALL	CALHV		; Grafikposition berechnen
 1395 C7B9  D4 C76A     	CALL	NC,PUSET	; Punkt setzen wenn OK
 1396 C7BC  18 42       	JR	PUDEE
 1397                   
 1398                   ; Punkt loeschen (HIRES nur testen)			**2F**
 1399                   
 1400 C7BE  E5          PUDEC:	PUSH	HL
 1401 C7BF  D5          	PUSH	DE
 1402 C7C0  C5          	push	bc		; B-Register bei HIRES benutzt
 1403 C7C1  CD C803     	CALL	CALHV		; Grafikposition berechnen
 1404 C7C4  38 3A       	JR	C,PUDEE		; ausserhalb
 1405 C7C6  DD CB 01 5E 	BIT	3,(IX+1)	; HiRes?
 1406 C7CA  20 1E       	JR	NZ,PUDEL
 1407                   ; Punktfarbe HIRES ermitteln
 1408 C7CC  16 00       	LD	D,0
 1409 C7CE  47          	LD	B,A		; Bitmaske
 1410 C7CF  7E          	LD	A,(HL)
 1411 C7D0  A0          	AND	B		; Bit in Pixelebene gesetzt?
 1412 C7D1  28 02       	JR	Z,HIR4
 1413 C7D3  CB C2       	SET	0,D
 1414 C7D5  DD 7E 01    HIR4:	LD	A,(IX+1)
 1415 C7D8  5F          	LD	E,A
 1416 C7D9  EE 02       	XOR	2		; Farbebene
 1417                   ;	 DI
 1418                   ;	 OUT	(PORT1),A	; Umschaltung Farbebene
 1419 C7DB  CD F988     	CALL	OUT84		; Umschaltung Farbebene (IX+1) und PORT1
 1420 C7DE  7E          	LD	A,(HL)
 1421 C7DF  A0          	AND	B		; Bit in Farbebene gesetzt?
 1422 C7E0  CD C790     	CALL	HIR3		; zurueck zu Pixelebene
 1423 C7E3  28 02       	JR	Z,HIR5
 1424 C7E5  CB CA       	SET	1,D
 1425 C7E7  04          HIR5:	INC	B		; Z=0 (Bitmaske)
 1426 C7E8  18 15       	JR	HIR6		; Farbbyte uebergeben
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  37
CC48    INC

 1427                   	;
 1428 C7EA  47          PUDEL:	LD	B,A		; Bitmaske
 1429 C7EB  4E          	LD	C,(HL)		; Pixel-RAM lesen
 1430 C7EC  2F          	CPL			; Bitmaske invertieren
 1431 C7ED  A1          	AND	C		; Bit loeschen
 1432 C7EE  77          	LD	(HL),A		; und in Pixel-RAM schreiben
 1433 C7EF  DD 7E 01    	LD	A,(IX+1)
 1434 C7F2  5F          	LD	E,A
 1435 C7F3  EE 02       	XOR	2
 1436                   ;	 DI
 1437                   ;	 OUT	(PORT1),A	; Umschaltung Farbebene
 1438 C7F5  CD F988     	CALL	OUT84		; Umschaltung Farbebene (IX+1) und PORT1
 1439 C7F8  56          	LD	D,(HL)		; Color-RAM lesen
 1440 C7F9  7B          	LD	A,E
 1441                   ;	 OUT	(PORT1),A	; zurueck zu Pixelebene
 1442                   ;	 EI
 1443 C7FA  CD F988     	CALL	OUT84		; zurueck zu Pixelebene (IX+1) und PORT1
 1444 C7FD  78          	LD	A,B		; Bitmaske
 1445 C7FE  A1          	AND	C		; Z=1: Punkt war geloescht
 1446 C7FF  7A          HIR6:	LD	A,D		; Farbbyte
 1447 C800  C3 E0B4     PUDEE:	JP	POP3		; POP	BC,DE,HL   RET
 1448                   ;
 1449                   ; Grafikposition berechnen fuer Punktroutinen
 1450                   ; PE:	HL	X-Koordinate (Horizontalposition)
 1451                   ;	DE	Y-Koordinate (Vertikal-  "	)
 1452                   ; PA:	HL	IRM-Adresse Pixel/Farbe
 1453                   ;	D	Farbwert
 1454                   ;	A	Bit-Maske
 1455                   ;	CY	Fehler (ausserhalb)
 1456                   ; VR:	AF,DE,HL
 1457                   ;
 1458 C803  2A B7D3     CALHV:	LD	HL,(HOR)
 1459 C806  ED 5B B7D5  	LD	DE,(VERT)
 1460 C80A  16 00       	LD	D,0
 1461 C80C  C5          CALXY:	PUSH	BC
 1462 C80D  01 FDF8     	LD	BC,BITTAB
 1463 C810  7D          	LD	A,L
 1464 C811  E6 07       	AND	7
 1465 C813  81          	ADD	A,C
 1466 C814  4F          	LD	C,A		; Bit
 1467 C815  7D          	LD	A,L
 1468 C816  CB 3C       	SRL	H
 1469 C818  1F          	RRA
 1470 C819  CB 3C       	SRL	H
 1471 C81B  1F          	RRA
 1472 C81C  CB 3C       	SRL	H
 1473 C81E  1F          	RRA			; Spalte
 1474 C81F  FE 28       	CP	40
 1475 C821  30 11       	JR	NC,CALEN
 1476 C823  F6 80       	OR	80H		; IRM
 1477 C825  67          	LD	H,A
 1478 C826  3E FF       	LD	A,0FFH
 1479 C828  82          	ADD	A,D
 1480 C829  38 09       	JR	C,CALEN
 1481 C82B  AB          	XOR	E		; CY=0, kein Fehler
 1482 C82C  6F          	LD	L,A		; Zeile
 1483 C82D  3A B7D6     	LD	A,(FARB)
 1484 C830  57          	LD	D,A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  38
CC48    INC

 1485 C831  0A          	LD	A,(BC)		; Bitmaske
 1486 C832  C1          	POP	BC
 1487 C833  C9          	RET
 1488                   	;
 1489 C834  C1          CALEN:	POP	BC
 1490 C835  37          	SCF			; CY=1, Fehler: ausserhalb
 1491 C836  C9          	RET
 1492                   ;
 1493                   ; MENU-HACK damit DISPLAY immer mit D abgekuerzt werden kann
 1494                   ;
 1495 C837  7F7F        	DW	7F7FH
 1496 C839  44 20       	DB	'D '		; verstecktes Menuewort
 1497 C83B  03          	DB	3		; mindestens 1 Argument
 1498                   
 1499                   ; Anzeige Speicherbereich:
 1500                   ; HL=Adresse, E=Listblocklaenge
 1501                   ; C=Anzahl Bytes pro Zeile
 1502                   ; A=Anzahl Argumente
 1503                   
 1504 C83C  FE 03       DISPC:	CP	3
 1505 C83E  30 08       	JR	NC,DISP1
 1506 C840  0E 08       	LD	C,8		; default = 8 Bytes/Zeile
 1507 C842  FE 02       	CP	2
 1508 C844  30 02       	JR	NC,DISP1
 1509 C846  1E 04       	LD	E,4		; default = 4 Zeilen
 1510 C848  D5          DISP1:	PUSH	DE
 1511 C849  CD D7B2     DISP2:	CALL	DPMEMO		; 1 Zeile anzeigen
 1512 C84C  CD F4C7     	CALL	CRLF
 1513 C84F  CD F667     	CALL	BRKT
 1514 C852  38 06       	JR	C,DISP4
 1515 C854  1D          	DEC	E
 1516 C855  20 F2       	JR	NZ,DISP2	; E*
 1517 C857  CD F3D8     DISP3:	CALL	INTB		; Warten auf Tastenbetaetigung
 1518 C85A  D1          DISP4:	POP	DE
 1519 C85B  FE 03       	CP	3		; BRK?
 1520 C85D  C8          	RET	Z
 1521 C85E  FE 0F       	CP	0FH
 1522 C860  20 05       	JR	NZ,DISP5
 1523 C862  CD F3BE     	CALL	OCHR		; Hardcopy
 1524 C865  18 F0       	JR	DISP3
 1525                   	;
 1526 C867  FE 13       DISP5:	CP	13H		; STOP?
 1527 C869  20 DD       	JR	NZ,DISP1
 1528 C86B  18 07       	JR	MODI1
 1529                   
 1530                   ; Anzeige/Veraendern Speicherbereich
 1531                   ; HL=Adresse, E=Anzahl Bytes pro Zeile
 1532                   ; A=Anzahl Argumente
 1533                   
 1534 C86D  4B          MODIC:	LD	C,E		; Breite
 1535 C86E  FE 02       	CP	2		; 2 Argumente?
 1536 C870  30 02       	JR	NC,MODI1
 1537 C872  0E 01       	LD	C,1		; Standardbreite
 1538 C874  CD D7B2     MODI1:	CALL	DPMEMO		; 1 Zeile anzeigen
 1539 C877  3E 05       	LD	A,5
 1540 C879  32 B7A0     	LD	(CURSO),A
 1541 C87C  CD F481     	CALL	INLIN		; Eingabe
 1542 C87F  D8          	RET	C		; BRK
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  39
CC48    INC

 1543 C880  E5          	PUSH	HL
 1544 C881  CD F4CE     	CALL	RHEX		; Adresse erfassen
 1545 C884  7E          	LD	A,(HL)
 1546 C885  E1          	POP	HL
 1547 C886  38 56       	JR	C,MODI9		; Fehler
 1548 C888  A7          	AND	A
 1549 C889  28 E9       	JR	Z,MODI1
 1550 C88B  2A B797     	LD	HL,(NUMVX)
 1551 C88E  E5          MODI2:	PUSH	HL
 1552 C88F  CD F4CE     	CALL	RHEX		; Datenbyte
 1553 C892  7E          	LD	A,(HL)
 1554 C893  A7          	AND	A		; kein Zeichen
 1555 C894  23          	INC	HL		; einlesbar?
 1556 C895  7E          	LD	A,(HL)
 1557 C896  E1          	POP	HL
 1558 C897  28 04       	JR	Z,MODI4
 1559 C899  CD FB61     MODI3:	CALL	LDMAE		; eintragen
 1560 C89C  23          	INC	HL
 1561 C89D  1A          MODI4:	LD	A,(DE)
 1562 C89E  FE 2E       	CP	'.'		; Abschluss?
 1563 C8A0  C8          	RET	Z
 1564 C8A1  FE 2C       	CP	','		; 1 Zeichen?
 1565 C8A3  20 05       	JR	NZ,MODI5
 1566 C8A5  13          	INC	DE
 1567 C8A6  1A          	LD	A,(DE)		; vom Video-RAM
 1568 C8A7  13          	INC	DE
 1569 C8A8  18 EF       	JR	MODI3		; eintragen
 1570                   	;
 1571 C8AA  FE 3A       MODI5:	CP	':'		; Rueckschritt?
 1572 C8AC  20 06       	JR	NZ,MODI6
 1573 C8AE  06 00       	LD	B,0
 1574 C8B0  ED 42       	SBC	HL,BC		; C Bytes zurueck
 1575 C8B2  18 C0       	JR	MODI1
 1576                   	;
 1577 C8B4  FE 2F       MODI6:	CP	'/'		; neue Adresse?
 1578 C8B6  20 0B       	JR	NZ,MODI0
 1579 C8B8  13          	INC	DE
 1580 C8B9  CD F4CE     	CALL	RHEX		; Adresse erfassen
 1581 C8BC  38 20       	JR	C,MODI9		; Fehler
 1582 C8BE  2A B797     	LD	HL,(NUMVX)
 1583 C8C1  18 B1       	JR	MODI1
 1584                   	;
 1585 C8C3  FE 27       MODI0:	CP	27H		; Zeichenkette?
 1586 C8C5  20 10       	JR	NZ,MODI8
 1587 C8C7  13          	INC	DE
 1588 C8C8  1A          MODI7:	LD	A,(DE)		; Zeichen holen
 1589 C8C9  13          	INC	DE
 1590 C8CA  A7          	AND	A		; Dummy-Ende?
 1591 C8CB  28 A7       	JR	Z,MODI1
 1592 C8CD  FE 27       	CP	27H		; Ende Kette?
 1593 C8CF  28 CC       	JR	Z,MODI4
 1594 C8D1  CD FB61     	CALL	LDMAE		; eintragen
 1595 C8D4  23          	INC	HL
 1596 C8D5  18 F1       	JR	MODI7
 1597                   	;
 1598 C8D7  A7          MODI8:	AND	A		; Ende Zeile?
 1599 C8D8  28 9A       	JR	Z,MODI1
 1600 C8DA  FE 20       	CP	' '		; Leerzeichen?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  40
CC48    INC

 1601 C8DC  28 B0       	JR	Z,MODI2
 1602 C8DE  CD F4BD     MODI9:	CALL	ERRM		; sonst ERROR
 1603 C8E1  18 91       	JR	MODI1
 1604                   
 1605                   ; Initialisierung der Druckerausgabe:
 1606                   ;
 1607                   ; PE:	(ARGN)	0..5 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1608                   ;	(ARG1)	Steckplatz	(0 = M021)
 1609                   ;	(ARG2)	SIO-Kanal	(0..1 = A, 2 = B)
 1610                   ;	(ARG3)	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1611                   ;	(ARG4)	ShCLR-Reaktion	(0 = keine, 1 = Protokoll, 2 = Hardcopy)
 1612                   ;	(ARG5)	Druckertyp	(0..12)
 1613                   ; PA:	-
 1614                   ; VR:	AF, BC, DE, HL
 1615                   ;
 1616 C8E3  CD F5F7     LSTC:	CALL	LARG		; Arg's laden
 1617 C8E6  CD C929     	CALL	LSTCA		; Druckerinitialisierung (intern)
 1618 C8E9  DA F4BD     	JP	C,ERRM		; Modul nicht gefunden oder Parameterfehler
 1619 C8EC  3E 0D       	LD	A,CR		; CR+LF drucken
 1620                   ;	CALL	OFILT
 1621                   ;	LD	A,LF
 1622 C8EE  C3 B7E9     	JP	OFILT
 1623                   
 1624 C8F1  3A B7E1     LSTC1:	LD	A,(HCPZ)	; bisheriges Steuerbyte
 1625 C8F4  E6 F0       	AND	0F0h		; Druckertyp uebernehmen
 1626 C8F6  0F          	RRCA			; und auf Bits 1..4 rotieren
 1627 C8F7  0F          	RRCA
 1628 C8F8  0F          	RRCA
 1629 C8F9  18 3D       	JR	LSTC6
 1630                   
 1631                   ; M021
 1632 C8FB  CD C992     LSTC2:	CALL	USRARG		; Steuerwort aus Argumenten bilden (CY war 0)
 1633 C8FE  AF          	XOR	A
 1634 C8FF  D3 91       	OUT	(91h),A		; M021 PIO-B Daten
 1635 C901  DB 91       	IN	A,(91h)
 1636 C903  C6 FF       	ADD	A,-1		; 0 zurueckgelesen?
 1637 C905  D8          	RET	C		; sonst kein M021 vorhanden
 1638 C906  C5          	PUSH	BC
 1639 C907  21 FA07     	LD	HL,M021PR
 1640 C90A  18 53       	JR	LSTC7
 1641                   
 1642                   ; M003:
 1643 C90C  2E 07       LSTC3:	LD	L,7		; ab Steckplatz 7
 1644 C90E  CD C988     LSTC4:	CALL	SIOARG		; Steuerwort aus Argumenten bilden
 1645 C911  C5          	PUSH	BC		; Adresse ShCLR-Reaktionsprogramm
 1646 C912  45          	LD	B,L
 1647 C913  CD C3A5     	CALL	V24SU		; M003 suchen und einschalten
 1648 C916  50          	LD	D,B		; Steckplatz in D zurueckgeben
 1649 C917  38 6C       	JR	C,IOEPOP	; nicht gefunden, keine weitere Initialisierung
 1650 C919  3A B7E4     	LD	A,(INTV1L)
 1651 C91C  47          	LD	B,A
 1652 C91D  2A B7E2     	LD	HL,(INTV1)
 1653 C920  7B          	LD	A,E		; Steuerbyte
 1654 C921  CD CA1E     	CALL	INISIO
 1655 C924  21 FA1F     	LD	HL,V24PR
 1656 C927  18 36       	JR	LSTC7
 1657                   
 1658                   ; Initialisierung der Druckerausgabe (intern):
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  41
CC48    INC

 1659                   ;
 1660                   ; PE:	A	0..5 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1661                   ;	L	Steckplatz	(0 = M021)
 1662                   ;	E	SIO-Kanal	(0..1 = A, 2 = B)
 1663                   ;	C	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1664                   ;	(ARG4)	ShCLR-Reaktion	(0 = keine, 1 = Protokoll, 2 = Hardcopy)
 1665                   ;	(ARG5)	Druckertyp	(0..12)
 1666                   ; PA:	D	Steckplatz M003	(nur gueltig fuer A = 0)
 1667                   ;	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1668                   ; VR:	AF, BC, DE, HL
 1669                   ;
 1670 C929  67          LSTCA:	LD	H,A		; Anzahl Argumente
 1671 C92A  3E 05       	LD	A,5
 1672 C92C  BC          	CP	H		; (ARGN) <= 5?
 1673 C92D  D8          	RET	C		; mehr als 5 Argumente!
 1674 C92E  20 C1       	JR	NZ,LSTC1	; Druckertyp erhalten
 1675 C930  3A B78A     LSTC5:	LD	A,(ARG5)	; neuer Druckertyp
 1676 C933  FE 0D       	CP	13		; (ARG5) < 13?
 1677 C935  30 4F       	JR	NC,IOERET	; Fehler: Druckertyp nicht passend
 1678 C937  87          	ADD	A,A		; 0 fuer Bit 3 einschieben
 1679 C938  57          LSTC6:	LD	D,A
 1680 C939  7C          	LD	A,H		; Anzahl Argumente
 1681 C93A  A7          	AND	A		; Steckplatz angegeben?
 1682 C93B  28 CF       	JR	Z,LSTC3		; nein, M003 ab Steckplatz 7 suchen
 1683 C93D  7D          	LD	A,L
 1684 C93E  A7          	AND	A		; Steckplatz = 0?
 1685 C93F  28 BA       	JR	Z,LSTC2		; M021
 1686 C941  C5          	PUSH	BC
 1687 C942  45          	LD	B,L
 1688 C943  0E 80       	LD	C,80h
 1689 C945  ED 78       	IN	A,(C)
 1690 C947  C1          	POP	BC
 1691 C948  D6 EE       	SUB	0EEh		; M003?
 1692 C94A  28 C2       	JR	Z,LSTC4
 1693 C94C  3D          	DEC	A		; M001?
 1694 C94D  20 37       	JR	NZ,IOERET	; Fehler: kein passendes Modul
 1695                   
 1696                   ; M001:
 1697 C94F  CD C992     	CALL	USRARG		; Steuerwort aus Argumenten bilden (CY war 0)
 1698 C952  C5          	PUSH	BC		; Adresse ShCLR-Reaktionsprogramm
 1699                   ;	LD	A,2
 1700                   ;	LD	D,1
 1701 C953  CD C3B3     	CALL	MODUC1		; M001 einschalten
 1702 C956  21 D95E     	LD	HL,DIOINI
 1703 C959  CD CA51     	CALL	IMEXDI		; PIO konfigurieren
 1704 C95C  21 F9F6     	LD	HL,M001PR
 1705 C95F  22 B7EA     LSTC7:	LD	(OFILT + 1),HL
 1706 C962  E1          	POP	HL
 1707 C963  22 B799     	LD	(HCADR),HL	; ShCLR-Reaktionsprogramm setzen
 1708 C966  7B          	LD	A,E
 1709 C967  32 B7E1     	LD	(HCPZ),A	; Steuerbyte eintragen
 1710 C96A  21 F9E6     	LD	HL,PRINT
 1711 C96D  01 F4A7     	LD	BC,NOOP
 1712 C970  A7          	AND	A		; CY = 0
 1713                   ;
 1714                   ; Eintragen der Sprungadressen eines I/O-Kanals:
 1715                   ;
 1716                   ; PE:	E = Steuerwort
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  42
CC48    INC

 1717                   ;	BC = Sprungadresse fuer Eingabe
 1718                   ;	HL = Sprungadresse fuer Ausgabe
 1719                   ; PA:	-
 1720                   ; VR:	F
 1721                   ;
 1722 C971  CB 4B       SETUIO:	BIT	1,E		; Ausgabekanal #2 oder #3?
 1723 C973  20 08       	JR	NZ,SETU2
 1724 C975  22 B7BE     	LD	(UOUT1+1),HL
 1725 C978  ED 43 B7C1  	LD	(UIN1+1),BC
 1726 C97C  C9          	RET
 1727                   	;
 1728 C97D  22 B7C4     SETU2:	LD	(UOUT2+1),HL
 1729 C980  ED 43 B7C7  	LD	(UIN2+1),BC
 1730 C984  C9          	RET
 1731                   
 1732 C985  E1          IOEPOP:	POP	HL
 1733 C986  37          IOERET:	SCF			; Fehler-Flag
 1734 C987  C9          	RET
 1735                   
 1736                   ; Auswertung der Argumente 2..4 fuer I/O-Initialisierung:
 1737                   ;
 1738                   ; PE:	H	Argumentzahl
 1739                   ;	E	SIO-Kanal	(0..1 = A, 2 = B)
 1740                   ;	C	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1741                   ;	(ARG4)	ShCLR-Reaktion
 1742                   ;	D	bisheriges Steuerwort
 1743                   ; PA:	E	Steuerwort	(3 neue Bits von rechts einrotiert)
 1744                   ;	BC	Adresse ShCLR-Reaktionsprogramm
 1745                   ;	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1746                   ; VR:	AF, BC, DE, SP
 1747                   ;
 1748                   ; Stack-Unwinding: Im Fehlerfall wird die eigentliche Ruecksprungadresse vom
 1749                   ; Stack genommen, und dann ein RET ausgefuehrt.  Die aufrufende Routine darf
 1750                   ; keine Daten auf dem Stack zu liegen haben!
 1751                   ;
 1752 C988  3E 01       SIOARG:	LD	A,1
 1753 C98A  BC          	CP	H		; mehr als 1 Argument?
 1754 C98B  30 2B       	JR	NC,NOARG2	; nein, SIO-Kanal nicht angegeben
 1755 C98D  1D          	DEC	E		; (ARG2): SIO-Kanal
 1756 C98E  93          	SUB	E		; 1 <= (ARG2) <= 2?
 1757 C98F  38 F4       	JR	C,IOEPOP	; Fehler: ungueltiger SIO-Kanal
 1758 C991  BB          	CP	E		; CY = 1 wenn K2
 1759 C992  5A          USRARG:	LD	E,D		; bisheriges Steuerbyte
 1760 C993  CB 13       	RL	E		; Bit 2 neu einschieben
 1761 C995  3E 02       	LD	A,2
 1762 C997  57          	LD	D,A
 1763 C998  BC          	CP	H		; mehr als 2 Argumente?
 1764 C999  30 20       	JR	NC,NOARG3	; nein. I/O-Kanal nicht angegeben
 1765 C99B  79          	LD	A,C		; (ARG3): User-I/O-Kanal
 1766 C99C  92          	SUB	D
 1767 C99D  BA          	CP	D		; 2 <= (ARG3) <= 3?
 1768 C99E  30 E5       	JR	NC,IOEPOP	; Fehler: ungueltiger I/O-Kanal
 1769 C9A0  0F          	RRCA			; CY = 1 wenn User-Kanal #3
 1770 C9A1  CB 13       	RL	E		; Bit 1 einschieben
 1771                   ;	LD	BC,NOOP
 1772 C9A3  14          	INC	D		; D = 3
 1773 C9A4  7A          	LD	A,D
 1774 C9A5  BC          	CP	H		; mehr als 3 Argumente?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  43
CC48    INC

 1775 C9A6  30 15       	JR	NC,NOARG4	; nein, ShCLR-Reaktion nicht angegeben
 1776 C9A8  3A B788     	LD	A,(ARG4)	; Reaktion auf ShCLR
 1777 C9AB  A7          	AND	A		; (ARG4) = 0?
 1778 C9AC  28 0F       	JR	Z,NOARG4
 1779 C9AE  92          	SUB	D		; 0 <= (ARG4) <= 2?
 1780 C9AF  30 D4       	JR	NC,IOEPOP	; Fehler: ungueltiger ShCLR-Parameter
 1781 C9B1  01 ED8A     	LD	BC,HCPGM
 1782 C9B4  0F          	RRCA			; CY = 1 wenn Hardcopy
 1783 C9B5  CB 13       	RL	E		; Bit 0 einschieben
 1784 C9B7  C9          	RET
 1785                   
 1786 C9B8  5A          NOARG2:	LD	E,D		; bisheriges Steuerbyte
 1787 C9B9  CB 03       	RLC	E		; Bit 2 wie bisher erhalten
 1788 C9BB  CB 03       NOARG3:	RLC	E		; Bit 1 wie bisher erhalten
 1789 C9BD  CB 03       NOARG4:	RLC	E		; Bit 0 wie bisher erhalten
 1790 C9BF  01 F4A7     	LD	BC,NOOP		; keine Reaktion auf Sh-CLR
 1791 C9C2  A7          	AND	A		; CY=0
 1792 C9C3  C9          	RET
 1793                   
 1794                   ; Initialisierung V.24-Duplexbetrieb:
 1795                   ;
 1796                   ; PE:	(ARGN)	0..3 Argumente	(0 = M003 ab Steckplatz 7 suchen)
 1797                   ;	(ARG1)	Steckplatz
 1798                   ;	(ARG2)	SIO-Kanal	(0..1 = A, 2 = B)
 1799                   ;	(ARG3)	User-Kanal	(2 = UOUT1, 3 = UOUT2)
 1800                   ; PA:	CY	Fehlerstatus	(0 = OK, 1 = Fehler)
 1801                   ; VR:	AF, BC, DE, HL
 1802                   ;
 1803 C9C4  CD F5F7     V24DC:	CALL	LARG		; Arg's laden
 1804 C9C7  67          	LD	H,A
 1805 C9C8  3E 03       	LD	A,3
 1806 C9CA  BC          	CP	H		; (ARGN) <= 3?
 1807 C9CB  D8          	RET	C		; mehr als 3 Argumente -> Fehler
 1808 C9CC  3A B7E8     	LD	A,(HCPZ2)	; bisheriges Steuerwort
 1809 C9CF  0F          	RRCA
 1810 C9D0  0F          	RRCA			; zur Vorbereitung 3x rotieren
 1811 C9D1  0F          	RRCA
 1812 C9D2  57          	LD	D,A
 1813 C9D3  CD C988     	CALL	SIOARG		; neues Steuerwort aus Argumenten 2-4 bilden
 1814 C9D6  E5          	PUSH	HL
 1815 C9D7  3A B7E7     	LD	A,(INTV2L)	; Laenge Duplexinitialisierung
 1816 C9DA  47          	LD	B,A
 1817 C9DB  2A B7E5     	LD	HL,(INTV2)	; Duplexinitialisierung
 1818 C9DE  23          	INC	HL
 1819 C9DF  18 17       	JR	V24DC5
 1820                   
 1821 C9E1  3E 80       V24DC1:	LD	A,10000000b	; Empfangseinstellungen (7/8 Bit)
 1822 C9E3  18 10       	JR	V24DC3
 1823                   
 1824 C9E5  7E          V24DC2:	LD	A,(HL)		; Initialisierungsdaten lesen
 1825 C9E6  E6 07       	AND	00000111b	; Registerauswahl?
 1826 C9E8  28 11       	JR	Z,V24DC6	; nein
 1827 C9EA  23          	INC	HL
 1828 C9EB  FE 03       	CP	3		; WR3?
 1829 C9ED  28 F2       	JR	Z,V24DC1
 1830 C9EF  FE 05       	CP	5		; WR5?
 1831 C9F1  20 05       	JR	NZ,V24DC5
 1832 C9F3  3E 68       	LD	A,01101000b	; Sendeeinstellungen (5-8 Bit, ein/aus)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  44
CC48    INC

 1833 C9F5  A6          V24DC3:	AND	(HL)		; benoetigte Bits abtrennen
 1834 C9F6  B3          	OR	E		; und in Steuerbyte einbauen
 1835 C9F7  5F          V24DC4:	LD	E,A
 1836 C9F8  05          V24DC5:	DEC	B
 1837 C9F9  28 8A       	JR	Z,IOEPOP	; fehlendes Initialisierungsbyte
 1838 C9FB  23          V24DC6:	INC	HL
 1839 C9FC  10 E7       	DJNZ	V24DC2
 1840                   
 1841 C9FE  E1          	POP	HL
 1842 C9FF  7C          	LD	A,H
 1843 CA00  06 07       	LD	B,7		; Suche ab Steckplatz 7
 1844 CA02  A7          	AND	A		; Steckplatz angegeben?
 1845 CA03  28 01       	JR	Z,V24DC7
 1846 CA05  45          	LD	B,L		; angegebener Steckplatz
 1847 CA06  CD C3A5     V24DC7:	CALL	V24SU		; M003 suchen und einschalten
 1848 CA09  D8          	RET	C		; Modul nicht gefunden
 1849 CA0A  21 FA34     	LD	HL,V24OT
 1850 CA0D  01 FA3F     	LD	BC,V24IN
 1851 CA10  CD C971     	CALL	SETUIO		; I/O-Sprungadressen eintragen
 1852 CA13  3A B7E7     V24DC8:	LD	A,(INTV2L)
 1853 CA16  47          	LD	B,A
 1854 CA17  2A B7E5     	LD	HL,(INTV2)
 1855 CA1A  7B          	LD	A,E		; Duplex-Steuerbyte
 1856 CA1B  32 B7E8     	LD	(HCPZ2),A	; eintragen
 1857                   
 1858                   ; SIO-Initialisierung:
 1859                   ;
 1860                   ; PE:	HL	Initialisierungstabelle
 1861                   ;	B	Laenge der Tabelle (>= 3)
 1862                   ;	A	Steuerbyte
 1863                   ; PA:	CY = 0
 1864                   ; VR:	AF, BC, HL
 1865                   ;
 1866 CA1E  E6 04       INISIO:	AND	00000100b
 1867 CA20  0F          	RRCA
 1868 CA21  0F          	RRCA
 1869 CA22  C6 0C       	ADD	A,0Ch		; CTC-Port
 1870 CA24  4F          	LD	C,A
 1871 CA25  78          	LD	A,B
 1872 CA26  06 02       	LD	B,2		; 2 Byte fuer CTC-Initialisierung
 1873 CA28  90          	SUB	B
 1874 CA29  F3          	DI
 1875 CA2A  ED B3       	OTIR			; CTC initialisieren
 1876 CA2C  47          	LD	B,A
 1877 CA2D  0D          	DEC	C		; SIO-Steuerport
 1878 CA2E  0D          	DEC	C
 1879 CA2F  ED B3       	OTIR			; SIO initialisieren
 1880 CA31  FB          	EI
 1881 CA32  A7          	AND	A		; CY = 0
 1882 CA33  C9          	RET
 1883                   
 1884                   ; V.24-Modul suchen und initialisieren (bei POWER-ON und RESET):
 1885                   ;	-Tabellen in IRM kopieren
 1886                   ;	-M003 suchen und einschalten
 1887                   ;	-M003-Steckplatz merken
 1888                   
 1889 CA34  21 D830     V24INI:	LD	HL,V24TAB	; vorbereitete V24-Tabelle
 1890 CA37  11 A800     	LD	DE,V24PL	; Steckplatz (A800H)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  45
CC48    INC

 1891 CA3A  01 0012     	LD	BC,V24UMT - V24TAB
 1892 CA3D  ED B0       	LDIR			; in IRM kopieren
 1893 CA3F  AF          	XOR	A		; ARGN=0: M003 suchen
 1894 CA40  CD C929     	CALL	LSTCA		; SIO-A: Druckerinitialisierung
 1895 CA43  D8          	RET	C		; kein M003 gefunden
 1896 CA44  7A          	LD	A,D
 1897 CA45  32 A800     	LD	(V24PL),A	; Steckplatz eintragen
 1898 CA48  21 FA34     	LD	HL,V24OT	; Duplex-Ausgaberoutine
 1899 CA4B  22 B7C4     	LD	(UOUT2 + 1),HL	; fuer User-Kanal #3 eintragen
 1900 CA4E  21 D842     	LD	HL,V24UMT	; SIO-B: Empfangs-Interrupt
 1901                   
 1902                   ; Initialisierung mehrerer Ports mit Sperren von Interrupts:
 1903                   ;
 1904                   ; PE:	HL	Initialisierungstabelle
 1905                   ;	(HL)	Anzahl der Kanaele
 1906                   ; PA:	-
 1907                   ; VR:	F, D, HL
 1908                   ;
 1909 CA51  56          IMEXDI:	LD	D,(HL)		; Anzahl Kanaele
 1910 CA52  23          	INC	HL
 1911 CA53  C3 F560     	JP	INIME		; Ports initialisieren
 1912                   
 1913                   ; allgemeine Druckroutine
 1914                   
 1915 CA56  F5          PRINTC:	PUSH	AF
 1916 CA57  3A B7E1     	LD	A,(HCPZ)
 1917 CA5A  CB 7F       	BIT	7,A
 1918 CA5C  28 29       	JR	Z,PRINT3	; Drucker
 1919                   	;Schreibmaschine
 1920 CA5E  E6 F0       	AND	0F0H
 1921 CA60  FE 90       	CP	90H
 1922 CA62  28 17       	JR	Z,S6005
 1923 CA64  FE A0       	CP	0A0H
 1924 CA66  20 1F       	JR	NZ,PRINT3
 1925 CA68  F1          S6010:	POP	AF
 1926 CA69  E5          	PUSH	HL
 1927 CA6A  C5          	PUSH	BC
 1928 CA6B  21 D996     	LD	HL,ZIBM
 1929 CA6E  01 0007     	LD	BC,7
 1930 CA71  ED B1       	CPIR
 1931 CA73  20 0F       	JR	NZ,PRINT1
 1932 CA75  0E 06       	LD	C,6
 1933 CA77  09          	ADD	HL,BC
 1934 CA78  7E          	LD	A,(HL)
 1935 CA79  18 09       	JR	PRINT1
 1936                   
 1937 CA7B  F1          S6005:	POP	AF
 1938 CA7C  FE 7E       	CP	7EH
 1939 CA7E  20 08       	JR	NZ,PRINT4
 1940 CA80  3E 83       	LD	A,83H
 1941 CA82  18 04       	JR	PRINT4
 1942 CA84  C1          PRINT1:	POP	BC
 1943 CA85  E1          	POP	HL
 1944 CA86  F5          	PUSH	AF
 1945 CA87  F1          PRINT3:	POP	AF
 1946 CA88  FE 09       PRINT4:	CP	9		; CUR
 1947 CA8A  28 0D       	JR	Z,PRINT5
 1948 CA8C  F5          	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  46
CC48    INC

 1949 CA8D  3A B7A2     	LD	A,(STBT)
 1950 CA90  CB 5F       	BIT	3,A		; Steuerzeichen
 1951 CA92  28 0E       	JR	Z,PRINT7	; ausfuehren
 1952 CA94  F1          	POP	AF
 1953 CA95  FE 7F       	CP	7FH		; und 7Fh
 1954 CA97  20 02       	JR	NZ,PRINT6
 1955 CA99  3E 20       PRINT5:	LD	A,20H		; nach SPC
 1956 CA9B  FE 20       PRINT6:	CP	20H		; und Steuerzeichen
 1957 CA9D  30 04       	JR	NC,PRINT8
 1958 CA9F  3E 5F       	LD	A,'_'		; nach '_' wandeln
 1959 CAA1  F5          	PUSH	AF
 1960 CAA2  F1          PRINT7:	POP	AF
 1961 CAA3  C3 B7E9     PRINT8:	JP	OFILT		; in IRM
 1962                   
 1963                   ; ShCLR-Reaktionsprogramm
 1964                   
 1965 CAA6  E5          HCPGMC:	PUSH	HL
 1966 CAA7  D5          	PUSH	DE
 1967 CAA8  3A B7E1     	LD	A,(HCPZ)
 1968 CAAB  CB 47       	BIT	0,A		; Hardcopy?
 1969 CAAD  20 2E       	JR	NZ,COPIES
 1970                   
 1971                   ; Protokollfunktion
 1972                   
 1973 CAAF  2A B7B9     	LD	HL,(OUTAB)
 1974 CAB2  5F          	LD	E,A		; E = (HCPZ)
 1975 CAB3  7E          	LD	A,(HL)
 1976 CAB4  A7          	AND	A		; CRT?
 1977 CAB5  20 12       	JR	NZ,PROTO2
 1978 CAB7  CB 4B       	BIT	1,E		; USER1/2?
 1979 CAB9  21 F9E3     	LD	HL,ECHO		; CRT+PRINT
 1980 CABC  11 F00B     	LD	DE,ZEI3		; UP 03H = UOUT2
 1981 CABF  20 12       	JR	NZ,PROTO3
 1982 CAC1  11 F008     	LD	DE,ZEI2		; UP 02H = UOUT1
 1983 CAC4  22 B7BE     PROTO4:	LD	(UOUT1+1),HL
 1984 CAC7  18 0D       	JR	PROTO5
 1985                   	;
 1986 CAC9  21 F9E6     PROTO2:	LD	HL,PRINT	; Protokoll deaktivieren
 1987 CACC  11 F020     	LD	DE,OUTT1	; UP 00H = CRT
 1988 CACF  FE 02       	CP	2
 1989 CAD1  28 F1       	JR	Z,PROTO4
 1990 CAD3  22 B7C4     PROTO3:	LD	(UOUT2+1),HL	; Sprungadresse der Routine
 1991 CAD6  ED 53 B7B9  PROTO5:	LD	(OUTAB),DE	; und Zeiger setzen
 1992 CADA  D1          	POP	DE
 1993 CADB  E1          	POP	HL
 1994 CADC  C9          	RET
 1995                   
 1996                   ; Hard- oder Screencopy
 1997                   
 1998 CADD  C5          COPIES:	PUSH	BC
 1999 CADE  F5          	PUSH	AF
 2000 CADF  E6 F0       	AND	0F0H
 2001 CAE1  F2 CB08     	JP	P,HCOPYC	; Hardcopy
 2002                   
 2003                   ; Screencopy
 2004                   
 2005 CAE4  2A B7CB     	LD	HL,(VRAM)
 2006 CAE7  06 20       	LD	B,32
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  47
CC48    INC

 2007 CAE9  0E 28       SCOPY1:	LD	C,40
 2008 CAEB  7E          SCOPY2:	LD	A,(HL)
 2009 CAEC  23          	INC	HL
 2010 CAED  FE 20       	CP	20H
 2011 CAEF  30 02       	JR	NC,SCOPY4
 2012 CAF1  3E 20       	LD	A,' '		; statt Steuerzeichen
 2013 CAF3  CD F9E6     SCOPY4:	CALL	PRINT
 2014 CAF6  0D          	DEC	C		; 40 Spalten
 2015 CAF7  20 F2       	JR	NZ,SCOPY2
 2016 CAF9  3E 0D       	LD	A,CR
 2017 CAFB  CD CA88     	CALL	PRINT4
 2018 CAFE  3E 0A       	LD	A,LF
 2019 CB00  CD CA88     	CALL	PRINT4
 2020 CB03  10 E4       	DJNZ	SCOPY1		; 32 Zeilen
 2021 CB05  C3 E0B3     HCEND:	JP	POP4		; POP	AF,BC,DE,HL   RET
 2022                   
 2023 CB08              HCOPYC:	;..nach Typ verzweigen
 2024 CB08  E6 F0       	AND	0F0H
 2025 CB0A  FE 10       	CP	10H
 2026 CB0C  CA CBD6     	JP	Z,K6314		; ESC/P breit
 2027 CB0F  FE 20       	CP	20H
 2028 CB11  CA CC14     	JP	Z,K6311		; mit ANSI
 2029 CB14  FE 30       	CP	30H
 2030 CB16  CA CC42     	JP	Z,K6312		; ANSI breit
 2031 CB19  FE 50       	CP	50H
 2032 CB1B  28 3B       	JR	Z,HCMIN		; ESC/P2 (Mini)
 2033 CB1D  FE 70       	CP	70H
 2034 CB1F  28 67       	JR	Z,ESCP2		; ESC/P2 24 Nadel
 2035                   
 2036                   ; K6313, K6304, ESC/P2 mit 8 Nadeln
 2037                   
 2038 CB21  26 00       K6313:	LD	H,0		; Zeile 0
 2039 CB23  CD CCE1     K6313a:	CALL	PRZK		; Grafik init
 2040 CB26  2E 00       	LD	L,0		; Spalte 0
 2041 CB28  0E 08       K6313b:	LD	C,8		; 8 Nadeln
 2042 CB2A  CD CD07     	CALL	CBYTES
 2043 CB2D  E5          	PUSH	HL
 2044 CB2E  06 08       K6313c:	LD	B,8
 2045 CB30  21 B700     	LD	HL,CASS
 2046 CB33  CB 16       K6313d:	RL 	(HL)
 2047 CB35  17          	RLA
 2048 CB36  23          	INC	HL
 2049 CB37  10 FA       	DJNZ	K6313d
 2050 CB39  CD B7E9     	CALL	OFILT
 2051 CB3C  0D          	DEC	C
 2052 CB3D  20 EF       	JR	NZ,K6313c	; naechster Cursor
 2053 CB3F  E1          	POP	HL
 2054 CB40  2C          	INC	L
 2055 CB41  3E 28       	LD	A,40
 2056 CB43  BD          	CP	L
 2057 CB44  20 E2       	JR	NZ,K6313b
 2058 CB46  7C          	LD	A,H
 2059 CB47  C6 08       	ADD	A,8		; naechste Zeile
 2060 CB49  67          	LD	H,A
 2061 CB4A  30 D7       	JR	NC,K6313a
 2062 CB4C  3E 0D       HCCRLF:	LD	A,CR
 2063 CB4E  CD B7E9     	CALL	OFILT
 2064 CB51  3E 0A       	LD	A,LF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  48
CC48    INC

 2065 CB53  CD B7E9     	CALL	OFILT
 2066 CB56  18 AD       	JR	HCEND
 2067                   
 2068                   ; ESC/P2 Miniformat
 2069                   
 2070 CB58  21 0000     HCMIN:	LD	HL,0		; Zeile=0, Spalte=0
 2071 CB5B  CD CCE1     MINIa:	CALL	PRZK
 2072 CB5E  0E 18       MINIb:	LD	C,24		; 24 Pixel
 2073 CB60  CD CD07     	CALL	CBYTES
 2074 CB63  CD CCC2     	CALL	S3PRS
 2075 CB66  20 F6       	JR	NZ,MINIb
 2076 CB68  7C          	LD	A,H
 2077 CB69  C6 18       	ADD	A,24
 2078 CB6B  67          	LD	H,A
 2079 CB6C  2E 00       	LD	L,0		; Spalte=0
 2080 CB6E  FE F0       	CP	240
 2081 CB70  20 E9       	JR	NZ,MINIa
 2082 CB72  CD CCE1     	CALL	PRZK
 2083 CB75  0E 10       MINIc:	LD	C,16
 2084 CB77  CD CD07     	CALL	CBYTES
 2085 CB7A  06 08       	LD	B,8
 2086 CB7C  AF          	XOR	A
 2087 CB7D  12          MINId:	LD	(DE),A		; 8 Nadeln frei
 2088 CB7E  13          	INC	DE
 2089 CB7F  10 FC       	DJNZ	MINId
 2090 CB81  CD CCC2     	CALL	S3PRS
 2091 CB84  20 EF       	JR	NZ,MINIc
 2092 CB86  18 C4       	JR	HCCRLF
 2093                   
 2094                   ; ESC/P2 mit 24 Nadeln
 2095                   
 2096 CB88  26 00       ESCP2:	LD	H,0		; Zeile 0
 2097 CB8A  CD CCE1     ESCP2a:	CALL	PRZK
 2098 CB8D  2E 00       	LD	L,0		; Spalte 0
 2099 CB8F  06 08       ESCP2b:	LD	B,8		; 8 Pixel
 2100 CB91  E5          	PUSH	HL
 2101 CB92  CD E063     	CALL	PADR
 2102 CB95  11 B700     	LD	DE,CASS
 2103 CB98  7E          ESCP2c:	LD	A,(HL)
 2104 CB99  12          	LD	(DE),A
 2105 CB9A  13          	INC	DE
 2106 CB9B  12          	LD	(DE),A		; 3 mal ablegen
 2107 CB9C  13          	INC	DE
 2108 CB9D  12          	LD	(DE),A
 2109 CB9E  13          	INC	DE
 2110 CB9F  2C          	INC	L
 2111 CBA0  10 F6       	DJNZ	ESCP2c
 2112 CBA2  0E 08       	LD	C,8
 2113 CBA4  06 18       ESCP2d:	LD	B,24		; 3*8 Bytes
 2114 CBA6  21 B700     	LD	HL,CASS
 2115 CBA9  CB 16       ESCP2e:	RL	(HL)
 2116 CBAB  CB 13       	RL	E
 2117 CBAD  CB 12       	RL	D
 2118 CBAF  17          	RLA
 2119 CBB0  23          	INC	HL
 2120 CBB1  10 F6       	DJNZ	ESCP2e		; Wandlung
 2121 CBB3  77          	LD	(HL),A
 2122 CBB4  06 03       	LD	B,3		; 3 mal drucken
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  49
CC48    INC

 2123 CBB6  7E          ESCP2f:	LD	A,(HL)
 2124 CBB7  CD B7E9     	CALL	OFILT		; 1.
 2125 CBBA  7A          	LD	A,D
 2126 CBBB  CD B7E9     	CALL	OFILT		; 2.
 2127 CBBE  7B          	LD	A,E
 2128 CBBF  CD B7E9     	CALL	OFILT		; 3. Byte
 2129 CBC2  10 F2       	DJNZ	ESCP2f
 2130 CBC4  0D          	DEC	C
 2131 CBC5  20 DD       	JR	NZ,ESCP2d
 2132 CBC7  E1          	POP	HL
 2133 CBC8  2C          	INC	L
 2134 CBC9  3E 28       	LD	A,40		; Zeilenende?
 2135 CBCB  BD          	CP	L
 2136 CBCC  20 C1       	JR	NZ,ESCP2b
 2137 CBCE  7C          	LD	A,H
 2138 CBCF  C6 08       	ADD	A,8
 2139 CBD1  67          	LD	H,A
 2140 CBD2  30 B6       	JR	NC,ESCP2a
 2141 CBD4  18 3B       	JR	JHCRLF
 2142                   
 2143                   ; ESC/P 9-Nadeln (breit)
 2144                   
 2145 CBD6  26 00       K6314:	LD	H,0
 2146 CBD8  CD CCE1     K6314a:	CALL	PRZK
 2147 CBDB  2E 00       	LD	L,0
 2148 CBDD  06 04       K6314b:	LD	B,4
 2149 CBDF  E5          	PUSH	HL
 2150 CBE0  CD E063     	CALL	PADR
 2151 CBE3  11 B700     	LD	DE,CASS
 2152 CBE6  7E          K6314c:	LD	A,(HL)
 2153 CBE7  12          	LD	(DE),A
 2154 CBE8  13          	INC	DE
 2155 CBE9  12          	LD	(DE),A
 2156 CBEA  13          	INC	DE
 2157 CBEB  2C          	INC	L
 2158 CBEC  10 F8       	DJNZ	K6314c		; 4*
 2159 CBEE  0E 08       	LD	C,8
 2160 CBF0  06 08       K6314d:	LD	B,8
 2161 CBF2  21 B700     	LD	HL,CASS
 2162 CBF5  CB 16       K6314e:	RL 	(HL)
 2163 CBF7  17          	RLA
 2164 CBF8  23          	INC	HL
 2165 CBF9  10 FA       	DJNZ	K6314e
 2166 CBFB  CD B7E9     	CALL	OFILT
 2167 CBFE  CD B7E9     	CALL	OFILT
 2168 CC01  0D          	DEC	C
 2169 CC02  20 EC       	JR	NZ,K6314d
 2170 CC04  E1          	POP	HL
 2171 CC05  2C          	INC	L
 2172 CC06  3E 28       	LD	A,40
 2173 CC08  BD          	CP	L
 2174 CC09  20 D2       	JR	NZ,K6314b
 2175 CC0B  7C          	LD	A,H
 2176 CC0C  C6 04       	ADD	A,4
 2177 CC0E  67          	LD	H,A
 2178 CC0F  30 C7       	JR	NC,K6314a
 2179 CC11  C3 CB4C     JHCRLF:	JP	HCCRLF
 2180                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  50
CC48    INC

 2181                   ; ANSI-Drucker
 2182                   
 2183 CC14  CD CCE1     K6311:	CALL	PRZK
 2184 CC17  06 2A       	LD	B,256/6
 2185 CC19  21 0000     	LD	HL,0
 2186 CC1C  0E 06       K6311a:	LD	C,6
 2187 CC1E  CD CD07     	CALL	CBYTES
 2188 CC21  CD CC6E     	CALL	SPRS		; 6*8-Feld ausg.
 2189 CC24  20 F6       	JR	NZ,K6311a
 2190 CC26  3E 06       	LD	A,6		; 6 Pixel tiefer
 2191 CC28  84          	ADD	A,H
 2192 CC29  67          	LD	H,A
 2193 CC2A  2E 00       	LD	L,0
 2194 CC2C  CD CCE1     	CALL	PRZK
 2195 CC2F  05          	DEC	B
 2196 CC30  20 EA       	JR	NZ,K6311a
 2197 CC32  0E 04       K6311b:	LD	C,256 MOD 6	; den Rest
 2198 CC34  CD CD07     	CALL	CBYTES
 2199 CC37  AF          	XOR	A
 2200 CC38  12          	LD	(DE),A		; letzte beiden
 2201 CC39  13          	INC	DE		; Zeilen leeren
 2202 CC3A  12          	LD	(DE),A
 2203 CC3B  CD CC6E     	CALL	SPRS
 2204 CC3E  20 F2       	JR	NZ,K6311b
 2205 CC40  18 CF       	JR	JHCRLF
 2206                   
 2207                   ; ANSI breit
 2208                   
 2209 CC42  CD CCE1     K6312:	CALL	PRZK
 2210 CC45  06 55       	LD	B,256/3
 2211 CC47  21 0000     	LD	HL,0
 2212 CC4A  0E 03       K6312a:	LD	C,3
 2213 CC4C  CD CD15     	CALL	CBYTS2
 2214 CC4F  CD CC97     	CALL	S2PRS
 2215 CC52  20 F6       	JR	NZ,K6312a
 2216 CC54  24          	INC	H
 2217 CC55  24          	INC	H
 2218 CC56  24          	INC	H
 2219 CC57  2E 00       	LD	L,0
 2220 CC59  CD CCE1     	CALL	PRZK
 2221 CC5C  10 EC       	DJNZ	K6312a
 2222 CC5E  0E 04       K6312b:	LD	C,256 MOD 6	; den Rest
 2223 CC60  CD CD15     	CALL	CBYTS2
 2224 CC63  AF          	XOR	A
 2225 CC64  12          	LD	(DE),A
 2226 CC65  13          	INC	DE
 2227 CC66  12          	LD	(DE),A
 2228 CC67  CD CC97     	CALL	S2PRS
 2229 CC6A  20 F2       	JR	NZ,K6312b
 2230 CC6C  18 A3       	JR	JHCRLF
 2231                   
 2232                   ; 8* 6-Nadel-Sprosse ausgeben
 2233                   
 2234 CC6E  E5          SPRS:	PUSH	HL
 2235 CC6F  C5          	PUSH	BC
 2236 CC70  2E 80       	LD	L,80H
 2237 CC72  06 00       SPRS1:	LD	B,0
 2238 CC74  11 B700     	LD	DE,CASS
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  51
CC48    INC

 2239 CC77  1A          SPRS2:	LD	A,(DE)
 2240 CC78  A5          	AND	L		; CY=0
 2241 CC79  28 01       	JR	Z,SPRS3
 2242 CC7B  37          	SCF			; CY=1
 2243 CC7C  CB 10       SPRS3:	RL 	B
 2244 CC7E  13          	INC	DE
 2245 CC7F  3E 06       	LD	A,6		; fuer 6 Bit
 2246 CC81  BB          	CP	E
 2247 CC82  20 F3       	JR	NZ,SPRS2	; ob. Nadel war 0
 2248 CC84  A7          	AND	A		; unt. Nadel = 0
 2249 CC85  CB 10       	RL 	B
 2250 CC87  78          	LD	A,B
 2251 CC88  CD B7E9     	CALL	OFILT
 2252 CC8B  CB 0D       	RRC	L
 2253 CC8D  F2 CC72     	JP	P,SPRS1
 2254 CC90  C1          	POP	BC
 2255 CC91  E1          	POP	HL
 2256 CC92  2C          	INC	L
 2257 CC93  3E 28       	LD	A,40
 2258 CC95  BD          	CP	L
 2259 CC96  C9          	RET
 2260                   
 2261                   ; 8* 6-Nadel-Sprosse doppelt out
 2262                   
 2263 CC97  E5          S2PRS:	PUSH	HL
 2264 CC98  C5          	PUSH	BC
 2265 CC99  2E 80       	LD	L,80H
 2266 CC9B  06 00       S2PR1:	LD	B,0
 2267 CC9D  11 B700     	LD	DE,CASS		; Kassetten-Puffer
 2268 CCA0  1A          S2PR2:	LD	A,(DE)
 2269 CCA1  A5          	AND	L
 2270 CCA2  28 01       	JR	Z,S2PR3
 2271 CCA4  37          	SCF
 2272 CCA5  CB 10       S2PR3:	RL 	B
 2273 CCA7  13          	INC	DE
 2274 CCA8  3E 06       	LD	A,6
 2275 CCAA  BB          	CP	E
 2276 CCAB  20 F3       	JR	NZ,S2PR2
 2277 CCAD  78          	LD	A,B
 2278 CCAE  17          	RLA			; untere beiden
 2279 CCAF  17          	RLA			; Nadeln tot
 2280 CCB0  CD B7E9     	CALL	OFILT
 2281 CCB3  CD B7E9     	CALL	OFILT
 2282 CCB6  CB 0D       	RRC	L
 2283 CCB8  F2 CC9B     	JP	P,S2PR1
 2284 CCBB  C1          	POP	BC
 2285 CCBC  E1          	POP	HL
 2286 CCBD  2C          	INC	L
 2287 CCBE  3E 28       	LD	A,40
 2288 CCC0  BD          	CP	L
 2289 CCC1  C9          	RET
 2290                   
 2291                   ; 8* 24-Nadel-Sprosse ausgeben
 2292                   
 2293 CCC2  E5          S3PRS:	PUSH	HL
 2294 CCC3  1E 08       	LD	E,8
 2295 CCC5  0E 03       S3PR1:	LD	C,3		; 24 Nadeln = 3 Byte
 2296 CCC7  21 B700     	LD	HL,CASS
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  52
CC48    INC

 2297 CCCA  06 08       S3PR2:	LD	B,8
 2298 CCCC  CB 16       S3PR3:	RL	(HL)
 2299 CCCE  17          	RLA
 2300 CCCF  23          	INC	HL
 2301 CCD0  10 FA       	DJNZ	S3PR3		; Wandlung
 2302 CCD2  CD B7E9     	CALL	OFILT
 2303 CCD5  0D          	DEC	C
 2304 CCD6  20 F2       	JR	NZ,S3PR2
 2305 CCD8  1D          	DEC	E
 2306 CCD9  20 EA       	JR	NZ,S3PR1
 2307 CCDB  E1           	POP	HL
 2308 CCDC  2C          	INC	L
 2309 CCDD  3E 28       	LD	A,40
 2310 CCDF  BD          	CP	L
 2311 CCE0  C9          	RET
 2312                   
 2313                   ; Druckerinitialisierung entsprechend HCPZ
 2314                   
 2315 CCE1  E5          PRZK:	PUSH	HL
 2316 CCE2  C5          	PUSH	BC
 2317 CCE3  AF          	XOR	A
 2318 CCE4  21 B7E1     	LD	HL,HCPZ
 2319 CCE7  ED 6F       	RLD
 2320 CCE9  4F          	LD	C,A		; Druckertyp
 2321 CCEA  ED 67       	RRD
 2322 CCEC  0C          	INC	C
 2323 CCED  21 D7D1     	LD	HL,C6313
 2324 CCF0  46          PRZK1:	LD	B,(HL)		; Laenge
 2325 CCF1  0D          	DEC	C
 2326 CCF2  28 09       	JR	Z,PRZK2
 2327 CCF4  04          	INC	B
 2328 CCF5  7D          	LD	A,L
 2329 CCF6  80          	ADD	A,B
 2330 CCF7  6F          	LD	L,A
 2331 CCF8  30 F6       	JR	NC,PRZK1
 2332 CCFA  24          	INC	H
 2333 CCFB  18 F3       	JR	PRZK1
 2334 CCFD  23          PRZK2:	INC	HL
 2335 CCFE  7E          	LD	A,(HL)
 2336 CCFF  CD B7E9     	CALL	OFILT
 2337 CD02  10 F9       	DJNZ	PRZK2
 2338 CD04  C1          POP2:	POP	BC
 2339 CD05  E1          	POP	HL
 2340 CD06  C9          	RET
 2341                   
 2342                   ; C Bytes zum Puffer
 2343                   
 2344 CD07  E5          CBYTES:	PUSH	HL
 2345 CD08  C5          	PUSH	BC
 2346 CD09  CD E063     	CALL	PADR
 2347 CD0C  11 B700     	LD	DE,CASS
 2348 CD0F  06 00       	LD	B,0
 2349 CD11  ED B0       	LDIR
 2350 CD13  18 EF       	JR	POP2	; POP BC, HL	RET
 2351                   
 2352                   ; C Bytes zum Puffer & doppeln
 2353                   
 2354 CD15  E5          CBYTS2:	PUSH	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  53
CC48    INC

 2355 CD16  CD E063     	CALL	PADR
 2356 CD19  11 B700     	LD	DE,CASS
 2357 CD1C  7E          C2BYTL:	LD	A,(HL)
 2358 CD1D  12          	LD	(DE),A
 2359 CD1E  13          	INC	DE
 2360 CD1F  12          	LD	(DE),A
 2361 CD20  13          	INC	DE
 2362 CD21  2C          	INC	L
 2363 CD22  0D          	DEC	C
 2364 CD23  20 F7       	JR	NZ,C2BYTL
 2365 CD25  E1          	POP	HL
 2366 CD26  C9          	RET
 2367                   
 2368                   ; Byteausgabe von Datentraeger (BASIC-Schnittstelle)	**38**
 2369                   
 2370                   ; Zunaechst Puffer fuellen und nur wenn Puffer voll ist in die
 2371                   ; MBOUT-Routine(n) des eingestellten Treibers springen
 2372                   
 2373                   ; PE:	A	Datenbyte
 2374                   ;	D	Steuerbyte
 2375                   ;		Bit 3 = 1 INIT (Block 01)
 2376                   ;		Bit 6 = 1 Close (Block FF)
 2377                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 2378                   ; PA:	CY=1	Fehler
 2379                   ; VR:	AF,DE,HL
 2380                   ;
 2381 CD27  5A          MBOC:	LD	E,D		; Steuerbyte
 2382 CD28  57          	LD	D,A		; Datenbyte
 2383 CD29  D5          	PUSH	DE
 2384 CD2A  C5          	PUSH	BC
 2385 CD2B  CB 5B       	BIT	3,E		; Init?
 2386 CD2D  28 32       	JR	Z,NOINIT
 2387 CD2F  DD CB 07 CE 	SET	1,(IX+7)	; INIT merken
 2388 CD33  3E D5       	LD	A,'U'+80H
 2389 CD35  BE          	CP	(HL)		; List-Ausgabe?
 2390 CD36  D5          	PUSH	DE
 2391 CD37  11 00A0     	LD	DE,160		; kurze Vortonlaenge normal
 2392 CD3A  20 03       	JR	NZ,NOHIU
 2393 CD3C  11 0500     	LD	DE,1280		; bei 'U' gedehnt
 2394 CD3F  ED 53 B7D8  NOHIU:	LD	(VORTN),DE
 2395 CD43  CD D796     	CALL	BNAME		; Dateiname konvertieren/merken fuer ISRO
 2396 CD46  CD E4D4     	CALL	CLC		; Kassettenpuffer loeschen
 2397 CD49  CD ED69     	CALL	DEV		; Kassette?
 2398 CD4C  20 05       	JR	NZ,MBONN	; nein
 2399 CD4E  01 000B     	LD	BC,11		; Laenge Dateiname + Typ
 2400 CD51  ED B0       	LDIR			; bei TAPE zunaechst mit Name fuellen
 2401 CD53  EB          MBONN:	EX	DE,HL		; HL jetzt Zeiger in Puffer
 2402 CD54  D1          	POP	DE
 2403 CD55  72          	LD	(HL),D		; 1. Datenbyte eintragen
 2404 CD56  2C          	INC	L
 2405 CD57  7D          MBOC1:	LD	A,L
 2406 CD58  32 B7DA     MBOC0:	LD	(DTPTR),A	; Zeiger neu setzen
 2407 CD5B  A7          MBOCE:	AND	A		; CY=0 / kein Fehler (zusaetzlich ab CAOS 4.7)
 2408 CD5C  C1          MBCERR:	POP	BC
 2409 CD5D  D1          	POP	DE
 2410 CD5E  CB 9B       	RES	3,E		; Init zuruecksetzen
 2411 CD60  C9          	RET
 2412                   	;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  54
CC48    INC

 2413 CD61  2A B7DA     NOINIT:	LD	HL,(DTPTR)	; Zeiger holen
 2414 CD64  26 B7       	LD	H,High(CASS)	; und mit Kassettenpuffer verbinden
 2415 CD66  72          	LD	(HL),D		; Datenbyte eintragen
 2416 CD67  CB 73       	BIT	6,E		; Close?
 2417 CD69  20 26       	JR	NZ,MCLOS	; letzten Block schreiben
 2418 CD6B  2C          	INC	L		; Zeiger auf naechstes Byte
 2419 CD6C  F2 CD57     	JP	P,MBOC1		; Puffer noch nicht voll
 2420 CD6F  DD CB 07 4E 	BIT	1,(IX+7)	; steht INIT noch aus?
 2421 CD73  20 0A       	JR	NZ,MBOC2	; ja, dann erst einmal den Vorblock ausgeben!
 2422 CD75  CD CE87     	CALL	MBLO		; Datenblock ausgeben, Blocknummer anzeigen
 2423 CD78  38 E2       	JR	C,MBCERR	; BRK oder Fehler -> IO-Error
 2424 CD7A  CD E4D4     MBOC6:	CALL	CLC		; Kassettenpuffer jetzt wieder loeschen
 2425 CD7D  18 D9       	JR	MBOC0		; Zeiger zuruecksetzen
 2426                   	;
 2427 CD7F  DD CB 07 8E MBOC2:	RES	1,(IX+7)	; INIT ruecksetzen
 2428 CD83  21 B7F5     	LD	HL,FNAME	; Dateiname fuer Ausgabe
 2429 CD86  CD E4DD     	CALL	PV7
 2430 CD89  02          	DB	2		; Vorblock ausgeben mit ISRO
 2431                   ;	JR	C,MBCERR	; Fehler
 2432 CD8A  D4 CE90     	CALL	NC,MBLO1	; Blocknummer anzeigen, neue Zeile, BRK-Test
 2433 CD8D  38 CD       	JR	C,MBCERR	; BRK oder Fehler
 2434 CD8F  18 E9       	JR	MBOC6		; Zeiger auf leeren Puffer stellen
 2435                   	;
 2436 CD91  DD CB 07 4E MCLOS:	BIT	1,(IX+7)	; steht noch INIT aus?
 2437 CD95  28 09       	JR	Z,MBOC3		; nein, nur noch der Endeblock
 2438 CD97  21 B7F5     	LD	HL,FNAME	; Dateiname fuer Ausgabe
 2439 CD9A  CD E4DD     	CALL	PV7
 2440 CD9D  02          	DB	2		; sonst erst noch ISRO ausfuehren
 2441 CD9E  18 07       	JR	MBOC4		; und danach sofort Close
 2442                   ;
 2443                   ; 17.02.2019
 2444                   ; Bei der byteweisen Ausgabe wurde bisher der Endeblock immer 2x ausgegeben.
 2445                   ; Dateien auf Diskette und USB-Laufwerken sind deshalb immer einen Block zu lang
 2446                   ;
 2447                   ; 24.11.2020
 2448                   ; Offenbar wurde dieses Verhalten mit Absicht eingebaut, denn BASIC benoetigt
 2449                   ; nach Einlesen des letzten Datenbytes eine gewisse "Bedenkzeit" bevor das Close
 2450                   ; zum Lesen des Endebytes 03h folgt. Wird also der erste Ende-Block nicht
 2451                   ; erwischt, dann folgt noch ein weiterer. Ohne diesen zusaetzlichen Block bleibt
 2452                   ; BASIC beim Lesen hengen und man muss zurueckspulen und den letzten Block
 2453                   ; nochmals abspielen.
 2454                   ; -> Also wird bei TAPE der Endeblock weiterhin 2x nacheinander ausgegeben.
 2455                   ;
 2456 CDA0  CD ED69     MBOC3:	CALL	DEV		; Kassette?
 2457 CDA3  CC CE87     	CALL	Z,MBLO		; bei TAPE letzten Block als Datenblock ausgeben
 2458 CDA6  D8          	RET	C		; BRK oder Fehler
 2459 CDA7  ED 4B B7D8  MBOC4:	LD	BC,(VORTN)
 2460 CDAB  CD E4DD     	CALL	PV7
 2461 CDAE  03          	DB	3		; Endeblock ausgeben mit CSRO
 2462 CDAF  F5          	PUSH	AF		; CY=1 bei Fehler
 2463 CDB0  CD F4C7     	CALL	CRLF
 2464 CDB3  F1          	POP	AF		; Fehlerflag
 2465 CDB4  18 04       	JR	MBRES		; fertig
 2466                   ;
 2467 CDB6  CD E4DD     MBICL:	CALL	PV7
 2468 CDB9  05          	DB	5		; Dateieingabe stoppen mit CSRI
 2469 CDBA  DD CB 07 AE MBRES:	RES	5,(IX+7)	; 'U'-Merker ruecksetzen (Blocknummern anzeigen)
 2470 CDBE  18 9C       	JR	MBCERR		; fertig
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  55
CC48    INC

 2471                   
 2472                   ; Byteeingabe von Datentraeger (BASIC-Schnittstelle)	**37**
 2473                   
 2474                   ; Zunaechst Daten aus Puffer entnehmen und nur wenn Puffer leer ist in die
 2475                   ; MBIN-Routine(n) des eingestellten Treibers springen
 2476                   
 2477                   ; PE:	D	Steuerbyte
 2478                   ;		Bit 3 = 1 INIT (Block 01)
 2479                   ;		Bit 6 = 1 Close (Block FF)
 2480                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 2481                   ; PA:	A	Datenbyte
 2482                   ;	CY=1	Fehler
 2483                   ; VR:	AF, DE, HL
 2484                   ;
 2485 CDC0  5A          MBIC:	LD	E,D		; Steuerbyte
 2486                   ;	LD	D,A		; Datenbyte (PA!)
 2487 CDC1  D5          	PUSH	DE
 2488 CDC2  C5          	PUSH	BC
 2489 CDC3  CB 73       	BIT	6,E		; Close?
 2490 CDC5  20 EF       	JR	NZ,MBICL	; ja, Bandeingabe stoppen
 2491 CDC7  CB 5B       	BIT	3,E		; Init?
 2492 CDC9  28 64       	JR	Z,MBIU		; nein, Datenbyte holen
 2493                   ; Init
 2494 CDCB  E5          	PUSH	HL		; Dateiname merken
 2495                   ;
 2496                   ; 29.03.2021:
 2497                   ; Dateityp hier schon testen zur Unterdrueckung bei BASIC-Listings *.UUU
 2498                   ; der Test nach dem Einlesen des ersten -blocks funktioniert nur bei TAPE.
 2499                   ;
 2500 CDCC  7E          	LD	A,(HL)		; vorangestellter Dateityp: 1. Zeichen testen
 2501 CDCD  FE D5       	CP	'U'+80H		; hohes 'U'?
 2502 CDCF  20 04       	JR	NZ,MBIC0
 2503 CDD1  DD CB 07 EE 	SET	5,(IX+7)	; merken zur Blocknummernausgabeunterdrueckung
 2504                   				; beim Einlesen von ASCII-Listings
 2505 CDD5  CD D796     MBIC0:	CALL	BNAME		; Dateiname konvertieren/merken fuer ISRI
 2506 CDD8  21 B7F5     	LD	HL,FNAME	; konvertierter Dateiname
 2507 CDDB  CD E4DD     	CALL	PV7
 2508 CDDE  04          	DB	4		; Block 01h einlesen mit ISRI
 2509 CDDF  E1          MBIC1:	POP	HL		; gesuchter Dateiname fuer Vergleich
 2510 CDE0  DA CE75     MBIC2:	JP	C,JBLERR	; Lesefehler: '*'
 2511 CDE3  DD 7E 02    	LD	A,(IX+2)	; gelesener Block
 2512 CDE6  3D          	DEC	A
 2513 CDE7  C2 CE75     	JP	NZ,JBLERR	; falsche Blocknummer: '*'
 2514 CDEA  DD CB 07 BE 	RES	7,(IX+7)	; Kopfblock ist geladen
 2515 CDEE  DD 34 03    	INC	(IX+3)		; naechster erwarteter Block
 2516 CDF1  11 B700     	LD	DE,CASS		; Daten stehen jetzt im Kassettenpuffer
 2517 CDF4  CD ED69     	CALL	DEV		; Kassette?
 2518 CDF7  20 2B       	JR	NZ,MBINN	; nein, sofort Datenbyte entnehmen
 2519                   	
 2520                   ; Dateiname anzeigen/vergleichen
 2521 CDF9  06 0B       	LD	B,11		; Laenge des Dateinamens bei Tape im Kassettenpuffer
 2522 CDFB  1A          	LD	A,(DE)		; vorangestellter Dateityp: 1. Zeichen testen
 2523                   ;	CP	'U'+80H		; hohes 'U'?
 2524                   ;	JR	NZ,MBIC3
 2525                   ;	SET	5,(IX+7)	; merken zur Blocknummernausgabeunterdrueckung
 2526                   ;				; beim Einlesen von ASCII-Listings
 2527 CDFC  C6 29       MBIC3:	ADD	A,29H		; geschuetztes Programm?
 2528 CDFE  30 0A       	JR	NC,MBIC4
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  56
CC48    INC

 2529 CE00  1A          	LD	A,(DE)		; geschuetzte BASIC-Programme
 2530 CE01  D6 04       	SUB	4		; als ungeschuetzt anzeigen
 2531 CE03  12          	LD	(DE),A		; 1. Zeichen vom Dateityp
 2532 CE04  13          	INC	DE
 2533 CE05  12          	LD	(DE),A		; 2. Zeichen vom Dateityp
 2534 CE06  13          	INC	DE
 2535 CE07  12          	LD	(DE),A		; 3. Zeichen vom Dateityp
 2536                   ;	LD	(DATFLG),A	; <=hier LIST/EDIT/BYE-Schutz setzen
 2537                   ;	SET	6,(IX+7)	; Das war ein RESET-Schutz bei CAOS 3.1
 2538 CE08  1B          	DEC	DE
 2539 CE09  1B          	DEC	DE		; DE wieder auf Anfang Kassettenpuffer
 2540 CE0A  1A          MBIC4:	LD	A,(DE)		; Name aus Kassettenpuffer
 2541 CE0B  CD F3BE     	CALL	OCHR		; anzeigen
 2542 CE0E  BE          	CP	(HL)		; stimmt Name?
 2543 CE0F  28 04       	JR	Z,MBIC5
 2544 CE11  DD CB 07 FE 	SET	7,(IX+7)	; nein-merken
 2545 CE15  23          MBIC5:	INC	HL
 2546 CE16  13          	INC	DE
 2547 CE17  10 F1       	DJNZ	MBIC4
 2548 CE19  CD F4C7     	CALL	CRLF
 2549 CE1C  DD CB 07 7E 	BIT	7,(IX+7)	; war der Name korrekt?
 2550 CE20  37          	SCF			; Fehlerflag
 2551 CE21  C2 CD5C     	JP	NZ,MBCERR	; Name falsch -> ?IO ERROR
 2552 CE24  EB          MBINN:	EX	DE,HL
 2553 CE25  56          MBIC6:	LD	D,(HL)		; Datenbyte aus Kassettenpuffer entnehmen
 2554 CE26  2C          	INC	L		; Zeiger auf naechstes Byte
 2555 CE27  7D          	LD	A,L
 2556 CE28  32 B7DA     	LD	(DTPTR),A	; Zeiger neu setzen
 2557 CE2B  7A          	LD	A,D		; Datenbyte in A bereitstellen
 2558 CE2C  C3 CD5B     	JP	MBOCE		; fertig
 2559                   
 2560                   ; Datenbyte holen
 2561                   
 2562 CE2F  2A B7DA     MBIU:	LD	HL,(DTPTR)	; Zeiger
 2563 CE32  26 B7       	LD	H,HIGH(CASS)	; in Kassettenpuffer
 2564 CE34  CB 7D       	BIT	7,L		; Pufferende erreicht?
 2565 CE36  28 ED       	JR	Z,MBIC6		; Daten aus Puffer entnehmen
 2566 CE38  CD E4DD     MBIU1:	CALL	PV7
 2567 CE3B  01          	DB	1		; einen Block lesen mit MBI
 2568 CE3C  38 2A       	JR	C,MERR		; Lesefehler
 2569 CE3E  3E FF       	LD	A,0FFH
 2570 CE40  DD BE 02    	CP	(IX+2)		; Block FF?
 2571 CE43  28 13       	JR	Z,MBIU3		; FF immer als korrekt durchgehen lassen
 2572 CE45  DD 7E 03    	LD	A,(IX+3)
 2573 CE48  DD BE 02    	CP	(IX+2)		; erwarteter Block?
 2574 CE4B  28 0B       	JR	Z,MBIU3		; ja, stimmt!
 2575 CE4D  CD F63F     	CALL	BLNOT		; nicht erwarteter Block mit * anzeigen
 2576 CE50  CD F667     MBIU2:	CALL	BRKT		; Abbruch mit BRK?
 2577 CE53  30 E3       	JR	NC,MBIU1	; weiter versuchen
 2578 CE55  C3 CD5C     JMBERR:	JP	MBCERR		; BRK => IO-ERROR
 2579                   	;
 2580 CE58  DD 34 03    MBIU3:	INC	(IX+3)		; naechsten Block erwarten
 2581 CE5B  3D          	DEC	A
 2582 CE5C  DD CB 07 6E 	BIT	5,(IX+7)	; Blocknummer unterdruecken?
 2583 CE60  CC F652     	CALL	Z,LUP5		; Blocknummer ausgeben, ">" anhaengen und zum
 2584                   				; Zeilenanfan gehen
 2585 CE63  21 B700     MBIU4:	LD	HL,CASS		; Pufferbeginn
 2586 CE66  18 BD       	JR	MBIC6		; jetzt Datenbyte entnehmen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  57
CC48    INC

 2587                   
 2588                   ; Lesefehler
 2589 CE68  CD ED69     MERR:	CALL	DEV		; Kassette?
 2590 CE6B  20 0B       	JR	NZ,JBLE1	; nein, Abbruch bei anderen Devices
 2591 CE6D  CD F643     	CALL	BLERR		; Blocknummer mit ? anzeigen
 2592 CE70  CD F4C7     	CALL	CRLF		; neue Zeile
 2593                   ;	CALL	OSTR
 2594                   ;	DB	9,9,9,9,'?',0	; Fehler im Block
 2595                   ;	CALL	BNROST		; mit Blocknummer anzeigen
 2596                   ;	DB	1EH,0		; neue Zeile
 2597 CE73  18 DB       	JR	MBIU2		; BRK testen, sonst weiter versuchen
 2598                   
 2599                   ; falsche Blocknummer oder Lesefehler beim Kopfblock
 2600 CE75  CD ED69     JBLERR:	CALL	DEV		; Kassette?
 2601 CE78  37          JBLE1:	SCF			; Fehlerkennung
 2602 CE79  20 DA       	JR	NZ,JMBERR	; Abbruch wenn nicht Kassette
 2603 CE7B  CD F63F     	CALL	BLNOT		; nicht erwartete Blocknummer mit * anzeigen
 2604                   ;	CALL	OSTR
 2605                   ;	DB	'*',8,0		; nicht erwarteter 1. Block
 2606                   ;	CALL	BRKT
 2607 CE7E  38 D5       	JR	C,JMBERR	; BRK => IO-ERROR
 2608 CE80  CD E4DD     	CALL	PV7
 2609 CE83  01          	DB	1		; Block erneut lesen mit MBI
 2610 CE84  C3 CDE0     	JP	MBIC2
 2611                   
 2612                   ; Datenblock ausgeben innerhalb der Byte-Routinen
 2613                   ; PA:	CY=1	Fehler
 2614                   
 2615 CE87  ED 4B B7D8  MBLO:	LD	BC,(VORTN)	; Vortonlaenge
 2616 CE8B  CD E4DD     	CALL	PV7
 2617 CE8E  00          	DB	0		; Block ausgeben mit MBO
 2618 CE8F  D8          	RET	C		; Fehler
 2619 CE90  DD CB 07 6E MBLO1:	BIT	5,(IX+7)	; Blocknummern unterdruecken?
 2620 CE94  C0          	RET	NZ		; ja
 2621 CE95  C3 F63C     	JP	SUP5		; Blocknummer anzeigen, neue Zeile, BRK-Test
 2622                   
 2623                   ; Tabelle der Modulnamen:
 2624                   
 2625 CE98  00 56 41 52 MTAB:	DB	000h,'VARIABEL',0	; M042 (Tim Henning)
 2626 CEA2  01 53 54 41 	DB	001H,'START-ROM',0	; M033 z.B. Typestar
 2627 CEAD  70 33 32 4B 	DB	070H,'32K ROM',0	; M045
 2628 CEB6  71 36 34 4B 	DB	071H,'64K ROM',0	; M046
 2629 CEBF  72 31 32 38 	DB	072H,'128K ROM',0	; M047
 2630 CEC9  73 32 35 36 	DB	073H,'256K ROM',0	; M048 (Mario Leubner)
 2631 CED3  74 35 31 32 	DB	074H,'512K ROM',0	; M049 (Andreas Schlechte)
 2632                   ;	DB	075H,'1M ROM',0	;	 M050 reserviert!
 2633 CEDD  76 34 4D 20 	DB	076H,'4M ROM',0		; M044 (Bert Lange, Andreas Schlechte)
 2634 CEE5  77 36 34 4B 	DB	077H,'64K RAM',0	; M032 - 64k-Variante
 2635 CEEE  78 31 32 38 	DB	078H,'128K RAM',0	; M036
 2636 CEF8  79 32 35 36 	DB	079H,'256K RAM',0	; M032 - 256k-Variante
 2637 CF02  7A 35 31 32 	DB	07AH,'512K RAM',0	; M034
 2638 CF0C  7B 31 4D 20 	DB	07BH,'1M RAM',0		; M035, M035x4
 2639                   ;	DB	07CH,'32K EEPROM',0	; reserviert!
 2640                   ;	DB	07DH,'64K EEPROM',0	; reserviert!
 2641                   ;	DB	07EH,'128K EEPROM',0	; reserviert!
 2642                   ;	DB	07FH,'256K EEPROM',0	; M109 '256x8K CMOS RAM' (Tim Henning)
 2643 CF14  A7 46 4C 4F 	DB	0A7H,'FLOPPY',0		; D004, D008
 2644 CF1C  BF 4D 54 30 	DB	0BFH,'MT02',0		; MT02 (Nachbau Pruefmodul MT01)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  58
CC48    INC

 2645                   ;	DB	0D8h,'Z8E',0		; M127 (reserviert fuer Thomas Schramm)
 2646 CF22  D9 45 50 52 	DB	0D9H,'EPROMER 32K',0	; M030 (fuer 2k-32k EPROMs)
 2647                   ;	DB	0DAH,'PIO-3',0		; M002 (geplantes Modul mit 3*PIO)
 2648 CF2F  DA 57 45 41 	DB	0DAH,'WEATHER',0	; M004 (Wetter-Modul, Rene Nitzsche)
 2649 CF38  DB 45 50 52 	DB	0DBH,'EPROMER 64K',0	; M030 (fuer 1k-64k EPROMs)
 2650 CF45  DC 53 4F 55 	DB	0DCH,'SOUND',0		; M066 (Soundmodul, Rene Nitzsche)
 2651 CF4C  DF 4D 50 33 	DB	0DFH,'MP3',0		; M366 (MP3-Modul, Rene Nitsche)
 2652 CF51  E3 44 41 55 	DB	0E3H,'DAU1',0		; M029
 2653 CF57  E7 41 44 55 	DB	0E7H,'ADU1',0		; M010
 2654 CF5D  EC 53 43 41 	DB	0ECH,'SCANNER',0	; M051 (KC-Club)
 2655 CF66  EE 56 2E 32 	DB	0EEH,'V.24',0		; M003, M053
 2656 CF6C  EF 44 49 47 	DB	0EFH,'DIGITAL I/O',0	; M001
 2657 CF79  F0 38 4B 20 	DB	0F0H,'8K CMOS-RAM',0	; M120 (Nachbau Thomas Schramm)
 2658 CF86  F1 31 36 4B 	DB	0F1H,'16K CMOS-RAM',0	; M122
 2659 CF94  F2 33 32 4B 	DB	0F2H,'32K CMOS-RAM',0	; M124
 2660                   ;	DB	0F3H,'8*8K EPROM',0	; M062-RAM/ROM       (Sonderbehandlung!)
 2661 CFA2  F4 31 36 4B 	DB	0F4H,'16K RAM',0	; M022
 2662 CFAB  F5 33 32 4B 	DB	0F5H,'32K RAM',0	; M024
 2663 CFB4  F6 36 34 4B 	DB	0F6H,'64K RAM',0	; M011
 2664 CFBD  F7 38 4B 20 	DB	0F7H,'8K ROM',0		; M025, M040
 2665 CFC5  F8 31 36 4B 	DB	0F8H,'16K ROM',0	; M028, M040, M041
 2666 CFCE  F9 47 49 44 	DB	0F9H,'GIDE',0		; M064 (Mario Leubner, 2016)
 2667                   ;	DB	0FBH,'8K SOFTWARE',0	; M012, M026, M027   (Sonderbehandlung!)
 2668 CFD4  FC 42 41 53 	DB	0FCH,'BASIC',0		; M006
 2669                   ;	DB	0FDH,'USB+NET',0	; M052               (Sonderbehandlung!)
 2670 CFDB  FF 3F 3F 3F 	DB	0FFH,'???',0		; unbekanntes Modul
 2671 CFE0  53 4F 46 54 MTAB1:	DB	'SOFTWARE'		; Standardanzeige falls ohne Menuewort
 2672 CFE8  00          MTAB2:	DB	0
 2673                   
 2674 CFE9  55 53 45 52 MUSER:	DB	'USER',0		; M005 (USER-Module C0-D7)
 2675                   	;
 2676 CFEE  4E 45 54 2B M052A:	DB	'NET+'			; M052 (USB+Netzwerk, 32K EEPROM 4 * 8K)
 2677 CFF2  55 53 42 00 M052B:	DB	'USB',0			; M052 (nur USB, 8K EEPROM)
 2678                   	;
 2679 CFF6  34 2A 38 4B M062A:	DB	'4*8K RAM',0		; M062-RAM (E. Mueller)
 2680 CFFF  38 2A 38 4B M062B:	DB	'8*8K ROM',0		; M062-ROM (E. Mueller)
 2681                   
 2682                   ;	ABSFILL	0D000h,<ROM-C-Ende>
  233                   
  234                   	INCLUDE	CD48.INC	; ROM-D (D000-DAB7)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM D		**
    3                   ;**					**
    4                   ;**	Adresse:  D000h bis DAB7h	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 11.09.2021	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0D000H
   10                   
   11                   ;*******************************************************************************
   12                   ;	DEVICE-Treiber fuer Kassette (ab CAOS 4.7 im ROM-D)
   13                   ;*******************************************************************************
   14                   
   15                   ; Zeitkonstanten fuer TAPE-Schreiben:
   16                   
   17                   			; Vorton	"1"-Bits
   18         005D      ZKKAT	EQU	93	; Trennzeichen	Vollschwingung ca.  557 Hz
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  59
CD48    INC

   19         0017      ZKKA0	EQU	23	; "0"		Vollschwingung ca. 1950 Hz
   20         002F      ZKKA1	EQU	47	; "1"		Vollschwingung ca. 1050 Hz
   21                   ;
   22                   ; Zeitkonstanten fuer TAPE-Lesen:
   23                   ;
   24         00A3      IKEZK	EQU	163	; Zeitkonstante fuer CTC
   25         005D      IKEGN	EQU	93	; Erkennung Nullbit
   26         00BA      IKEG1	EQU	186	; Erkennung Einsbit
   27                   
   28                   ; Initialisierung Bandausgabe:				**08**
   29                   ; PA:	CY=0	(kein Fehler bei Bandausgabe)
   30                   
   31 D008  F3          TISRO:	DI
   32 D009  DB 88       	IN	A,(PIOAD)
   33 D00B  F6 60       	OR	01100000b	; Motor+LED ein
   34 D00D  CD E46C     	CALL	ISRO1		; Initialisierung
   35 D010  DD 36 02 00 	LD	(IX+2),0	; Block 1 (Vorblock)
   36 D014  01 1000     	LD	BC,4096		; langer Vorton
   37                   
   38                   ; Ausgabe 1 Block					**01**
   39                   ; PE:	BC	Laenge Vorton
   40                   
   41 D017  DD 34 02    TMBO:	INC	(IX+2)
   42 D01A  3E 87       	LD	A,10000111b	; EI,ZG16,Res
   43 D01C  F3          	DI
   44 D01D  D3 8D       	OUT	(CTC1),A
   45 D01F  3E 2F       	LD	A,ZKKA1		; Vorton "1"
   46 D021  D3 8D       	OUT	(CTC1),A
   47 D023  FB          	EI
   48 D024  5F          	LD	E,A		; E=47 (ZK Vorton)
   49 D025  CD D06A     MBO1:	CALL	BITOUT		; Vorton ausgeben
   50 D028  ED A1       	CPI
   51 D02A  EA D025     	JP	PE,MBO1		; BC mal
   52 D02D  CD D068     	CALL	ZTON		; Trennzeichen
   53 D030  DD 7E 02    	LD	A,(IX+2)
   54 D033  CD D055     	CALL	BYTOT		; Blocknummer
   55 D036  DD 6E 05    	LD	L,(IX+5)
   56 D039  DD 66 06    	LD	H,(IX+6)	; Blockanfang
   57 D03C  06 80       	LD	B,128		; Zaehler
   58 D03E  7E          BLKOT:	LD	A,(HL)
   59 D03F  CD D055     	CALL	BYTOT		; 128 Datenbyte ausgeben
   60 D042  79          	LD	A,C
   61 D043  86          	ADD	A,(HL)		; Pruefsumme
   62 D044  4F          	LD	C,A		; nebenher berechnen in Register C
   63 D045  23          	INC	HL
   64 D046  10 F6       	DJNZ	BLKOT
   65 D048  CD D055     	CALL	BYTOT		; Pruefsumme ausgeben
   66                   
   67                   ; Bei einer Halbschwingung als Endimpuls aendert sich mit jedem Block die
   68                   ; Polaritaet der Signale. Das ist bei allen CAOS-Versionen so ausser CAOS 4.5.
   69                   ; Eventuell ist das ja besser - deshalb ab CAOS 4.6 wieder eine Halbschwingung
   70                   ; als Endimpuls. (bemerkt von Micha im Forum am 02.02.2015)
   71                   
   72 D04B  CD D06D     	CALL	HBITOT		; Trennzeichen (2. Halbschwingung)
   73 D04E  5D          	LD	E,L
   74 D04F  54          	LD	D,H		; DE=HL (Pufferende+1)
   75 D050  3E 03       	LD	A,3		; CTC stoppen
   76 D052  D3 8D       	OUT	(CTC1),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  60
CD48    INC

   77 D054  C9          	RET
   78                   
   79                   ; Ausgabe eines Bytes auf Kassette
   80                   ; PE:	A	Datenbyte
   81                   ; PA:	CY=0
   82                   ;	E	Zeitkonstante fuer Trennzeichen
   83                   ; VR:	AF, E
   84                   
   85 D055  C5          BYTOT:	PUSH	BC
   86 D056  4F          	LD	C,A
   87 D057  06 08       	LD	B,8		; 8 Bit ausgeben
   88 D059  CB 09       BYTOUT:	RRC	C		; mit Bit 0 beginnend
   89 D05B  1E 17       	LD	E,ZKKA0
   90 D05D  D4 D06A     	CALL	NC,BITOUT	; CY=0 / Nullbit ausgeben
   91 D060  1E 2F       	LD	E,ZKKA1	
   92 D062  DC D06A     	CALL	C,BITOUT	; CY=1 / Einsbit ausgeben
   93 D065  10 F2       	DJNZ	BYTOUT		; 8x wiederholen
   94 D067  C1          	POP	BC
   95 D068  1E 5D       ZTON:	LD	E,ZKKAT		; ZK Trennzeichen
   96                   
   97                   ; Ausgabe einer Vollschwingung
   98                   ; PE:	E	Zeitkonstante
   99                   
  100 D06A  CD D06D     BITOUT:	CALL	HBITOT		; Aufrufen und reinlaufen
  101 D06D  DD 73 00    HBITOT:	LD	(IX),E		; Zeitkonstante -> (IX)
  102 D070  DD 7E 00    HBIT1:	LD	A,(IX)		; Warten bis Zeitkonstante von
  103 D073  A7          	AND	A		; Interruptroutine zurueckgesetzt
  104 D074  20 FA       	JR	NZ,HBIT1
  105 D076  C9          	RET
  106                   
  107                   ; Initialisierung Bandeingabe				**0A**
  108                   ; PE:	HL	Dateiname
  109                   ; PA:	CY=1	Fehler
  110                   ;	CY=0	Block korrekt gelesen
  111                   ; VR:	AF,BC
  112                   
  113 D077  CD E461     TISRI:	CALL	ISRI1		; Motor ein, LED aus
  114                   
  115                   ; Einen Block einlesen:					**05**
  116                   ; PA:	CY=1	Fehler
  117                   ;	CY=0	Block korrekt gelesen
  118                   ; VR:	AF,BC
  119                   
  120 D07A  3E 83       TMBI:	LD	A,10000011b
  121 D07C  D3 8A       	OUT	(PIOAS),A	; EI an PIO A (Kassette)
  122 D07E  E5          	PUSH	HL
  123 D07F  D5          	PUSH	DE
  124 D080  06 16       MBI1:	LD	B,22
  125 D082  CD D0D5     MBI2:	CALL	STOP1		; Lesen einer Vollschwingung
  126 D085  38 F9       	JR	C,MBI1		; kein Einsbit ?
  127 D087  FE BA       	CP	IKEG1		; Einsbit ?
  128 D089  CD D0CA     	CALL	LEDOO		; LED on/off
  129 D08C  38 F2       	JR	C,MBI1
  130 D08E  10 F2       	DJNZ	MBI2		; 22 korrekte Schwingungen abwarten
  131 D090  06 02       MBI3:	LD	B,2
  132 D092  AF          MBI4:	XOR	A
  133 D093  CD D0D9     	CALL	STOP2		; Lesen einer Halbschwingung
  134 D096  FE 5D       	CP	IKEGN		; Nullbit ?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  61
CD48    INC

  135 D098  30 F6       	JR	NC,MBI3
  136 D09A  10 F6       	DJNZ	MBI4		; Warten auf ein komplettes Nullbit
  137 D09C  DD 6E 05    	LD	L,(IX+5)	; Blockpuffer
  138 D09F  DD 66 06    	LD	H,(IX+6)
  139 D0A2  CD D0EA     	CALL	BYTIN		; Blocknummer lesen
  140 D0A5  38 1B       	JR	C,MBI5		; Stoerung
  141 D0A7  DD 77 02    	LD	(IX+2),A	; Blocknummer eintragen
  142 D0AA  06 80       	LD	B,128		; Blocklaenge
  143 D0AC  1E 00       	LD	E,0		; Pruefsumme=0
  144 D0AE  CD D0EA     BLKIN:	CALL	BYTIN		; Datenbyte lesen
  145 D0B1  38 0F       	JR	C,MBI5		; Stoerung
  146 D0B3  77          	LD	(HL),A
  147 D0B4  83          	ADD	A,E		; Pruefsumme berechnen
  148 D0B5  5F          	LD	E,A
  149 D0B6  23          	INC	HL
  150 D0B7  10 F5       	DJNZ	BLKIN
  151 D0B9  6F          	LD	L,A		; berechnete Pruefsumme
  152 D0BA  CD D0EA     	CALL	BYTIN		; Vergleichspruefsumme einlesen
  153 D0BD  38 03       	JR	C,MBI5		; Stoerung
  154 D0BF  95          	SUB	L		; Pruefsumme richtig?
  155 D0C0  C6 FF       	ADD	A,-1		; CY:=/Z
  156 D0C2  D1          MBI5:	POP	DE
  157 D0C3  E1          	POP	HL
  158 D0C4  F3          	DI
  159 D0C5  3E 03       	LD	A,3		; DI an PIO A
  160 D0C7  D3 8A       	OUT	(PIOAS),A
  161 D0C9  FB          	EI
  162 D0CA  DB 88       LEDOO:	IN	A,(PIOAD)	; LED ein/aus
  163 D0CC  CB EF       	SET	5,A		; je nach CY
  164 D0CE  30 02       	JR	NC,MBI6
  165 D0D0  CB AF       	RES	5,A
  166 D0D2  D3 88       MBI6:	OUT	(PIOAD),A
  167 D0D4  C9          	RET
  168                   ;
  169                   ; 1 Bit (Vollschwingung) einlesen:
  170                   ; PA:	A	Zeitwert
  171                   ;	CY=0	Einsbit
  172                   ;	CY=1	Nullbit
  173                   ; VR:	AF, C
  174                   ;
  175 D0D5  AF          STOP1:	XOR	A		; mit 0 beginnen
  176 D0D6  CD D0D9     	CALL	STOP2		; erst aufrufen, dann reinlaufen
  177 D0D9  4F          STOP2:	LD	C,A		; 'Zeit' der 1. Halbschwingung in C merken
  178 D0DA  DD 36 00 00 	LD	(IX),0
  179 D0DE  DB 88       STOP21:	IN	A,(PIOAD)
  180 D0E0  D3 88       	OUT	(PIOAD),A	; PIO-Logik freigeben
  181                   ;	LD	A,(IX)		; CTC-Stand von Interrupt
  182                   ;	OR	A		; eingetragen?
  183 D0E2  AF          	XOR	A
  184 D0E3  DD B6 00    	OR	(IX)		; CTC-Stand von Interrupt eingetragen
  185 D0E6  28 F6       	JR	Z,STOP21	; Warten auf 2. Halbschwingung
  186 D0E8  81          	ADD	A,C		; beide 'Zeiten' addieren
  187 D0E9  C9          	RET
  188                   
  189                   ; Einlesen eines Bytes von Kassette
  190                   ; PA:	A	Byte
  191                   ;	CY=1	Trennzeichen, Stoerung
  192                   ; VR:	AF, C, D
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  62
CD48    INC

  193                   
  194 D0EA  16 80       BYTIN:	LD	D,80H		; D=Bitschieberegister und Zaehler (Bit 7)
  195 D0EC  CD D0D5     IB1:	CALL	STOP1		; Bit Eingabe
  196 D0EF  38 03       	JR	C,IB2		; Nullbit ?
  197 D0F1  FE BA       	CP	IKEG1		; Einsbit
  198 D0F3  D8          	RET	C		; CY=1: Trennzeichen
  199 D0F4  3F          IB2:	CCF
  200 D0F5  CB 1A       	RR 	D		; Bit einschieben
  201 D0F7  30 F3       	JR	NC,IB1		; bis 8 Bit abgearbeitet sind
  202 D0F9  CD D0D5     	CALL	STOP1		; Trennzeichen (mit CY-Rueckmeldung)
  203 D0FC  7A          	LD	A,D		; Byte in A
  204 D0FD  C9          	RET
  205                   
  206                   ;*******************************************************************************
  207                   ;	DEVICE-Treiber fuer Floppy D004/D008 (ab CAOS 4.6)
  208                   ;*******************************************************************************
  209                   
  210                   ; Eingabedatei oeffnen und Block 01 einlesen		**0A**
  211                   ; PE:	HL	Dateiname
  212                   ; PA:	CY=1	Fehler
  213                   
  214 D0FE  DD 36 02 00 FISRI:	LD	(IX+2),0	; 1. Block lesen
  215 D102  DD 36 03 01 	LD	(IX+3),1	; erwarteter Block = 1
  216 D106  CD D19C     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  217 D109  3E 09       	LD	A,9		; Lesen oeffnen
  218 D10B  21          	DB	21h		; LD HL,nn
  219                   
  220                   ; Einlesen Datenblock 128 Byte				**05**
  221                   ; PE:	(IX+3)	erwartete Blocknummer
  222                   ; PA:	(IX+2)	gelesene Blocknummer
  223                   ;	CY=1	Lesefehler
  224                   ; VR:	AF,BC
  225                   
  226 D10C  3E 01       FMBI:	LD	A,1		; Lesen normal
  227 D10E  CD D152     	CALL	STEUER
  228 D111  D8          	RET	C		; Fehler
  229 D112  0D          	DEC	C		; STBYT1 -> FDATA (80F2H)
  230 D113  E5          	PUSH	HL
  231 D114  DD 6E 05    	LD	L,(IX+5)
  232 D117  DD 66 06    	LD	H,(IX+6)	; Kassettenpuffer
  233 D11A  ED 78       FMBI1:	IN	A,(C)
  234 D11C  CD FB61     	CALL	LDMAE		; Daten in Speicher ablegen
  235 D11F  23          	INC	HL
  236 D120  04          	INC	B
  237 D121  20 F7       	JR	NZ,FMBI1	; CY von allen Befehlen nach RET C unbeeinflusst
  238 D123  E1          	POP	HL
  239                   ;	LD	A,(IX+3)	; erwarteten Block
  240                   ;	LD	(IX+2),A	; als gelesenen Block melden
  241 D124  DD 34 02    	INC	(IX+2)		; Blocknummer erhoehen
  242 D127  C9          	RET
  243                   
  244                   ; Eingabedatei schliessen				**0B**
  245                   ; PE:
  246                   ; PA:	CY=1	bei Fehler
  247                   
  248 D128  3E 41       FCSRI:	LD	A,41H		; READ - close
  249 D12A  18 26       	JR	STEUER
  250                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  63
CD48    INC

  251                   ; Ausgabedatei oeffnen und ersten Block 01h ausgeben	**08**
  252                   ; PE:	Kassettenpuffer mit Daten des Vorblocks
  253                   ;	HL	Dateiname
  254                   ; PA:	CY=1	Fehler
  255                   ; VR:	AF,BC,DE,HL
  256                   
  257 D12C  DD 36 02 00 FISRO:	LD	(IX+2),0	; mit Block 1 beginnen
  258                   ;	LD	L,(IX+5)	; HL = Dateiname im Kassettenpuffer
  259                   ;	LD	H,(IX+6)
  260 D130  CD D19C     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  261 D133  3E 0B       	LD	A,0BH		; Schreiben oeffnen
  262 D135  21          	DB	21h		; LD HL,nn
  263                   
  264                   ; Ausgabe Datenblock 128 Byte				**01**
  265                   ; PE:	Datenblock im Kassettenpuffer
  266                   ; PA:	CY=1	Fehler
  267                   ; VR:	AF,BC,DE,HL
  268                   
  269 D136  3E 03       FMBO:	LD	A,3		; Schreiben normal
  270 D138  DD 34 02    	INC	(IX+2)		; Blocknummer erhoehen
  271 D13B  DD 6E 05    	LD	L,(IX+5)	; Kassettenpuffer
  272 D13E  DD 66 06    	LD	H,(IX+6)
  273 D141  01 80F2     	LD	BC,FDATA	; 80F2H
  274 D144  1E 80       	LD	E,128
  275 D146  08          	EX	AF,AF'		; Kommando in A' merken
  276 D147  CD FB71     FMBO1:	 CALL	LDAME		; Daten aus Speicher holen
  277 D14A  ED 79       	 OUT	(C),A		; und in Koppel-RAM schreiben
  278 D14C  23          	 INC	HL
  279 D14D  04          	 INC	B
  280 D14E  1D          	 DEC	E
  281 D14F  20 F6       	 JR	NZ,FMBO1
  282 D151  08          	EX	AF,AF'		; Kommando zurueck nach A
  283                   ;
  284                   ; Steuerbyte 1 ausgeben, bei Fehler: Fehlercode/-text anzeigen
  285                   ; PE:	A	Kommando-Steuerbyte
  286                   ; PA:	A	Antwort von DEP
  287                   ;	CY=1	Fehler aufgetreten
  288                   ; VR:	AF, BC
  289                   ;
  290 D152  01 80F3     STEUER:	LD	BC,STBYT1	; 80F3H
  291 D155  ED 79       STEU0:	OUT	(C),A
  292 D157  C5          STEU1:	PUSH	BC
  293 D158  3E 01       	LD	A,1		; 6ms
  294 D15A  CD FC27     	CALL	WAIT		; warten
  295 D15D  C1          	POP	BC
  296 D15E  ED 78       	IN	A,(C)
  297 D160  A7          	AND	A		; CY-Flag=0
  298 D161  CB 47       	BIT	0,A
  299 D163  20 F2       	JR	NZ,STEU1	; fertig?
  300 D165  CB 7F       	BIT	7,A		; Bit 7 gesetzt?
  301 D167  C8          	RET	Z		; kein Fehler
  302 D168  01 83F1     FLERR:	LD	BC,DEPVER	; 83F1H
  303 D16B  ED 78       	IN	A,(C)
  304 D16D  FE 20       	CP	20H		; DEP ab 2.0?
  305 D16F  30 0D       	JR	NC,FLER1	; ja
  306 D171  01 81F3     	LD	BC,FCODE	; 81F3H
  307 D174  ED 78       	IN	A,(C)		; Fehlernummer
  308 D176  CD F3AD     	CALL	AHEX		; anzeigen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  64
CD48    INC

  309 D179  CD F4BD     	CALL	ERRM
  310 D17C  37          FLER3:	SCF			; CY=1: Fehler
  311 D17D  C9          	RET
  312                   	;
  313 D17E  06 00       FLER1:	LD	B,HIGH(ERRTX)	; 00F1H = Fehlertext von DEP 2.0
  314 D180  ED 78       FLER2:	IN	A,(C)
  315 D182  04          	INC	B
  316 D183  A7          	AND	A
  317 D184  28 F6       	JR	Z,FLER3		; 00=Ende
  318 D186  CD F3BE     	CALL	OCHR
  319 D189  18 F5       	JR	FLER2
  320                   ;
  321                   ; Steuerbyte 2 ausgeben, bei Fehler: Fehlercode/-text anzeigen
  322                   ; PE:	A	Kommando-Steuerbyte
  323                   ; PA:	A	Antwort von DEP
  324                   ;	CY=1	Fehler aufgetreten
  325                   ; VR:	AF, BC
  326                   ;
  327 D18B  01 80F1     STEUB2:	LD	BC,STBYT2	; 80F1H
  328 D18E  18 C5       	JR	STEU0
  329                   
  330                   ; Ausgabedatei schliessen und Endeblock FFh ausgeben	**09**
  331                   ; PE:	Datenblock im Kassettenpuffer
  332                   ; PA:	CY=1	bei Fehler
  333                   ; VR:	AF,BC,DE,HL
  334                   
  335 D190  DD 36 02 FE FCSRO:	LD	(IX+2),0FEH	; Nr. letzter Block
  336 D194  CD D136     	CALL	FMBO		; Datenblock ausgeben
  337 D197  D8          	RET	C		; Fehler
  338 D198  3E 43       	LD	A,43H		; write close
  339 D19A  18 B6       	JR	STEUER
  340                   
  341                   ; Dateiname ausgeben
  342                   ; PE:	HL	Dateiname, Ende mit 00 (max. 12 Zeichen)
  343                   ;	D	Maske FFh (Trennzeichen=0) oder DFh (Trennzeichen=SPC oder 0)
  344                   ; VR:	AF,BC,E,HL
  345                   
  346 D19C  11 FF0C     NAMOUT:	LD	DE,0FF0Ch	; D=Maske, E=max. Laenge Dateiname 8.3 (12)
  347 D19F  01 82F3     NAMO1:	LD	BC,DIRBUF	; 82F3H
  348 D1A2  7E          NAMO2:	LD	A,(HL)
  349 D1A3  ED 79       	OUT	(C),A		; Dateiname zum D004 ausgeben
  350 D1A5  A2          	AND	D		; war das ein Trennzeichen?
  351 D1A6  28 01       	JR	Z,NAMO3
  352 D1A8  23          	INC	HL		; naechstes Zeichen solange kein Trennzeichen
  353 D1A9  04          NAMO3:	INC	B
  354 D1AA  1D          	DEC	E
  355 D1AB  20 F5       	JR	NZ,NAMO2
  356 D1AD  C9          	RET
  357                   ;
  358                   ; Name ein-, ausgeben: (fuer RENAME)
  359                   ; PE:	DE	Zeiger auf Dateinamen, wenn 0 dann Eingabe
  360                   ; PA:	CY=1	BRK
  361                   ;	DE	Zeiger auf Zeichen nach Dateinamen (2. Name bei REN)
  362                   ;
  363 D1AE  CD F569     FNAM1:	CALL	NAMHL		; Dateiname eingeben
  364 D1B1  D8          	RET	C		; BRK
  365 D1B2  11 DF0C     FNAM2:	LD	DE,0DF0Ch	; D=Maske, E=max. Laenge Dateiname 8.3 (12)
  366 D1B5  CD D19F     	CALL	NAMO1		; ausgeben zum D004	
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  65
CD48    INC

  367 D1B8  EB          	EX	DE,HL		; Zeiger jetzt wieder in DE
  368 D1B9  13          	INC	DE		; Trennzeichen uebergehen
  369 D1BA  C9          	RET
  370                   
  371                   ; CAOS-D-Teil der Pixelausgaberoutine WPIX
  372                   
  373 D1BB  79          WPIXD:	LD	A,C
  374 D1BC  01 DC00     	LD	BC,0DC00H
  375 D1BF  87          	ADD	A,A
  376 D1C0  38 2C       	JR	C,WPX02		; 80..FF
  377 D1C2  05          	DEC	B
  378 D1C3  FE 40       	CP	40H
  379 D1C5  38 27       	JR	C,WPX02		; 00..1F
  380 D1C7  06 ED       	LD	B,0EEH-1	; Grossbuchstaben
  381 D1C9  FE B6       	CP	2*5BH
  382 D1CB  38 21       	JR	C,WPX02		; 20..5A
  383 D1CD  FE BC       	CP	2*5EH
  384 D1CF  38 0C       	JR	C,WPX01		; 5B..5D
  385 D1D1  FE C0       	CP	2*60H
  386 D1D3  38 19       	JR	C,WPX02		; 5E..5F
  387 D1D5  28 06       	JR	Z,WPX01		; 60
  388 D1D7  06 FC       	LD	B,0FEH-2	; Kleinbuchstaben
  389 D1D9  FE F6       	CP	2*7BH
  390 D1DB  38 11       	JR	C,WPX02		; 61..7A
  391 D1DD  01 DAB8     WPX01:	LD	BC,0DAB8H	; Zusatztabelle
  392 D1E0  D6 B6       	SUB	2*5BH
  393 D1E2  FE 06       	CP	6
  394 D1E4  38 08       	JR	C,WPX02		; 5B..5D
  395 D1E6  D6 04       	SUB	4
  396 D1E8  FE 06       	CP	6
  397 D1EA  28 02       	JR	Z,WPX02		; 60
  398 D1EC  D6 34       	SUB	34H
  399 D1EE  6F          WPX02:	LD	L,A
  400 D1EF  26 00       	LD	H,0
  401 D1F1  29          	ADD	HL,HL		; *4
  402 D1F2  C3 E0E7     	JP	WPX07		; Zurueck zu CAOS-E
  403                   
  404                   ; Rolle Fenster fuer Scrollroutine
  405                   
  406 D1F5  E5          MOVELN:	PUSH	HL
  407 D1F6  D5          	PUSH	DE
  408 D1F7  C5          	PUSH	BC
  409 D1F8  F5          	PUSH	AF
  410 D1F9  08          	EX	AF,AF'
  411 D1FA  F5          	PUSH	AF
  412 D1FB  79          	LD	A,C		; BC: Pixelzeilen
  413 D1FC  08          	EX	AF,AF'
  414 D1FD  3A B79E     	LD	A,(WINLG)	; Spalten
  415 D200  E5          MOLN1:	PUSH	HL
  416 D201  D5          	PUSH	DE
  417 D202  ED A0       MOLN2:	LDI			; zeichenweise
  418 D204  ED A0       	LDI
  419 D206  ED A0       	LDI
  420 D208  ED A0       	LDI
  421 D20A  ED A0       	LDI
  422 D20C  ED A0       	LDI
  423 D20E  ED A0       	LDI
  424 D210  ED A0       	LDI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  66
CD48    INC

  425 D212  EA D202     	JP	PE,MOLN2
  426 D215  D1          	POP	DE
  427 D216  E1          	POP	HL
  428 D217  24          	INC	H		; neue Spalte
  429 D218  14          	INC	D
  430 D219  08          	EX	AF,AF'
  431 D21A  4F          	LD	C,A
  432 D21B  08          	EX	AF,AF'
  433 D21C  3D          	DEC	A		; Spaltenzaehler
  434 D21D  20 E1       	JR	NZ,MOLN1
  435 D21F  08          	EX	AF,AF'
  436 D220  F1          	POP	AF
  437 D221  08          	EX	AF,AF'
  438 D222  C3 E0B3     	JP	POP4		; POP	AF,BC,DE,HL   RET
  439                   
  440                   ; Loeschen einer Zeile
  441                   ; HL: Adresse, C: Laenge, A: Byte
  442                   
  443 D225  41          CLLINE:	LD	B,C
  444 D226  55          CLL1:	LD	D,L		; L retten
  445 D227  77          	LD	(HL),A		; zeichenweise
  446 D228  2C          	INC	L		; ohne Schleife
  447 D229  77          	LD	(HL),A
  448 D22A  2C          	INC	L
  449 D22B  77          	LD	(HL),A
  450 D22C  2C          	INC	L
  451 D22D  77          	LD	(HL),A
  452 D22E  2C          	INC	L
  453 D22F  77          	LD	(HL),A
  454 D230  2C          	INC	L
  455 D231  77          	LD	(HL),A
  456 D232  2C          	INC	L
  457 D233  77          	LD	(HL),A
  458 D234  2C          	INC	L
  459 D235  77          	LD	(HL),A
  460 D236  6A          	LD	L,D		; L holen
  461 D237  24          	INC	H
  462 D238  10 EC       	DJNZ	CLL1
  463 D23A  C9          	RET
  464                   
  465                   ; CAOS-D-Teil der Scrollroutine SCRLPG
  466                   
  467 D23B  3A B79E     SCRLD:	LD	A,(WINLG)	; Spalten
  468 D23E  4F          	LD	C,A
  469 D23F  06 00       	LD	B,0
  470 D241  3A B79F     	LD	A,(WINLG+1)	; Zeilen
  471 D244  3D          	DEC	A		; nur 1 Zeile?
  472 D245  28 3A       	JR	Z,SCRL3		; nur CLLN
  473 D247  D5          	PUSH	DE
  474 D248  F5          	PUSH	AF
  475 D249  50          	LD	D,B		; DE=0
  476 D24A  58          	LD	E,B		; Cursor links/oben
  477 D24B  CD E083     	CALL	DABR
  478 D24E  EB          	EX	DE,HL
  479 D24F  21 0028     SCRL1:	LD	HL,40		; 1 Zeile tiefer
  480 D252  19          	ADD	HL,DE
  481 D253  E5          	PUSH	HL
  482 D254  C5          	PUSH	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  67
CD48    INC

  483 D255  ED B0       	LDIR			; im VRAM eine Zeile rollen
  484 D257  C1          	POP	BC
  485 D258  D1          	POP	DE
  486 D259  3D          	DEC	A
  487 D25A  20 F3       	JR	NZ,SCRL1	; A-mal rollen
  488 D25C  F1          	POP	AF
  489 D25D  87          	ADD	A,A
  490 D25E  87          	ADD	A,A
  491 D25F  87          	ADD	A,A		; *8: Pixelzeile
  492 D260  4F          	LD	C,A
  493 D261  50          	LD	D,B		; B war 0
  494 D262  58          	LD	E,B		; DE=0
  495 D263  CD E059     	CALL	PADR1
  496 D266  EB          	EX	DE,HL		; DE=Pixeladresse
  497 D267  2E 08       	LD	L,8		; H war 0
  498 D269  19          	ADD	HL,DE
  499 D26A  3A B7A2     	LD	A,(STBT)
  500 D26D  1F          	RRA
  501 D26E  1F          	RRA
  502 D26F  38 0B       	JR	C,SCRL2		; Farbe AUS
  503 D271  F5          	PUSH	AF
  504 D272  CD F99D     	CALL	ESC9
  505 D275  CD D1F5     	CALL	MOVELN
  506 D278  CD F99D     	CALL	ESC9
  507 D27B  F1          	POP	AF
  508 D27C  17          SCRL2:	RLA			; Pixel AUS?
  509 D27D  D4 D1F5     	CALL	NC,MOVELN
  510 D280  D1          	POP	DE
  511 D281  15          SCRL3:	DEC	D
  512                   
  513                   ; CAOS-D-Teil der Zeilenloeschroutine CLLN (Shift-DEL)
  514                   
  515 D282  1E 00       CLLND:	LD	E,0		; Cursor auf Spalte 0
  516 D284  CD E083     	CALL	DABR		; ausserhalb?
  517 D287  D8          	RET	C		; (Selbstschutz)
  518 D288  3A B79E     	LD	A,(WINLG)
  519 D28B  47          	LD	B,A		; Spalten
  520 D28C  4F          	LD	C,A
  521 D28D  AF          	XOR	A
  522 D28E  77          CLLN1:	LD	(HL),A		; VRAM loeschen
  523 D28F  23          	INC	HL
  524 D290  10 FC       	DJNZ	CLLN1
  525 D292  CD E059     	CALL	PADR1
  526 D295  D8          	RET	C
  527 D296  D5          	PUSH	DE
  528 D297  DD CB 01 5E 	BIT	3,(IX+1)
  529 D29B  3A B7A2     	LD	A,(STBT)
  530 D29E  20 04       	JR	NZ,CLLALT	; LORES
  531 D2A0  CB 77       	BIT	6,A
  532 D2A2  20 1C       	JR	NZ,CLLHR	; HRG-Modus
  533 D2A4  0F          CLLALT:	RRCA			; Pixel AUS?
  534 D2A5  5F          	LD	E,A		; nach E merken
  535 D2A6  38 06       	JR	C,CLLN2
  536 D2A8  AF          	XOR	A
  537 D2A9  E5          	PUSH	HL
  538 D2AA  CD D225     	CALL	CLLINE		; Pixel loeschen
  539 D2AD  E1          	POP	HL
  540 D2AE  CB 0B       CLLN2:	RRC	E		; Farbe AUS?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  68
CD48    INC

  541 D2B0  38 0C       	JR	C,CLLN3
  542 D2B2  CD F99D     	CALL	ESC9
  543 D2B5  3A B7A3     	LD	A,(COLOR)
  544 D2B8  CD D225     CLLCOL:	CALL	CLLINE		; Farbe setzen
  545 D2BB  CD F99D     	CALL	ESC9
  546 D2BE  D1          CLLN3:	POP	DE
  547 D2BF  C9          	RET
  548                   
  549 D2C0  3A B7A3     CLLHR:	LD	A,(COLOR)
  550 D2C3  E6 03       	AND	00000011b	; Paper, CY=0
  551 D2C5  1F          	RRA
  552 D2C6  3D          	DEC	A		; NEG ohne Veraenderung von CY
  553 D2C7  2F          	CPL
  554 D2C8  5F          	LD	E,A		; E = FFh * Bit 1 (Farbe)
  555 D2C9  9F          	SBC	A,A		; A = FFh * Bit 0 (Pixel)
  556 D2CA  E5          	PUSH	HL
  557 D2CB  CD D225     	CALL	CLLINE
  558 D2CE  E1          	POP	HL
  559 D2CF  CD F99D     	CALL	ESC9
  560 D2D2  7B          	LD	A,E		; Farbe
  561 D2D3  18 E3       	JR	CLLCOL
  562                   
  563                   ; Quadratwurzel 16Bit A=SQR(HL)				**40**
  564                   
  565 D2D5  AF          SQRC:	XOR	A		; A=0, CY=0
  566 D2D6  3D          	DEC	A		; A=FF
  567 D2D7  5F          	LD	E,A
  568 D2D8  57          	LD	D,A		; DE=FFFF
  569 D2D9  3C          SQR1:	INC	A		; mitzaehlen
  570 D2DA  13          	INC	DE
  571 D2DB  13          	INC	DE
  572 D2DC  ED 52       	SBC	HL,DE
  573 D2DE  30 F9       	JR	NC,SQR1
  574 D2E0  C3 FB8A     	JP	COFF		; -> COFF
  575                   
  576                   ; Speicherschnellansicht
  577                   
  578 D2E3  7F7F        VIEW7F:	DW	7F7FH
  579 D2E5  76 69 65 77 	DB	'view'
  580 D2E9  03          	DB	3		; mindestens 1 Argument
  581 D2EA  7D          	LD	A,L
  582 D2EB  FE 10       	CP	10H
  583 D2ED  30 0C       	JR	NC,VIEW1	; L>0Fh
  584 D2EF  7C          	LD	A,H
  585 D2F0  A7          	AND	A
  586 D2F1  20 08       	JR	NZ,VIEW1	; H>0
  587 D2F3  21 B782     	LD	HL,ARG1
  588 D2F6  ED 6F       	RLD
  589 D2F8  66          	LD	H,(HL)
  590 D2F9  2E 00       	LD	L,0
  591 D2FB  11 8800     VIEW1:	LD	DE,8800H
  592 D2FE  01 2000     	LD	BC,2000H
  593 D301  CD FB71     VIEW2:	CALL	LDAME		; Byte holen
  594 D304  12          	LD	(DE),A		; in IRM poken
  595 D305  23          	INC	HL
  596 D306  13          	INC	DE
  597 D307  0D          	DEC	C
  598 D308  20 F7       	JR	NZ,VIEW2
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  69
CD48    INC

  599 D30A  10 F5       	DJNZ	VIEW2
  600 D30C  3E 0B       VIEW3:	LD	A,0BH		; Zeile hoch
  601 D30E  CD F3BE     	CALL	OCHR
  602 D311  3E 08       	LD	A,8
  603 D313  32 B7A0     	LD	(CURSO),A
  604 D316  CD D319     	CALL	VIEW4
  605 D319  3E 01       VIEW4:	LD	A,1
  606 D31B  4F          VIEW5:	LD	C,A
  607 D31C  CD F3AD     	CALL	AHEX		; HEX-Leiste
  608 D31F  79          	LD	A,C
  609 D320  C6 22       	ADD	A,22H
  610 D322  30 F7       	JR	NC,VIEW5
  611 D324  C9          	RET
  612                   
  613                   ; Schreibe ON, ON* oder OFF fuer Systemcheck
  614                   ; PE:	Z=1	OFF
  615                   ;	Z=0 und CY=0 ON
  616                   ;	Z=0 und CY=1 ON*
  617                   
  618 D325  28 14       WONOF:	JR	Z,WOF
  619 D327  F5          	PUSH	AF
  620 D328  CD F0B4     	CALL	OSTR
  621 D32B  20 4F 4E 00 	DB	' ON',0
  622 D32F  F1          	POP	AF
  623 D330  3E 20       	LD	A,' '
  624 D332  30 02       	JR	NC,WRR
  625 D334  3E 2A       	LD	A,'*'		; Schreibschutz anzeigen
  626 D336  CD F3BE     WRR:	CALL	OCHR
  627 D339  18 08       	JR	WRLF
  628                   	;
  629 D33B  CD F0B4     WOF:	CALL	OSTR
  630 D33E  20 4F 46 46 	DB	' OFF',0
  631 D343  C3 F4C7     WRLF:	JP	CRLF
  632                   
  633                   ; Anzeige Steckplatz, Kennbyte, Steuerbyte fuer Modulcheck
  634                   
  635 D346  7D          LHD:	LD	A,L
  636 D347  CD F3A2     	CALL	AHSPC		; Steckplatz
  637 D34A  7C          	LD	A,H
  638 D34B  CD F3A2     	CALL	AHSPC		; Kennbyte
  639 D34E  7A          	LD	A,D
  640 D34F  C3 F3A2     	JP	AHSPC		; Steuerbyte
  641                   
  642                   ; * * * *	ab hier DEVICE-Treiber-Funktionen (neu)	* * * *
  643                   
  644                   ;
  645                   ; Floppy-Treiber Funktion 0: Directory mit Maske
  646                   ; PE:	DE	Maske
  647                   ; PA:	HL	Anzahl passender Eintraege
  648                   ; VR:	AF, BC, DE, HL
  649                   ;
  650 D352  EB          FDIR:	EX	DE,HL		; HL=Maske aus Kommandozeile
  651 D353  11 B700     	LD	DE,CASS
  652 D356  01 000B     	LD	BC,11		; max. Laenge
  653 D359  ED B0       	LDIR			; In Kassettenpuffer ablegen
  654 D35B  AF          	XOR	A
  655 D35C  12          	LD	(DE),A		; Abschluss Maske
  656 D35D  32 B796     	LD	(NUMNX),A	; Zeilenzaehler fuer Anzeige
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  70
CD48    INC

  657 D360  67          	ld	h,a
  658 D361  6F          	ld	l,a
  659 D362  22 B797     	ld	(NUMVX),hl	; Zaehler fuer angezeigte Dateien
  660 D365  3E 0D       	LD	A,0DH		; Directory oeffnen
  661 D367  CD D152     DIR1:	CALL	STEUER
  662 D36A  CB 57       	BIT	2,A
  663 D36C  20 40       	JR	NZ,DIR6		; Ende
  664 D36E  06 82       	LD	B,HIGH(DIRBUF)	; 82F3H
  665 D370  21 B70C     	LD	HL,CASS+12
  666                   ;	AND	A		; CY=0
  667 D373  16 03       	LD	D,3		; 3 Eintraege einlesen von DEP
  668 D375  1E 0B       DIR2:	LD	E,11		; 11 Zeichen lang
  669 D377  ED 78       DIR3:	IN	A,(C)		; Zeichen einlesen
  670 D379  F5          	PUSH	AF
  671 D37A  E6 7F       	AND	7FH		; ohne Attribut
  672 D37C  04          	INC	B
  673 D37D  77          	LD	(HL),A		; ablegen
  674 D37E  23          	INC	HL
  675 D37F  7B          	LD	A,E
  676 D380  FE 03       	CP	3		; R/O-Byte?
  677 D382  28 01       	JR	Z,DIR4
  678 D384  F1          	POP	AF		; vom Stack nehmen wenn nicht das R/O-Byte
  679 D385  1D          DIR4:	DEC	E
  680 D386  20 EF       	JR	NZ,DIR3
  681 D388  36 00       	LD	(HL),0		; Ende-Kennung als 12. Byte
  682 D38A  23          	INC	HL
  683 D38B  04          	INC	B
  684 D38C  F1          	POP	AF
  685 D38D  77          	LD	(HL),A		; R/O-Byte als 13. Byte ablegen
  686 D38E  23          	INC	HL
  687 D38F  15          	DEC	D
  688 D390  20 E3       	JR	NZ,DIR2
  689                   
  690 D392  21 B70C     	LD	HL,CASS+12	; 3 abgelegte DIR-Eintraege
  691 D395  06 03       	LD	B,3		; 3 Eintraege testen/anzeigen
  692 D397  E5          DIR5:	PUSH	HL
  693 D398  11 B700     	LD	DE,CASS		; die Vergleichsmaske
  694 D39B  1A          	LD	A,(DE)
  695 D39C  A7          	AND	A		; CY=0
  696 D39D  C4 D421     	CALL	NZ,GLOB		; Vergleich mit Maske, falls angegeben
  697 D3A0  E1          	POP	HL
  698 D3A1  D4 D3CF     	CALL	NC,DIR7		; Anzeige eines passenden Eintrags
  699 D3A4  11 000D     	LD	DE,13
  700 D3A7  19          	ADD	HL,DE		; naechster Eintrag
  701 D3A8  10 ED       	DJNZ	DIR5		; bis alle 3 Eintraege abgearbeitet sind
  702 D3AA  3E 05       	LD	A,5		; DIR weiter
  703 D3AC  18 B9       	JR	DIR1
  704                   	;
  705 D3AE  3A B7A0     DIR6:	LD	A,(CURSO)
  706 D3B1  A7          	AND	A		; Cursor auf neuer Zeile?
  707 D3B2  C4 F4C7     	CALL	NZ,CRLF		; wenn nicht, dann jetzt ein Zeilenwechsel
  708                   
  709                   ; Nach Ende aller Dateien noch die Statusmeldung anzeigen:
  710                   
  711 D3B5  3E 15       STAT:	LD	A,15H		; Status abfragen
  712 D3B7  CD D152     	CALL	STEUER
  713 D3BA  1E 14       	LD	E,20
  714 D3BC  06 82       	LD	B,HIGH(DIRBUF)	; 82F3H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  71
CD48    INC

  715 D3BE  ED 78       STAT1:	IN	A,(C)
  716 D3C0  E6 7F       	AND	7FH		; Bit 7 abtrennen
  717 D3C2  04          	INC	B
  718 D3C3  F5          	PUSH	AF
  719 D3C4  CD F3BE     	CALL	OCHR
  720 D3C7  F1          	POP	AF
  721 D3C8  1D          	DEC	E
  722 D3C9  20 F3       	JR	NZ,STAT1
  723 D3CB  2A B797     	ld	hl,(NUMVX)	; Anzahl Dateien zurueck geben
  724 D3CE  C9          	RET
  725                   
  726                   ; einen DIR-Eintrag anzeigen:
  727                   
  728 D3CF  7E          DIR7:	LD	A,(HL)		; erstes Zeichen
  729 D3D0  FE 20       	CP	' '		; leer?
  730 D3D2  C8          	RET	Z		; dann kein Dateiname!
  731 D3D3  E5          	PUSH	HL		; DIR-Eintrag
  732 D3D4  3A B7A0     	LD	A,(CURSO)
  733 D3D7  FE 27       	CP	3*13		; wenn schon 3 Eintraege auf der Zeile stehen,
  734 D3D9  CC D3F9     	CALL	Z,DIR9		; dann auf neue Zeile wechseln
  735 D3DC  E1          	POP	HL
  736 D3DD  E5          	PUSH	HL
  737 D3DE  CD F039     	CALL	PV1		; damit sich diese Anzeige filtern laesst:
  738 D3E1  45          	DB	45H		; Dateiname anzeigen mit ZKOUT
  739 D3E2  3E 20       	LD	A,' '		; W/R
  740 D3E4  CB 7E       	BIT	7,(HL)
  741 D3E6  28 02       	JR	Z,DIR8
  742 D3E8  3E 2A       	LD	A,'*'		; R/O
  743 D3EA  CD F3BE     DIR8:	CALL	OCHR
  744 D3ED  CD F3A5     	CALL	SPACE
  745 D3F0  2A B797     	ld	hl,(NUMVX)
  746 D3F3  23          	inc	hl		; angezeigte Dateien mitzaehlen
  747 D3F4  22 B797     	ld	(NUMVX),HL
  748 D3F7  E1          	POP	HL
  749 D3F8  C9          	RET
  750                   
  751                   ; Neue Zeile bei DIR-Kommando / warten nach Bildschirmseite:
  752                   
  753 D3F9  21 B796     DIR9:	LD	HL,NUMNX	; Zeilenzaehler
  754 D3FC  34          	INC	(HL)		; Zeilen zaehlen
  755 D3FD  3A B79F     	LD	A,(WINLG+1)	; Anzahl Zeilen im Fenster
  756 D400  3D          	DEC	A		; eine Zeile zum ueberlappen der Anzeige lassen
  757 D401  96          	SUB	(HL)
  758 D402  20 04       	JR	NZ,DIR10
  759 D404  77          	LD	(HL),A		; wieder von vorn zaehlen
  760 D405  CD F3DE     	call	kbd		; Tastatureingabe abwarten
  761 D408  C3 F4C7     DIR10:	JP	CRLF
  762                   ;
  763                   ; Floppy-Treiber Funktion 2: Datei loeschen
  764                   ; PE:	DE	Dateiname
  765                   ;	(DE)=0	Dateinamen werden abgefragt
  766                   ; PA:	CY=1	Fehler
  767                   ;
  768 D40B  EB          FERA:	EX	DE,HL
  769 D40C  7E          	LD	A,(HL)		; Parameter in Kommandozeile
  770 D40D  E6 DF       	AND	0DFH		; angegeben?
  771 D40F  CC F566     	CALL	Z,NAME		; Dateiname abfragen falls nicht angegeben
  772 D412  3F          	CCF			; BRK nicht als Fehler anzeigen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  72
CD48    INC

  773 D413  D0          	RET	NC		; Eingabe Dateiname mit BRK abgebrochen
  774 D414  CD D19C     	CALL	NAMOUT		; Dateiname ausgeben zum D004
  775 D417  3E 11       	LD	A,11H		; Era
  776 D419  CD D152     	CALL	STEUER		; mit Steuerbyte 1 im D004 anfordern
  777 D41C  D8          	RET	C		; Fehler aufgetreten
  778 D41D  18 96       	JR	STAT
  779                   
  780                   ; Vergleich mit DIR-Maske:
  781                   
  782 D41F  23          MAT0:	INC	HL
  783 D420  13          MAT0E:	INC	DE
  784 D421              GLOB:	; Eintritt, HL=Name, DE=Maske
  785                   	; PA: CY=1: nicht gefunden
  786 D421  1A          	LD	A,(DE)
  787 D422  B6          	OR	(HL)		; Beide Ende?
  788 D423  C8          	RET	Z		; -> OK
  789 D424  1A          	LD	A,(DE)
  790 D425  FE 2A       	CP	'*'
  791 D427  28 16       	JR	Z,MAT0S
  792 D429  FE 01       	CP	1
  793 D42B  D8          	RET	C		; M Ende
  794 D42C  7E          	LD	A,(HL)
  795 D42D  FE 01       	CP	1
  796 D42F  D8          	RET	C		; N Ende
  797 D430  1A          	LD	A,(DE)
  798 D431  FE 3F       	CP	'?'
  799 D433  28 EA       	JR	Z,MAT0		; Joker
  800 D435  CB 6E       	BIT	5,(HL)
  801 D437  CC F53C     	CALL	Z,UPCASE
  802 D43A  BE          	CP	(HL)
  803 D43B  28 E2       	JR	Z,MAT0
  804 D43D  37          	SCF
  805 D43E  C9          	RET
  806                   	;
  807 D43F  E5          MAT0S:	PUSH	HL
  808 D440  D5          	PUSH	DE
  809 D441  CD D420     	CALL	MAT0E		; Rekursion!
  810 D444  D1          	POP	DE
  811 D445  E1          	POP	HL
  812 D446  D0          	RET	NC		; -> OK
  813 D447  7E          	LD	A,(HL)
  814 D448  23          	INC	HL
  815 D449  B7          	OR	A
  816 D44A  20 F3       	JR	NZ,MAT0S
  817 D44C  37          	SCF
  818 D44D  C9          	RET
  819                   ;
  820                   ; Floppy-Treiber Funktion 3: Datei umbenennen
  821                   ; PE:	DE	Zeiger auf Zeichenkette mit 2 Dateinamen
  822                   ;	(DE)=0	Dateinamen werden abgefragt
  823                   ; PA:	CY=1	Fehler
  824                   ;
  825 D44E  1A          FREN:	LD	A,(DE)		; Parameter in Kommandozeile
  826 D44F  E6 DF       	AND	0DFH		; angegeben?
  827 D451  20 13       	JR	NZ,REN1		; ja, dann diesen verwenden
  828 D453  CD F0B4     	CALL	OSTR
  829 D456  41 6C 74 65 	DB	'Alter ',0
  830 D45D  21 000C     	LD	HL,12
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  73
CD48    INC

  831 D460  CD D1AE     	CALL	FNAM1		; Dateiname abfragen
  832 D463  D8          	RET	C		; BRK
  833 D464  18 04       	JR	REN2
  834                   	;
  835 D466  EB          REN1:	EX	DE,HL		; Dateiname in HL
  836 D467  CD D1B2     	CALL	FNAM2
  837 D46A  3E 29       REN2:	LD	A,29H		; REN alter Dateiname
  838 D46C  CD D152     	CALL	STEUER
  839 D46F  D8          	RET	C		; Fehler
  840 D470  1A          	LD	A,(DE)		; Parameter in Kommandozeile
  841 D471  E6 DF       	AND	0DFH		; 2. Dateiname angegeben?
  842 D473  20 13       	JR	NZ,REN3		; ja, dann diesen verwenden
  843 D475  CD F0B4     	CALL	OSTR
  844 D478  4E 65 75 65 	DB	'Neuer ',0
  845 D47F  21 000C     	LD	HL,12
  846 D482  CD D1AE     	CALL	FNAM1		; Dateiname abfragen
  847 D485  D8          	RET	C		; BRK
  848 D486  18 04       	JR	REN4
  849                   	;
  850 D488  EB          REN3:	EX	DE,HL		; Dateiname in HL
  851 D489  CD D1B2     	CALL	FNAM2
  852 D48C  3E 21       REN4:	LD	A,21H		; REN neuer Dateiname
  853 D48E  CD D152     	CALL	STEUER		; Steuerbyte ausgeben
  854 D491  D8          	RET	C		; Fehler
  855 D492  CD F0B4     	CALL	OSTR
  856 D495  4F 4B 2E 0D 	DB	'OK.',CR,LF,0
  857 D49B  C9          	RET
  858                   ;
  859                   ; Anzeige einer beliebigen Text-Datei (nicht fuer TAPE-Modus)
  860                   ;
  861 D49C  7F7F        TYPE7F:	DW	7F7FH
  862 D49E  54 59 50 45 	DB	'TYPE'
  863 D4A2  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  864 D4A3  CD D5B1     	CALL	TDUP1		; Dateiname in HL
  865 D4A6  D8          	RET	C		; TAPE oder BRK
  866 D4A7  CD E4DD     	CALL	PV7		; HL = Dateiname
  867 D4AA  04          	DB	4		; ISRI (ersten Block einlesen)
  868 D4AB  38 75       	JR	C,FCLOSE	; Fehler aufgetreten
  869 D4AD  3A B710     	LD	A,(CASS+10h)	; Anzahl ARG in Vorblock
  870 D4B0  FE 02       	CP	2
  871 D4B2  38 19       	JR	C,TYPE4		; kein Vorblock, da < 2
  872 D4B4  FE 05       	CP	5
  873 D4B6  30 15       	JR	NC,TYPE4	; kein Vorblock, da > 4
  874 D4B8  18 0D       	JR	TYPE3		; Vorblock -> dann ersten Datenblock einlesen
  875                   	;
  876 D4BA              TYPE1:	;LD	A,0CH		; CLS
  877 D4BA  CD E0A6     	CALL	CLSX		; CLS Bildschirm, damit nicht zu Druckprotokoll!
  878 D4BD  3E 0A       	LD	A,LF
  879 D4BF  CD E0A8     	CALL	CRT		; oben eine Zeile frei lassen
  880 D4C2  7B          TYPE2:	LD	A,E
  881 D4C3  FE 80       	CP	80h		; Ende Kassettenpuffer erreicht?
  882 D4C5  20 09       	JR	NZ,TYPE5	; nein, weiter anzeigen
  883 D4C7  CD E4DD     TYPE3:	CALL	PV7		; naechsten Block einlesen mit
  884 D4CA  01          	DB	1		; MBI
  885 D4CB  38 3F       	JR	C,TYPE10		; Fehler
  886 D4CD  11 B700     TYPE4:	LD	DE,CASS		; Kassettenpuffer zur Entnahme der Daten
  887 D4D0  1A          TYPE5:	LD	A,(DE)		; Zeichen
  888 D4D1  1C          	INC	E		; Zeiger auf naechstes Zeichen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  74
CD48    INC

  889 D4D2  FE 03       	CP	3
  890 D4D4  28 36       	JR	Z,TYPE10	; CAOS-Ende
  891 D4D6  FE 1A       	CP	1AH
  892 D4D8  28 32       	JR	Z,TYPE10	; CP/M-Ende
  893 D4DA  FE 20       	CP	20H
  894 D4DC  30 1C       	JR	NC,TYPE8	; ASCII-Zeichen
  895 D4DE  FE 0A       	CP	LF
  896 D4E0  28 18       	JR	Z,TYPE8
  897 D4E2  FE 0D       	CP	CR
  898 D4E4  28 14       	JR	Z,TYPE8
  899 D4E6  FE 09       	CP	9		; TAB in Space umwandeln
  900 D4E8  20 0E       	JR	NZ,TYPE7	; andere Steuerzeichen als Punkt anzeigen
  901 D4EA  3E 20       TYPE6:	LD	A,' '
  902 D4EC  CD F3BE     	CALL	OCHR
  903 D4EF  3A B7A0     	LD	A,(CURSO)
  904 D4F2  E6 07       	AND	7		; TAB-Stopp alle 8 Zeichen
  905 D4F4  20 F4       	JR	NZ,TYPE6
  906 D4F6  18 05       	JR	TYPE9
  907                   	;
  908 D4F8  3E 2E       TYPE7:	LD	A,'.'		; statt Steuerzeichen anzeigen
  909 D4FA  CD F3BE     TYPE8:	CALL	OCHR
  910 D4FD  3A B7A1     TYPE9:	LD	A,(CURSO+1)
  911 D500  3C          	INC	A
  912 D501  21 B79F     	LD	HL,WINLG+1
  913 D504  BE          	CP	(HL)		; Seite voll?
  914 D505  20 BB       	JR	NZ,TYPE2
  915 D507  CD D5CD     	CALL	TDUP2		; Eingabe abwarten
  916 D50A  20 AE       	JR	NZ,TYPE1	; auf neuer Seite weiter anzeigen
  917 D50C  CD F4C7     TYPE10:	CALL	CRLF		; noch eine neue Zeile nach dem Text
  918 D50F  18 11       	JR	FCLOSE		; Datei schliessen
  919                   ;
  920                   ; Hexadezimele Dateianzeige einer beliebigen Datei (nicht fuer TAPE-Modus)
  921                   ;
  922 D511  7F7F        DUMP7F:	DW	7F7FH
  923 D513  44 55 4D 50 	DB	'DUMP'
  924 D517  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  925 D518  CD D5B1     	CALL	TDUP1		; Dateiname in HL
  926 D51B  D8          	RET	C		; TAPE oder BRK
  927 D51C  CD E4DD     	CALL	PV7		; HL = Dateiname
  928 D51F  04          	DB	4		; ISRI (ersten Block einlesen)
  929 D520  30 23       	JR	NC,DUMP4	; kein Fehler aufgetreten
  930 D522  CD E4DD     FCLOSE:	CALL	PV7		; Datei schliessen
  931 D525  05          	DB	5		; CSRI
  932 D526  CD E4D4     	CALL	CLC		; Kassettenpuffer loeschen
  933 D529  3A B780     	LD	A,(ARGC)	; urspruenglichen ROM-C Schaltzustand 
  934 D52C  32 B805     	LD	(MODST+5),A	; wieder eintragen
  935 D52F  C3 FB8A     	JP	COFF		; und so schalten -> DUMP-Ende
  936                   	;
  937 D532              DUMP2:	;LD	A,0CH		; CLS
  938 D532  CD E0A6     	CALL	CLSX		; CLS Bildschirm, damit nicht zu Druckprotokoll!
  939 D535  3E 0A       	LD	A,LF
  940 D537  CD E0A8     	CALL	CRT		; oben eine Zeile frei lassen
  941 D53A  7B          DUMP3:	LD	A,E
  942 D53B  FE 80       	CP	80h		; Ende Kassettenpuffer erreicht?
  943 D53D  20 09       	JR	NZ,DUMP5	; nein, weiter anzeigen
  944 D53F  CD E4DD     	CALL	PV7		; naechsten Block einlesen mit
  945 D542  01          	DB	1		; MBI
  946 D543  38 DD       	JR	C,FCLOSE	; Fehler
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  75
CD48    INC

  947 D545  11 B700     DUMP4:	LD	DE,CASS		; Kassettenpuffer zur Entnahme der Daten
  948 D548  EB          DUMP5:	EX	DE,HL
  949 D549  CD F3A5     	CALL	SPACE		; Zeile mit Leerzeichen beginnen
  950 D54C  0E 08       	LD	C,8		; 8 Bytes
  951 D54E  CD D7B5     	CALL	DPME0		; Anzeigen mit der Display-Rutine
  952 D551  EB          	EX	DE,HL
  953 D552  CD F4C7     	CALL	CRLF		; neue Zeile
  954 D555  3A B7A1     	LD	A,(CURSO+1)
  955 D558  3C          	INC	A
  956 D559  21 B79F     	LD	HL,WINLG+1
  957 D55C  BE          	CP	(HL)		; Seite voll?
  958 D55D  20 DB       	JR	NZ,DUMP3	; nein, weiter anzeigen
  959 D55F  CD D5CD     	CALL	TDUP2		; Eingabe abwarten
  960 D562  28 BE       	JR	Z,FCLOSE	; BRK -> Datei schliessen und Ende
  961 D564  18 CC       	JR	DUMP2
  962                   ;
  963                   ; Abarbeitung von Kommandos aus einer Datei INITIAL.UUU wie F-Tastencode
  964                   ; Laufwerksangabe wird hier nicht mehr unterstuetzt, das macht DEP 3.x
  965                   ; Ablage und Abarbeitung auf Adresse 100h
  966                   ; Dateigroesse max. 1 Block = 128 Byte !
  967                   ;
  968 D566  7F7F        	DW	7F7FH
  969 D568  49 4E 49 54 	DB	'INIT'
  970 D56C  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
  971 D56D  1A          	LD	A,(DE)		; Parameter in Kommandozeile
  972 D56E  E6 DF       	AND	0DFH		; angegeben?
  973 D570  20 03       	JR	NZ,INIT1	; ja, diesen verwenden
  974 D572  11 EDE7     	LD	DE,UUU		; ansonsten Standard-Dateiname INITIAL.UUU
  975 D575  CD D5B1     INIT1:	CALL	TDUP1		; Dateiname in HL
  976 D578  D8          	RET	C		; TAPE oder BRK
  977 D579  CD E4DD     	CALL	PV7		; HL = Dateiname
  978 D57C  04          	DB	4		; ISRI (ersten Block einlesen)
  979 D57D  38 A3       	JR	C,FCLOSE	; Fehler aufgetreten
  980 D57F  21 B700     	LD	HL,CASS		; Daten aus Kassettenpuffer
  981 D582  11 A880     	LD	DE,INITU	; hier aufbereiten zur Abarbeitung (A880h)
  982 D585  7E          INIT2:	LD	A,(HL)		; Zeichen
  983 D586  A7          	AND	A
  984 D587  28 13       	JR	Z,INIT3		; 00 ignorieren
  985 D589  FE 03       	CP	3
  986 D58B  28 15       	JR	Z,INIT4		; CAOS-Ende
  987 D58D  FE 0A       	CP	0AH
  988 D58F  28 0B       	JR	Z,INIT3		; LF ignorieren
  989 D591  FE 1A       	CP	1AH
  990 D593  28 0D       	JR	Z,INIT4		; CP/M-Ende
  991 D595  12          	LD	(DE),A		; Zeichen ablegen
  992 D596  1C          	INC	E		; Ziel +1
  993 D597  7B          	LD	A,E
  994 D598  FE 7F       	CP	7FH
  995 D59A  28 06       	JR	Z,INIT4		; Pufferende erreicht
  996 D59C  2C          INIT3:	INC	L		; Quelle +1
  997 D59D  7D          	LD	A,L
  998 D59E  FE 80       	CP	80H		; Pufferende?
  999 D5A0  20 E3       	JR	NZ,INIT2	; weitere Zeichen bearbeiten
 1000 D5A2  AF          INIT4:	XOR	A
 1001 D5A3  12          	LD	(DE),A		; Ende-Kennung anhaengen
 1002 D5A4  21 A880     	LD	HL,INITU	; Ablage hier (bei DEP 3.2/3.3 noch ab 100h)
 1003 D5A7  22 B7D1     	LD	(FTAST),HL	; Aktivierung als ob es
 1004 D5AA  DD CB 08 F6 	SET	6,(IX+8)	; eine Funktionstaste waere
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  76
CD48    INC

 1005 D5AE  C3 D522     	JP	FCLOSE		; Datei schliessen, CAOS ROM-C wie vorher
 1006                   ;
 1007                   ; UP1 fuer TYPE, DUMP, INIT, ERA: Vorbereitung fuer Datei oeffnen
 1008                   ; PA:	CY=1	Fehler (DEVICE=0 oder BRK)
 1009                   ;
 1010 D5B1  CD ED69     TDUP1:	CALL	DEV		; DEVICE?
 1011 D5B4  37          	SCF			; Fehlerkennung
 1012 D5B5  C8          	RET	Z		; bei TAPE macht das keinen Sinn...
 1013 D5B6  EB          	EX	DE,HL
 1014 D5B7  7E          	LD	A,(HL)		; erstes Zeichen nach Menuewort holen
 1015 D5B8  E6 DF       	AND	0DFH
 1016 D5BA  CC F566     	CALL	Z,NAME		; Dateiname abfragen falls nicht angegeben
 1017 D5BD  D8          	RET	C		; mit BRK abgebrochen
 1018 D5BE  CD F545     	CALL	KPUFF		; Standardpuffer setzen
 1019 D5C1  3A B805     	LD	A,(MODST+5)	; Schaltzustand Moduladresse 5 (ROM C)
 1020 D5C4  32 B780     	LD	(ARGC),A	; hier merken (zeigt sonst USER-ROM-Zustand an)
 1021 D5C7  3E 01       	LD	A,1		; und voruebergehend fest einschalten
 1022 D5C9  32 B805     	LD	(MODST+5),A
 1023 D5CC  C9          	RET
 1024                   ;
 1025                   ; UP2 fuer TYPE+DUMP: Eingabe bei Seitenende
 1026                   ; PA:	Z=1	BRK
 1027                   ;
 1028 D5CD  CD F3D8     TDUP2:	CALL	INTB
 1029 D5D0  FE 03       	CP	3		; BRK?
 1030 D5D2  C8          	RET	Z		; ja, Datei schliessen und Ende
 1031 D5D3  FE 0F       	CP	0FH		; Hardcopy?
 1032 D5D5  C0          	RET	NZ
 1033 D5D6  CD F3BE     	CALL	OCHR		; Hardcopy zulassen
 1034 D5D9  18 F2       	JR	TDUP2
 1035                   
 1036                   ; DEVICE einstellen, abfragenn oder anzeigen
 1037                   ; PE:	A = Geraetecode 0..7
 1038                   ;		0	Kassette - Standard
 1039                   ;		1	Diskette - D004/D008
 1040                   ;		2	USB (M052)
 1041                   ;		3-7	Anwender-Treiber
 1042                   ;	A = 8-FD	aktuellen Treiber abfragen (ohne Anzeige)
 1043                   ;	A = FE		aktuellen Treiber anzeigen
 1044                   ;	A = FF		Auflisten aller Treiber
 1045                   ; PA:	CY=1	ausgewaehlter Treiber nicht aktiv
 1046                   ;   bei CY=0:	HL	Name des aktuellen Treibers
 1047                   ;		A	Nummer des aktuellen Treibers (0..7)
 1048                   ;	und	Z=1	Treiber ist Kassette
 1049                   ; VR:	AF,BC,DE,HL
 1050                   
 1051 D5DB  FE 08       SET_DD:	CP	8
 1052 D5DD  30 19       	JR	NC,SETD1
 1053                   ; bei A=0..7 neues DEVICE einstellen
 1054 D5DF  4F          	LD	C,A		; Nr. zum Vergleich merken
 1055 D5E0  87          	ADD	A,A
 1056 D5E1  87          	ADD	A,A		; nach Bits 2..4
 1057 D5E2  DD AE 08    	XOR	(IX+8)
 1058 D5E5  E6 1C       	AND	00011100b	; Bits 0..1 und 5..7 zuruecksetzen
 1059 D5E7  DD AE 08    	XOR	(IX+8)		; a = (a XOR b) XOR b fuer Bits 2..4
 1060 D5EA  47          	LD	B,A		; vorbereiteter neuer Wert fuer IX+8
 1061 D5EB  CD ED6C     	CALL	DEVROT		; die benoetigten Bits nach 5-7 rotieren
 1062 D5EE  26 A9       	LD	H,High(DEVTAB)	; = A900H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  77
CD48    INC

 1063 D5F0  6F          	LD	L,A
 1064 D5F1  7E          	LD	A,(HL)		; Aktivierungsbyte
 1065 D5F2  B9          	CP	C		; aktiver Treiber?
 1066 D5F3  37          	SCF			; Fehlerflag
 1067 D5F4  C0          	RET	NZ		; nein, dann nicht umstellen!
 1068 D5F5  DD 70 08    	LD	(IX+8),B	; neuen Treiber jetzt eintragen
 1069                   	;
 1070 D5F8  FE FF       SETD1:	CP	0FFH
 1071 D5FA  CC D61E     	CALL	Z,DLI3		; FF = alle Treiber anzeigen
 1072 D5FD  FE FE       	CP	0FEH
 1073 D5FF  CC D60F     	CALL	Z,DLIST		; FE = aktuellen Treiber anzeigen
 1074 D602  CD ED69     GETDRV:	CALL	DEV		; aktuelle DEVICE-Nr.*32 ermitteln
 1075 D605  26 A9       	LD	H,High(DEVTAB)
 1076 D607  6F          	LD	L,A
 1077 D608  CB D5       	SET	2,L		; HL zeigt jetzt auf den Namen
 1078 D60A  07          	RLCA
 1079 D60B  07          	RLCA			; Device-Nummer nach 0-7 konvertieren
 1080 D60C  07          	RLCA
 1081 D60D  B7          	OR	A		; CY=0 und Z=1 bei TAPE
 1082 D60E  C9          	RET
 1083                   
 1084                   ; aktuellen Treiber anzeigen (4 Zeichen):
 1085                   
 1086 D60F  CD D602     DLIST:	CALL	GETDRV		; DEVICE abfragen
 1087 D612  06 04       DLI1:	ld	b,4		; 4 Zeichen
 1088 D614  7E          DLI2:	ld	a,(hl)
 1089 D615  23          	inc	hl
 1090 D616  FE 20       	cp	20h		; keine Steuerzeichen!
 1091 D618  D4 F3BE     	call	nc,ochr		; Name des Treibers anzeigen
 1092 D61B  10 F7       	djnz	DLI2
 1093 D61D  C9          	ret
 1094                   
 1095                   ; alle Treiber auflisten:
 1096                   
 1097 D61E  F5          DLI3:	PUSH	AF
 1098 D61F  21 A900     	ld	hl,devtab	; Treiber-Tabelle = A900h
 1099 D622  4D          	ld	c,l		; Beginne mit Treiber Nr. 0
 1100 D623  7E          DLI4:	ld	a,(hl)		; Treibernummer
 1101 D624  B9          	cp	c		; Treiber aktiviert?
 1102 D625  20 12       	jr	nz,DLI5
 1103 D627  23          	inc	hl
 1104 D628  23          	inc	hl
 1105 D629  23          	inc	hl
 1106 D62A  23          	inc	hl		; Zeiger auf String
 1107 D62B  CD F3B6     	CALL	AHEX0		; Geraetenummer einstellig anzeigen
 1108 D62E  3E 3D       	LD	A,'='
 1109 D630  CD F3BE     	CALL	OCHR
 1110 D633  CD D612     	CALL	DLI1		; Treiber-Name anzeigen
 1111 D636  CD F4C7     	call	CRLF
 1112 D639  7D          DLI5:	ld	a,l
 1113 D63A  F6 1F       	or	31
 1114 D63C  3C          	inc	a
 1115 D63D  6F          	ld	l,a		; weiter zum naechsten Treiber
 1116 D63E  0C          	inc	c		; Nr. erhoehen
 1117 D63F  79          	ld	a,c
 1118 D640  FE 08       	cp	8
 1119 D642  20 DF       	jr	nz,DLI4		; Bis alle 8 Treiber erreicht sind
 1120 D644  F1          	POP	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  78
CD48    INC

 1121 D645  C9          	ret
 1122                   
 1123                   ; Laufwerkwechsel per ESC-D:
 1124                   
 1125 D646  CD F4C7     ESCDD:	CALL	CRLF		; neue Zeile
 1126 D649  CD D61E     	CALL	DLI3		; Treiber auflisten
 1127 D64C  CD F0B4     DLI6:	CALL	OSTR
 1128 D64F  02 3F 00    	DB	2,'?',0		; Eingabeaufforderung anzeigen
 1129 D652  CD F3DE     	CALL	KBD		; Tastatureingabe
 1130 D655  FE 30       	CP	'0'
 1131 D657  38 F3       	JR	C,DLI6		; Eingabewert zu klein!
 1132 D659  FE 38       	CP	'8'
 1133 D65B  30 EF       	JR	NC,DLI6		; zu gross
 1134 D65D  F5          	push	af
 1135 D65E  E6 0F       	AND	0FH
 1136 D660  CD D5DB     	CALL	SET_DD		; Treiber einstellen
 1137 D663  30 03       	jr	nc,DLI7		; kein Fehler
 1138 D665  F1          	pop	af
 1139 D666  18 E4       	jr	DLI6		; wiederholen
 1140                   	;
 1141 D668  F1          DLI7:	pop	af
 1142 D669  CD F3BE     	call	OCHR		; anzeigen
 1143 D66C  C3 F4C7     	jp	crlf		; neue Zeile
 1144                   ;
 1145                   ; Floppy-Treiber Funktion 1: Laufwerkwechsel (DEP 2.0)
 1146                   ; PE:	DE	Zeichenkette neues Laufwerk
 1147                   ;	(DE)=0	Anzeige aktuelles Laufwerk
 1148                   ; PA:	CY=1	Fehler
 1149                   ;
 1150 D66F  01 83F1     DRIVE:	LD	BC,DEPVER	; 083F1H
 1151 D672  ED 78       	IN	A,(C)
 1152 D674  FE 20       	CP	20H		; DEP ab 2.0?
 1153 D676  30 13       	JR	NC,DRIVE1	; OK, Laufwerkwechsel moeglich
 1154 D678  CD F0B4     	CALL	OSTR
 1155 D67B  4B 65 69 6E 	DB	'Kein DEP2!',7,CR,LF,0
 1156 D689  37          	SCF
 1157 D68A  C9          	RET
 1158                   	;
 1159 D68B  3E 01       DRIVE1:	LD	A,1		; aktuelles Laufwerk/USER lesen
 1160 D68D  CD D18B     	CALL	STEUB2
 1161 D690  1A          	LD	A,(DE)		; erstes Zeichen testen
 1162 D691  E6 DF       	AND	0DFH		; 00h oder 20h?
 1163 D693  20 29       	JR	NZ,DRIVE3	; mit Argument aufgerufen!
 1164 D695  CD F0B4     	CALL	OSTR
 1165 D698  44 72 69 76 	DB	'Drive:',0
 1166 D69F  01 81F1     	LD	BC,LWANF	; 081F1H
 1167 D6A2  ED 78       	IN	A,(C)
 1168 D6A4  CD F3BE     	CALL	OCHR		; Laufwerksbuchstabe anzeigen
 1169 D6A7  04          	INC	B		; 082F1H
 1170 D6A8  ED 68       	IN	L,(C)		; aktueller User-Bereich
 1171 D6AA  26 00       	LD	H,0
 1172 D6AC  CD EDA0     	CALL	HLDEZ		; Userbereich dezimal anzeigen
 1173 D6AF  3E 06       	LD	A,6
 1174 D6B1  32 B7A0     	LD	(CURSO),A
 1175 D6B4  CD F481     	CALL	INLIN		; Eingabe
 1176 D6B7  3F          	CCF
 1177 D6B8  D0          	RET	NC		; BRK
 1178 D6B9  21 0006     	LD	HL,6
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  79
CD48    INC

 1179 D6BC  19          	ADD	HL,DE
 1180 D6BD  EB          	EX	DE,HL		; Zeichenkette in DE
 1181 D6BE  1A          DRIVE3:	LD	A,(DE)
 1182 D6BF  A7          	AND	A		; leer?
 1183 D6C0  C8          	RET	Z		; nichts angegeben
 1184 D6C1  01 81F1     	LD	BC,LWANF	; 081F1H
 1185 D6C4  CD F53C     	CALL	UPCASE
 1186 D6C7  FE 41       	CP	'A'
 1187 D6C9  38 07       	JR	C, DRIVE4	; kleiner als "A", dann nur USER-Bereich?
 1188 D6CB  ED 79       	OUT	(C),A		; neuen LW-Code eintragen
 1189 D6CD  13          	INC	DE		; weiter zum zweiten Zeichen
 1190 D6CE  1A          	LD	A,(DE)
 1191 D6CF  A7          	AND	A		; USER mit angegeben?
 1192 D6D0  28 0E       	JR	Z,DRIVE5	; nein
 1193 D6D2  CD F4D6     DRIVE4:	CALL	RDEZ		; Dezimalzahl erfassen
 1194 D6D5  DA F4BD     	JP	C,ERRM		; Zahl fehlerhaft
 1195 D6D8  3A B797     	LD	A,(NUMVX)	; Wert der erfassten Zahl
 1196 D6DB  01 82F1     	LD	BC,UANF		; 082F1H
 1197 D6DE  ED 79       	OUT	(C),A		; neue USER-Nr. eintragen
 1198 D6E0  3E 07       DRIVE5:	LD	A,7		; LW+User anfordern
 1199 D6E2  CD D18B     	CALL	STEUB2		; Stack-Unwinding:
 1200 D6E5  C9          	RET			; nicht in JP umwandeln!
 1201                   
 1202                   ; Geraetetreiber-Funktion aufrufen
 1203                   ; PE:	A	Funktionsnummer
 1204                   ;		0 = DIR bzw. TAPELIST
 1205                   ;		1 = DRIVE oder CD
 1206                   ;		2 = ERA (Datei loeschen)
 1207                   ;		3 = REN (Datei umbenennen)
 1208                   ;		?? (SETWR, SETRO)
 1209                   ;	DE	Dateiname bzw. Maske
 1210                   ; PA:		entsprechend Treiber
 1211                   ; VR:	AF,BC,DE,HL
 1212                   
 1213 D6E6  E6 03       FKT_DD:	and	3		; nur Treiberfunktionen 0..3 definiert
 1214 D6E8  4F          	ld	c,a
 1215 D6E9  CD ED69     	CALL	DEV		; DEVICE-Nr. in Bit 2-4
 1216 D6EC  81          	add	a,c		; FKT-Nummer dazu
 1217 D6ED  81          	add	a,c
 1218 D6EE  4F          	ld	c,a
 1219 D6EF  06 00       	ld	b,0
 1220 D6F1  21 A918     	ld	HL,DEVTAB+24	; DIR-Kommando des jeweiligen Treibers
 1221 D6F4  09          	ADD	HL,BC
 1222 D6F5  7E          	LD	A,(HL)
 1223 D6F6  23          	INC	HL
 1224 D6F7  66          	LD	H,(HL)		; Aus Treibertabelle ermitteln
 1225 D6F8  6F          	LD	L,A
 1226 D6F9  E9          	JP	(HL)		; und anspringen
 1227                   ;
 1228                   ; TAPELIST = DIR-Kommando fuer Kassette
 1229                   ;
 1230 D6FA  CD F0B4     TLIST:	CALL	OSTR
 1231 D6FD  54 61 70 65 	DB	'Tape-Directory:',CR,LF,0
 1232 D70F  21 0000     	ld	hl,0
 1233 D712  22 B797     	ld	(NUMVX),hl	; Zaehler fuer angezeigte Dateien
 1234 D715  DB 88       	IN	A,(PIOAD)
 1235 D717  F6 40       	OR	01000000b	; Motor ein
 1236 D719  D3 88       	OUT	(PIOAD),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  80
CD48    INC

 1237 D71B  3E 0A       	LD	A,10
 1238 D71D  CD FC27     	CALL	WAIT		; 60ms warten (Bandanlauf)
 1239 D720  CD F545     	CALL	KPUFF		; Standard-Puffer einstellen
 1240 D723              TLW:	;LD	(IX+3),1	; Block Nr. 1 erwarten
 1241 D723  CD D07A     	CALL	TMBI		; MBI im TAPE-Modus direkt aufrufen
 1242 D726  38 4B       	JR	C,TLBRK		; Fehler aufgetreten
 1243 D728  DD 7E 02    	LD	A,(IX+2)	; gelesene Blocknummer
 1244 D72B  B7          	OR	A
 1245 D72C  28 08       	JR	Z,TL01		; Block Nr. 0 erkannt
 1246 D72E  3D          	DEC	A
 1247 D72F  28 05       	JR	Z,TL01		; Block Nr. 1 gefunden
 1248 D731  CD F63F     BL0:	CALL	BLNOT		; falsche Blocknummer mit * anzeigen
 1249 D734  18 3D       	JR	TLBRK
 1250                   	;
 1251 D736  06 0B       TL01:	LD	B,11		; maximal 11 Zeichen
 1252                   				; (da bei BASIC ab dem 12. Zeichen Daten stehen)
 1253 D738  CD F673     	CALL	TLNAME		; Name aus Vorblock anzeigen
 1254 D73B  2A B797     	ld	hl,(NUMVX)
 1255 D73E  23          	inc	hl		; angezeigte Dateien mitzaehlen
 1256 D73F  22 B797     	ld	(NUMVX),HL
 1257 D742  3A B710     	LD	A,(CASS+10H)	; Anzahl der Argumente
 1258 D745  D6 02       	SUB	2
 1259 D747  FE 08       	CP	8		; 2 bis 10 Argumente?
 1260 D749  30 1A       	JR	NC,TLNO		; keine MC-Datei!
 1261 D74B  3E 0C       	LD	A,12
 1262 D74D  32 B7A0     	LD	(CURSO),A	; Adressen immer ab Spalte 12 anzeigen
 1263 D750  2A B711     	LD	HL,(CASS+11H)	; AADR
 1264 D753  ED 5B B713  	LD	DE,(CASS+13H)	; EADR+1
 1265 D757  CD F395     	CALL	HLDE		; Anfangsadresse und Endadresse anzeigen
 1266 D75A  2A B715     	LD	HL,(CASS+15H)	; SADR
 1267 D75D  3A B710     	LD	A,(CASS+10H)
 1268 D760  FE 03       	CP	3
 1269 D762  D4 F39D     	CALL	NC,HLHX		; Startadresse anzeigen
 1270 D765  CD F4C7     TLNO:	CALL	CRLF		; Zeilenvorschub nach Dateiname + Adressen
 1271 D768  DD 7E 02    	LD	A,(IX+2)
 1272 D76B  B7          	OR	A		; wurde Name aus Block Nr. 00 angezeigt?
 1273 D76C  20 05       	JR	NZ,TLBRK	; nein
 1274 D76E  CD D07A     	CALL	TMBI		; naechsten Block 01 lesen
 1275 D771  18 BE       	JR	BL0		; mit * anzeigen
 1276                   	;
 1277 D773  CD F667     TLBRK:	CALL	BRKT
 1278 D776  30 AB       	JR	NC,TLW		; wiederholen bis BRK gedrueckt wird
 1279 D778  2A B797     TLX:	ld	hl,(NUMVX)	; Anzahl Dateien zurueck geben
 1280 D77B  E5          	PUSH	HL
 1281 D77C  CD EDA0     	CALL	HLDEZ		; dezimal anzeigen
 1282 D77F  CD F0B4     	CALL	OSTR
 1283 D782  20 44 61 74 	DB	' Dateien.',CR,LF,0
 1284 D78E  E1          	POP	HL
 1285                   ;	IN	A,(PIOAD)
 1286                   ;	AND	10011111b	; Motor+LED aus
 1287                   ;	OUT	(PIOAD),A
 1288                   ;	RET
 1289                   ;
 1290                   ; Kassette ein/aus (CD im Tape-Mode)
 1291                   ;
 1292 D78F  DB 88       MOT:	IN	A,(PIOAD)
 1293 D791  EE 40       	XOR	01000000b	; Motor ein/aus
 1294 D793  D3 88       	OUT	(PIOAD),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  81
CD48    INC

 1295 D795  C9          	RET
 1296                   ;
 1297                   ; BASIC-Dateiname ab NAME im Format 8.3 kopieren
 1298                   ;
 1299                   ; PE:	HL	Zeiger auf Dateiname im BASIC-Format = SSSName
 1300                   ;
 1301                   ; PA:	FNAME	Dateiname 8.3-Format = Name.SSS
 1302                   ;
 1303                   ; VR:	BC, AF
 1304                   ;
 1305 D796  E5          BNAME:	PUSH	HL
 1306 D797  D5          	PUSH	DE
 1307 D798  E5          	push	hl		; Beginn Dateityp merken
 1308 D799  23          	inc	hl
 1309 D79A  23          	inc	hl
 1310 D79B  23          	inc	hl		; mit Name beginnen
 1311 D79C  11 B7F5     	ld	de,FNAME	; Ablage Dateiname im IRM
 1312 D79F  01 0008     	ld	bc,8
 1313 D7A2  ED B0       	ldir			; Name direkt kopieren
 1314 D7A4  E1          	pop	hl
 1315 D7A5  06 03       	ld	b,3
 1316 D7A7  7E          bnam2:	ld	a,(hl)
 1317 D7A8  23          	inc	hl
 1318 D7A9  E6 7F       	and	7fh		; bei Dateityp Bit 7 ruecksetzen
 1319 D7AB  12          	ld	(de),a
 1320 D7AC  13          	inc	de
 1321 D7AD  10 F8       	djnz	bnam2
 1322 D7AF  D1          	POP	DE
 1323 D7B0  E1          	POP	HL
 1324 D7B1  C9          	RET
 1325                   
 1326                   ; Ausgabe einer Displayzeile
 1327                   ; HL=Adresse, C=Anzahl Bytes
 1328                   
 1329 D7B2  CD F39D     DPMEMO:	CALL	HLHX		; Adresse
 1330 D7B5  E5          DPME0:	PUSH	HL		; Hier Einsprung von DUMP-Routine
 1331 D7B6  41          	LD	B,C
 1332 D7B7  CD FB71     DPME1:	CALL	LDAME		; Byte holen
 1333 D7BA  23          	INC	HL
 1334 D7BB  CD F3A2     	CALL	AHSPC		; anzeigen
 1335 D7BE  10 F7       	DJNZ	DPME1		; C*
 1336 D7C0  E1          	POP	HL
 1337 D7C1  41          	LD	B,C
 1338 D7C2  3E 09       	LD	A,9
 1339 D7C4  CD F3BE     	CALL	OCHR		; CUR
 1340 D7C7  CD FB71     DPME2:	CALL	LDAME		; Byte holen
 1341 D7CA  23          	INC	HL
 1342 D7CB  CD E38D     	CALL	CSTBT		; als ASCII
 1343 D7CE  10 F7       	DJNZ	DPME2		; C*
 1344 D7D0  C9          	RET
 1345                   
 1346                   ; Grafiksteuersequenzen fuer die Drucker
 1347                   
 1348 D7D1  0A          C6313:	DB	10		; Laenge
 1349 D7D2  0D 09       	DB	CR,9
 1350 D7D4  1B 4A 18    	DB	ESC,'J',24
 1351 D7D7  1B 2A 05    	DB	ESC,'*',5
 1352 D7DA  0140        	DW	320
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  82
CD48    INC

 1353                   
 1354 D7DC  0A          C6314:	DB	10		; Laenge
 1355 D7DD  0D 09       	DB	CR,9
 1356 D7DF  1B 4A 18    	DB	ESC,'J',24
 1357 D7E2  1B 2A 05    	DB	ESC,'*',5
 1358 D7E5  0280        	DW	640
 1359                   
 1360 D7E7  0E          C6311:	DB	14		; Laenge
 1361 D7E8  1B 5B 30 31 	DB	ESC,'[01e'
 1362 D7ED  1B 5B 31 32 	DB	ESC,'[12`'
 1363 D7F2  1B 4B       	DB	ESC,'K'
 1364 D7F4  0140        	DW	320
 1365                   
 1366 D7F6  0E          C6312:	DB	14		; Laenge
 1367 D7F7  1B 5B 30 31 	DB	ESC,'[01e'
 1368 D7FC  1B 5B 31 32 	DB	ESC,'[12`'
 1369 D801  1B 4B       	DB	ESC,'K'
 1370 D803  0280        	DW	640
 1371                   
 1372 D805  09          C6304:	DB	9		; Laenge
 1373 D806  0D 09       	DB	CR,9
 1374 D808  1B 4A 18    	DB	ESC,'J',24
 1375 D80B  1B 4B       	DB	ESC,'K'
 1376 D80D  0140        	DW	320
 1377                   
 1378 D80F  0A          CMINI:	DB	10		; Laenge
 1379 D810  0D 09       	DB	CR,9
 1380 D812  1B 4A 18    	DB	ESC,'J',24
 1381 D815  1B 2A 27    	DB	ESC,'*',39
 1382 D818  0140        	DW	320
 1383                   
 1384 D81A  0A          C24N1:	DB	10		; Laenge
 1385 D81B  0D 09       	DB	CR,9
 1386 D81D  1B 4A 18    	DB	ESC,'J',24
 1387 D820  1B 2A 00    	DB	ESC,'*',0
 1388 D823  0140        	DW	320
 1389                   
 1390 D825  0A          C24N2:	DB	10		; Laenge
 1391 D826  0D 09       	DB	CR,9
 1392 D828  1B 4A 18    	DB	ESC,'J',24
 1393 D82B  1B 2A 27    	DB	ESC,'*',39
 1394 D82E  03C0        	DW	960
 1395                   
 1396                   ; V.24-Tabellen, zum Kopieren in den IRM ab A800H:
 1397                   
 1398 D830  00          V24TAB:	DB	0		; Steckplatz M003 (Aktualisierung durch Suche)
 1399                   
 1400                   ; Kanal 1 - Druckerausgabe (9600 Baud)
 1401 D831  47          	DB	01000111b	; CTC: DI, Zaehler, neg. Flanke, RESET
 1402 D832  5B          	DB	91		; Zeitkonstante
 1403 D833  04 04       	DB	4,00000100b	; WR4: Vorteiler=1, 1 Stop-Bit, ohne Paritaet
 1404 D835  03 20       	DB	3,00100000b	; WR3: Empfaenger aus, CTS+DCD-Steuerung
 1405 D837  05 6A       	DB	5,01101010b	; WR5: Sender ein, 8Bit, /DTR=1, RTS=1
 1406                   
 1407                   ; Kanal 2 - Duplex (1200 Baud)
 1408 D839  47          	DB	01000111b	; CTC: DI, Zaehler, neg. Flanke, RESET
 1409 D83A  2E          	DB	46		; Zeitkonstante
 1410 D83B  18          	DB	00011000b	; Port-RESET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  83
CD48    INC

 1411 D83C  04 44       	DB	4,01000100b	; WR4: Vorteiler=16, 1 Stop-Bit, ohne Paritaet
 1412 D83E  03 E1       	DB	3,11100001b	; WR3: Empfaenger ein, 8Bit, CTS+DCD-Steuerung
 1413 D840  05 6A       	DB	5,01101010b	; WR5: Sender ein, 8Bit, /DTR=1, RTS=1
 1414                   
 1415                   ; Initialisierung SIO-B fuer Empfangs-Interrupt (1200 Baud):
 1416                   
 1417 D842  02          V24UMT:	DB	2		; 2 Ports
 1418 D843  0D 02       	 DB	0Dh,2		; CTC1
 1419 D845  47          	  DB	01000111b	; DI, Zaehler, neg. Flanke, ZK folgt, RESET
 1420 D846  2E          	  DB	46		; Zeitkonstante
 1421 D847  0B 0B       V24INT:	 DB	0Bh,11		; SIO-B Steuerwort
 1422 D849  18          	  DB	00011000b	; Port-RESET
 1423 D84A  02 E2       	  DB	2,0E2h		; WR2: INT-Vektor
 1424 D84C  04 44       	  DB	4,01000100b	; WR4: Vorteiler=16, 1 Stop-Bit, ohne Paritaet
 1425 D84E  03 E1       	  DB	3,11100001b	; WR3: Empfaenger ein, 8Bit, CTS/DCD-Steuerung
 1426 D850  05 EA       	  DB	5,11101010b	; WR5: Sender ein, 8Bit, /DTR=0 (bereit), RTS=1
 1427 D852  11 18       	  DB	11h,00011000b	; WR1: Interrupt bei Zeichenempfang
 1428                   
 1429                   ; Initialisierung SIO-B fuer Polling-Betrieb:
 1430                   
 1431 D854  0B 07       V24POL:	DB	0Bh,7		; SIO-B Steuerwort, 7 Byte
 1432 D856  18          	 DB	00011000b	; Port RESET
 1433 D857  04 44       	 DB	4,01000100b	; Vorteiler 16, 1 Stop-Bit, ohne Paritaet
 1434 D859  03 E1       	 DB	3,11100001b	; Empfaenger ein, 8 Bit, CTS/DCD-Steuerung
 1435 D85B  05 6A       	 DB	5,01101010b	; Sender ein, 8 Bit, DTR aus, RTS ein
 1436                   ;
 1437                   ; Unterprogrammtabelle (wird seit CAOS 4.6 in IRM kopiert):
 1438                   ;
 1439 D85D  4D          	DB	(SUEND-SUTB)/2	; Laenge der SUTAB bzw. erste unbenutzte UP-Nr.
 1440 D85E  E0A8        SUTB:	DW	CRT	; 00
 1441 D860  FC09        	DW	MBO	; 01
 1442 D862  B7BD        	DW	UOUT1	; 02
 1443 D864  B7C3        	DW	UOUT2	; 03
 1444 D866  F3DE        	DW	KBD	; 04
 1445 D868  FC0E        	DW	MBI	; 05
 1446 D86A  B7C0        	DW	UIN1	; 06
 1447 D86C  B7C6        	DW	UIN2	; 07
 1448 D86E  FC13        	DW	ISRO	; 08
 1449 D870  FC18        	DW	CSRO	; 09
 1450 D872  FC1D        	DW	ISRI	; 0A
 1451 D874  FC22        	DW	CSRI	; 0B
 1452 D876  E379        	DW	KBDS	; 0C
 1453 D878  F15A        	DW	BYE	; 0D
 1454 D87A  E384        	DW	KBDZ	; 0E
 1455 D87C  F7BF        	DW	COLR	; 0F
 1456 D87E  F6DE        	DW	LOAD	; 10
 1457                   
 1458 D880  F6C7        	DW	VERIF	; 11
 1459 D882  F25C        	DW	LOOP	; 12
 1460 D884  F36A        	DW	NORM	; 13
 1461 D886  FC27        	DW	WAIT	; 14
 1462 D888  F5F7        	DW	LARG	; 15
 1463 D88A  F3D8        	DW	INTB	; 16
 1464 D88C  F481        	DW	INLIN	; 17
 1465 D88E  F4CE        	DW	RHEX	; 18 - Erfassung HEX-Wert aus Zeichenkette
 1466 D890  F4BD        	DW	ERRM	; 19
 1467 D892  F39D        	DW	HLHX	; 1A
 1468 D894  F395        	DW	HLDE	; 1B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  84
CD48    INC

 1469 D896  F3AD        	DW	AHEX	; 1C
 1470 D898  F33D        	DW	ZSUCH	; 1D
 1471 D89A  F370        	DW	SOUT	; 1E
 1472 D89C  F37D        	DW	SIN	; 1F
 1473                   
 1474 D89E  F36D        	DW	NOUT	; 20
 1475 D8A0  F37A        	DW	NIN	; 21
 1476 D8A2  F513        	DW	GARG	; 22
 1477 D8A4  F0B4        	DW	OSTR	; 23
 1478 D8A6  F3BE        	DW	OCHR	; 24
 1479 D8A8  F817        	DW	CUCP	; 25
 1480 D8AA  F0E8        	DW	MODU	; 26
 1481 D8AC  F10C        	DW	JUMP	; 27
 1482 D8AE  E2E5        	DW	LDMA	; 28
 1483 D8B0  E2E7        	DW	LDAM	; 29
 1484 D8B2  F667        	DW	BRKT	; 2A
 1485 D8B4  F3A5        	DW	SPACE	; 2B
 1486 D8B6  F4C7        	DW	CRLF	; 2C
 1487 D8B8  F3A9        	DW	HOME	; 2D
 1488 D8BA  F7E0        	DW	MODI	; 2E
 1489 D8BC  F84B        	DW	PUDE	; 2F
 1490                   
 1491 D8BE  F843        	DW	PUSE	; 30
 1492 D8C0  FB82        	DW	SIXD	; 31
 1493 D8C2  E083        	DW	DABR	; 32
 1494 D8C4  E073        	DW	TCIF	; 33
 1495 D8C6  E063        	DW	PADR	; 34
 1496 D8C8  F8F4        	DW	TON	; 35
 1497 D8CA  F584        	DW	SAVE	; 36
 1498                   	; bis hier in HC900-CAOS, CAOS 2.2 und 2.3 enthalten
 1499 D8CC  F85E        	DW	MBIN	; 37 - Byteweise Eingabe fuer BASIC
 1500 D8CE  F866        	DW	MBOUT	; 38 - Byteweise Ausgabe fuer BASIC
 1501 D8D0  F812        	DW	KEY	; 39
 1502 D8D2  F80C        	DW	KEYLI	; 3A
 1503 D8D4  F7CF        	DW	DISP	; 3B
 1504 D8D6  F7F7        	DW	WININ	; 3C
 1505 D8D8  F7FC        	DW	WINAK	; 3D
 1506                   	; bis hier in CAOS 2.4 und 2.5 enthalten
 1507 D8DA  F859        	DW	LINE	; 3E
 1508 D8DC  F854        	DW	CIRCL	; 3F
 1509                   
 1510 D8DE  ED61        	DW	SQR	; 40
 1511 D8E0  FBA2        	DW	MULT	; 41
 1512 D8E2  E38D        	DW	CSTBT	; 42
 1513                   	; bis hier in HC901-CAOS enthalten
 1514 D8E4  F54E        	DW	INIEA	; 43
 1515 D8E6  F560        	DW	INIME	; 44
 1516 D8E8  F8EE        	DW	ZKOUT	; 45
 1517 D8EA  F1EB        	DW	MENU	; 46
 1518                   	; bis hier in CAOS 3.1, 3.3, 3.4 und OS/PI'88/'90 enthalten
 1519 D8EC  F9CA        	DW	V24OUT	; 47 - Initialisierung Druckerausgabe
 1520 D8EE  F9D9        	DW	V24DUP	; 48 - Initialisierung V.24-Duplexbetrieb
 1521                   	; bis hier in CAOS 4.1 bis 4.5 enthalten
 1522 D8F0  FBD5        	DW	SETDEV	; 49 - Speichergeraet einstellen/anzeigen
 1523                   	; bis hier in CAOS 4.6 und 4.7 enthalten
 1524 D8F2  EDA0        	DW	HLDEZ	; 4A - HL dezimal anzeigen
 1525 D8F4  F4D6        	DW	RDEZ	; 4B - Erfassung Dezimalzahl aus Zeichenkette
 1526 D8F6  F515        	DW	GARGC	; 4C - Argumente erfassen mit beliebiger Zahlenbasis
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  85
CD48    INC

 1527 D8F8              SUEND:	; bis hier in CAOS 4.8 enthalten
 1528                   
 1529                   ; CAOS 4.6 - Sprungtabelle Treiber Nr. 0 - Kassette
 1530                   
 1531 D8F8  FF          DRV0:	DB	-1		; Kennung (Vorgabe = nicht aktiv)
 1532 D8F9  05          	DB	5		; Treiber befindet sich in CAOS ROM-C
 1533 D8FA  00 01       	DB	0,1		; SWITCH-Befehl aus/ein
 1534 D8FC  54 41 50 45 	DB	'TAPE'		; Name des Treibers
 1535 D900  D017        	DW	TMBO		; 00/01 Ausgabe Datenblock 128 Byte
 1536 D902  D07A        	DW	TMBI		; 01/05 Einlesen Datenblock 128 Byte
 1537 D904  D008        	DW	TISRO		; 02/08 Ausgabedatei oeffnen und ersten Block 01h ausgeben
 1538 D906  E48A        	DW	TCSRO		; 03/09 Ausgabedatei schliessen und Endeblock FFh ausgeben
 1539 D908  D077        	DW	TISRI		; 04/0A Eingabedatei oeffnen und Block 01 einlesen
 1540 D90A  E491        	DW	TCSRI		; 05/0B Eingabedatei schliessen
 1541 D90C  ED9E        	DW	VER0		; 06: Abfrage Treiber-Version
 1542 D90E  E071        	DW	NOK		; 07: Treiberspezifische Funktionen (nicht benutzt)
 1543 D910  D6FA        	DW	TLIST		; 08: DIR = TAPELIST
 1544 D912  D78F        	DW	MOT		; 09: CD  = Kassette ein/aus (statt Laufwerkwechsel)
 1545 D914  F2F4        	DW	ERR1		; 10: ERA - nicht vorgesehen
 1546 D916  F2F4        	DW	ERR1		; 11: REN - nicht vorgesehen
 1547                   
 1548                   ; CAOS 4.6 - Sprungtabelle Treiber Nr. 1 Diskette D004/D008
 1549                   
 1550 D918  01          DRV1:	DB	1		; Kennung (Treiber Nr. 1)
 1551 D919  05          	DB	5		; Treiber befindet sich in CAOS ROM-C
 1552 D91A  00 01       	DB	0,1		; SWITCH-Befehl aus/ein
 1553 D91C  44 49 53 4B 	DB	'DISK'		; Name des Treibers
 1554 D920  D136        	DW	FMBO		; 00/01 Ausgabe Datenblock 128 Byte
 1555 D922  D10C        	DW	FMBI		; 01/05 Einlesen Datenblock 128 Byte
 1556 D924  D12C        	DW	FISRO		; 02/08 Ausgabedatei oeffnen und ersten Block 01h ausgeben
 1557 D926  D190        	DW	FCSRO		; 03/09 Ausgabedatei schliessen und Endeblock FFh ausgeben
 1558 D928  D0FE        	DW	FISRI		; 04/0A Eingabedatei oeffnen und Block 01 einlesen
 1559 D92A  D128        	DW	FCSRI		; 05/0B Eingabedatei schliessen
 1560 D92C  ED9E        	DW	VER0		; 06: Abfrage Treiber-Version
 1561 D92E  E071        	DW	NOK		; 07: Treiberspezifische Funktionen (nicht benutzt)
 1562 D930  D352        	DW	FDIR		; 08: DIR = Verzeichnisanzeige mit Maske
 1563 D932  D66F        	DW	DRIVE		; 09: CD  = Laufwerkwechsel
 1564 D934  D40B        	DW	FERA		; 10: ERA = Datei loeschen
 1565 D936  D44E        	DW	FREN		; 11: REN = Datei umbenennen
 1566                   ;
 1567                   ; Portinitialisierungstabellen:
 1568                   ;
 1569                   ; Bei Erstinitialisierung des PIO-Port-A muss sichergestellt werden, dass der
 1570                   ; CAOS-ROM-E immer im Zugriff bleibt. Im Einschaltzustand sind die PIO-Ports
 1571                   ; hochohmig und werden ueber Pull-Up-Widerstaende auf High gezogen, deshalb:
 1572                   ; 1. PIO-Port B initialisieren, und PIO damit aus dem RESET-Zustand holen
 1573                   ;    (so wird auch das Ausgaberegister von Port A beschreibbar)
 1574                   ; 2. Port A Datenwort einschreiben
 1575                   ; 3. Betriebsart Byte-Ausgabe einstellen um das Datenwort zu uebernehmen.
 1576                   ; Der RESET-Impuls zur D005-Tastatur wirkt nur, wenn die PIO bereits vorher
 1577                   ; auf Byte-Ausgabe initialisiert ist (also nur bei RESET, nicht bei POWER-ON)
 1578                   
 1579 D938  06          IOTAB1:	DB	6		; 6 Ports fuer Erstinitialisierung
 1580                   
 1581 D939  8B 03       	 DB	PIOBS,3		; PIO-B Steuerwort
 1582 D93B  E6          	  DB	0E6h		; Interruptvektor
 1583 D93C  0F          	  DB	00001111b	; Byte-Ausgabemodus
 1584 D93D  83          	  DB	10000011b	; EI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  86
CD48    INC

 1585                   
 1586 D93E  89 01       	 DB	PIOBD,1		; PIO-B Daten
 1587 D940  FF          	  DB	0FFh		; Daten
 1588                   
 1589 D941  88 02       	 DB	PIOAD,2		; PIO-A Daten
 1590 D943  1F          	  DB	00011111b	; D005-Reset (KOUT 1-Impuls)
 1591 D944  0F          	  DB	00001111b	; IRM ein, RAM0 WR ein, CAOS-E ein, USER-ROM aus
 1592                   
 1593 D945  8A 03       	 DB	PIOAS,3		; PIO-A Steuerwort
 1594 D947  E4          	  DB	0E4h		; Interruptvektor
 1595 D948  0F          	  DB	00001111b	; Byte-Ausgabemodus
 1596 D949  03          	  DB	00000011b	; DI
 1597                   
 1598 D94A  84 01       	 DB	PORT1,1		; Ausgabeport 84h
 1599 D94C  28          	  DB	00101000b	; RAM8 0, LoRes
 1600                   
 1601 D94D  86 01       	 DB	PORT2,1		; Ausgabeport 86h
 1602 D94F  E3          	  DB	11100011b	; RAM4 ein, USER-C 3, CAOS-C ein
 1603                   
 1604 D950  04          IOTAB2:	DB	4		; 4 Ports initialisieren
 1605                   
 1606 D951  8A 01       	 DB	PIOAS,1		; PIO-A Steuerwort
 1607 D953  E4          	  DB	0E4h		; Interruptvektor
 1608                   
 1609 D954  8B 01       	 DB	PIOBS,1		; PIO-B Steuerwort
 1610 D956  E6          	  DB	0E6h		; Interruptvektor
 1611                   
 1612 D957  8C 01       	 DB	CTC0,1		; CTC Kanal 0
 1613 D959  E8          	  DB	0E8h		; Interruptvektor
 1614                   
 1615 D95A  8E 02       	 DB	CTC2,2		; CTC Kanal 2: blinken
 1616 D95C  47          	  DB	01000111b	; DI, Zaehler, RESET
 1617 D95D  0C          	  DB	12		; Zeitkonstante
 1618                   
 1619                   ; Initialisierungstabelle fuer M001 als Centronics-Druckerschnittstelle:
 1620                   ;
 1621 D95E  03          DIOINI:	DB	3
 1622 D95F  06 02       	 DB	06h,2		; PIO-A Steuerwort
 1623 D961  CF          	  DB	11001111b	; Bitbetrieb
 1624 D962  00          	  DB	00000000b	; alles Ausgaenge
 1625 D963  07 02       	 DB	07h,2		; PIO-B Steuerwort
 1626 D965  CF          	  DB	11001111b	; Bitbetrieb
 1627 D966  FE          	  DB	11111110b	; Bit 0 Ausgang
 1628 D967  05 01       	 DB	05h,1		; PIO-B Daten
 1629 D969  01          	  DB	00000001b	; Strobe passiv
 1630                   
 1631                   ; Voreingestellte Zuordnung von Joystickfunktionen zu ASCII-Tastencodes
 1632                   ; Tabelle wird bei Power-On in den IRM kopiert, Bereich A894..A89F
 1633                   ; Hinweis: Fire2 ist beim M008 die primaere oder einzige Feuertaste
 1634                   ;
 1635 D96A  02          JOYTBD:	DB	2		; Wartezyklen fuer Tastenwiederholung
 1636 D96B  0B          	DB	0Bh		; Up
 1637 D96C  0A          	DB	0Ah		; Down
 1638 D96D  0D          	DB	CR		; Fire+Fire2
 1639 D96E  08          	DB	08h		; Left
 1640 D96F  00          	DB	0		; Up+Left
 1641 D970  00          	DB	0		; Down+Left
 1642 D971  0D          	DB	CR		; Fire
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  87
CD48    INC

 1643 D972  09          	DB	09h		; Right
 1644 D973  00          	DB	0		; Up+Right
 1645 D974  00          	DB	0		; Down+Right
 1646 D975  20          	DB	' '		; Fire2
 1647                   ;
 1648                   ; Interrupttabelle (wird in den RAM kopiert):
 1649                   ;
 1650 D976  E596        ISRTAB:	DW	IRET	; 01D0	(IX-32) M052 USB-PIO
 1651 D978  E596        	DW	IRET	; 01D2	(IX-30) -
 1652 D97A  E596        	DW	IRET	; 01D4	(IX-28) Empfehlung fuer CTC Kanal 2 des 2. M003
 1653 D97C  E596        	DW	IRET	; 01D6	(IX-26) Empfehlung fuer CTC Kanal 3 des 2. M003
 1654 D97E  E596        	DW	IRET	; 01D8	(IX-24) Empfehlung fuer SIO des 2. M003 
 1655 D980  E596        	DW	IRET	; 01DA	(IX-22) Empfehlung fuer SIO des 1. M003
 1656 D982  E596        	DW	IRET	; 01DC	(IX-20) Empfehlung fuer CTC Kanal 2 des 1. M003
 1657 D984  E596        	DW	IRET	; 01DE	(IX-18) Empfehlung fr CTC Kanal 3 des 1. M003
 1658 D986  E3E9        	DW	ISRJ	; 01E0	(IX-16) M008 PIO A: Joystick
 1659 D988  FA83        	DW	ISRSB	; 01E2	(IX-14) M003 SIO B: V.24-Empfang
 1660 D98A  E587        	DW	ISRPA	; 01E4	(IX-12) PIO A: Kassette
 1661 D98C  E2FE        	DW	ISRPB	; 01E6	(IX-10) PIO B: Tastatur
 1662 D98E  E596        	DW	IRET	; 01E8	(IX-8)  CTC 0: frei (TEMO Schrittbetrieb)
 1663 D990  E577        	DW	ISRC1	; 01EA	(IX-6)  CTC 1: Kassette
 1664 D992  ED81        	DW	ISRC2	; 01EC	(IX-4)  CTC 2: Tondauer
 1665 D994  E2F2        	DW	ISRC3	; 01EE	(IX-2)  CTC 3: Tastatur
 1666 D996              ISRTX:
 1667                   ;
 1668                   ; IBM-Kodierungen fuer allgemeine Druckroutine PRINTC
 1669                   ;
 1670 D996  7B 7C 7D 7E ZIBM:	DB	7BH,7CH,7DH,7EH
 1671 D99A  5B 5C 5D    	DB	5BH,5CH,5DH
 1672 D99D  84 94 81 E1 	DB	84H,94H,81H,0E1H
 1673 D9A1  8E 99 9A    	DB	8EH,99H,9AH
 1674                   
 1675                   ; Anzeige der CAOS-Version mit Datum
 1676                   
 1677 D9A4  7F7F        	DW	7F7FH
 1678 D9A6  48 45 4C 50 	DB	'HELP'
 1679 D9AA  01          	DB	1
 1680 D9AB  3E 01       HELP:	LD	A,1
 1681 D9AD  CD DA76     	CALL	VER		; Versionsanzeige (Langform mit Datum)
 1682 D9B0  CD F0B4     	CALL	OSTR
 1683 D9B3  0D 0A 0A    	DB	CR,LF,LF
 1684 D9B6  20 20 43 6F 	DB	'  Commands (Prolog=',0
 1685 D9CA  DD 7E 09    	LD	A,(IX+9)
 1686 D9CD  CD F0B1     	CALL	AHOSTR		; Prolog und folgenden Text anzeigen
 1687                   ;	CALL	OSTR
 1688 D9D0  29 3A 0D 0A 	DB	'):'CR,LF,LF,0
 1689 D9D6  21 D9F5     	LD	HL,HELPX	; Programmteil zur Menuewortsuche und Anzeige
 1690 D9D9  11 B700     	LD	DE,CASS		; in den Kassettenpuffer kopieren
 1691 D9DC  01 0080     	LD	BC,MENEND-HELPX	; maximal 128 Byte (reicht gerade so!!!)
 1692 D9DF  ED B0       	LDIR
 1693                   ;	LD	B,0		; Suchgroesse = 64K (B=0 vom LDIR)
 1694 D9E1  3A B802     	LD	A,(MODST+2)	; Schaltzustand USER-ROM
 1695 D9E4  32 B780     	LD	(ARGC),A	; hier merken
 1696 D9E7  3A B805     	LD	A,(MODST+5)	; Schaltzustand CAOS-ROM C
 1697 D9EA  5F          	LD	E,A		; in Register E merken
 1698 D9EB  3E 02       	LD	A,2		; Start-Spalte erstes Menuewort
 1699 D9ED  08          	EX	AF,AF'		; Position in A' merken
 1700 D9EE  21 E4D4     	LD	HL,CLC		; Kassettenpuffer nach Nutzung wieder saebern
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  88
CD48    INC

 1701 D9F1  E5          	PUSH	HL		; Als-RET-Adresse auf Stack legen
 1702 D9F2  C3 B700     	JP	CASS		; weiter in Kassettenpuffer
 1703                   
 1704 D9F5  CD FB8A     HELPX:	CALL	COFF
 1705 D9F8  CD B73E     	CALL	MENUX		; Menueworte im sichtbaren Bereich anzeigen
 1706                   
 1707                   ;CAOS ROM C
 1708 D9FB  CD FB9B     	CALL	CON		; CAOS-ROM C einschalten
 1709 D9FE  CB 43       	BIT	0,E		; war CAOS-ROM C ein waehrend erster Suche?
 1710 DA00  CC B73C     	CALL	Z,MENX8K	; nein, Menueworte im CAOS-ROM C anzeigen
 1711                   
 1712                   ;USER-ROM (ausser BASIC)
 1713 DA03  16 D1       HELP1:	LD	D,0D1H		; 1. Ebene (BASIC nicht mit durchsuchen)
 1714 DA05  CD F0E4     HELP2:	CALL	MODUL2		; USER-ROM-C Ebene ein
 1715                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 DA08  DD CB 04    	 DB	0DDh,0CBh,4
    2 DA0B  BF          	 DB	7 SHL 3 OR 10000111b
 1716 DA0C  D3 86       	OUT	(PORT2),A	; CAOS-ROM C aus!
 1717 DA0E  D5          	PUSH	DE
 1718 DA0F  CB 43       	BIT	0,E		; war CAOS-ROM C ein waehrend erster Suche?
 1719 DA11  20 04       	JR	NZ,HELP3	; ja, dann USER-ROM komplett anzeigen
 1720 DA13  3A B780     	LD	A,(ARGC)	; USER-ROM
 1721 DA16  BA          	CP	D		; aktuelle Ebene ein waehrend erster Suche?
 1722 DA17  C4 B73C     HELP3:	CALL	NZ,MENX8K	; Menueworte aus USER-ROM anzeigen
 1723 DA1A  D1          	POP	DE
 1724 DA1B  3E 10       	LD	A,10H		; Offset zur naechsten Ebene: C1, D1, E1, F1
 1725 DA1D  82          	ADD	A,D		; naechste Ebene berechnen
 1726 DA1E  57          	LD	D,A
 1727 DA1F  30 E4       	JR	NC,HELP2
 1728                   
 1729                   ; Schaltzustand CAOS-C und USER-ROM regenerieren:
 1730 DA21  ED 5B B77F  	LD	DE,(ARGC-1)	; D = USER-ROM-Schaltzustand vor Suche
 1731 DA25  CD F0E4     	CALL	MODUL2		; USER-ROM C wie zuvor
 1732 DA28  3A B7A0     	LD	A,(CURSO)
 1733 DA2B  FE 02       	CP	2
 1734 DA2D  C4 F4C7     	CALL	NZ,CRLF		; Neue Zeile, falls nicht auf erster Spalte
 1735 DA30  C9          	RET
 1736                   ;-------
 1737         B73C      MENX8K	EQU	$+CASS-HELPX
 1738 DA31  06 20       	LD	B,20H		; Suchgroesse = 8K
 1739         B73E      MENUX	EQU	$+CASS-HELPX
 1740 DA33  21 C000     	LD	HL,0C000H	; Suchbeginn
 1741 DA36  4D          	LD	C,L
 1742 DA37  08          MENX0:	EX	AF,AF'
 1743 DA38  32 B7A0     MENX1:	LD	(CURSO),A	; Cursor-Spalte setzen
 1744 DA3B  08          	EX	AF,AF'
 1745 DA3C  CD F86E     	CALL	CLR12		; angefangenes Menuewort loeschen
 1746                   
 1747                   ;Menuewort suchen und anzeigen
 1748 DA3F  DD 7E 09    	LD	A,(IX+9)	; Prologbyte
 1749 DA42  ED B1       MENX3:	CPIR
 1750 DA44  E0          	RET	PO		; ausgesucht
 1751 DA45  ED A1       	CPI			; 2mal nacheinander?
 1752 DA47  E0          	RET	PO		; ausgesucht
 1753 DA48  20 F8       	JR	NZ,MENX3	; nicht 2mal
 1754 DA4A  7E          MENX4:	LD	A,(HL)
 1755 DA4B  FE 20       	CP	20h		; Epilog (0..1Fh)?
 1756 DA4D  38 0E       	JR	C,MENX5		; Epilog beendet Menuewort
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  89
CD48    INC

 1757 DA4F  FE 7B       	CP	'z'+1		; <= 'z'?
 1758 DA51  30 E4       	JR	NC,MENX0	; groesser als 'z' -> kein Menuewort
 1759 DA53  CD F3BE     	CALL	OCHR
 1760 DA56  ED A1       	CPI			; INC HL, DEC BC
 1761 DA58  E2 F86E     	JP	PO,CLR12	; BC=0, also ausgesucht
 1762 DA5B  18 ED       	JR	MENX4
 1763                   
 1764                   ;Cursor auf naechste Spalte setzen (02h, 0Eh, 1Ah)
 1765 DA5D  3A B7A0     MENX5:	LD	A,(CURSO)
 1766 DA60  FE 1A       	CP	1AH
 1767 DA62  38 07       	JR	C,MENX6
 1768 DA64  CD F4C7     	CALL	CRLF		; neue Zeile
 1769 DA67  3E 02       	LD	A,2		; linke Spalte
 1770 DA69  18 CD       	JR	MENX1
 1771                   	;
 1772 DA6B  FE 0E       MENX6:	CP	0EH
 1773 DA6D  3E 0E       	LD	A,0EH		; mittlere Spalte
 1774 DA6F  38 C7       	JR	C,MENX1
 1775 DA71  3E 1A       	LD	A,1AH		; rechte Spalte
 1776 DA73  18 C3       	JR	MENX1
 1777 DA75              MENEND:	
 1778                   ;-------------------------------------------------------------------------------
 1779                   ;
 1780                   ; Anzeige CAOS-Version (Titelzeile) in Kurz- oder Langform
 1781                   ;
 1782                   ;PE:	A=0	Kurzform ohne Datum
 1783                   ;	A<>0	Langform mit Datum
 1784 DA75  AF          SHORT:	XOR	A		; Kurzform
 1785 DA76  F5          VER:	PUSH	AF
 1786 DA77  CD F0B4     	CALL	OSTR
 1787 DA7A  0C 0A       	DB	0CH,LF
 1788 DA7C  2A 20 4B 43 	DB	'* KC-CAOS 4.8'
 1789         0000      if beta
 1791                   endif
 1792 DA89  00          	DB	0
 1793 DA8A  F1          	POP	AF
 1794 DA8B  B7          	OR	A
 1795 DA8C  28 11       	JR	Z,VER1
 1796 DA8E  CD F0B4     	CALL	OSTR
 1797 DA91  20 28       	DB	' ('
 1798                   	DATUM			; Versionsdatum
    1 DA93  32 38 2E 31 	DB	'28.10.2022'	; Versionsdatum nur hier aendern!
 1799 DA9D  29 00       	DB	')',0
 1800 DA9F  CD F3A5     VER1:	CALL	SPACE
 1801 DAA2  CD D60F     	CALL	DLIST		; aktuelles Device anzeigen
 1802 DAA5  CD F0B4     	CALL	OSTR
 1803 DAA8  20 2A 00    	DB	' *',0
 1804 DAAB  C9          	RET
 1805                   
 1806                   	ABSFILL	0DAB8h,<ROM-D-Ende>
    7 DAAC  FF FF FF FF 	  DS	0DAB8h - $,0FFh
  235         0000      if duenn
  237                   else
  238                   	INCLUDE	ZSIBM.INC	; IBM-Zeichensatz Standard
    1                   ;*****************************************
    2                   ;**	CAOS 4.7 IBM-Zeichensatz	**
    3                   ;**					**
    4                   ;**	Adresse:  DAB8h bis DFFFh	**
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  90
ZSIBM   INC

    5                   ;**					**
    6                   ;**	letzte Aenderung: 28.05.2021	**
    7                   ;*****************************************
    8                   
    9 DAB8  78 60 60 60 	DB	078H, 060H, 060H, 060H, 060H, 060H, 078H, 000H	; 5BH
   10 DAC0  C0 60 30 18 	DB	0C0H, 060H, 030H, 018H, 00CH, 006H, 002H, 000H	; 5CH
   11 DAC8  78 18 18 18 	DB	078H, 018H, 018H, 018H, 018H, 018H, 078H, 000H	; 5DH
   12 DAD0  30 30 18 00 	DB	030H, 030H, 018H, 000H, 000H, 000H, 000H, 000H	; 60H
   13 DAD8  1C 30 30 E0 	DB	01CH, 030H, 030H, 0E0H, 030H, 030H, 01CH, 000H	; 7BH
   14 DAE0  18 18 18 00 	DB	018H, 018H, 018H, 000H, 018H, 018H, 018H, 000H	; 7CH
   15 DAE8  E0 30 30 1C 	DB	0E0H, 030H, 030H, 01CH, 030H, 030H, 0E0H, 000H	; 7DH
   16 DAF0  76 DC 00 00 	DB	076H, 0DCH, 000H, 000H, 000H, 000H, 000H, 000H	; 7EH
   17 DAF8  00 10 38 6C 	DB	000H, 010H, 038H, 06CH, 0C6H, 0C6H, 0FEH, 000H	; 7FH
   18                   
   19 DB00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 082H, 0FEH	; 00H
   20 DB08  7E 81 A5 81 	DB	07EH, 081H, 0A5H, 081H, 0BDH, 099H, 081H, 07EH	; 01H
   21 DB10  7E FF DB FF 	DB	07EH, 0FFH, 0DBH, 0FFH, 0C3H, 0E7H, 0FFH, 07EH	; 02H
   22 DB18  6C FE FE FE 	DB	06CH, 0FEH, 0FEH, 0FEH, 07CH, 038H, 010H, 000H	; 03H
   23 DB20  10 38 7C FE 	DB	010H, 038H, 07CH, 0FEH, 07CH, 038H, 010H, 000H	; 04H
   24 DB28  38 7C 38 FE 	DB	038H, 07CH, 038H, 0FEH, 0FEH, 07CH, 038H, 07CH	; 05H
   25 DB30  10 10 38 7C 	DB	010H, 010H, 038H, 07CH, 0FEH, 07CH, 038H, 07CH	; 06H
   26 DB38  00 00 18 3C 	DB	000H, 000H, 018H, 03CH, 03CH, 018H, 000H, 000H	; 07H
   27 DB40  FF FF E7 C3 	DB	0FFH, 0FFH, 0E7H, 0C3H, 0C3H, 0E7H, 0FFH, 0FFH	; 08H
   28 DB48  00 3C 66 42 	DB	000H, 03CH, 066H, 042H, 042H, 066H, 03CH, 000H	; 09H
   29 DB50  FF C3 99 BD 	DB	0FFH, 0C3H, 099H, 0BDH, 0BDH, 099H, 0C3H, 0FFH	; 0AH
   30 DB58  0F 07 0F 7D 	DB	00FH, 007H, 00FH, 07DH, 0CCH, 0CCH, 0CCH, 078H	; 0BH
   31 DB60  3C 66 66 66 	DB	03CH, 066H, 066H, 066H, 03CH, 018H, 07EH, 018H	; 0CH
   32 DB68  3F 33 3F 30 	DB	03FH, 033H, 03FH, 030H, 030H, 070H, 0F0H, 0E0H	; 0DH
   33 DB70  7F 63 7F 63 	DB	07FH, 063H, 07FH, 063H, 063H, 067H, 0E6H, 0C0H	; 0EH
   34 DB78  99 5A 3C E7 	DB	099H, 05AH, 03CH, 0E7H, 0E7H, 03CH, 05AH, 099H	; 0FH
   35                   
   36 DB80  80 E0 F8 FE 	DB	080H, 0E0H, 0F8H, 0FEH, 0F8H, 0E0H, 080H, 000H	; 10H
   37 DB88  02 0E 3E FE 	DB	002H, 00EH, 03EH, 0FEH, 03EH, 00EH, 002H, 000H	; 11H
   38 DB90  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 018H, 07EH, 03CH, 018H	; 12H
   39 DB98  66 66 66 66 	DB	066H, 066H, 066H, 066H, 066H, 000H, 066H, 000H	; 13H
   40 DBA0  7B DB DB 7B 	DB	07BH, 0DBH, 0DBH, 07BH, 01BH, 01BH, 01BH, 000H	; 14H
   41 DBA8  3C 66 38 6C 	DB	03CH, 066H, 038H, 06CH, 06CH, 038H, 0CCH, 078H	; 15H
   42 DBB0  00 00 00 00 	DB	000H, 000H, 000H, 000H, 07EH, 07EH, 07EH, 000H	; 16H
   43 DBB8  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 07EH, 03CH, 018H, 0FFH	; 17H
   44 DBC0  18 3C 7E 18 	DB	018H, 03CH, 07EH, 018H, 018H, 018H, 018H, 000H	; 18H
   45 DBC8  18 18 18 18 	DB	018H, 018H, 018H, 018H, 07EH, 03CH, 018H, 000H	; 19H
   46 DBD0  00 08 0C FE 	DB	000H, 008H, 00CH, 0FEH, 0FEH, 00CH, 008H, 000H	; 1AH
   47 DBD8  00 20 60 FE 	DB	000H, 020H, 060H, 0FEH, 0FEH, 060H, 020H, 000H	; 1BH
   48 DBE0  00 00 C0 C0 	DB	000H, 000H, 0C0H, 0C0H, 0C0H, 0FEH, 000H, 000H	; 1CH
   49 DBE8  00 24 66 FF 	DB	000H, 024H, 066H, 0FFH, 0FFh, 066H, 024H, 000H	; 1DH
   50 DBF0  00 18 3C 7E 	DB	000H, 018H, 03CH, 07EH, 0FFH, 0FFH, 000H, 000H	; 1EH
   51 DBF8  00 FF FF 7E 	DB	000H, 0FFH, 0FFH, 07EH, 03CH, 018H, 000H, 000H	; 1FH
   52                   
   53 DC00  78 CC C0 C0 	DB	078H, 0CCH, 0C0H, 0C0H, 0CCH, 078H, 010H, 070H	; 80H
   54 DC08  00 CC 00 CC 	DB	000H, 0CCH, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 81H
   55 DC10  1C 00 78 CC 	DB	01CH, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 82H
   56 DC18  78 84 78 0C 	DB	078H, 084H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 83H
   57 DC20  6C 00 78 0C 	DB	06CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 84H
   58 DC28  E0 00 78 0C 	DB	0E0H, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 85H
   59 DC30  30 30 78 0C 	DB	030H, 030H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 86H
   60 DC38  00 78 CC C0 	DB	000H, 078H, 0CCH, 0C0H, 0CCH, 078H, 010H, 070H	; 87H
   61 DC40  78 84 78 CC 	DB	078H, 084H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 88H
   62 DC48  CC 00 78 CC 	DB	0CCH, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 89H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  91
ZSIBM   INC

   63 DC50  E0 00 78 CC 	DB	0E0H, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 8AH
   64 DC58  D8 00 70 30 	DB	0D8H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; 8BH
   65 DC60  70 88 70 30 	DB	070H, 088H, 070H, 030H, 030H, 030H, 078H, 000H	; 8CH
   66 DC68  E0 00 70 30 	DB	0E0H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; 8DH
   67 DC70  CC 30 78 CC 	DB	0CCH, 030H, 078H, 0CCH, 0FCH, 0CCH, 0CCH, 000H	; 8EH
   68 DC78  78 84 30 78 	DB	078H, 084H, 030H, 078H, 0CCH, 0FCH, 0CCH, 000H	; 8FH
   69                   
   70 DC80  1C 00 FC 60 	DB	01CH, 000H, 0FCH, 060H, 078H, 060H, 0FCH, 000H	; 90H
   71 DC88  00 00 6C 92 	DB	000H, 000H, 06CH, 092H, 09EH, 090H, 07EH, 000H	; 91H
   72 DC90  3E 78 D8 FE 	DB	03EH, 078H, 0D8H, 0FEH, 0D8H, 0D8H, 0DEH, 000H	; 92H
   73 DC98  78 84 00 78 	DB	078H, 084H, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 93H
   74 DCA0  00 CC 00 78 	DB	000H, 0CCH, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 94H
   75 DCA8  00 E0 00 78 	DB	000H, 0E0H, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; 95H
   76 DCB0  78 84 00 CC 	DB	078H, 084H, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 96H
   77 DCB8  00 E0 00 CC 	DB	000H, 0E0H, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; 97H
   78 DCC0  00 CC 00 CC 	DB	000H, 0CCH, 000H, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 98H
   79 DCC8  C6 38 6C C6 	DB	0C6H, 038H, 06CH, 0C6H, 0C6H, 06CH, 038H, 000H	; 99H
   80 DCD0  CC 00 CC CC 	DB	0CCH, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 078H, 000H	; 9AH
   81 DCD8  10 7C C6 C0 	DB	010H, 07CH, 0C6H, 0C0H, 0C6H, 07CH, 010H, 000H	; 9BH
   82 DCE0  38 6C 64 F0 	DB	038H, 06CH, 064H, 0F0H, 060H, 0E6H, 0FCH, 000H	; 9CH
   83 DCE8  66 66 3C 7E 	DB	066H, 066H, 03CH, 07EH, 018H, 07EH, 018H, 018H	; 9DH
   84 DCF0  F8 CC CC FA 	DB	0F8H, 0CCH, 0CCH, 0FAH, 0C6H, 0CFH, 0C6H, 0C7H	; 9EH
   85 DCF8  0E 1B 18 3C 	DB	00EH, 01BH, 018H, 03CH, 018H, 018H, 0D8H, 070H	; 9FH
   86                   
   87 DD00  1C 00 78 0C 	DB	01CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; A0H
   88 DD08  38 00 70 30 	DB	038H, 000H, 070H, 030H, 030H, 030H, 078H, 000H	; A1H
   89 DD10  00 1C 00 78 	DB	000H, 01CH, 000H, 078H, 0CCH, 0CCH, 078H, 000H	; A2H
   90 DD18  00 1C 00 CC 	DB	000H, 01CH, 000H, 0CCH, 0CCH, 0CCH, 076H, 000H	; A3H
   91 DD20  00 F8 00 F8 	DB	000H, 0F8H, 000H, 0F8H, 0CCH, 0CCH, 0CCH, 000H	; A4H
   92 DD28  FC 00 CC EC 	DB	0FCH, 000H, 0CCH, 0ECH, 0FCH, 0DCH, 0CCH, 000H	; A5H
   93 DD30  78 0C 7C CC 	DB	078H, 00CH, 07CH, 0CCH, 076H, 000H, 07CH, 000H	; A6H
   94 DD38  38 6C 6C 38 	DB	038H, 06CH, 06CH, 038H, 000H, 07CH, 000H, 000H	; A7H
   95 DD40  30 00 30 60 	DB	030H, 000H, 030H, 060H, 0C0H, 0CCH, 078H, 000H	; A8H
   96 DD48  00 00 00 7E 	DB	000H, 000H, 000H, 07EH, 060H, 060H, 000H, 000H	; A9H
   97 DD50  00 00 00 7E 	DB	000H, 000H, 000H, 07EH, 006H, 006H, 000H, 000H	; AAH
   98 DD58  C3 C6 CC DE 	DB	0C3H, 0C6H, 0CCH, 0DEH, 033H, 066H, 0CCH, 00FH	; ABH
   99 DD60  C3 C6 CC DB 	DB	0C3H, 0C6H, 0CCH, 0DBH, 037H, 06FH, 0CFH, 003H	; ACH
  100 DD68  30 00 30 30 	DB	030H, 000H, 030H, 030H, 078H, 078H, 030H, 000H	; ADH
  101 DD70  00 33 66 CC 	DB	000H, 033H, 066H, 0CCH, 066H, 033H, 000H, 000H	; AEH
  102 DD78  00 CC 66 33 	DB	000H, 0CCH, 066H, 033H, 066H, 0CCH, 000H, 000H	; AFH
  103                   
  104 DD80  22 88 22 88 	DB	022H, 088H, 022H, 088H, 022H, 088H, 022H, 088H	; B0H
  105 DD88  55 AA 55 AA 	DB	055H, 0AAH, 055H, 0AAH, 055H, 0AAH, 055H, 0AAH	; B1H
  106 DD90  77 DD 77 DD 	DB	077H, 0DDH, 077H, 0DDH, 077H, 0DDH, 077H, 0DDH	; B2H
  107                   ; ab hier Linien-Symbole
  108 DD98  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 018H, 018H, 018H	; B3H
  109 DDA0  18 18 18 F8 	DB	018H, 018H, 018H, 0F8H, 0F8H, 018H, 018H, 018H	; B4H
  110 DDA8  18 F8 F8 18 	DB	018H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 018H, 018H	; B5H
  111 DDB0  36 36 36 F6 	DB	036H, 036H, 036H, 0F6H, 0F6H, 036H, 036H, 036H	; B6H
  112 DDB8  00 00 00 FE 	DB	000H, 000H, 000H, 0FEH, 0FEH, 036H, 036H, 036H	; B7H
  113 DDC0  00 F8 F8 18 	DB	000H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 018H, 018H	; B8H
  114 DDC8  36 F6 F6 06 	DB	036H, 0F6H, 0F6H, 006H, 0F6H, 0F6H, 036H, 036H	; B9H
  115 DDD0  36 36 36 36 	DB	036H, 036H, 036H, 036H, 036H, 036H, 036H, 036H	; BAH
  116 DDD8  00 FE FE 06 	DB	000H, 0FEH, 0FEH, 006H, 0F6H, 0F6H, 036H, 036H	; BBH
  117 DDE0  36 F6 F6 06 	DB	036H, 0F6H, 0F6H, 006H, 0FEH, 0FEH, 000H, 000H	; BCH
  118 DDE8  36 36 36 FE 	DB	036H, 036H, 036H, 0FEH, 0FEH, 000H, 000H, 000H	; BDH
  119 DDF0  18 F8 F8 18 	DB	018H, 0F8H, 0F8H, 018H, 0F8H, 0F8H, 000H, 000H	; BEH
  120 DDF8  00 00 00 F8 	DB	000H, 000H, 000H, 0F8H, 0F8H, 018H, 018H, 018H	; BFH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  92
ZSIBM   INC

  121                   
  122 DE00  18 18 18 1F 	DB	018H, 018H, 018H, 01FH, 01FH, 000H, 000H, 000H	; C0H
  123 DE08  18 18 18 FF 	DB	018H, 018H, 018H, 0FFH, 0FFH, 000H, 000H, 000H	; C1H
  124 DE10  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 018H, 018H, 018H	; C2H
  125 DE18  18 18 18 1F 	DB	018H, 018H, 018H, 01FH, 01FH, 018H, 018H, 018H	; C3H
  126 DE20  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 000H, 000H, 000H	; C4H
  127 DE28  18 18 18 FF 	DB	018H, 018H, 018H, 0FFH, 0FFH, 018H, 018H, 018H	; C5H
  128 DE30  18 1F 1F 18 	DB	018H, 01FH, 01FH, 018H, 01FH, 01FH, 018H, 018H	; C6H
  129 DE38  36 36 36 37 	DB	036H, 036H, 036H, 037H, 037H, 036H, 036H, 036H	; C7H
  130 DE40  36 37 37 30 	DB	036H, 037H, 037H, 030H, 03FH, 03FH, 000H, 000H	; C8H
  131 DE48  00 3F 3F 30 	DB	000H, 03FH, 03FH, 030H, 037H, 037H, 036H, 036H	; C9H
  132 DE50  36 F7 F7 00 	DB	036H, 0F7H, 0F7H, 000H, 0FFH, 0FFH, 000H, 000H	; CAH
  133 DE58  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0F7H, 0F7H, 036H, 036H	; CBH
  134 DE60  66 37 37 30 	DB	066H, 037H, 037H, 030H, 037H, 037H, 036H, 036H	; CCH
  135 DE68  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 000H, 000H	; CDH
  136 DE70  36 F7 F7 00 	DB	036H, 0F7H, 0F7H, 000H, 0F7H, 0F7H, 036H, 036H	; CEH
  137 DE78  18 FF FF 00 	DB	018H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 000H, 000H	; CFH
  138                   
  139 DE80  36 36 36 FF 	DB	036H, 036H, 036H, 0FFH, 0FFH, 000H, 000H, 000H	; D0H
  140 DE88  00 FF FF 00 	DB	000H, 0FFH, 0FFH, 000H, 0FFH, 0FFH, 018H, 018H	; D1H
  141 DE90  00 00 00 FF 	DB	000H, 000H, 000H, 0FFH, 0FFH, 036H, 036H, 036H	; D2H
  142 DE98  36 36 36 3F 	DB	036H, 036H, 036H, 03FH, 03FH, 000H, 000H, 000H	; D3H
  143 DEA0  18 1F 1F 18 	DB	018H, 01FH, 01FH, 018H, 01FH, 01FH, 000H, 000H	; D4H
  144 DEA8  00 1F 1F 18 	DB	000H, 01FH, 01FH, 018H, 01FH, 01FH, 018H, 018H	; D5H
  145 DEB0  00 00 00 3F 	DB	000H, 000H, 000H, 03FH, 03FH, 036H, 036H, 036H	; D6H
  146 DEB8  36 36 36 FF 	DB	036H, 036H, 036H, 0FFH, 0FFH, 036H, 036H, 036H	; D7H
  147 DEC0  18 FF FF 18 	DB	018H, 0FFH, 0FFH, 018H, 0FFH, 0FFH, 018H, 018H	; D8H
  148 DEC8  18 18 18 F8 	DB	018H, 018H, 018H, 0F8H, 0F8H, 000H, 000H, 000H	; D9H
  149 DED0  00 00 00 1F 	DB	000H, 000H, 000H, 01FH, 01FH, 018H, 018H, 018H	; DAH
  150                   ; bis hier Linien-Symbole
  151 DED8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH	; DBH
  152 DEE0  00 00 00 00 	DB	000H, 000H, 000H, 000H, 0FFH, 0FFH, 0FFH, 0FFH	; DCH
  153 DEE8  F0 F0 F0 F0 	DB	0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H, 0F0H	; DDH
  154 DEF0  0F 0F 0F 0F 	DB	00FH, 00FH, 00FH, 00FH, 00FH, 00FH, 00FH, 00FH	; DEH
  155 DEF8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 000H, 000H, 000H, 000H	; DFH
  156                   
  157 DF00  00 00 76 DC 	DB	000H, 000H, 076H, 0DCH, 0CCH, 0DCH, 076H, 000H	; E0H
  158 DF08  3C 66 66 6C 	DB	03CH, 066H, 066H, 06CH, 066H, 066H, 06CH, 0F0H	; E1H
  159 DF10  FE 62 60 60 	DB	0FEH, 062H, 060H, 060H, 060H, 060H, 0F0H, 000H	; E2H
  160 DF18  00 FE 6C 6C 	DB	000H, 0FEH, 06CH, 06CH, 06CH, 06CH, 06EH, 000H	; E3H
  161 DF20  FC C4 60 30 	DB	0FCH, 0C4H, 060H, 030H, 060H, 0C4H, 0FCH, 000H	; E4H
  162 DF28  00 00 7E D8 	DB	000H, 000H, 07EH, 0D8H, 0D8H, 0D8H, 070H, 000H	; E5H
  163 DF30  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 0F6H, 0C0H, 0C0H	; E6H
  164 DF38  00 7E D8 18 	DB	000H, 07EH, 0D8H, 018H, 018H, 018H, 018H, 000H	; E7H
  165 DF40  78 30 78 CC 	DB	078H, 030H, 078H, 0CCH, 0CCH, 078H, 030H, 078H	; E8H
  166 DF48  38 6C C6 FE 	DB	038H, 06CH, 0C6H, 0FEH, 0C6H, 06CH, 038H, 000H	; E9H
  167 DF50  38 6C C6 C6 	DB	038H, 06CH, 0C6H, 0C6H, 06CH, 06CH, 0EEH, 000H	; EAH
  168 DF58  1C 30 18 7C 	DB	01CH, 030H, 018H, 07CH, 0CCH, 0CCH, 078H, 000H	; EBH
  169 DF60  00 6C FE 92 	DB	000H, 06CH, 0FEH, 092H, 0FEH, 06CH, 000H, 000H	; ECH
  170 DF68  03 7E CC DE 	DB	003H, 07EH, 0CCH, 0DEH, 0F6H, 066H, 0FCH, 080H	; EDH
  171 DF70  3C 60 C0 FC 	DB	03CH, 060H, 0C0H, 0FCH, 0C0H, 060H, 03CH, 000H	; EEH
  172 DF78  78 CC CC CC 	DB	078H, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 000H	; EFH
  173                   
  174 DF80  00 7E 00 7E 	DB	000H, 07EH, 000H, 07EH, 000H, 07EH, 000H, 000H	; F0H
  175 DF88  18 18 7E 18 	DB	018H, 018H, 07EH, 018H, 018H, 000H, 07EH, 000H	; F1H
  176 DF90  30 18 0C 18 	DB	030H, 018H, 00CH, 018H, 030H, 000H, 07EH, 000H	; F2H
  177 DF98  0C 18 30 18 	DB	00CH, 018H, 030H, 018H, 00CH, 000H, 07EH, 000H	; F3H
  178 DFA0  0E 1B 1B 18 	DB	00EH, 01BH, 01BH, 018H, 018H, 018H, 018H, 018H	; F4H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  93
ZSIBM   INC

  179 DFA8  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 0D8H, 0D8H, 070H	; F5H
  180 DFB0  18 18 00 7E 	DB	018H, 018H, 000H, 07EH, 000H, 018H, 018H, 000H	; F6H
  181 DFB8  00 76 DC 00 	DB	000H, 076H, 0DCH, 000H, 076H, 0DCH, 000H, 000H	; F7H
  182 DFC0  38 6C 6C 38 	DB	038H, 06CH, 06CH, 038H, 000H, 000H, 000H, 000H	; F8H
  183 DFC8  00 00 18 3C 	DB	000H, 000H, 018H, 03CH, 03CH, 018H, 000H, 000H	; F9h
  184 DFD0  00 00 10 38 	DB	000H, 000H, 010H, 038H, 010H, 000H, 000H, 000H	; FAh
  185 DFD8  0F 0C 0C 0C 	DB	00FH, 00CH, 00CH, 00CH, 0CCH, 06CH, 03CH, 01CH	; FBH
  186 DFE0  78 6C 6C 6C 	DB	078H, 06CH, 06CH, 06CH, 06CH, 000H, 000H, 000H	; FCH
  187 DFE8  70 18 30 60 	DB	070H, 018H, 030H, 060H, 078H, 000H, 000H, 000H	; FDH
  188 DFF0  00 00 3C 3C 	DB	000H, 000H, 03CH, 03CH, 03CH, 03CH, 000H, 000H	; FEH
  189 DFF8  FF 81 81 81 	DB	0FFH, 081H, 081H, 081H, 081H, 081H, 081H, 0FFH	; FFH
  239                   endif
  240                   
  241                   	INCLUDE	CE48.INC	; ROM-E (E000-EDFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM E		**
    3                   ;**					**
    4                   ;**	Adresse:  E000h bis EDFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 14.06.2021	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0E000H
   10                   
   11 E000  C3 F15A     	JP	BYE		; Tasten-RESET
   12 E003  C3 E599     	JP	BEXP1		; BASIC-Erweiterung 1 - Token starten
   13 E006  C3 E5B6     	JP	BEXP2		; BASIC-Erweiterung 2
   14 E009  C3 EB8C     	JP	BEXP3		; BASIC-Erweiterung 3
   15 E00C  FCEF        	DW	TOKTAB		; Token-Tabelle der Erweiterungen
   16 E00E  C3 F879     BASIO:	JP	BASPV		; BASIC Programmverteiler
   17                   
   18 E011  7F7F        	DW	7F7FH
   19 E013  42 41 53 49 	DB	'BASIC',1
   20 E019  CD E02F     	CALL	BASON		; BASIC-ROM ein, CAOS-C aus, IRM aus
   21 E01C  C3 C00D     	JP	PRIST		; BASIC-Kaltstart
   22                   
   23 E01F  7F7F        	DW	7F7FH
   24 E021  52 45 42 41 	DB	'REBASIC',1
   25 E029  CD E02F     	CALL	BASON		; BASIC-ROM ein, CAOS-C aus, IRM aus
   26 E02C  C3 C08C     	JP	SECST		; BASIC-Warmstart
   27                   
   28                   ; BASIC vorbereiten:
   29                   ;
   30                   ; Der Einsprung BASON ist bei allen CAOS-Versionen auf E02FH und kann deshalb
   31                   ; innerhalb der mit BSAVE erzeugten KCB-Dateien zum Einschalten des BASIC-ROM
   32                   ; genutzt werden.
   33                   ; Das gilt fuer alle CAOS-Versionen ab 4.1, 4.2, 4.3, 4.4, 4.5, 4.7, 4.8
   34                   
   35 E02F  16 00       BASON:	LD	D,0
   36 E031  2E 05       	LD	L,5		; SWITCH 5 0
   37 E033  CD F0E6     	CALL	MODUSW		; CAOS-C aus
   38 E036  16 C1       	LD	D,0C1H		; SWITCH 2 C1
   39 E038  CD F0E4     	CALL	MODUL2		; BASIC-Ebene einschalten
   40 E03B  18 06       	JR	SCROFF		; IRM aus
   41                   
   42 E03D  CD E04C     PV4:	CALL	SCRON
   43 E040  CD F055     	CALL	PV3
   44 E043  F5          SCROFF:	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  94
CE48    INC

   45 E044  DB 88       	IN	A,(PIOAD)
   46 E046  E6 FB       	AND	11111011b	; IRM aus
   47 E048  D3 88       	OUT	(PIOAD),A
   48 E04A  F1          	POP	AF
   49 E04B  C9          	RET
   50                   
   51 E04C  F5          SCRON:	PUSH	AF
   52 E04D  DB 88       	IN	A,(PIOAD)
   53 E04F  F6 04       	OR	00000100b	; IRM ein
   54 E051  D3 88       	OUT	(PIOAD),A
   55 E053  F1          	POP	AF
   56 E054  C9          	RET
   57                   
   58                   ; CRT-Treiber:
   59                   
   60 E055  ED 5B B7A0  PADR0:	LD	DE,(CURSO)
   61 E059  2A B79C     PADR1:	LD	HL,(WINON)
   62 E05C  19          	ADD	HL,DE
   63 E05D  CB 24       	SLA	H
   64 E05F  CB 24       	SLA	H
   65 E061  CB 24       	SLA	H
   66                   ;_____________________________________________________________
   67                   ;							**34**
   68                   ; Berechne Pixel- und Farbadresse aus Zeichenposition
   69                   ; PE:	H	Vertikalposition (0 ... FFH)
   70                   ;	L	Horizontalposition (0 ... 27H)
   71                   ; PA:	HL	Zeichen- und Farbadresse*
   72                   ;	CY=1	Position ausserhalb
   73                   ; VR:	F, HL, DE STACK: 1
   74                   
   75 E063  F5          PADR:	PUSH	AF
   76 E064  7D          	LD	A,L		; Spalte
   77 E065  6C          	LD	L,H		; Pixelzeile
   78 E066  FE 28       	CP	28H
   79 E068  30 06       	JR	NC,IAD2		; zu gross
   80 E06A  F6 80       	OR	80H
   81 E06C  67          	LD	H,A		; HL=Pixeladresse
   82 E06D  F1          IAD1:	POP	AF
   83 E06E  A7          OK:	AND	A		; CY=0
   84 E06F  C9          	RET
   85                   	;
   86 E070  F1          IAD2:	POP	AF
   87 E071  37          NOK:	SCF			; CY=1
   88 E072  C9          	RET
   89                   ;_____________________________________________________________
   90                   ;							**33**
   91                   ; Test Cursor im Fenster
   92                   ; PE:	D	Zeile der Cursorposition
   93                   ;	E	Spalte der Cursorposition
   94                   ; PA:	CY=1	Cursor ausserhalb
   95                   ; VR:	AF
   96                   
   97 E073  3A B79E     TCIF:	LD	A,(WINLG)	; Fenster-Breite
   98 E076  D6 01       	SUB	1
   99 E078  D8          	RET	C		; Breite=0
  100 E079  93          	SUB	E		; Cursor-Spalte
  101 E07A  D8          	RET	C		; ausserhalb
  102 E07B  3A B79F     	LD	A,(WINLG+1)	; Fenster-Hoehe
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  95
CE48    INC

  103 E07E  D6 01       	SUB	1
  104 E080  D8          	RET	C		; Hoehe=0
  105 E081  92          	SUB	D		; Cursor-Zeile
  106 E082  C9          	RET
  107                   ;_____________________________________________________________
  108                   ;							**32**
  109                   ; Berechnung der VRAM-Adresse der Cursorposition
  110                   ; im gerade eingestellten Fenster und Bild
  111                   ; PE:	D	Zeile auf Bildschirm
  112                   ;	E	Spalte auf Bildschirm
  113                   ; PA:	CY=1	ausserhalb (Fehler)
  114                   ;	HL	Adresse im Speicher
  115                   ; VR:	F, HL
  116                   
  117 E083  F5          DABR:	PUSH	AF
  118 E084  CD E073     	CALL	TCIF		; Cursor im Fenster?
  119 E087  38 E7       	JR	C,IAD2
  120 E089  3A B79C     	LD	A,(WINON)
  121 E08C  83          	ADD	A,E		; Cursor-Spalte
  122 E08D  D5          	PUSH	DE
  123 E08E  5F          	LD	E,A		; absolut
  124 E08F  3A B79D     	LD	A,(WINON+1)
  125 E092  82          	ADD	A,D		; Cursor-Zeile
  126 E093  87          	ADD	A,A
  127 E094  87          	ADD	A,A
  128 E095  87          	ADD	A,A		; *8
  129 E096  6F          	LD	L,A		; Pixelzeile
  130 E097  26 00       	LD	H,0
  131 E099  54          	LD	D,H		; D=0
  132 E09A  29          	ADD	HL,HL
  133 E09B  29          	ADD	HL,HL		; *4
  134 E09C  19          	ADD	HL,DE		; *5, zus. *40
  135 E09D  5F          	LD	E,A
  136 E09E  3A B7CC     	LD	A,(VRAM+1)
  137 E0A1  57          	LD	D,A
  138 E0A2  19          	ADD	HL,DE
  139 E0A3  D1          	POP	DE
  140 E0A4  18 C7       	JR	IAD1
  141                   ;	POP	AF		; CY=0
  142                   ;	AND	A
  143                   ;	RET
  144                   
  145 E0A6  3E 0C       CLSX:	LD	A,0Ch			; CLC
  146                   ;_____________________________________________________________
  147                   ;							**00**
  148                   ; Zeichenausgabe auf Bildschirm
  149                   ; PE:	A	Zeichencode (ASCII)
  150                   ; PA:	-
  151                   ; VR:	-
  152                   
  153 E0A8  E5          CRT:	PUSH	HL
  154 E0A9  D5          	PUSH	DE
  155 E0AA  C5          	PUSH	BC
  156 E0AB  F5          	PUSH	AF
  157 E0AC  CD E192     	CALL	PCHR		; Zeichen anzeigen
  158 E0AF  ED 53 B7A0  	LD	(CURSO),DE	; neue Cursorposition
  159 E0B3  F1          POP4:	POP	AF
  160 E0B4  C1          POP3:	POP	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  96
CE48    INC

  161 E0B5  D1          	POP	DE
  162 E0B6  E1          	POP	HL
  163 E0B7  C9          	RET
  164                   
  165                   ; Zeichen auf Grafikbildschirm sichtbar machen
  166                   ; PE:	DE, A, STBT
  167                   
  168 E0B8  E5          WPIX:	PUSH	HL
  169 E0B9  D5          	PUSH	DE
  170 E0BA  C5          	PUSH	BC
  171 E0BB  F5          	PUSH	AF
  172 E0BC  4F          	LD	C,A		; Zeichen
  173 E0BD  2A B79C     	LD	HL,(WINON)
  174 E0C0  19          	ADD	HL,DE
  175 E0C1  EB          	EX	DE,HL		; DE:absolute Cursorposition
  176 E0C2  7B          	LD	A,E
  177 E0C3  FE 28       	CP	28H
  178 E0C5  30 EC       	JR	NC,POP4		; ausserhalb!
  179 E0C7  21 B7A2     	LD	HL,STBT
  180 E0CA  CB 6E       	BIT	5,(HL)		; IBM?
  181 E0CC  20 61       	JR	NZ,WPX14
  182 E0CE  79          	LD	A,C
  183 E0CF  21 B7A6     	LD	HL,CCTL0
  184 E0D2  87          	ADD	A,A		; *2
  185 E0D3  30 02       	JR	NC,WPX04
  186 E0D5  2E AA       	LD	L,LOW(CCTL2)
  187 E0D7  D6 40       WPX04:	SUB	40H
  188 E0D9  F2 E0E0     	JP	P,WPX06		; CCTL0/2
  189 E0DC  2C          	INC	L
  190 E0DD  2C          	INC	L		; CCTL1/3
  191 E0DE  EE C0       	XOR	0C0H
  192 E0E0  4E          WPX06:	LD	C,(HL)
  193 E0E1  2C          	INC	L		; BC=(CCTL)
  194 E0E2  46          	LD	B,(HL)
  195 E0E3  87          	ADD	A,A		; *4
  196 E0E4  6F          	LD	L,A
  197 E0E5  26 00       	LD	H,0
  198 E0E7  29          WPX07:	ADD	HL,HL		; *8
  199 E0E8  09          	ADD	HL,BC		; HL=Pixelmuster
  200 E0E9  7A          	LD	A,D
  201 E0EA  87          	ADD	A,A
  202 E0EB  87          	ADD	A,A
  203 E0EC  87          	ADD	A,A
  204 E0ED  53          	LD	D,E
  205 E0EE  5F          	LD	E,A
  206 E0EF  CB FA       	SET	7,D		; DE=IRM-Adresse
  207 E0F1  ED 4B B7A2  	LD	BC,(STBT)
  208 E0F5  CB 49       	BIT	1,C
  209 E0F7  20 16       	JR	NZ,WPIXNC	; Farbe AUS
  210 E0F9  CD F99D     	CALL	ESC9
  211 E0FC  DD CB 01 5E 	BIT	3,(IX+1)
  212 E100  20 04       	JR	NZ,WPIXA	; LORES
  213 E102  CB 71       	BIT	6,C
  214 E104  20 36       	JR	NZ,WPIXH1	; HRG-Modus
  215 E106  78          WPIXA:	LD	A,B		; Farbe
  216 E107  43          	LD	B,E
  217 E108  CD E182     	CALL	WCOLOR		; 8 Farbbytes
  218 E10B  58          	LD	E,B
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  97
CE48    INC

  219 E10C  CD F99D     WPIXHE:	CALL	ESC9
  220 E10F  CB 41       WPIXNC:	BIT	0,C
  221 E111  20 12       	JR	NZ,WPX11	; Pixel AUS
  222 E113  DD CB 01 5E 	BIT	3,(IX+1)
  223 E117  20 04       	JR	NZ,WPIXB	; LORES
  224 E119  CB 71       	BIT	6,C
  225 E11B  20 2A       	JR	NZ,WPIXH2	; HRG-Modus
  226 E11D  CB 51       WPIXB:	BIT	2,C
  227 E11F  CC E161     	CALL	Z,WPIXEL	; normal
  228 E122  C4 E174     	CALL	NZ,WPIXI	; invers
  229 E125  CB 69       WPX11:	BIT	5,C		; IBM?
  230 E127  28 8A       	JR	Z,POP4		; nein
  231 E129  F1          	POP	AF
  232 E12A  CD E29F     	CALL	OUT86		; CAOS-C wie vorher
  233 E12D  18 84       	JR	POP4		; POP	AF,BC,DE,HL   RET
  234                   
  235 E12F  DD 7E 04    WPX14:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  236 E132  F5          	PUSH	AF		; merken
  237                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 E133  DD CB 04    	 DB	0DDh,0CBh,4
    2 E136  FF          	 DB	7 SHL 3 OR 11000111b
  238 E137  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  239 E139  C3 D1BB     	JP	WPIXD		; Springe zu CAOS-D-Block
  240                   
  241                   ; Farbebene im HRG-Modus
  242 E13C  78          WPIXH1:	LD	A,B
  243 E13D  0F          	RRCA
  244 E13E  E5          	PUSH	HL
  245 E13F  D5          	PUSH	DE
  246 E140  CD E151     	CALL	WPHRG
  247 E143  D1          	POP	DE
  248 E144  E1          	POP	HL
  249 E145  18 C5       	JR	WPIXHE
  250                   
  251                   ; Pixelebene im HRG-Modus
  252 E147  78          WPIXH2:	LD	A,B
  253 E148  E5          	PUSH	HL
  254 E149  D5          	PUSH	DE
  255 E14A  CD E151     	CALL	WPHRG
  256 E14D  D1          	POP	DE
  257 E14E  E1          	POP	HL
  258 E14F  18 D4       	JR	WPX11
  259                   
  260                   ; Reaktion im HRG-Modus
  261 E151  E6 09       WPHRG:	AND	00001001b	; Bits 0,3
  262 E153  28 2D       	JR	Z,WCOLOR	; beide 0: Ebene ruecksetzen
  263 E155  EA E180     	JP	PE,COLFF	; beide 1: Ebene setzen
  264 E158  CB 51       	BIT	2,C
  265 E15A  28 02       	JR	Z,WPHN
  266 E15C  EE 09       	XOR	00001001b	; invers
  267 E15E  3D          WPHN:	DEC	A
  268 E15F  28 13       	JR	Z,WPIXI		; Pixel invers
  269 E161  C5          WPIXEL:	PUSH	BC
  270 E162  ED A0       	LDI			; 8 Pixelbytes kopieren
  271 E164  ED A0       	LDI			; ohne Schleife - schneller!
  272 E166  ED A0       	LDI
  273 E168  ED A0       	LDI
  274 E16A  ED A0       	LDI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  98
CE48    INC

  275 E16C  ED A0       	LDI
  276 E16E  ED A0       	LDI
  277 E170  ED A0       	LDI
  278 E172  C1          	POP	BC
  279 E173  C9          	RET
  280                   
  281 E174  C5          WPIXI:	PUSH	BC
  282 E175  06 08       	LD	B,8		; 8 Pixelmuster
  283 E177  7E          WPIXI1:	LD	A,(HL)		; invers
  284 E178  2F          	CPL
  285 E179  12          	LD	(DE),A
  286 E17A  23          	INC	HL
  287 E17B  1C          	INC	E
  288 E17C  10 F9       	DJNZ	WPIXI1
  289 E17E  C1          	POP	BC
  290 E17F  C9          	RET
  291                   
  292 E180  3E FF       COLFF:	LD	A,0FFH
  293 E182  12          WCOLOR:	LD	(DE),A		; 8 Farbbytes
  294 E183  1C          	INC	E
  295 E184  12          	LD	(DE),A
  296 E185  1C          	INC	E
  297 E186  12          	LD	(DE),A
  298 E187  1C          	INC	E
  299 E188  12          	LD	(DE),A
  300 E189  1C          	INC	E
  301 E18A  12          	LD	(DE),A
  302 E18B  1C          	INC	E
  303 E18C  12          	LD	(DE),A
  304 E18D  1C          	INC	E
  305 E18E  12          	LD	(DE),A
  306 E18F  1C          	INC	E
  307 E190  12          	LD	(DE),A
  308 E191  C9          	RET
  309                   
  310                   ; CRT-Grundprogramm mit Auswertung von ESC-Sequenzen
  311                   
  312 E192  ED 5B B7A0  PCHR:	LD	DE,(CURSO)
  313 E196  21 B7A2     	LD	HL,STBT
  314 E199  CB 66       	BIT	4,(HL)		; ESC aktiv?
  315 E19B  28 21       	JR	Z,PCHR3
  316 E19D  CB A6       CRT1:	RES	4,(HL)		; ESC quittieren
  317 E19F  FE 30       	CP	'0'
  318 E1A1  D8          	RET	C		; ESC-Folgecode kleiner als '0'
  319 E1A2  FE 3A       	CP	'9'+1
  320 E1A4  30 04       	JR	NC,PCHR1	; ESC-Folgecode groesser als '9'
  321 E1A6  D6 30       	SUB	'0'
  322 E1A8  18 0A       	JR	PCHR2		; ESC-Routine aus der Tabelle ermitteln
  323                   	;
  324 E1AA  FE 41       PCHR1:	CP	'A'
  325 E1AC  D8          	RET	C		; ESC-Folgecode zwischen '9' und 'A'
  326 E1AD  CB AF       	RES	5,A		; upcase
  327 E1AF  FE 5B       	CP	'Z'+1
  328 E1B1  D0          	RET	NC		; ESC-Folgecode groesser als 'Z'
  329 E1B2  D6 37       	SUB	'A'-10
  330 E1B4  21 B7DF     PCHR2:	LD	HL,L3SIZ	; Tabelle
  331 E1B7  BE          	CP	(HL)		; lang genug?
  332 E1B8  D0          	RET	NC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page  99
CE48    INC

  333 E1B9  2A B7DD     	LD	HL,(L3TAB)	; Tabelle der ESC-Funktionen
  334 E1BC  18 0B       	JR	PCHR4		; klar zum Ansprung
  335                   	;
  336 E1BE  FE 20       PCHR3:	CP	20H		; Steuerfunktion?
  337 E1C0  30 18       	JR	NC,PCHR5	; nein, darstellbares Zeichen
  338 E1C2  CB 5E       	BIT	3,(HL)		; Steuerzeichen darstellen?
  339 E1C4  20 14       	JR	NZ,PCHR5	; ja, nicht ausfuehren
  340 E1C6  2A B7B2     	LD	HL,(CTAB)	; Tabelle der CRT-Funktionen
  341 E1C9  87          PCHR4:	ADD	A,A		; *2
  342 E1CA  4F          	LD	C,A
  343                   ; 08.03.2020:
  344                   ; Dieser Test sorgt dafuer, dass auch kein Steuerzeichen ausgefuehrt wird,
  345                   ; wenn der Cursor nicht im Fenster ist oder das Fenster 0x0 gross ist.
  346                   ; Dann wird aber auch kein HOME oder CLS ausgefuehrt, was problematisch ist.
  347                   ; 09.03.2020: wieder verworfen
  348                   ;	CALL	TCIF		; Cursor im Fenster?
  349                   ;	RET	C		; nein, Abbruch
  350 E1CB  06 00       	LD	B,0
  351 E1CD  09          	ADD	HL,BC
  352 E1CE  7E          	LD	A,(HL)
  353 E1CF  23          	INC	HL
  354 E1D0  66          	LD	H,(HL)
  355 E1D1  6F          	LD	L,A
  356 E1D2  E9          JPHL:	JP	(HL)		; anspringen
  357                   
  358                   ; Tabulatorschritt mit Code 05h bzw. ESC '0'
  359 E1D3  7B          ESC0:	LD	A,E		; Tabulator
  360 E1D4  F6 07       	OR	7		; 8er Schrittweite
  361 E1D6  3C          	INC	A
  362 E1D7  5F          	LD	E,A
  363 E1D8  18 09       	JR	CUR1
  364                   	;
  365 E1DA  CD E083     PCHR5:	CALL	DABR		; VRAM-Adresse berechnen
  366 E1DD  D8          	RET	C		; Abbruch, da ausserhalb des Fensters
  367 E1DE  77          	LD	(HL),A		; ASCII in VRAM eintragen
  368 E1DF  CD E0B8     	CALL	WPIX		; Zeichen darstellen
  369 E1E2  1C          CUR:	INC	E		; Cursor nach rechts
  370 E1E3  3A B79E     CUR1:	LD	A,(WINLG)
  371 E1E6  3D          	DEC	A
  372 E1E7  BB          	CP	E		; Zeilenende?
  373 E1E8  D0          	RET	NC
  374                   
  375                   ; Neue Zeile mit Code 1Eh
  376 E1E9  1E 00       NL:	LD	E,0		; Cursor ganz nach links
  377 E1EB  14          CUD:	INC	D		; naechste Zeile
  378 E1EC  3A B79F     	LD	A,(WINLG+1)
  379 E1EF  BA          	CP	D
  380 E1F0  C0          	RET	NZ
  381 E1F1  2A B7A4     	LD	HL,(WEND)
  382 E1F4  E9          	JP	(HL)		; PAGE oder SCROLL
  383                   
  384                   ; Aufruf der Hardcopy-Routine mit Code 0Fh
  385 E1F5  2A B799     HCOPY:	LD	HL,(HCADR)	; ShCLR
  386 E1F8  E9          	JP	(HL)
  387                   ;
  388                   ; Cursor nach links:
  389                   ;
  390 E1F9  7B          CUL:	LD	A,E		; Spalte
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 100
CE48    INC

  391 E1FA  A7          	AND	A		; ganz links?
  392 E1FB  28 02       	JR	Z,CUL1
  393 E1FD  1D          	DEC	E		; eine Position nach links gehen
  394 E1FE  C9          	RET
  395                   	;
  396 E1FF  7A          CUL1:	LD	A,D		; Zeile
  397 E200  A7          	AND	A		; ganz oben?
  398 E201  C8          	RET	Z
  399 E202  15          	DEC	D		; eine Zeile nach oben gehen
  400 E203  3A B79E     CEL:	LD	A,(WINLG)	; Spalten im aktuellen Fenster
  401 E206  3D          	DEC	A		; letzte Spalte
  402 E207  5F          	LD	E,A		; Cursor auf letzte Spalte setzen
  403 E208  C9          	RET
  404                   ;
  405                   ; Cursor nach oben:
  406                   ;
  407 E209  7A          CUU:	LD	A,D		; Zeile
  408 E20A  A7          	AND	A		; bereits ganz oben?
  409 E20B  C8          	RET	Z
  410 E20C  15          	DEC	D		; eine Zeile nach oben gehen
  411 E20D  C9          	RET
  412                   
  413 E20E  21 E27D     PAGEM:	LD	HL,HOMEPG	; ShCUU
  414 E211  22 B7A4     WADR:	LD	(WEND),HL
  415 E214  C9          	RET
  416                   
  417 E215  21 E282     SCROL:	LD	HL,SCRLPG	; ShCUD
  418 E218  18 F7       	JR	WADR
  419                   
  420                   ; Zeichen nach links loeschen mit Code 01h
  421 E21A  CD E1F9     CLR:	CALL	CUL		; Cursor nach links
  422                   
  423                   ; Zeichen unter Cursor loeschen mit Code 1Fh
  424 E21D  D5          DEL:	PUSH	DE		; Cursor retten
  425 E21E  CD E083     	CALL	DABR
  426 E221  7E          	LD	A,(HL)
  427 E222  A7          	AND	A		; Ende?
  428 E223  28 29       	JR	Z,POPDE
  429 E225  E5          	PUSH	HL		; VRAM
  430 E226  D5          DEL1:	PUSH	DE		; Cursor
  431 E227  1C          	INC	E		; naechste Spalte
  432 E228  CD E083     	CALL	DABR		; raus?
  433 E22B  30 08       	JR	NC,DEL2
  434 E22D  1E 00       	LD	E,0		; ja, wie NL
  435 E22F  14          	INC	D
  436 E230  CD E083     	CALL	DABR		; raus?
  437 E233  38 10       	JR	C,DEL3		; ja-wie Ende
  438 E235  7E          DEL2:	LD	A,(HL)
  439 E236  A7          	AND	A		; Ende?
  440 E237  28 0C       	JR	Z,DEL3
  441 E239  42          	LD	B,D
  442 E23A  4B          	LD	C,E		; BC:=DE
  443 E23B  D1          	POP	DE		; DE=links davon
  444 E23C  E3          	EX	(SP),HL		; HL=VRAM links
  445 E23D  77          	LD	(HL),A		; eintragen
  446 E23E  CD E0B8     	CALL	WPIX		; zeichnen
  447 E241  50          	LD	D,B
  448 E242  59          	LD	E,C		; DE:=BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 101
CE48    INC

  449 E243  18 E1       	JR	DEL1		; von vorn
  450                   
  451 E245  D1          DEL3:	POP	DE
  452 E246  E1          	POP	HL
  453 E247  36 00       	LD	(HL),0
  454 E249  3E 20       	LD	A,' '
  455 E24B  CD E0B8     	CALL	WPIX
  456 E24E  D1          POPDE:	POP	DE
  457 E24F  C9          	RET
  458                   
  459 E250  D5          INS:	PUSH	DE		; Cursor
  460 E251  3E 20       	LD	A,' '
  461 E253  CD E083     	CALL	DABR
  462 E256  46          INS1:	LD	B,(HL)		; VRAM
  463 E257  77          	LD	(HL),A		; neues Zeichen
  464 E258  CD E0B8     	CALL	WPIX		; zeichnen
  465 E25B  78          	LD	A,B
  466 E25C  A7          	AND	A		; Dummy?
  467 E25D  28 0E       	JR	Z,INS2
  468 E25F  1C          	INC	E		; CUR
  469 E260  CD E083     	CALL	DABR		; raus?
  470 E263  30 F1       	JR	NC,INS1
  471 E265  1E 00       	LD	E,0		; wie NL
  472 E267  14          	INC	D
  473 E268  CD E083     	CALL	DABR		; raus?
  474 E26B  30 E9       	JR	NC,INS1
  475 E26D  D1          INS2:	POP	DE		; wenn ja Schluss
  476 E26E  C9          	RET
  477                   
  478                   ; Bildschirm loeschen mit Code 0Ch (ShHOME)
  479 E26F  3A B79F     CLS:	LD	A,(WINLG+1)	; Anzahl Zeilen
  480 E272  16 00       	LD	D,0		; Zeile 0
  481 E274  F5          CLS1:	PUSH	AF
  482 E275  CD E291     	CALL	CLLN		; Zeile loeschen
  483 E278  F1          	POP	AF
  484 E279  14          	INC	D
  485 E27A  3D          	DEC	A
  486 E27B  20 F7       	JR	NZ,CLS1		; A Zeilen
  487                   
  488                   ; Cursor in Home-Position mit Code 10h
  489 E27D  16 00       HOMEPG:	LD	D,0		; Zeile 0
  490 E27F  1E 00       CBL:	LD	E,0		; Spalte 0
  491 E281  C9          	RET
  492                   
  493                   ; Scrollroutine
  494 E282  DD 7E 04    SCRLPG:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  495 E285  F5          	PUSH	AF		; merken
  496                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 E286  DD CB 04    	 DB	0DDh,0CBh,4
    2 E289  FF          	 DB	7 SHL 3 OR 11000111b
  497 E28A  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  498 E28C  CD D23B     	CALL	SCRLD		; weiter im CAOS-D-Segment
  499 E28F  18 0D       	JR	CCRES
  500                   
  501                   ; Zeile loeschen mit Code 02h (ShDEL)
  502 E291  DD 7E 04    CLLN:	LD	A,(IX+4)	; CAOS-C-Schaltzustand
  503 E294  F5          	PUSH	AF		; merken
  504                   	SETIXA	7,4		; SET 7,(IX+4),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 102
CE48    INC

    1 E295  DD CB 04    	 DB	0DDh,0CBh,4
    2 E298  FF          	 DB	7 SHL 3 OR 11000111b
  505 E299  D3 86       	OUT	(PORT2),A	; CAOS-C ein
  506 E29B  CD D282     	CALL	CLLND		; weiter im CAOS-D-Segment
  507 E29E  F1          CCRES:	POP	AF
  508 E29F  DD 77 04    OUT86:	LD	(IX+4),A	; CAOS-C
  509 E2A2  D3 86       	OUT	(PORT2),A	; wie vorher
  510 E2A4  C9          	RET
  511                   
  512 E2A5  01 0A0F     BEEP:	LD	BC,0A0FH	; B=Dauer, C=Lautstaerke
  513 E2A8  21 0030     	LD	HL,48		; HL=Tonhoehe 1
  514 E2AB  D5          	PUSH	DE
  515 E2AC  5C          	LD	E,H		; E=0 (keine Tonhoehe 2)
  516 E2AD  CD F8FD     	CALL	TON2
  517 E2B0  3E 1E       	LD	A,30
  518 E2B2  CD FC27     	CALL	WAIT		; 30*6ms=180ms
  519 E2B5  3E 03       	LD	A,3
  520 E2B7  D3 8C       	OUT	(CTC0),A
  521 E2B9  3E 10       	LD	A,16		; 16*6ms=96ms
  522 E2BB  D1          	POP	DE
  523                   ;
  524                   ; Zeitschleife 6ms fuer UP WAIT
  525                   ; PE:	A=0
  526                   ; PA:	A=0
  527                   ;
  528 E2BC  3D          WTUP:	DEC	A		; 4 Takte
  529 E2BD  C8          	RET	Z		; 5 (11) Takte
  530 E2BE  F5          	PUSH	AF		; 11 Takte
  531 E2BF  F1          	POP	AF		; 10 Takte
  532 E2C0  18 FA       	JR	WTUP		; 12 Takte
  533                   ;
  534                   ; Ton fuer Tastenclick
  535                   ;
  536 E2C2  01 0307     CLIK:	LD	BC,0307H	; B=Dauer, C=Lautstaerke
  537 E2C5  21 0024     	LD	HL,36		; HL=Tonhoehe 1
  538 E2C8  D5          	PUSH	DE
  539 E2C9  5C          	LD	E,H		; E=0 (Tonhoehe 2)
  540 E2CA  CD F8FD     	CALL	TON2		; Ton ausgeben
  541 E2CD  D1          	POP	DE
  542 E2CE  C9          	RET
  543                   
  544 E2CF  21 B7A3     ESC8:	LD	HL,COLOR	; Farbtausch
  545 E2D2  7E          	LD	A,(HL)
  546 E2D3  E6 07       	AND	00000111b	; Hintergrund
  547 E2D5  07          	RLCA
  548 E2D6  07          	RLCA
  549 E2D7  07          	RLCA
  550 E2D8  4F          	LD	C,A
  551 E2D9  7E          	LD	A,(HL)
  552 E2DA  E6 38       	AND	00111000b	; Vordergrund
  553 E2DC  0F          	RRCA
  554 E2DD  0F          	RRCA
  555 E2DE  0F          	RRCA
  556 E2DF  B1          	OR	C
  557 E2E0  4F          	LD	C,A
  558 E2E1  7E          	LD	A,(HL)
  559 E2E2  E6 C0       	AND	11000000b	; Attribute
  560 E2E4  B1          	OR	C
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 103
CE48    INC

  561                   ;_____________________________________________________________
  562                   ;							**28**
  563                   ; LD (HL),A fuer PV4-PV6
  564                   ; PE:	A	Byte
  565                   ;	HL	Adresse
  566                   ; PA:	-
  567                   ; VR:	-
  568                   
  569 E2E5  77          LDMA:	LD	(HL),A
  570 E2E6  C9          	RET
  571                   ;_____________________________________________________________
  572                   ;							**29**
  573                   ; LD A,(HL) fuer PV4-PV6
  574                   ; PE:	HL	Adresse
  575                   ; PA:	A	Byte auf Adresse (HL)
  576                   ; VR:	A
  577                   
  578 E2E7  7E          LDAM:	LD	A,(HL)
  579 E2E8  C9          	RET
  580                   
  581 E2E9  DD 7E 08    CLICK:	LD	A,(IX+8)	; ShINS
  582 E2EC  EE 20       	XOR	20H
  583 E2EE  DD 77 08    	LD	(IX+8),A
  584 E2F1  C9          	RET
  585                   ;
  586                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  587                   ;
  588                   ;	=== KBD-Treiber ===
  589                   
  590                   ; Z E I T I N T E R R U P T
  591                   ;
  592                   ; ISR CTC Kanal 3 (Tastatur)
  593                   ; Taste losgelassen
  594                   ;
  595 E2F2  FB          ISRC3:	EI
  596 E2F3  F5          	PUSH	AF
  597 E2F4  3E 23       	LD	A,23H	  	; DI, ZG256, Reset
  598 E2F6  D3 8F       	OUT	(CTC3),A
  599 E2F8  DD 36 0D 00 	LD	(IX+13),0	; Zeichen tot
  600 E2FC  18 5A       	JR	TST5		; freigeben
  601                   ;
  602                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  603                   ;
  604                   ; Keyboard-Interrupt-Routine
  605                   ; Zeitkonstanten:
  606                   ;
  607         008F      TCTZK	EQU	143	; 8FH
  608         0065      TGE0	EQU	101	; 65H
  609         0042      TGE1	EQU	66	; 42H
  610         0014      FEHL1	EQU	20
  611         0078      FEHL2	EQU	120
  612                   ;
  613                   ; T A S T A T U R I N T E R R U P T
  614                   ;
  615                   ; ISR PIO Kanal B (Tastatur)
  616                   ; Taste gedrueckt
  617                   ;
  618 E2FE  F5          ISRPB:	PUSH	AF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 104
CE48    INC

  619 E2FF  DB 8F       	IN	A,(CTC3)	; gemessene Zeit
  620 E301  F5          	PUSH	AF
  621 E302  3E A7       	LD	A,0A7H		; EI, ZG256, Reset
  622 E304  D3 8F       	OUT	(CTC3),A
  623 E306  3E 8F       	LD	A,TCTZK		; Zeitkonstante
  624 E308  D3 8F       	OUT	(CTC3),A
  625 E30A  F1          	POP	AF
  626 E30B  FB          	EI
  627 E30C  FE 14       	CP	FEHL1		; neue Betaetigung? (Zeitinterrupt ausgeloest)
  628 E30E  38 48       	JR	C,TST5		; oder zu lang
  629 E310  FE 78       	CP	FEHL2
  630 E312  30 44       	JR	NC,TST5		; zu kurz
  631 E314  FE 65       	CP	TGE0		; Diskriminator
  632 E316  30 04       	JR	NC,TST1		; 0-Bit
  633 E318  C6 BE       	ADD	A,-TGE1		; 1-Bit
  634 E31A  30 06       	JR	NC,TST2		; Stop-Bit
  635 E31C  DD CB 0C 1E TST1:	RR	(IX+12)		; Bit einschieben
  636 E320  18 36       	JR	TST5
  637                   	;
  638 E322  E5          TST2:	PUSH	HL
  639 E323  D5          	PUSH	DE
  640 E324  DD 7E 0C    	LD	A,(IX+12)	; Wortregister
  641 E327  1F          	RRA			; 7bit-Scancode
  642 E328  EE 01       	XOR	1		; Startbit invertieren
  643                   ;
  644                   ; in CAOS 5.0/6.0 wird Shift-BRK hier zu Soft-Reset abgefragt
  645                   ; das koennte hier so aussehen:
  646                   ;
  647                   ;	CP	61		; Scancode Shift-BRK
  648                   ;	JR	NZ,IBRK
  649                   ;IBRK:	CALL	IRET		; Interrupts freigeben
  650                   ;	JP	BYE		; Sprung zu RESET
  651                   ;IBRK:
  652 E32A  DD 6E 0E    	LD	L,(IX+14)
  653 E32D  DD 66 0F    	LD	H,(IX+15)	; aktuelle KTAB-Adresse
  654 E330  16 00       	LD	D,0
  655 E332  5F          	LD	E,A
  656 E333  19          	ADD	HL,DE		; Position in KTAB
  657 E334  7E          	LD	A,(HL)		; ASCII holen
  658 E335  DD CB 08 7E 	BIT	7,(IX+8)	; CAPS aktiv?
  659 E339  20 07       	JR	NZ,TST3		; 1=nein
  660 E33B  FE 40       	CP	40H
  661 E33D  FA E342     	JP	M,TST3		; Befehl aus CAOS 3.4 uebernommen
  662 E340  EE 20       	XOR	20H		; klein<=>gross
  663 E342  57          TST3:	LD	D,A		; Code merken
  664 E343  DD BE 0D    	CP	(IX+13)		; gleicher Code wie zuvor?
  665 E346  20 17       	JR	NZ,TST6		; nein
  666 E348  21 B7E0     	LD	HL,COUNT
  667 E34B  CD E39A     	CALL	IRMGET
  668 E34E  DD BE 0A    	CP	(IX+10)		; FastRepeat?
  669 E351  38 1C       	JR	C,TST7
  670 E353  DD 34 0A    	INC	(IX+10)		; Zeit abwarten
  671 E356  D1          TST4:	POP	DE
  672 E357  E1          	POP	HL
  673 E358  DB 89       TST5:	IN	A,(PIOBD)	; PIO-Logik
  674 E35A  D3 89       	OUT	(PIOBD),A	; freigeben
  675 E35C  F1          	POP	AF
  676 E35D  ED 4D       	RETI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 105
CE48    INC

  677                   
  678 E35F  DD 36 0A 00 TST6:	LD	(IX+10),0	; neuer Code
  679 E363  FE 16       	CP	16H		; CAPS?
  680 E365  20 09       	JR	NZ,TST8
  681 E367  DD 7E 08    	LD	A,(IX+8)
  682 E36A  EE 80       	XOR	80H		; CAPS on/off
  683 E36C  DD 77 08    	LD	(IX+8),A
  684 E36F  7A          TST7:	LD	A,D		; Code
  685 E370  DD 77 0D    TST8:	LD	(IX+13),A	; eintragen
  686 E373  DD CB 08 C6 	SET	0,(IX+8)	; gueltig machen
  687 E377  18 DD       	JR	TST4
  688                   ;_____________________________________________________________
  689                   ;							**0C**
  690                   ; Tastaturabfrage ohne Quittung
  691                   
  692 E379  B7          KBDS:	OR	A		; CY=0
  693 E37A  DD CB 08 46 	BIT	0,(IX+8)	; Code gueltig?
  694 E37E  C8          	RET	Z		; nein
  695 E37F  DD 7E 0D    	LD	A,(IX+13)	; Tastencode holen
  696 E382  37          	SCF			; und mit CY=1 zurueck melden
  697 E383  C9          	RET
  698                   ;_____________________________________________________________
  699                   ;							**0E**
  700                   ; Tastaturabfrage mit Quittung
  701                   
  702 E384  CD E379     KBDZ:	CALL	KBDS		; Tastaturabfrage
  703 E387  D0          	RET	NC		; keine Taste gedrueckt
  704 E388  DD CB 08 86 	RES	0,(IX+8)	; Taste quittieren
  705 E38C  C9          	RET
  706                   ;_____________________________________________________________
  707                   ;							**42**
  708 E38D  E5          CSTBT:	PUSH	HL
  709 E38E  21 B7A2     	LD	HL,STBT
  710 E391  CB DE       	SET	3,(HL)
  711 E393  CD F3BE     	CALL	OCHR		; Steuerzeichen darstellen
  712 E396  CB 9E       	RES	3,(HL)
  713 E398  E1          	POP	HL
  714 E399  C9          	RET
  715                   ;
  716                   ; Arbeitszelle aus IRM lesen (innerhalb eines Interrupt)
  717                   ; PE:	HL	Adresse
  718                   ; PA:	A	Inhalt
  719                   ; VR:	A
  720                   ;
  721 E39A  D5          IRMGET:	PUSH	DE
  722 E39B  DB 88       	IN	A,(PIOAD)
  723 E39D  5F          	LD	E,A		; IRM-Schaltzustand in Reg. E merken
  724 E39E  CB D7       	SET	2,A		; IRM on!
  725 E3A0  F3          	DI			; damit Stack nicht genutzt wird!
  726 E3A1  D3 88       	OUT	(PIOAD),A
  727 E3A3  56          	LD	D,(HL)		; Arbeitszelle lesen
  728 E3A4  7B          	LD	A,E
  729 E3A5  D3 88       	OUT	(PIOAD),A	; IRM wie zuvor
  730 E3A7  FB          	EI
  731 E3A8  7A          	LD	A,D		; Wert nach A uebergeben
  732 E3A9  D1          	POP	DE
  733 E3AA  C9          	RET
  734                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 106
CE48    INC

  735                   ; ISR fuer Fremdtastatur an SIO-B
  736                   ;
  737 E3AB  F5          ISRT:	PUSH	AF
  738 E3AC  E5          	PUSH	HL
  739 E3AD  D5          	PUSH	DE
  740 E3AE  C5          	PUSH	BC
  741 E3AF  21 A800     	LD	HL,V24PL	; Steckplatz M003
  742 E3B2  CD E39A     	CALL	IRMGET		; aus IRM lesen, Rueckkehr mit EI
  743 E3B5  47          	LD	B,A		; Steckplatz M003 holen
  744 E3B6  0E 80       	LD	C,80H
  745 E3B8  3E 01       	LD	A,1
  746 E3BA  ED 79       	OUT	(C),A		; Modul einschalten
  747 E3BC  DB 09       	IN	A,(9)		; empfangenen Code abholen
  748 E3BE  5F          	LD	E,A		; Code in Reg. E merken
  749 E3BF  A7          	AND	A
  750 E3C0  28 0E       	JR	Z,IST2		; Code 0 (Taste losgelassen)
  751 E3C2  DD BE 0D    	CP	(IX+13)		; 2x gleicher Tastencode?
  752 E3C5  3E 00       	LD	A,0		; kein Repeat
  753 E3C7  20 07       	JR	NZ,IST2
  754 E3C9  21 B7E0     	LD	HL,COUNT	; Repeat-Counter
  755 E3CC  CD E39A     	CALL	IRMGET		; aus IRM lesen
  756 E3CF  3C          	INC	A		; sofort aktivieren
  757 E3D0  DD 77 0A    IST2:	LD	(IX+10),A	; repeat setzen
  758 E3D3  7B          	LD	A,E		; gemerkten
  759 E3D4  DD 77 0D    	LD	(IX+13),A	; Code eintragen
  760 E3D7  A7          	AND	A		; Code=0 ?
  761 E3D8  28 04       	JR	Z,IST3		; ja
  762 E3DA  DD CB 08 C6 	SET	0,(IX+8)	; sonst aktivieren
  763 E3DE  26 B8       IST3:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  764 E3E0  68          	LD	L,B		; Steckplatz
  765 E3E1  CD E39A     	CALL	IRMGET		; Schaltzustand vor ISR ermitteln
  766 E3E4  ED 79       	OUT	(C),A		; und wiederherstellen
  767 E3E6  C1          	POP	BC
  768 E3E7  18 48       	JR	IPOP3		; POP DE,HL,AF; RETI
  769                   
  770                   ;	=== Joystick-Treiber fuer M008/M021 ===
  771                   
  772 E3E9  F5          ISRJ:	PUSH	AF
  773 E3EA  DB 90       	IN	A,(90h)		; M008 PIO A Daten
  774 E3EC  FB          	EI
  775 E3ED  2F          	CPL
  776 E3EE  E5          	PUSH	HL
  777 E3EF  D5          	PUSH	DE
  778 E3F0  E6 3F       	AND	00111111b	; Achsbewegung und/oder Feuertaste?
  779 E3F2  28 42       	JR	Z,ISRJ4
  780 E3F4  FE 10       	CP	00010000b	; Feuertaste?
  781 E3F6  38 06       	JR	C,ISRJ1
  782 E3F8  E6 30       	AND	00110000b	; Ignoriere Achse: Feuertasten haben Vorrang
  783 E3FA  0F          	RRCA			; Nutze Luecken zwischen den Achsrichtungen in
  784 E3FB  0F          	RRCA			; der Tastaturcode-Tabelle fuer Feuertasten
  785 E3FC  EE 0F       	XOR	00001111b	; A=0000xx11
  786 E3FE  C5          ISRJ1:	PUSH	BC
  787 E3FF  4F          	LD	C,A		; Tabellenindex
  788 E400  06 00       	LD	B,0
  789 E402  DB 88       	IN	A,(PIOAD)
  790 E404  57          	LD	D,A
  791 E405  F6 04       	OR	00000100b	; IRM ein
  792 E407  F3          	DI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 107
CE48    INC

  793 E408  D3 88       	OUT	(PIOAD),A
  794 E40A  2A B7F0     	LD	HL,(JOYTAB)	; Adresse der Codetabelle fuer Joystick
  795 E40D  5E          	LD	E,(HL)		; Wartezyklen waehrend Tastenwiederholung
  796 E40E  09          	ADD	HL,BC		; Tastaturcode nachschlagen
  797 E40F  6E          	LD	L,(HL)
  798 E410  3A B7E0     	LD	A,(COUNT)	; Wartezyklen vor erster Wiederholung
  799 E413  67          	LD	H,A		; (entsprechend Abfragerate der Tastatur)
  800 E414  7A          	LD	A,D
  801 E415  D3 88       	OUT	(PIOAD),A	; IRM-Zustand wiederherstellen
  802 E417  FB          	EI
  803 E418  C1          	POP	BC
  804 E419  3E 4F       	LD	A,01001111b	; Byte-Eingabemodus (mit Strobe-Interrupt)
  805 E41B  D3 92       	OUT	(92h),A		; M008 PIO A Steuerwort
  806 E41D  7D          	LD	A,L
  807 E41E  A7          	AND	A		; Tastencode zugewiesen?
  808 E41F  28 10       	JR	Z,IPOP3
  809 E421  DD BE 0D    	CP	(IX+13)		; neuer Tastencode?
  810 E424  28 28       	JR	Z,ISRJ5
  811 E426  DD 77 0D    	LD	(IX+13),A	; Tastencode eintragen
  812 E429  AF          	XOR	A
  813 E42A  DD CB 08 C6 ISRJ2:	SET	0,(IX+8)	; gueltig markieren
  814 E42E  DD 77 0A    ISRJ3:	LD	(IX+10),A	; Zaehler zuruecksetzen
  815 E431  D1          IPOP3:	POP	DE
  816 E432  E1          	POP	HL
  817 E433  F1          	POP	AF
  818 E434  ED 4D       	RETI
  819                   
  820 E436  DD BE 0A    ISRJ4:	CP	(IX+10)		; vorheriger Code war neu? (A war 0)
  821 E439  3C          	INC	A
  822 E43A  30 F2       	JR	NC,ISRJ3	; dann zum Entprellen einen Zyklus warten
  823 E43C  21 ED73     	LD	HL,JOYINI
  824 E43F  F3          	DI
  825 E440  CD F54E     	CALL	INIEA		; Ruhestellung: Strobe-Interrupt wieder aus
  826 E443  FB          	EI
  827 E444  AF          	XOR	A
  828 E445  DD 77 0D    	LD	(IX+13),A	; Tastencode loeschen
  829 E448  DD CB 08 86 	RES	0,(IX+8)	; ungueltig markieren
  830 E44C  18 E0       	JR	ISRJ3
  831                   
  832 E44E  7C          ISRJ5:	LD	A,H		; Wartezyklen vor erster Wiederholung
  833 E44F  87          	ADD	A,A		; an Abfragerate des Joysticks anpassen
  834 E450  87          	ADD	A,A		; (COUNT sollte kleiner als 64 sein)
  835 E451  BB          	CP	E		; weniger als waehrend Wiederholung?
  836 E452  30 01       	JR	NC,ISRJ6
  837 E454  7B          	LD	A,E		; Zaehlerende = max(A,E)
  838 E455  67          ISRJ6:	LD	H,A
  839 E456  DD 7E 0A    	LD	A,(IX+10)
  840 E459  BC          	CP	H		; Zaehlerende erreicht?
  841 E45A  3C          	INC	A
  842 E45B  38 D1       	JR	C,ISRJ3
  843 E45D  7C          	LD	A,H		; Zaehler = Endwert - Wartezyklen
  844 E45E  93          	SUB	E
  845 E45F  18 C9       	JR	ISRJ2		; erneut gueltig markieren
  846                   ;
  847                   ; Initialisierung vor Kassetten-I/O
  848                   ;
  849 E461  DD 36 03 01 ISRI1:	LD	(IX+3),1	; 1. Block lesen
  850 E465  F3          	DI
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 108
CE48    INC

  851 E466  DB 88       	IN	A,(PIOAD)
  852 E468  F6 40       	OR	01000000b	; Motor ein
  853 E46A  E6 DF       	AND	11011111b	; LED aus
  854 E46C  D3 88       ISRO1:	OUT	(PIOAD),A
  855 E46E  FB          	EI
  856 E46F  2A B7A4     	LD	HL,(WEND)	; Page/Scroll-Modus
  857 E472  22 B7CF     	LD	(ZWEND),HL	; hier merken
  858 E475  CD F36D     	CALL	NOUT		; CRT-Ausgabe (kein Drucker!)
  859 E478  22 B7CD     	LD	(ZOTAB),HL	; alten Zeiger hier merken
  860 E47B  CD E20E     	CALL	PAGEM		; Page Mode
  861 E47E  3E 03       TOFF:	LD	A,3		; CTC Stop
  862 E480  D3 8C       	OUT	(CTC0),A	; Tonhoehe Kanal 1
  863 E482  D3 8D       	OUT	(CTC1),A	; Tonhoehe Kanal 2
  864 E484  DD CB 08 8E 	RES	1,(IX+8)	; Ton ist jetzt aus
  865 E488  18 1D       	JR	CSRO2
  866                   ;_____________________________________________________________
  867                   ;							**09**
  868                   ; Abschluss Bandausgabe
  869                   ; PA:	CY=0
  870                   
  871 E48A  DD 36 02 FE TCSRO:	LD	(IX+2),0FEH	; FFH = Kennung Ende-Block
  872 E48E  CD D017     	CALL	TMBO		; Block auf Kassette ausgeben
  873                   ;_____________________________________________________________
  874                   ;							**0B**
  875                   ; Abschluss Bandeingabe
  876                   ; PA:	CY=0
  877                   
  878 E491  2A B7CD     TCSRI:	LD	HL,(ZOTAB) 	; intern
  879 E494  22 B7B9     	LD	(OUTAB),HL
  880 E497  2A B7CF     	LD	HL,(ZWEND)	; grosses
  881 E49A  22 B7A4     	LD	(WEND),HL	; Ruecksetzen
  882                   ;	CALL	CLC		; Puffer loeschen (VR: HL)
  883 E49D  DB 88       	IN	A,(PIOAD)
  884 E49F  E6 9F       	AND	10011111b	; Motor, LED aus
  885 E4A1  D3 88       	OUT	(PIOAD),A
  886                   ;	CALL	CRLF		; VR: AF
  887 E4A3  DD CB 08 86 	RES	0,(IX+8)	; kein Tastencode im Puffer
  888 E4A7  DD CB 01 5E CSRO2:	BIT	3,(IX+1)	; HiRes?
  889 E4AB  28 06       	JR	Z,CSRO3
  890 E4AD  DB 89       	IN	A,(PIOBD)	; nein
  891 E4AF  CB FF       	SET	7,A		; Blinken ein
  892 E4B1  D3 89       	OUT	(PIOBD),A
  893 E4B3  DD CB 08 4E CSRO3:	BIT	1,(IX+8)	; neuer Ton?
  894 E4B7  20 FA       	JR	NZ,CSRO3	; Ende abwarten
  895 E4B9  DB 88       	IN	A,(PIOAD)
  896 E4BB  6F          	LD	L,A		; Schaltzustand IRM merken
  897 E4BC  CB D7       	SET	2,A		; IRM on
  898 E4BE  F3          	DI			; Interrupt verbieten wegen Stacknutzung
  899 E4BF  D3 88       	OUT	(PIOAD),A
  900 E4C1  3A B7DB     	LD	A,(CTCMD)	; CTC2-Modus
  901 E4C4  E6 60       	AND	01100000b	; nur Zaehler/Zeitgeber und Vorteiler verwenden
  902 E4C6  F6 07       	OR	00000111b	; immer RESET, Zeitkonstante laden
  903 E4C8  D3 8E       	OUT	(CTC2),A	; Blinken
  904 E4CA  3A B7DC     	LD	A,(BLINK)	; ZK laden
  905 E4CD  D3 8E       	OUT	(CTC2),A
  906 E4CF  7D          	LD	A,L
  907 E4D0  D3 88       	OUT	(PIOAD),A	; IRM wie zuvor einstellen
  908 E4D2  FB          EIRET:	EI			; Interrupt wieder ein
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 109
CE48    INC

  909 E4D3  C9          	RET
  910                   ;
  911                   ; Kassettenpuffer loeschen:
  912                   ; PA:	DE = CASS
  913                   ;	A = 0
  914                   ; VR:	DE,A
  915                   ;
  916 E4D4  11 B780     CLC:	LD	DE,CASS+80H
  917 E4D7  AF          	XOR	A
  918 E4D8  1D          CLC1:	DEC	E
  919 E4D9  12          	LD	(DE),A
  920 E4DA  20 FC       	JR	NZ,CLC1
  921 E4DC  C9          	RET
  922                   
  923                   ; Aufruf Treiberroutinen aehnlich PV1 mit CALL PV7, DB nr.
  924                   ; Nr.	 0 = MBO
  925                   ;	 1 = MBI
  926                   ;	 2 = ISRO
  927                   ;	 3 = CSRO
  928                   ;	 4 = ISRI
  929                   ;	 5 = CSRI
  930                   ;	 6 = MBIN - nicht mehr erforderlich
  931                   ;	 7 = MBOUT - nicht mehr erforderlich
  932                   ;	 8 = DIR
  933                   ;	 9 = CD
  934                   ;	10 = ERA
  935                   ;	11 = REN
  936                   ; PE:	entsprechend der aufgerufenen Routine
  937                   ; PA:	entsprechend der aufgerufenen Routine
  938                   ;	CY=1	Fehler (Nr. groesser 11)
  939                   ; VR:	-
  940                   ;										auf Stack liegt:
  941 E4DD  F5          PV7:	PUSH	AF		;						 RET >AF<
  942 E4DE  F5          	PUSH	AF		;						 RET  AF   >AF<
  943 E4DF  F3          	DI			; wegen Stack-Operation sperren
  944 E4E0  F1          	POP	AF		; und wieder bereinigen				 RET >AF<   AF
  945 E4E1  F1          	POP	AF		;						>RET< AF    AF
  946 E4E2  E3          	EX	(SP),HL		; HL = RET-Adresse wo CALL herkommt		>HL<  AF    AF
  947 E4E3  7E          	LD	A,(HL)		; nr. lesen
  948 E4E4  23          	INC	HL		; nr uebergehen
  949 E4E5  E3          	EX	(SP),HL		; neue RET-Adresse nach Datenbyte		>RET< AF    AF
  950                   
  951 E4E6  C6 F4       	ADD	-12		; Treiberfunktion > 11?
  952 E4E8  38 E8       	JR	C,EIRET		; Abbruch bei Fehler => EI, RET von CRSO3, PA:CY=1
  953 E4EA  CD E525     	CALL	PV70		; Modul ein und Funktion ausfuehren		 RET >MOFF< AF
  954                   
  955                   ; 3. Module nach Treiberaufruf wieder schalten wie zuvor
  956                   
  957 E4ED  E5          MOFF:	PUSH	HL
  958 E4EE  D5          	PUSH	DE
  959 E4EF  C5          	PUSH	BC
  960 E4F0  F5          	PUSH	AF
  961                   
  962                   	; hier alle davor liegenden Speichermodule wieder einschalten?
  963                   
  964 E4F1  21 B802     	LD	HL,MODST+2	; SWITCH 2 n
  965 E4F4  56          	LD	D,(HL)		; aktuelles Steuerbyte
  966 E4F5  CD F0E6     	CALL	MODUSW		; USER-ROM wie vorher schalten
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 110
CE48    INC

  967 E4F8  CD ED67     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
  968 E4FB  F6 02       	OR	2		; DEVTAB+2
  969 E4FD  6F          	LD	L,A
  970 E4FE  56          	LD	D,(HL)		; Steuerbyte fuer AUS
  971 E4FF  2D          	DEC	L
  972 E500  7E          	LD	A,(HL)		; Steckplatz
  973                   
  974 E501  6F          	LD	L,A		; Steckplatz in L
  975 E502  FE 05       	CP	5		; CAOS-ROM C?
  976 E504  28 09       	jr	z,m4
  977 E506  CD F0E6     	CALL	MODUSW		; Modul ausschalten (falls nicht CAOS-ROM C)
  978 E509  3A B805     	ld	a,(modst+5)	; vorheriger Schaltzustand CAOS-C
  979 E50C  E6 01       	and	1		; ohne Merkbit 7
  980 E50E  57          	ld	d,a
  981 E50F  21 B805     m4:	LD	HL,MODST+5	; SWITCH 5 n
  982 E512  7E          	LD	A,(HL)		; vorheriger Schaltzustand in Bit 7
  983 E513  72          	LD	(HL),D		; urspruenglicher Schaltzustand vor PV7
  984 E514  E6 80       	AND	80h		; nur Bit 7 betrachten
  985 E516  DD 7E 04    	LD	A,(IX+4)
  986 E519  CB BF       	RES	7,A		; CAOS-C aus
  987 E51B  28 02       	JR	Z,M5		; es war auch aus!
  988 E51D  CB FF       	SET	7,A		; CAOS-C ein
  989 E51F  CD E29F     M5:	CALL	OUT86		; CAOS-C wie vor Aufruf PV7
  990 E522  C3 E0B3     MSW:	JP	POP4
  991                   
  992                   ; 1. Sprungadresse von Treiber berechnen aus Nr. und IX+8
  993                   
  994 E525  3B          PV70:	DEC	SP
  995 E526  3B          	DEC	SP		; SP ist wieder richtig				RET  MOFF >AF<
  996 E527  FB          	EI
  997 E528  E3          PV71:	EX	(SP),HL		;						RET  MOFF >HL<
  998 E529  E5          	PUSH	HL		;						RET  MOFF  HL  >AF<
  999 E52A  C6 10       	ADD	A,12+4		; 12 UP-Nummern + 2*4 Byte Kopfdaten
 1000 E52C  87          	ADD	A,A		; 2 Byte je Sprungadresse
 1001 E52D  6F          	LD	L,A		; Aufrufadresse der Treiber-Routine
 1002 E52E  CD ED67     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
 1003 E531  B5          	OR	L		; Adresse einbauen in Bit 0-4
 1004 E532  6F          	LD	L,A
 1005 E533  7E          	LD	A,(HL)		; Sprungadresse Low
 1006 E534  23          	INC	HL
 1007 E535  66          	LD	H,(HL)		; Sprungadresse High
 1008 E536  6F          	LD	L,A		; HL=Sprungadresse der Routine
 1009 E537  F1          	POP	AF		;						RET  MOFF >HL<
 1010 E538  E3          	EX	(SP),HL		; Sprungadresse auf Stack			RET  MOFF >JPADR<
 1011                   
 1012                   ; 2. Module passend schalten nach IX+8 (DEVTAB+1 = Steckplatz, DEVTAB+3 = EIN)
 1013                   
 1014 E539  E5          	PUSH	HL
 1015 E53A  D5          	PUSH	DE
 1016 E53B  C5          	PUSH	BC
 1017 E53C  F5          	PUSH	AF
 1018 E53D  CD ED67     	CALL	DEVH		; DEVICE-Nr. in Bit 5-7, (HL)=Sprungadresse
 1019 E540  F6 01       	OR	1		; DEVTAB+1
 1020 E542  6F          	LD	L,A
 1021 E543  5E          	LD	E,(HL)		; Steckplatz
 1022                   
 1023                   	; hier alle davor liegenden Speichermodule ausschalten?
 1024                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 111
CE48    INC

 1025 E544  16 B8       	LD	D,High(MODST)
 1026 E546  1A          	LD	A,(DE)		; aktueller Schaltzustand
 1027 E547  2C          	INC	L
 1028 E548  77          	LD	(HL),A		; als Schaltzustand AUS in DEVTAB+2 eintragen
 1029 E549  2C          	INC	L		; DEVTAB+3
 1030                   
 1031 E54A  7E          	LD	A,(HL)		; Steuerbyte EIN
 1032 E54B  12          	LD	(DE),A		; in MODST eintragen
 1033 E54C  57          	LD	D,A		; Steuerbyte
 1034                   
 1035 E54D  7B          	LD	A,E		; Steckplatz
 1036 E54E  1E 00       	LD	E,0		; AUS fuer CAOS-C
 1037 E550  FE 05       	CP	5		; CAOS-ROM-C?
 1038 E552  20 02       	JR	NZ,MO1
 1039 E554  1E 80       	LD	E,80h		; EIN fuer CAOS-C
 1040 E556  FE 07       MO1:	CP	7
 1041 E558  38 05       	JR	C,MO2		; intenes Modul
 1042 E55A  0E 80       	LD	C,80h
 1043 E55C  47          	LD	B,A
 1044 E55D  ED 51       	OUT	(C),D		; Steuerbyte zu Modul senden
 1045                   
 1046 E55F  DB 88       MO2:	IN	A,(PIOAD)	; SWITCH 2 0:
 1047 E561  E6 7F       	AND	7Fh		; USER-ROM C immer aus!
 1048 E563  D3 88       	OUT	(PIOAD),A
 1049                   
 1050 E565  21 B805     	LD	HL,MODST+5	; SWITCH 5
 1051 E568  DD 7E 04    	LD	A,(IX+4)
 1052 E56B  E6 80       	AND	80h		; aktueller Schaltzustand CAOS-ROM
 1053 E56D  B6          	OR	(HL)		; in Modulsteuerbyte Bit 7 einbauen
 1054 E56E  77          	LD	(HL),A		; und dort merken
 1055 E56F  DD 7E 04    	LD	A,(IX+4)	; SWITCH 5 0:
 1056 E572  E6 7F       	AND	7Fh		; CAOS-ROM C aus
 1057 E574  B3          	OR	E		; oder EIN falls Programm dort steht!
 1058 E575  18 A8       	JR	M5		; CAOS-C und Routine aufrufen
 1059                   ;
 1060                   ; ISR CTC Kanal 1 (Kassette-Out)
 1061                   ;
 1062 E577  F5          ISRC1:	PUSH	AF
 1063 E578  3E 87       	LD	A,10000111b	; EI,ZG16,Res
 1064 E57A  D3 8D       	OUT	(CTC1),A
 1065 E57C  DD 7E 00    	LD	A,(IX)		; Uebergabezelle Zeitkonstante
 1066 E57F  D3 8D       	OUT	(CTC1),A	; Start CTC
 1067 E581  DD 36 00 00 	LD	(IX),0		; Quittierung
 1068 E585  18 0E       	JR	ISR1E		; EI, RETI
 1069                   ;
 1070                   ; ISR PIO Kanal A (Kassette-In)
 1071                   ;
 1072 E587  F5          ISRPA:	PUSH	AF
 1073 E588  DB 8E       	IN	A,(CTC2)	; CTC lesen
 1074 E58A  DD 77 00    	LD	(IX),A		; und in Uebergabezelle ablegen
 1075 E58D  3E 07       	LD	A,7
 1076 E58F  D3 8E       	OUT	(CTC2),A	; CTC Neustart
 1077 E591  3E A3       	LD	A,IKEZK
 1078 E593  D3 8E       	OUT	(CTC2),A
 1079 E595  F1          ISR1E:	POP	AF
 1080 E596  FB          IRET:	EI
 1081 E597  ED 4D       	RETI
 1082                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 112
CE48    INC

 1083                   ; ===== BASIC =====
 1084                   
 1085                   ; BASIC-Erweiterung 1: Erweiterungstoken starten
 1086                   ;
 1087                   ;***************************************************************
 1088                   ;*  E: <B>: TOKEN-LDTOK
 1089                   ;*     <HL>: AUF TOKEN
 1090                   ;*  A: <<SP>>: STARTADRESSE ROUTINE
 1091                   ;*     <HL>: AUF TOKEN
 1092                   ;***************************************************************
 1093                   
 1094 E599  78          BEXP1:	LD	A,B		; Nr.
 1095 E59A  D6 09       	SUB	9
 1096 E59C  38 48       	JR	C,SNERR1
 1097 E59E  FE 1F       	CP	(TOKJPE-TOKJP)/2-4	; 27 waren es Original
 1098 E5A0  30 44       	JR	NC,SNERR1	; Token ausserhalb
 1099 E5A2  07          	RLCA			; *2
 1100 E5A3  4F          	LD	C,A
 1101 E5A4  06 00       	LD	B,0		; BC = Offset in Adresstabelle
 1102 E5A6  EB          	EX	DE,HL
 1103 E5A7  21 FDB1     	LD	HL,TADR5	; Adresse der Erweiterungstoken
 1104 E5AA  C3 C8B7     	JP	DLI22		; Ruecksprung zu Tokenverarbeitung (BASIC-ROM)
 1105                   
 1106 E5AD              LOCOL:	;LoadColor
 1107 E5AD  E5          	PUSH	HL
 1108 E5AE  21 B7A3     	LD	HL,COLOR	; 0B7A3H
 1109 E5B1  CD EAEF     	CALL	IRMRD
 1110 E5B4  E1          	POP	HL
 1111 E5B5  C9          	RET
 1112                   
 1113                   ; BASIC-Erweiterung 2: Print-Erweiterung?
 1114                   ;
 1115                   ;***************************************************************
 1116                   ;*  E:   <HL> AUF SIGNIF. ZEICHEN NACH PRTOK
 1117                   ;*  WENN  PRTFLG<>0 , DANN JP SNER
 1118                   ;*  A:   <HL> AUF ZEILENENDE
 1119                   ;***************************************************************
 1120                   
 1121 E5B6  7E          BEXP2:	LD	A,(HL)
 1122 E5B7  FE DF       	CP	0DFH		; INK-Token?
 1123 E5B9  D8          	RET	C		; <DFH
 1124 E5BA  FE E3       	CP	0E3H		; COLOR-Token?
 1125 E5BC  D0          	RET	NC		; >E2H
 1126 E5BD  FE E1       	CP	0E1H		; AT-Token?
 1127 E5BF  CA E924     	JP	Z,PRAT
 1128 E5C2  3A 03FD     	LD	A,(PRTFLG)
 1129 E5C5  A7          	AND	A		; PRINT-Erweiterung?
 1130 E5C6  20 1E       	JR	NZ,SNERR1
 1131 E5C8  3C          	INC	A
 1132 E5C9  32 03FD     	LD	(PRTFLG),A
 1133 E5CC  CD E5AD     PREX1:	CALL	LOCOL		; Farbwert lesen
 1134 E5CF  32 037E     	LD	(COLRET),A 	; Farbe merken
 1135 E5D2  7E          	LD	A,(HL)
 1136 E5D3  FE DF       	CP	0DFH		; INK?
 1137 E5D5  28 1A       	JR	Z,PRINK
 1138 E5D7  FE E2       	CP	0E2H		; COLOR?
 1139 E5D9  28 0E       	JR	Z,PRCOL
 1140 E5DB  CD C8BD     	CALL	TCHAR		; naechstes Zeichen holen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 113
CE48    INC

 1141 E5DE  CD E9EE     	CALL	PAPER		; Hintergrundfarbe
 1142 E5E1  7E          PREX2:	LD	A,(HL)
 1143 E5E2  FE 3B       	CP	';'
 1144 E5E4  28 3B       	JR	Z,PREX5
 1145 E5E6  C3 C348     SNERR1:	JP	SNER		; SN-ERROR
 1146                   
 1147 E5E9  CD C8BD     PRCOL:	CALL	TCHAR		; naechstes Zeichen holen
 1148 E5EC  CD E9DF     	CALL	BCOLOR		; Vordergrund- und Hintergrundfarbe
 1149 E5EF  18 F0       	JR	PREX2
 1150                   
 1151 E5F1  CD C8BD     PRINK:	CALL	TCHAR		; naechstes Zeichen holen
 1152 E5F4  CD E9CD     	CALL	INK		; Vordergrundfarbe
 1153 E5F7  7E          	LD	A,(HL)
 1154 E5F8  FE 3B       	CP	';'
 1155 E5FA  28 25       	JR	Z,PREX5
 1156 E5FC  CD C8CC     	CALL	CPSTX		; Komma?
 1157 E5FF  2C          	DB	','
 1158 E600  FE E0       	CP	0E0H		; PAPER?
 1159 E602  20 E2       	JR	NZ,SNERR1
 1160 E604  CD C8BD     	CALL	TCHAR		; naechstes Zeichen holen
 1161 E607  CD E9EE     	CALL	PAPER
 1162 E60A  CD C8CC     	CALL	CPSTX		; Semikolon?
 1163 E60D  3B          	DB	';'
 1164 E60E  CD CB03     PREX3:	CALL	PRINT2		; Routine im BASIC-ROM aufrufen
 1165 E611  3A 037E     	LD	A,(COLRET)	; Farbe
 1166 E614  E5          	PUSH	HL
 1167 E615  21 B7A3     	LD	HL,COLOR
 1168 E618  CD EAF4     	CALL	IRMWR		; eintragen
 1169 E61B  E1          	POP	HL
 1170 E61C  C1          	POP	BC
 1171 E61D  C9          	RET
 1172                   
 1173 E61E  C5          PREX4:	PUSH	BC
 1174 E61F  18 AB       	JR	PREX1
 1175                   
 1176 E621  CD C8BD     PREX5:	CALL	TCHAR		; naechstes Zeichen holen
 1177 E624  18 E8       	JR	PREX3
 1178                   
 1179                   ; BASIC: String vervielfaeltigen
 1180                   
 1181 E626  CD C8CC     STRING:	CALL	CPSTX		; Klammer auf?
 1182 E629  28          	DB	'('
 1183 E62A  CD D421     	CALL	ARGVL1		; Wert abholen
 1184 E62D  F5          	PUSH	AF
 1185 E62E  CD C8D6     	CALL	CPCOMM		; Komma?
 1186 E631  CD CD3A     	CALL	SNALY
 1187 E634  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1188 E637  F1          	POP	AF
 1189 E638  E5          	PUSH	HL
 1190 E639  F5          	PUSH	AF
 1191 E63A  CD D330     	CALL	LEN1		; Laenge holen
 1192 E63D  23          	INC	HL
 1193 E63E  23          	INC	HL
 1194 E63F  5E          	LD	E,(HL)
 1195 E640  23          	INC	HL
 1196 E641  56          	LD	D,(HL)
 1197 E642  C1          	POP	BC
 1198 E643  C5          	PUSH	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 114
CE48    INC

 1199 E644  F5          	PUSH	AF
 1200 E645  D5          	PUSH	DE
 1201 E646  4F          	LD	C,A
 1202 E647  AF          	XOR	A
 1203 E648  B9          	CP	C
 1204 E649  28 0C       	JR	Z,STR2
 1205 E64B  B8          	CP	B
 1206 E64C  28 09       	JR	Z,STR2
 1207 E64E  79          	LD	A,C
 1208 E64F  05          	DEC	B
 1209 E650  28 05       	JR	Z,STR2
 1210 E652  81          STR1:	ADD	A,C
 1211 E653  38 2B       	JR	C,STR5		; LS-ERROR (String zu lang)
 1212 E655  10 FB       	DJNZ	STR1
 1213 E657  47          STR2:	LD	B,A
 1214 E658  0E 00       	LD	C,0
 1215 E65A  C5          	PUSH	BC
 1216 E65B  CD D1E1     	CALL	STROP		; String-Arithmetik
 1217 E65E  C1          	POP	BC
 1218 E65F  C1          	POP	BC
 1219 E660  C5          	PUSH	BC
 1220 E661  CD D17E     	CALL	SADTB1
 1221 E664  E1          	POP	HL
 1222 E665  E3          	EX	(SP),HL
 1223 E666  7C          	LD	A,H
 1224 E667  E1          	POP	HL
 1225 E668  E3          	EX	(SP),HL
 1226 E669  6F          	LD	L,A
 1227 E66A  24          	INC	H
 1228 E66B  25          STR3:	DEC	H
 1229 E66C  E5          	PUSH	HL
 1230 E66D  C5          	PUSH	BC
 1231 E66E  28 07       	JR	Z,STR4
 1232 E670  CD D2F2     	CALL	STRMV1
 1233 E673  C1          	POP	BC
 1234 E674  E1          	POP	HL
 1235 E675  18 F4       	JR	STR3
 1236                   	;
 1237 E677  C1          STR4:	POP	BC
 1238 E678  E1          	POP	HL
 1239 E679  D1          	POP	DE
 1240 E67A  CD D302     	CALL	STRZS3
 1241 E67D  C3 D1A9     	JP	SLEN3
 1242                   	;
 1243 E680  1E 1C       STR5:	LD	E,28		; LS-ERROR
 1244 E682  C3 C356     	JP	ERROO		; Ausgabe Fehlercode
 1245                   
 1246                   ; BASIC: Neu nummerieren
 1247                   
 1248 E685  E5          RENUM:	PUSH	HL
 1249 E686  21 000A     	LD	HL,10
 1250 E689  22 0354     	LD	(DISTAN),HL	; Zeilennummernabstand
 1251 E68C  2A 035F     	LD	HL,(PSTBEG)	; Programmbeginn
 1252 E68F  F5          	PUSH	AF
 1253 E690  E5          	PUSH	HL
 1254 E691  23          	INC	HL
 1255 E692  23          	INC	HL
 1256 E693  7E          	LD	A,(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 115
CE48    INC

 1257 E694  23          	INC	HL
 1258 E695  66          	LD	H,(HL)
 1259 E696  6F          	LD	L,A
 1260 E697  22 034E     	LD	(ANF),HL	; erste Zeilennummer
 1261 E69A  22 0352     	LD	(NANF),HL
 1262 E69D  ED 5B 03D7  	LD	DE,(SVARPT)	; Ende
 1263 E6A1  1B          	DEC	DE
 1264 E6A2  1B          	DEC	DE
 1265 E6A3  E1          REN01:	POP	HL
 1266 E6A4  E5          	PUSH	HL
 1267 E6A5  7E          	LD	A,(HL)
 1268 E6A6  23          	INC	HL
 1269 E6A7  66          	LD	H,(HL)
 1270 E6A8  6F          	LD	L,A
 1271 E6A9  CD C689     	CALL	CPREG
 1272 E6AC  E3          	EX	(SP),HL
 1273 E6AD  20 F4       	JR	NZ,REN01
 1274 E6AF  D1          	POP	DE
 1275 E6B0  23          	INC	HL
 1276 E6B1  23          	INC	HL
 1277 E6B2  7E          	LD	A,(HL)
 1278 E6B3  23          	INC	HL
 1279 E6B4  66          	LD	H,(HL)
 1280 E6B5  6F          	LD	L,A
 1281 E6B6  22 0350     	LD	(ENDE),HL	; Zeilen-Abstand
 1282 E6B9  06 04       	LD	B,4
 1283 E6BB  F1          	POP	AF
 1284 E6BC  21 034E     	LD	HL,ANF
 1285 E6BF  E3          	EX	(SP),HL
 1286 E6C0  28 20       REN02:	JR	Z,REN05
 1287 E6C2  CD C986     	CALL	DCHEX
 1288 E6C5  F5          	PUSH	AF
 1289 E6C6  7A          	LD	A,D
 1290 E6C7  B3          	OR	E
 1291 E6C8  CA C967     REN03:	JP	Z,FCER	 	; FC-ERROR
 1292 E6CB  F1          	POP	AF
 1293 E6CC  E3          	EX	(SP),HL
 1294 E6CD  73          	LD	(HL),E
 1295 E6CE  23          	INC	HL
 1296 E6CF  72          	LD	(HL),D
 1297 E6D0  23          	INC	HL
 1298 E6D1  28 0F       	JR	Z,REN05
 1299 E6D3  F5          	PUSH	AF
 1300 E6D4  05          	DEC	B
 1301 E6D5  28 07       	JR	Z,REN04
 1302 E6D7  F1          	POP	AF
 1303 E6D8  E3          	EX	(SP),HL
 1304 E6D9  CD C8D6     	CALL	CPCOMM		; Komma?
 1305 E6DC  18 E2       	JR	REN02
 1306                   	;
 1307 E6DE  F1          REN04:	POP	AF
 1308 E6DF  C2 C348     	JP	NZ,SNER		; SN-ERROR
 1309 E6E2  2A 0350     REN05:	LD	HL,(ENDE)
 1310 E6E5  ED 5B 034E  	LD	DE,(ANF)	; ANFANG
 1311 E6E9  CD C689     	CALL	CPREG
 1312 E6EC  DA C967     REN06:	JP	C,FCER		; FC-ERROR
 1313 E6EF  2A 035F     	LD	HL,(PSTBEG)
 1314 E6F2  CD C4BE     REN07:	CALL	ZPOIT1		; naechste Zeile
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 116
CE48    INC

 1315 E6F5  38 04       	JR	C,REN08
 1316 E6F7  28 CF       	JR	Z,REN03
 1317 E6F9  18 F7       	JR	REN07
 1318                   	;
 1319 E6FB  E1          REN08:	POP	HL
 1320 E6FC  C5          	PUSH	BC
 1321 E6FD  ED 5B 0350  	LD	DE,(ENDE)
 1322 E701  21 0000     	LD	HL,0
 1323 E704  22 0350     	LD	(ENDE),HL
 1324 E707  60          REN09:	LD	H,B
 1325 E708  69          	LD	L,C
 1326 E709  4E          	LD	C,(HL)
 1327 E70A  23          	INC	HL
 1328 E70B  46          	LD	B,(HL)
 1329 E70C  78          	LD	A,B
 1330 E70D  B1          	OR	C
 1331 E70E  28 B8       	JR	Z,REN03
 1332 E710  23          	INC	HL
 1333 E711  7E          	LD	A,(HL)
 1334 E712  23          	INC	HL
 1335 E713  66          	LD	H,(HL)
 1336 E714  6F          	LD	L,A
 1337 E715  CD C689     	CALL	CPREG
 1338 E718  2A 0350     	LD	HL,(ENDE)
 1339 E71B  23          	INC	HL
 1340 E71C  22 0350     	LD	(ENDE),HL
 1341 E71F  20 E6       	JR	NZ,REN09
 1342 E721  23          	INC	HL
 1343 E722  23          	INC	HL
 1344 E723  29          	ADD	HL,HL
 1345 E724  23          	INC	HL
 1346 E725  ED 5B 03D7  	LD	DE,(SVARPT)
 1347 E729  19          	ADD	HL,DE
 1348 E72A  38 C0       	JR	C,REN06
 1349 E72C  CD C327     	CALL	TMEMO		; genug RAM?
 1350 E72F  22 03D7     	LD	(SVARPT),HL
 1351 E732  AF          	XOR	A
 1352 E733  2B          	DEC	HL
 1353 E734  77          	LD	(HL),A
 1354 E735  2B          	DEC	HL
 1355 E736  77          	LD	(HL),A
 1356 E737  1B          	DEC	DE
 1357 E738  1B          	DEC	DE
 1358 E739  EB          	EX	DE,HL
 1359 E73A  73          	LD	(HL),E
 1360 E73B  23          	INC	HL
 1361 E73C  72          	LD	(HL),D
 1362 E73D  23          	INC	HL
 1363 E73E  3D          	DEC	A
 1364 E73F  77          	LD	(HL),A
 1365 E740  23          	INC	HL
 1366 E741  77          	LD	(HL),A
 1367 E742  23          	INC	HL
 1368 E743  EB          	EX	DE,HL
 1369 E744  2A 0352     	LD	HL,(NANF)
 1370 E747  22 034E     	LD	(ANF),HL
 1371 E74A  E1          REN10:	POP	HL
 1372 E74B  4E          	LD	C,(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 117
CE48    INC

 1373 E74C  23          	INC	HL
 1374 E74D  46          	LD	B,(HL)
 1375 E74E  23          	INC	HL
 1376 E74F  C5          	PUSH	BC
 1377 E750  01 034E     	LD	BC,ANF
 1378 E753  7E          	LD	A,(HL)
 1379 E754  12          	LD	(DE),A
 1380 E755  0A          	LD	A,(BC)
 1381 E756  77          	LD	(HL),A
 1382 E757  23          	INC	HL
 1383 E758  13          	INC	DE
 1384 E759  03          	INC	BC
 1385 E75A  7E          	LD	A,(HL)
 1386 E75B  12          	LD	(DE),A
 1387 E75C  0A          	LD	A,(BC)
 1388 E75D  77          	LD	(HL),A
 1389 E75E  13          	INC	DE
 1390 E75F  2A 034E     	LD	HL,(ANF)
 1391 E762  ED 4B 0354  	LD	BC,(DISTAN)
 1392 E766  09          	ADD	HL,BC
 1393 E767  22 034E     	LD	(ANF),HL
 1394 E76A  2A 0350     	LD	HL,(ENDE)
 1395 E76D  2B          	DEC	HL
 1396 E76E  7C          	LD	A,H
 1397 E76F  B5          	OR	L
 1398 E770  22 0350     	LD	(ENDE),HL
 1399 E773  20 D5       	JR	NZ,REN10
 1400 E775  12          	LD	(DE),A
 1401 E776  E1          	POP	HL
 1402 E777  2A 035F     	LD	HL,(PSTBEG)
 1403 E77A  E5          	PUSH	HL
 1404 E77B  E1          REN11:	POP	HL
 1405 E77C  4E          	LD	C,(HL)
 1406 E77D  23          	INC	HL
 1407 E77E  46          	LD	B,(HL)
 1408 E77F  23          	INC	HL
 1409 E780  C5          	PUSH	BC
 1410 E781  7E          	LD	A,(HL)
 1411 E782  23          	INC	HL
 1412 E783  A6          	AND	(HL)
 1413 E784  3C          	INC	A
 1414 E785  28 26       	JR	Z,REN15
 1415 E787  23          REN12:	INC	HL
 1416 E788  7E          REN13:	LD	A,(HL)
 1417 E789  B7          	OR	A		; Zeilen-Ende
 1418 E78A  28 EF       	JR	Z,REN11
 1419 E78C  FE 88       	CP	88H		; GOTO
 1420 E78E  28 2A       	JR	Z,REN16
 1421 E790  FE 8C       	CP	8CH		; GOSUB
 1422 E792  28 26       	JR	Z,REN16
 1423 E794  FE 8B       	CP	8BH		; RESTORE
 1424 E796  28 08       	JR	Z,REN14
 1425 E798  FE D4       	CP	0D4H		; ELSE
 1426 E79A  28 04       	JR	Z,REN14
 1427 E79C  FE A9       	CP	0A9H		; THEN
 1428 E79E  20 E7       	JR	NZ,REN12
 1429 E7A0  CD C987     REN14:	CALL	DCHEX1
 1430 E7A3  7B          	LD	A,E
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 118
CE48    INC

 1431 E7A4  B2          	OR	D
 1432 E7A5  C4 E7CE     	CALL	NZ,RNUP1 	; Vergleich mit Tabelle
 1433 E7A8  C4 E7FF     	CALL	NZ,RNUP2	; Zahl aendern
 1434 E7AB  18 DB       	JR	REN13
 1435                   	;
 1436 E7AD  2B          REN15:	DEC	HL
 1437 E7AE  22 03D7     	LD	(SVARPT),HL
 1438 E7B1  2B          	DEC	HL
 1439 E7B2  77          	LD	(HL),A
 1440 E7B3  2B          	DEC	HL
 1441 E7B4  77          	LD	(HL),A
 1442 E7B5  E1          	POP	HL
 1443 E7B6  E1          	POP	HL
 1444 E7B7  C3 C48A     	JP	LIN10		; Zeile neu einsortieren
 1445                   	;
 1446 E7BA  CD C987     REN16:	CALL	DCHEX1
 1447 E7BD  7B          	LD	A,E
 1448 E7BE  B2          	OR	D
 1449 E7BF  28 C7       	JR	Z,REN13
 1450 E7C1  CD E7CE     	CALL	RNUP1
 1451 E7C4  C4 E7FF     	CALL	NZ,RNUP2
 1452 E7C7  7E          	LD	A,(HL)
 1453 E7C8  FE 2C       	CP	','
 1454 E7CA  20 BC       	JR	NZ,REN13
 1455 E7CC  18 EC       	JR	REN16
 1456                   
 1457 E7CE  E5          RNUP1:	PUSH	HL
 1458 E7CF  D5          	PUSH	DE
 1459 E7D0  11 FFFF     	LD	DE,-1
 1460 E7D3  CD C4BB     	CALL	ZPOIT		; naechste Zeile
 1461 E7D6  D1          	POP	DE
 1462 E7D7  03          	INC	BC
 1463 E7D8  03          	INC	BC
 1464 E7D9  03          	INC	BC
 1465 E7DA  03          	INC	BC
 1466 E7DB  60          	LD	H,B
 1467 E7DC  69          	LD	L,C
 1468 E7DD  ED 4B 0352  	LD	BC,(NANF)
 1469 E7E1  7E          RUP11:	LD	A,(HL)
 1470 E7E2  23          	INC	HL
 1471 E7E3  E5          	PUSH	HL
 1472 E7E4  B6          	OR	(HL)
 1473 E7E5  28 15       	JR	Z,RUP13
 1474 E7E7  7E          	LD	A,(HL)
 1475 E7E8  2B          	DEC	HL
 1476 E7E9  6E          	LD	L,(HL)
 1477 E7EA  67          	LD	H,A
 1478 E7EB  CD C689     	CALL	CPREG
 1479 E7EE  28 0A       	JR	Z,RUP12
 1480 E7F0  2A 0354     	LD	HL,(DISTAN)
 1481 E7F3  09          	ADD	HL,BC
 1482 E7F4  44          	LD	B,H
 1483 E7F5  4D          	LD	C,L
 1484 E7F6  E1          	POP	HL
 1485 E7F7  23          	INC	HL
 1486 E7F8  18 E7       	JR	RUP11
 1487                   	;
 1488 E7FA  AF          RUP12:	XOR	A		; aus CAOS 3.4 uebernommen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 119
CE48    INC

 1489 E7FB  3D          	DEC	A		; A=0FFh, Z=0
 1490                   ;	LD	A,0FFH
 1491                   ;	OR	A
 1492 E7FC  E1          RUP13:	POP	HL
 1493 E7FD  E1          	POP	HL
 1494 E7FE  C9          	RET
 1495                   
 1496 E7FF  C5          RNUP2:	PUSH	BC
 1497 E800  EB          	EX	DE,HL
 1498 E801  2A 03D7     	LD	HL,(SVARPT)
 1499 E804  ED 52       	SBC	HL,DE
 1500 E806  E5          	PUSH	HL
 1501 E807  C1          RUP21:	POP	BC
 1502 E808  62          	LD	H,D
 1503 E809  6B          	LD	L,E
 1504 E80A  1B          	DEC	DE
 1505 E80B  1A          	LD	A,(DE)
 1506 E80C  FE 2C       	CP	','
 1507 E80E  28 0B       	JR	Z,RUP22
 1508 E810  FE 3A       	CP	':'
 1509 E812  30 07       	JR	NC,RUP22
 1510 E814  C5          	PUSH	BC
 1511 E815  D5          	PUSH	DE
 1512 E816  ED B0       	LDIR
 1513 E818  D1          	POP	DE
 1514 E819  18 EC       	JR	RUP21
 1515                   	;
 1516 E81B  EB          RUP22:	EX	DE,HL
 1517 E81C  D1          	POP	DE
 1518 E81D  E5          	PUSH	HL
 1519 E81E  C5          	PUSH	BC
 1520 E81F  AF          	XOR	A
 1521 E820  06 98       	LD	B,98H
 1522 E822  CD D6AE     	CALL	SGN1
 1523 E825  CD D834     	CALL	NUMKON
 1524 E828  C1          	POP	BC
 1525 E829  D1          	POP	DE
 1526 E82A  23          	INC	HL
 1527 E82B  13          	INC	DE
 1528 E82C  7E          RUP23:	LD	A,(HL)
 1529 E82D  B7          	OR	A
 1530 E82E  28 0F       	JR	Z,RUP24
 1531 E830  C5          	PUSH	BC
 1532 E831  E5          	PUSH	HL
 1533 E832  EB          	EX	DE,HL
 1534 E833  09          	ADD	HL,BC
 1535 E834  54          	LD	D,H
 1536 E835  5D          	LD	E,L
 1537 E836  2B          	DEC	HL
 1538 E837  ED B8       	LDDR
 1539 E839  E1          	POP	HL
 1540 E83A  ED A0       	LDI
 1541 E83C  C1          	POP	BC
 1542 E83D  18 ED       	JR	RUP23
 1543                   	;
 1544 E83F  D5          RUP24:	PUSH	DE
 1545 E840  ED 5B 035F  	LD	DE,(PSTBEG)
 1546 E844  CD C493     	CALL	LIN11
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 120
CE48    INC

 1547 E847  23          RUP25:	INC	HL
 1548 E848  7E          	LD	A,(HL)
 1549 E849  23          	INC	HL
 1550 E84A  B6          	OR	(HL)
 1551 E84B  20 FA       	JR	NZ,RUP25
 1552 E84D  EB          	EX	DE,HL
 1553 E84E  73          	LD	(HL),E
 1554 E84F  23          	INC	HL
 1555 E850  72          	LD	(HL),D
 1556 E851  13          	INC	DE
 1557 E852  13          	INC	DE
 1558 E853  ED 53 03D7  	LD	(SVARPT),DE
 1559 E857  E1          	POP	HL
 1560 E858  54          	LD	D,H
 1561 E859  5D          	LD	E,L
 1562 E85A  7E          RUP26:	LD	A,(HL)
 1563 E85B  B7          	OR	A
 1564 E85C  23          	INC	HL
 1565 E85D  20 FB       	JR	NZ,RUP26
 1566 E85F  C1          	POP	BC
 1567 E860  E3          	EX	(SP),HL
 1568 E861  C5          	PUSH	BC
 1569 E862  EB          	EX	DE,HL
 1570 E863  C9          	RET
 1571                   
 1572                   ; BASIC: Zeile(n) loeschen
 1573                   
 1574 E864  C8          DELETE:	RET	Z
 1575 E865  CD C986     	CALL	DCHEX
 1576 E868  CA C442     	JP	Z,LIN13		; Zeiger auf folgende Zeilennummer stellen
 1577 E86B  CD C8D6     	CALL	CPCOMM		; Komma?
 1578 E86E  D5          	PUSH	DE
 1579 E86F  CD C986     	CALL	DCHEX
 1580 E872  E1          	POP	HL
 1581 E873  C0          	RET	NZ
 1582 E874  EB          	EX	DE,HL
 1583 E875  E5          	PUSH	HL
 1584 E876  CD C4BB     	CALL	ZPOIT		; naechste Zeile
 1585 E879  30 0A       	JR	NC,DELET1	; UL-ERROR
 1586 E87B  D1          	POP	DE
 1587 E87C  F5          	PUSH	AF
 1588 E87D  C5          	PUSH	BC
 1589 E87E  CD C4BE     	CALL	ZPOIT1
 1590 E881  C1          	POP	BC
 1591 E882  DA C450     	JP	C,LIN6		; einsortieren
 1592 E885  C3 C44D     DELET1:	JP	ULER		; UL-ERROR
 1593                   
 1594                   ; BASIC: Programm unterbrechen
 1595                   
 1596 E888  CD C8BE     PAUSE:	CALL	TCHAR1		; mit oder ohne Paramater?
 1597 E88B  20 0F       	JR	NZ,PAUS2
 1598 E88D  CD E379     PAUS1:	CALL	KBDS		; Tastaturabfrage
 1599 E890  30 FB       	JR	NC,PAUS1
 1600 E892  FE 03       	CP	3		; BRK?
 1601 E894  C8          	RET	Z
 1602 E895  FE 0A       	CP	LF		; CUU?
 1603 E897  20 F4       	JR	NZ,PAUS1
 1604 E899  C3 DDE4     	JP	CI		; Eingabe ASCII
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 121
CE48    INC

 1605                   	;
 1606 E89C  CD D421     PAUS2:	CALL	ARGVL1		; Wert abholen
 1607 E89F  4F          	LD	C,A
 1608 E8A0  3E 10       PAUS3:	LD	A,16		; 16*6ms = 96 Millisekunden
 1609 E8A2  CD FC27     	CALL	WAIT		; UP WAIT direkt aufrufen
 1610                   ;	LD	E,14H		; WAIT
 1611                   ;	CALL	PV5
 1612 E8A5  CD E379     	CALL	KBDS
 1613 E8A8  30 0A       	JR	NC,PAUS4
 1614 E8AA  FE 03       	CP	3		; BRK?
 1615 E8AC  C8          	RET	Z
 1616 E8AD  FE 0A       	CP	LF		; CUU?
 1617 E8AF  20 03       	JR	NZ,PAUS4
 1618 E8B1  C3 DDE4     	JP	CI		; Eingabe ASCII
 1619                   	;
 1620 E8B4  0D          PAUS4:	DEC	C		; Zaehler verringern
 1621 E8B5  20 E9       	JR	NZ,PAUS3	; weiter warten
 1622 E8B7  C9          	RET
 1623                   
 1624                   ; BASIC: Signalton
 1625                   
 1626 E8B8  06 01       BBEEP:	LD	B,1		; ohne Angabe 1x
 1627 E8BA  CD C8BE     	CALL	TCHAR1		; Parameter angegeben?
 1628 E8BD  28 04       	JR	Z,BBP1
 1629 E8BF  CD D421     	CALL	ARGVL1		; Wert abholen
 1630 E8C2  47          	LD	B,A		; Anzahl
 1631 E8C3  3E 07       BBP1:	LD	A,7		; Beep
 1632 E8C5  1E 00       	LD	E,0		; CRT
 1633 E8C7  CD F02D     	CALL	PV5
 1634 E8CA  10 F7       	DJNZ	BBP1
 1635 E8CC  C9          	RET
 1636                   
 1637                   ; Hilfsroutine fuer mehrfachen Aufruf: naechsten Wert abholen
 1638                   
 1639 E8CD  CD C8D6     MC8D4:	CALL	CPCOMM		; Komma?
 1640 E8D0  C3 D421     	JP	ARGVL1		; Wert abholen
 1641                   
 1642                   ; BASIC: Fenster einstellen
 1643                   
 1644 E8D3  CD C8BE     WINDOW:	CALL	TCHAR1		; Parameter angegeben?
 1645 E8D6  28 2D       	JR	Z,WDW2		; nein, dann volles Fenster
 1646 E8D8  CD D421     	CALL	ARGVL1		; 1. Wert abholen
 1647 E8DB  47          	LD	B,A		; B = erste Zeile
 1648 E8DC  C5          	PUSH	BC
 1649 E8DD  CD E8CD     	CALL	MC8D4		; 2. Wert holen
 1650 E8E0  57          	LD	D,A		; D = letzte Zeile
 1651 E8E1  D5          	PUSH	DE
 1652 E8E2  CD E8CD     	CALL	MC8D4		; 3. Wert holen
 1653 E8E5  D1          	POP	DE
 1654 E8E6  5F          	LD	E,A		; E = erste Spalte
 1655 E8E7  D5          	PUSH	DE
 1656 E8E8  CD E8CD     	CALL	MC8D4		; 4. Wert holen
 1657 E8EB  D1          	POP	DE		; A = letzte Spalte
 1658 E8EC  E3          	EX	(SP),HL		; H = erste Zeile
 1659 E8ED  6B          	LD	L,E		; L = erste Spalte
 1660 E8EE  93          	SUB	E		; Anzahl Spalten
 1661                   ;	JR	C,SNERR2	; Anfang > Ende (wird von WININ ueberwacht)
 1662 E8EF  3C          	INC	A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 122
CE48    INC

 1663 E8F0  5F          	LD	E,A		; E = Fensterbreite
 1664 E8F1  7A          	LD	A,D		; letzte Zeile
 1665 E8F2  94          	SUB	H		; Anzahl Zeilen
 1666                   ;	JR	C,SNERR2	; Anfang > Ende (wird von WININ ueberwacht)
 1667 E8F3  3C          	INC	A
 1668 E8F4  57          	LD	D,A		; D = Fensterhoehe
 1669 E8F5  CD F06B     WDW1:	CALL	IRMON
 1670 E8F8  3A B79B     	LD	A,(WINNR)	; aktuelle Fensternummer
 1671 E8FB  CD F7F7     	CALL	WININ		; Fenster initialisieren
 1672 E8FE  CD F088     	CALL	IRMOF
 1673 E901  38 1E       	JR	C,SNERR2	; Fehler aufgetreten
 1674 E903  E1          	POP	HL
 1675 E904  C9          	RET
 1676                   	;
 1677 E905  E5          WDW2:	PUSH	HL		; Standardfenstergoesse bei BASIC:
 1678 E906  21 0100     	LD	HL,100H		; 30 Zeilen, 40 Zeichen breit
 1679 E909  11 1E28     	LD	DE,1E28H	; (oben und unten eine Zeile ungenutzt)
 1680 E90C  18 E7       	JR	WDW1
 1681                   
 1682                   ; BASIC: in IRM schreiben (8000h bis BFFFh):
 1683                   
 1684 E90E  CD C96C     VPOKE:	CALL	EPRVL4		; Parameter erfassen (Adresse)
 1685 E911  D5          	PUSH	DE
 1686 E912  CD E8CD     	CALL	MC8D4		; Wert abholen
 1687 E915  E3          	EX	(SP),HL
 1688 E916  11 8000     	LD	DE,8000H	; IRM-Offset
 1689 E919  19          	ADD	HL,DE
 1690 E91A  38 05       	JR	C,SNERR2	; < 8000h
 1691 E91C  CB 74       	BIT	6,H
 1692 E91E  CA E9AA     	JP	Z,LOC1		; < C000h -> in IRM schreiben
 1693 E921  C3 C348     SNERR2:	JP	SNER		; SN-ERROR
 1694                   
 1695                   ; BASIC: PRINT AT:
 1696                   
 1697 E924  3A 03FD     PRAT:	LD	A,(PRTFLG)
 1698 E927  CB 4F       	BIT	1,A
 1699 E929  CB CF       	SET	1,A
 1700 E92B  32 03FD     	LD	(PRTFLG),A
 1701 E92E  20 F1       	JR	NZ,SNERR2
 1702 E930  D5          	PUSH	DE
 1703 E931  E5          	PUSH	HL
 1704 E932  CD F06B     	CALL	IRMON
 1705                   ;
 1706                   ; seit CAOS 3.1 wurden die aktuellen Fensterdaten im Fenstervektorspeicher des
 1707                   ; Fensters Nr. 8 und 9 zwischengespeichert und diese Werte somit ueberschrieben.
 1708                   ; CAOS 3.4 machte es vor, dass es besser geht. Hier werden die aktuellen Werte
 1709                   ; im Fenstervektorspeicher des aktuellen Fensters gesichert
 1710                   ; 29.12.2020: Funktionalitaet fuer CAOS 4.8 uebernommen
 1711                   ;
 1712                   	; im Fenstervektorspeicher sichern
 1713 E935  3A B79B     	LD	A,(WINNR)	; aktuelle Fenster-Nr.
 1714 E938  21 0000     	LD	HL,0		; WINON
 1715 E93B  11 2028     	LD	DE,2028H	; WINLG
 1716 E93E  01 C63B     	LD	BC,WININB	; WINON=HL, WINLG=DE, CURSO=BC einstellen
 1717 E941  CD FB87     	CALL	CLROMC		; im ROM-C ausfuehren
 1718 E944  CD F088     	CALL	IRMOF
 1719 E947  E1          	POP	HL
 1720 E948  CD E977     	CALL	LOCAT		; Cursor positionieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 123
CE48    INC

 1721 E94B  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1722 E94E  CD C8CC     	CALL	CPSTX		; Semikolon?
 1723 E951  3B          	DB	';'
 1724 E952  7E          	LD	A,(HL)
 1725 E953  FE DF       	CP	0DFH
 1726 E955  38 1B       	JR	C,PRAT2		; <DFH
 1727 E957  FE E3       	CP	0E3H
 1728 E959  30 17       	JR	NC,PRAT2	; >E2H
 1729 E95B  CD E61E     	CALL	PREX4		; INK, PAPER, COLOR
 1730 E95E  E5          PRAT1:	PUSH	HL
 1731 E95F  CD F06B     	CALL	IRMON
 1732 E962  3A B79B     	LD	A,(WINNR)	; aktuelle Fenster-Nr.
 1733 E965  01 C5F5     	LD	BC,WINAKB	; gesicherte Werte zurueck holen
 1734 E968  CD FB87     	CALL	CLROMC		; im ROM-C ausfuehren
 1735 E96B  CD F088     	CALL	IRMOF
 1736 E96E  E1          	POP	HL
 1737 E96F  D1          	POP	DE
 1738 E970  C1          	POP	BC
 1739 E971  C9          	RET
 1740                   	;
 1741 E972  CD CB03     PRAT2:	CALL	PRINT2		; Routine im BASIC-ROM aufrufen
 1742 E975  18 E7       	JR	PRAT1
 1743                   
 1744                   ; BASIC: Cursor positionieren:
 1745                   
 1746 E977  CD C8BD     LOCAT:	CALL	TCHAR		; naechstes Zeichen holen
 1747 E97A  CD C8CC     	CALL	CPSTX		; Klammer auf?
 1748 E97D  28          	DB	'('
 1749 E97E  CD D421     LOCATE:	CALL	ARGVL1		; Wert abholen
 1750 E981  57          	LD	D,A
 1751 E982  E5          	PUSH	HL
 1752 E983  21 B79F     	LD	HL,WINLG+1
 1753 E986  CD EAEF     	CALL	IRMRD
 1754 E989  E1          	POP	HL
 1755 E98A  3D          	DEC	A
 1756 E98B  BA          	CP	D
 1757 E98C  38 3C       	JR	C,SNERR3
 1758 E98E  D5          	PUSH	DE
 1759 E98F  CD E8CD     	CALL	MC8D4		; Wert abholen
 1760 E992  D1          	POP	DE
 1761 E993  4F          	LD	C,A
 1762 E994  E5          	PUSH	HL
 1763 E995  21 B79E     	LD	HL,WINLG
 1764 E998  CD EAEF     	CALL	IRMRD		; Fenstergroesse lesen
 1765 E99B  E1          	POP	HL
 1766 E99C  3D          	DEC	A
 1767 E99D  B9          	CP	C
 1768 E99E  38 2A       	JR	C,SNERR3
 1769 E9A0  79          	LD	A,C
 1770 E9A1  E5          	PUSH	HL
 1771 E9A2  21 B7A0     	LD	HL,CURSO
 1772 E9A5  CD EAF4     	CALL	IRMWR
 1773 E9A8  7A          	LD	A,D
 1774 E9A9  23          	INC	HL
 1775 E9AA  CD EAF4     LOC1:	CALL	IRMWR		; in IRM schreiben
 1776 E9AD  E1          	POP	HL
 1777 E9AE  C9          	RET
 1778                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 124
CE48    INC

 1779                   ; BASIC: Eingabe eines Zeichens:
 1780                   
 1781 E9AF  E5          INKEY:	PUSH	HL
 1782 E9B0  CD E379     	CALL	KBDS		; Tastaturabfrage
 1783 E9B3  30 0F       	JR	NC,INKEY3
 1784 E9B5  3E 01       	LD	A,1
 1785 E9B7  CD D17B     	CALL	STADTB
 1786 E9BA  CD DDE4     	CALL	CI		; Eingabe ASCII
 1787 E9BD  2A 03C2     INKEY1:	LD	HL,(STRDAT+2)
 1788 E9C0  77          	LD	(HL),A
 1789 E9C1  C3 D1A9     INKEY2:	JP	SLEN3
 1790                   	;
 1791 E9C4  AF          INKEY3:	XOR	A
 1792 E9C5  CD D17B     	CALL	STADTB
 1793 E9C8  18 F7       	JR	INKEY2
 1794                   
 1795 E9CA  C3 C348     SNERR3:	JP	SNER		; SN-ERROR
 1796                   
 1797                   ; BASIC: Vordergrundfarbe einstellen:
 1798                   
 1799 E9CD  CD D421     INK:	CALL	ARGVL1		; Wert abholen
 1800 E9D0  FE 20       	CP	32
 1801 E9D2  30 66       	JR	NC,FCERR	; FC-ERROR	(bisher SN-ERROR)
 1802 E9D4  87          	ADD	A,A
 1803 E9D5  87          	ADD	A,A		; *8
 1804 E9D6  87          	ADD	A,A
 1805 E9D7  57          	LD	D,A		; neuer Farbwert
 1806 E9D8  CD E5AD     	CALL	LOCOL		; Farbwert lesen
 1807 E9DB  E6 07       	AND	7		; Hintergrund-Bits erhalten
 1808 E9DD  18 1C       	JR	COL2
 1809                   
 1810                   ; BASIC: Vordergrund- und Hintergrundfarbe einstellen:
 1811                   
 1812 E9DF  CD C8BE     BCOLOR:	CALL	TCHAR1
 1813 E9E2  28 56       	JR	Z,FCERR		; FC-ERROR	(bisher SN-ERROR)
 1814 E9E4  CD E9CD     	CALL	INK		; Vordergrund
 1815 E9E7  CD C8BE     	CALL	TCHAR1
 1816 E9EA  C8          	RET	Z
 1817 E9EB  CD C8D6     	CALL	CPCOMM		; Komma?
 1818                   ;	JR	PAPER		; Hintergrund
 1819                   
 1820                   ; BASIC: Hintergrundfarbe einstellen:
 1821                   
 1822 E9EE  CD D421     PAPER:	CALL	ARGVL1		; Wert abholen
 1823 E9F1  FE 08       COL1:	CP	8
 1824 E9F3  30 45       	JR	NC,FCERR	; FC-ERROR	(bisher SN-ERROR)
 1825 E9F5  57          	LD	D,A
 1826 E9F6  CD E5AD     	CALL	LOCOL		; Farbwert lesen
 1827 E9F9  E6 F8       	AND	0F8H		; Vordergrund-Bits erhalten
 1828 E9FB  B2          COL2:	OR	D		; neuen Farbwert einbauen
 1829 E9FC  E5          	PUSH	HL
 1830 E9FD  21 B7A3     	LD	HL,COLOR
 1831 EA00  18 A8       	JR	LOC1		; neuer Farbwert
 1832                   
 1833                   ; BASIC: Punkt loeschen:
 1834                   
 1835 EA02  1E 2F       PRESET:	LD	E,2FH		; UP PUDE
 1836 EA04  01          	DB	1	; LD BC,n
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 125
CE48    INC

 1837                   
 1838                   ; BASIC: Punkt setzen:
 1839                   
 1840 EA05  1E 30       PSET:	LD	E,30H		; UP PUSE
 1841 EA07  D5          	PUSH	DE
 1842 EA08  CD C96C     	CALL	EPRVL4		; Parameter erfassen
 1843 EA0B  E5          	PUSH	HL		; Adresszeiger
 1844 EA0C  7B          	LD	A,E
 1845 EA0D  21 B7D3     	LD	HL,HOR
 1846 EA10  CD EAF4     	CALL	IRMWR		; X-Koordinate (low)
 1847 EA13  7A          	LD	A,D
 1848 EA14  23          	INC	HL
 1849 EA15  CD EAF4     	CALL	IRMWR		; X-Koordinate (high)
 1850 EA18  E3          	EX	(SP),HL
 1851 EA19  CD E8CD     	CALL	MC8D4		; Wert abholen
 1852 EA1C  E3          	EX	(SP),HL
 1853 EA1D  23          	INC	HL		; HL=VERT
 1854 EA1E  CD EAF4     	CALL	IRMWR		; Y-Koordinate
 1855 EA21  E1          GRAPH2:	POP	HL		; HL=Adresszeiger
 1856 EA22  CD C8BE     	CALL	TCHAR1		; optionaler Parameter vorhanden?
 1857 EA25  28 0E       	JR	Z,GRAPH4	; nein
 1858 EA27  CD E8CD     	CALL	MC8D4		; Wert abholen nach A
 1859 EA2A  17          	RLA
 1860 EA2B  17          	RLA			; Rotieren in Bites fuer Vordergundfarbe
 1861 EA2C  17          	RLA
 1862 EA2D  E5          	PUSH	HL
 1863 EA2E  21 B7D6     	LD	HL,FARB		; Grafik-Farbe
 1864 EA31  CD EAF4     	CALL	IRMWR		; in IRM schreiben
 1865 EA34  E1          	POP	HL		; HL=Adresszeiger
 1866 EA35  D1          GRAPH4:	POP	DE		; E=UP-Nr. fuer PUSE, PUDE, LINE, CIRCLE
 1867 EA36  CD F02D     	CALL	PV5
 1868 EA39  D0          	RET	NC		; kein FC-ERROR	(bisher SN-ERROR)
 1869 EA3A  C3 C967     FCERR:	JP	FCER		; FC-ERROR
 1870                   
 1871                   ; BASIC: Tonausgabe:
 1872                   
 1873 EA3D  CD D421     SOUND:	CALL	ARGVL1		; 1. Wert abholen
 1874 EA40  E5          	PUSH	HL
 1875 EA41  21 B782     	LD	HL,ARG1		; Argumente hier ablegen
 1876 EA44  06 04       	LD	B,4		; 4 Argumente holen
 1877 EA46  CD EAF4     SOUND1:	CALL	IRMWR		; Argument einschreiben
 1878 EA49  23          	INC	HL
 1879 EA4A  E3          	EX	(SP),HL		; Umschaltung auf Programmzeiger
 1880 EA4B  05          	DEC	B
 1881 EA4C  28 08       	JR	Z,SOUND2	; fertig mit 4 Werten
 1882 EA4E  C5          	PUSH	BC
 1883 EA4F  CD E8CD     	CALL	MC8D4		; 2. bis 4. Wert abholen
 1884 EA52  C1          	POP	BC
 1885 EA53  E3          	EX	(SP),HL		; Umschaltung auf ARG-Zeiger
 1886 EA54  18 F0       	JR	SOUND1
 1887                   	;
 1888 EA56  CD C8BE     SOUND2:	CALL	TCHAR1		; weiterer Parameter?
 1889 EA59  28 16       	JR	Z,SOUND3
 1890 EA5B  CD E8CD     	CALL	MC8D4		; optionalen 5. Wert (Lautstaerke) abholen
 1891 EA5E  E3          	EX	(SP),HL
 1892 EA5F  CD EAF4     	CALL	IRMWR		; und einschreiben nach ARG3
 1893 EA62  23          	INC	HL
 1894 EA63  E3          	EX	(SP),HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 126
CE48    INC

 1895 EA64  CD C8BE     	CALL	TCHAR1		; weiterer Parameter?
 1896 EA67  28 08       	JR	Z,SOUND3
 1897 EA69  CD E8CD     	CALL	MC8D4		; optionalen 6. Wert (Tondauer) abholen
 1898 EA6C  E3          	EX	(SP),HL
 1899 EA6D  CD EAF4     	CALL	IRMWR		; und einschreiben nach ARG3+1
 1900 EA70  E3          	EX	(SP),HL
 1901 EA71  1E 35       SOUND3:	LD	E,35H		; UP-Nr. fuer TON
 1902 EA73  C1          	POP	BC		; Stack bereinigen
 1903 EA74  C3 F02D     	JP	PV5		; Tonausgabe aufrufen
 1904                   
 1905                   ; BASIC: String1 in String2 suchen
 1906                   
 1907 EA77  CD CD36     INSTR:	CALL	SNALY6		; Klammer auf?
 1908 EA7A  CD C8D6     	CALL	CPCOMM		; Komma?
 1909 EA7D  E5          	PUSH	HL
 1910 EA7E  CD D330     	CALL	LEN1		; Laenge holen
 1911 EA81  28 B7       	JR	Z,FCERR		; FC-ERROR
 1912 EA83  47          	LD	B,A
 1913 EA84  23          	INC	HL
 1914 EA85  23          	INC	HL
 1915 EA86  5E          	LD	E,(HL)
 1916 EA87  23          	INC	HL
 1917 EA88  56          	LD	D,(HL)
 1918 EA89  E1          	POP	HL
 1919 EA8A  D5          	PUSH	DE
 1920 EA8B  C5          	PUSH	BC
 1921 EA8C  CD CD3A     	CALL	SNALY
 1922 EA8F  CD C8DB     	CALL	CPBRGT		; Klammer zu?
 1923 EA92  C1          	POP	BC
 1924 EA93  D1          	POP	DE
 1925 EA94  E5          	PUSH	HL
 1926 EA95  D5          	PUSH	DE
 1927 EA96  C5          	PUSH	BC
 1928 EA97  CD D330     	CALL	LEN1		; Laenge holen
 1929 EA9A  28 9E       	JR	Z,FCERR		; FC-ERROR
 1930 EA9C  23          	INC	HL
 1931 EA9D  23          	INC	HL
 1932 EA9E  4E          	LD	C,(HL)
 1933 EA9F  23          	INC	HL
 1934 EAA0  66          	LD	H,(HL)
 1935 EAA1  69          	LD	L,C
 1936 EAA2  C1          	POP	BC
 1937 EAA3  4F          	LD	C,A
 1938 EAA4  D1          	POP	DE
 1939 EAA5  E5          	PUSH	HL
 1940 EAA6  C5          INSTR1:	PUSH	BC
 1941 EAA7  D5          	PUSH	DE
 1942 EAA8  1A          	LD	A,(DE)
 1943 EAA9  BE          INSTR2:	CP	(HL)
 1944 EAAA  28 0F       	JR	Z,INSTR5
 1945 EAAC  23          	INC	HL
 1946 EAAD  0D          	DEC	C
 1947 EAAE  20 F9       	JR	NZ,INSTR2
 1948 EAB0  AF          INSTR3:	XOR	A
 1949 EAB1  E1          	POP	HL
 1950 EAB2  E1          	POP	HL
 1951 EAB3  E1          	POP	HL
 1952 EAB4  11 CDF3     INSTR4:	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 127
CE48    INC

 1953 EAB7  D5          	PUSH	DE
 1954 EAB8  C3 D0C0     	JP	POS1
 1955                   	;
 1956 EABB  23          INSTR5:	INC	HL
 1957 EABC  E5          	PUSH	HL
 1958 EABD  2B          	DEC	HL
 1959 EABE  23          INSTR6:	INC	HL
 1960 EABF  0D          	DEC	C
 1961 EAC0  28 0E       	JR	Z,INSTR7
 1962 EAC2  13          	INC	DE
 1963 EAC3  05          	DEC	B
 1964 EAC4  28 11       	JR	Z,INSTR8
 1965 EAC6  1A          	LD	A,(DE)
 1966 EAC7  BE          	CP	(HL)
 1967 EAC8  28 F4       	JR	Z,INSTR6
 1968 EACA  E1          	POP	HL
 1969 EACB  D1          	POP	DE
 1970 EACC  C1          	POP	BC
 1971 EACD  0D          	DEC	C
 1972 EACE  18 D6       	JR	INSTR1
 1973                   	;
 1974 EAD0  13          INSTR7:	INC	DE
 1975 EAD1  05          	DEC	B
 1976 EAD2  E1          	POP	HL
 1977 EAD3  20 DB       	JR	NZ,INSTR3
 1978 EAD5  18 01       	JR	INSTR9
 1979                   	;
 1980 EAD7  E1          INSTR8:	POP	HL
 1981 EAD8  D1          INSTR9:	POP	DE
 1982 EAD9  D1          	POP	DE
 1983 EADA  D1          	POP	DE
 1984 EADB  A7          	AND	A
 1985 EADC  ED 52       	SBC	HL,DE
 1986 EADE  7D          	LD	A,L
 1987 EADF  18 D3       	JR	INSTR4
 1988                   
 1989                   ; BASIC: F-Taste belegen:
 1990                   
 1991 EAE1  CD D421     BKEY:	CALL	ARGVL1		; Wert abholen
 1992 EAE4  FE 10       	CP	16		; F0 ... F15 zugelassen
 1993 EAE6  D2 EB89     	JP	NC,SNERR4
 1994 EAE9  1E 39       	LD	E,39H		; UP-Nr. fuer KEY
 1995 EAEB  01          	DB	1	; LC BC,nn
 1996                   
 1997                   ; BASIC: F-Tasten auflisten:
 1998                   
 1999 EAEC              KEYLIST:
 2000 EAEC  1E 3A       	LD	E,3AH		; UP-Nr. fuer KEYLI
 2001 EAEE  01          	DB	1	; LC BC,nn
 2002                   
 2003                   ; BASIC: Byte aus IRM lesen:
 2004                   
 2005 EAEF  1E 29       IRMRD:	LD	E,29H		; UP-Nr. fuer LDAM
 2006 EAF1  C3 F02D     JPV5:	JP	PV5
 2007                   
 2008                   ; BASIC: Byte in IRM schreiben:
 2009                   
 2010 EAF4  1E 28       IRMWR:	LD	E,28H		; UP-Nr. fuer LDMA
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 128
CE48    INC

 2011 EAF6  18 F9       	JR	JPV5
 2012                   
 2013                   ; BASIC: Module schalten:
 2014                   
 2015 EAF8  CD D421     SWITCH:	CALL	ARGVL1		; 1. Wert abholen
 2016 EAFB  F5          	PUSH	AF		; Steckplatz
 2017 EAFC  CD E8CD     	CALL	MC8D4		; 2. Wert abholen
 2018 EAFF  57          	LD	D,A		; Steuerbyte
 2019 EB00  F1          	POP	AF
 2020 EB01  E5          	PUSH	HL
 2021 EB02  6F          	LD	L,A		; Steckplatz
 2022 EB03  3E 02       	LD	A,2		; schalten
 2023 EB05  1E 26       	LD	E,26H		; UP-Nr. fuer MODU
 2024 EB07  CD F02D     	CALL	PV5
 2025 EB0A  E1          	POP	HL
 2026 EB0B  C9          	RET
 2027                   
 2028                   ; BASIC: Testen, ob Bildpunkt gesetzt ist:
 2029                   
 2030 EB0C  CD CD36     PTEST:	CALL	SNALY6		; Klammer auf?
 2031 EB0F  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 2032 EB12  E5          	PUSH	HL		; Programmzeiger auf Stack legen
 2033 EB13  7B          	LD	A,E
 2034 EB14  21 B7D3     	LD	HL,HOR		; X-Koordinate eintragen
 2035 EB17  CD EAF4     	CALL	IRMWR		; Low
 2036 EB1A  7A          	LD	A,D
 2037 EB1B  23          	INC	HL
 2038 EB1C  CD EAF4     	CALL	IRMWR		; High
 2039 EB1F  23          	INC	HL		; VERT
 2040 EB20  E3          	EX	(SP),HL		; HL=Programmzeiger, (Stack)=VERT
 2041 EB21  0E 00       	ld	c,0		; Y-Koordinate nicht angegeben
 2042 EB23  7E          	LD	A,(HL)
 2043 EB24  FE 2C       	CP	','		; weiterer Parameter?
 2044 EB26  20 0A       	JR	NZ,PTEST1	; nein
 2045 EB28  CD E8CD     	CALL	MC8D4		; 2. Wert holen
 2046 EB2B  E3          	EX	(SP),HL		; HL=VERT
 2047 EB2C  CD EAF4     	CALL	IRMWR		; Y-Koordinate eintragen
 2048 EB2F  E3          	EX	(SP),HL		; HL=Programmzeiger
 2049 EB30  0E FF       	ld	c,-1		; Y-Koordinate angegeben
 2050 EB32  CD C8DB     PTEST1:	CALL	CPBRGT		; Klammer zu?
 2051 EB35  D1          	POP	DE		; VERT - wird nicht mehr benoetigt
 2052 EB36  E3          	EX	(SP),HL		; Adresszeiger auf Stack
 2053 EB37  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2054 EB3A  D5          	PUSH	DE		; Sprungadresse auf Stack
 2055 EB3B  E5          	PUSH	HL		; urspruenglicher Stack-Wert
 2056 EB3C  1E 2F       	LD	E,2FH		; UP-Nr. fuer PUDE
 2057 EB3E  CD F02D     	CALL	PV5
 2058 EB41  DA C967     	JP	C,FCER		; ausserhalb -> FC-ERROR
 2059 EB44  F5          	PUSH	AF		; Z-Flag erhalten
 2060 EB45  DD CB 01 5E 	BIT	3,(IX+1)	; HiRes?
 2061 EB49  28 20       	JR	Z,PTEST4	; Farbwert steht bereits in Register A
 2062 EB4B  F1          	POP	AF
 2063 EB4C  06 00       	LD	B,0
 2064 EB4E  28 19       	JR	Z,PTEST3	; Punkt war geloescht
 2065 EB50  21 B7D6     	LD	HL,FARB
 2066 EB53  CD EAF4     	CALL	IRMWR		; Grafikfarbe eintragen fuer folgendes PUSE
 2067 EB56  0F          	RRCA
 2068 EB57  0F          	RRCA			; Vordergrundfarbe nach Bit 0-3 rotieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 129
CE48    INC

 2069 EB58  0F          	RRCA
 2070 EB59  E6 0F       	AND	0Fh
 2071 EB5B  20 02       	JR	NZ,PTEST2	; Farbe 1-15
 2072 EB5D  3E 08       	LD	A,8		; Farbe 0 => 8 (beides ist schwarz)
 2073 EB5F  47          PTEST2:	LD	B,A		; Rueckgabewert = Farbe 1..15
 2074 EB60  1E 30       	LD	E,30H		; UP-Nr. fuer PUSE
 2075 EB62  CD F02D     	CALL	PV5		; Punkt wieder setzen
 2076 EB65  0C          	inc	c		; war Y-Koordinate angegeben?
 2077 EB66  28 01       	jr	z,PTEST3	; ja, dann Farbcode zurueck geben
 2078 EB68  41          	ld	b,c		; ansonsten 1 fuer Punkt gesetzt
 2079 EB69  78          PTEST3:	LD	A,B		; Rueckgabewert (0=geloescht oder Farbcode)
 2080 EB6A  06          	DB	06H		; LD B,0F1H
 2081 EB6B  F1          PTEST4:	POP	AF
 2082 EB6C  18 65       	JR	JHPOS		; POP HL, JP POS1
 2083                   
 2084                   ; BASIC: IRM lesen (8000h bis BFFFh):
 2085                   
 2086 EB6E  CD CDE1     VPEEK:	CALL	SNLY14		; Syntax-Check '('
 2087 EB71  E3          	EX	(SP),HL
 2088 EB72  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2089 EB75  D5          	PUSH	DE
 2090 EB76  CD C96F     	CALL	EPRVL3		; Wert bestimmen
 2091 EB79  E5          	PUSH	HL
 2092 EB7A  21 8000     	LD	HL,8000H	; IRM-Offset
 2093 EB7D  19          	ADD	HL,DE
 2094 EB7E  38 09       	JR	C,SNERR4	; < 8000h
 2095 EB80  CB 74       	BIT	6,H
 2096 EB82  20 05       	JR	NZ,SNERR4	; > BFFFh
 2097 EB84  CD EAEF     	CALL	IRMRD
 2098 EB87  18 4A       	JR	JHPOS		; POP HL, JP POS1
 2099                   
 2100 EB89  C3 C348     SNERR4:	JP	SNER		; SN-ERROR
 2101                   
 2102                   ; BASIC-Erweiterung 3: Funktionen
 2103                   ;**************************************************************
 2104                   ;* VERTEILER ZU ZUSAETZLICHEN STANDARDFUNKTIONEN
 2105                   ;* E: <HL> AUF SIGN. ZEICHEN NACH TOKEN
 2106                   ;*    <BC> =<<SP>>  (TOKEN-SGTOK)*2
 2107                   ;* A: <HL> AUF SIGN. ZEICHEN NACH TOKEN
 2108                   ;**************************************************************
 2109                   
 2110 EB8C  79          BEXP3:	LD	A,C		; zulaessig?
 2111 EB8D  FE 62       	CP	62H
 2112 EB8F  28 DD       	JR	Z,VPEEK
 2113 EB91  FE 6E       	CP	6EH
 2114 EB93  CA EB0C     	JP	Z,PTEST
 2115 EB96  FE 7C       	CP	7CH
 2116 EB98  28 1A       	JR	Z,CSRLN
 2117 EB9A  FE 76       	CP	76H
 2118 EB9C  28 39       	JR	Z,VGET
 2119 EB9E  D6 3E       	SUB	3EH
 2120 EBA0  38 E7       	JR	C,SNERR4	; nein
 2121 EBA2  FE 07       	CP	7
 2122 EBA4  30 E3       	JR	NC,SNERR4	; nein
 2123                   ;--------------------------------
 2124 EBA6  EB          	EX	DE,HL
 2125 EBA7  01 FDA9     	LD	BC,TOKJP	; Token-Adresstabelle
 2126 EBAA  E1          	POP	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 130
CE48    INC

 2127 EBAB  6F          	LD	L,A
 2128 EBAC  09          	ADD	HL,BC
 2129 EBAD  4E          	LD	C,(HL)
 2130 EBAE  23          	INC	HL
 2131 EBAF  66          	LD	H,(HL)
 2132 EBB0  69          	LD	L,C
 2133 EBB1  E5          	PUSH	HL		; Routine
 2134 EBB2  EB          	EX	DE,HL		; anspringen
 2135 EBB3  C9          	RET
 2136                   
 2137                   ; BASIC: aktuelle Zeilennummer holen:
 2138                   
 2139 EBB4  CD CDE1     CSRLN:	CALL	SNLY14		; Syntax-Check '('
 2140 EBB7  E3          	EX	(SP),HL
 2141 EBB8  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2142 EBBB  D5          	PUSH	DE
 2143 EBBC  CD D424     	CALL	ARGVL2
 2144 EBBF  E5          	PUSH	HL
 2145 EBC0  A7          	AND	A		; Fenster beruecksichtigen?
 2146 EBC1  3E 00       	LD	A,0
 2147 EBC3  20 06       	JR	NZ,CSRLN1
 2148 EBC5  21 B79D     	LD	HL,WINON+1
 2149 EBC8  CD EAEF     	CALL	IRMRD
 2150 EBCB  47          CSRLN1:	LD	B,A
 2151 EBCC  21 B7A1     	LD	HL,CURSO+1
 2152 EBCF  CD EAEF     	CALL	IRMRD
 2153 EBD2  80          	ADD	A,B		; aktuelle Zeile
 2154 EBD3  E1          JHPOS:	POP	HL
 2155 EBD4  C3 D0C0     CSRLN2:	JP	POS1
 2156                   
 2157                   ; BASIC: Zeichen von Bildschirm zurueck lesen
 2158                   
 2159 EBD7  E3          VGET:	EX	(SP),HL
 2160 EBD8  3E 01       	LD	A,1
 2161 EBDA  CD D17B     	CALL	STADTB
 2162 EBDD  CD F06B     	CALL	IRMON
 2163 EBE0  ED 5B B7A0  	LD	DE,(CURSO)
 2164 EBE4  CD E083     	CALL	DABR
 2165 EBE7  7E          	LD	A,(HL)
 2166 EBE8  CD F088     	CALL	IRMOF
 2167 EBEB  C3 E9BD     	JP	INKEY1		; als Zeichen zurueckgeben
 2168                   
 2169                   ; BASIC: Kanal schliessen:
 2170                   
 2171 EBEE  0E 00       CLOSE:	LD	C,0
 2172 EBF0  7E          	LD	A,(HL)
 2173 EBF1  FE 49       	CP	'I'		; Eingabe?
 2174 EBF3  28 05       	JR	Z,CLOS1
 2175 EBF5  0C          	INC	C
 2176 EBF6  FE 4F       	CP	'O'		; Ausgabe?
 2177 EBF8  20 8F       	JR	NZ,SNERR4
 2178 EBFA  C5          CLOS1:	PUSH	BC
 2179 EBFB  23          	INC	HL
 2180 EBFC  7E          	LD	A,(HL)
 2181 EBFD  FE 23       	CP	'#'
 2182 EBFF  20 88       CLOS2:	JR	NZ,SNERR4	; SN-ERROR
 2183 EC01  23          	INC	HL
 2184 EC02  CD D421     	CALL	ARGVL1		; Wert abholen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 131
CE48    INC

 2185 EC05  E6 03       	AND	3		; 4 Geraete
 2186 EC07  C1          	POP	BC
 2187 EC08  C8          	RET	Z		; Console -> nichts tun
 2188 EC09  E5          	PUSH	HL
 2189 EC0A  17          	RLA			; *2
 2190 EC0B  81          	ADD	A,C		; Ein-/Ausgabe
 2191 EC0C  F5          	PUSH	AF
 2192 EC0D  3D          	DEC	A
 2193 EC0E  47          	LD	B,A
 2194 EC0F  3E FF       	LD	A,-1
 2195 EC11  17          CLOS3:	RLA			; Bit platzieren
 2196 EC12  10 FD       	DJNZ	CLOS3
 2197 EC14  21 0307     	LD	HL,IOCHNL	; E/A-Flag
 2198 EC17  A6          	AND	(HL)		; Bit loeschen
 2199 EC18  77          	LD	(HL),A
 2200 EC19  F1          	POP	AF
 2201 EC1A  E1          	POP	HL
 2202 EC1B  CB F7       	SET	6,A		; close
 2203 EC1D  D5          	PUSH	DE
 2204 EC1E  5F          	LD	E,A
 2205 EC1F  16 03       	LD	D,3		; BRK-Code
 2206 EC21  CD E00E     	CALL	BASIO		; Kanal schliessen
 2207 EC24  D1          	POP	DE
 2208 EC25  C9          	RET
 2209                   
 2210                   ; BASIC-Erweiterung JOYST(i)
 2211                   ; kompatibel zum KC 87 mit einem Joystick
 2212                   ;
 2213 EC26  CD CDE1     JOYST:	CALL	SNLY14		; Syntax-Check '('
 2214 EC29  E5          	PUSH	HL
 2215 EC2A  11 CDF3     	LD	DE,SNLY16	; Rueckkehr zu Syntax-Check ')'
 2216 EC2D  D5          	PUSH	DE
 2217 EC2E  CD C96F     	CALL	EPRVL3		; Ausdruck berechnen -> DE
 2218 EC31  7B          	LD	A,E
 2219 EC32  3D          	DEC	A
 2220 EC33  B2          	OR	D		; Argument gleich 1?
 2221 EC34  3E 00       	LD	A,0
 2222 EC36  20 9C       	JR	NZ,CSRLN2	; nein: Rueckgabewert 0
 2223 EC38  DB 90       	IN	A,(90h)		; M008 PIO A Daten
 2224 EC3A  2F          	CPL
 2225 EC3B  57          	LD	D,A
 2226 EC3C  E6 0F       	AND	00001111b	; nur Richtungsbits, CY=0
 2227 EC3E  1F          	RRA
 2228 EC3F  30 02       	JR	NC,JOYST1
 2229 EC41  F6 10       	OR	00010000b	; <Up> auf Bit 3, CY=0
 2230 EC43  1F          JOYST1:	RRA
 2231 EC44  30 02       	JR	NC,JOYST2
 2232 EC46  F6 04       	OR	00000100b	; <Down> auf Bit 2
 2233 EC48  5F          JOYST2:	LD	E,A
 2234 EC49  3E 30       	LD	A,00110000b	; Feuertasten
 2235 EC4B  A2          	AND	D
 2236 EC4C  B3          	OR	E
 2237 EC4D  18 85       	JR	CSRLN2		; Rueckgabewert in A
 2238                   
 2239                   ; BASIC: Zufallsgenerator:
 2240                   
 2241 EC4F  ED 5F       RANDOM:	LD	A,R		; Zufallswert aus Refresh-Register
 2242 EC51  32 031D     	LD	(RNDVR3+2),A	; in CONST[0] eintragen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 132
CE48    INC

 2243 EC54  3E 07       	ld	a,7		; und Index auf 7 setzen,
 2244 EC56  32 031B     	ld	(rndvr3),a	; damit dieser Wert sofort benutzt wird.
 2245 EC59  C9          	RET
 2246                   
 2247                   ; BASIC: Kanal oeffnen:
 2248                   
 2249 EC5A  7E          OPEN:	LD	A,(HL)
 2250 EC5B  23          	INC	HL
 2251 EC5C  FE 49       	CP	'I'		; Eingabe?
 2252 EC5E  28 19       	JR	Z,OPEN1
 2253 EC60  FE 4F       	CP	'O'		; Ausgabe?
 2254 EC62  20 9B       	JR	NZ,CLOS2	; SN-ERROR
 2255 EC64  CD DE25     	CALL	OUTCHL		; Kanal-Ausgabe
 2256 EC67  CD DDC8     	CALL	TESTCO
 2257 EC6A  C8          	RET	Z
 2258 EC6B  3E D5       	LD	A,0D5H		; *.UUU
 2259 EC6D  CD DCB2     	CALL	CASS1		; Dateiname aufbereiten
 2260 EC70  21 03EA     	LD	HL,INTPRB	; Druckpuffer=Dateiname
 2261 EC73  AF          	XOR	A
 2262 EC74  CD DDD5     	CALL	CO		; Ausgabe Zeichen
 2263 EC77  E1          	POP	HL
 2264 EC78  C9          	RET
 2265                   	;
 2266 EC79  CD DE5F     OPEN1:	CALL	INCHNL		; Kanal-Eingabe
 2267 EC7C  3A 0309     	LD	A,(ININD)	; IN-Index
 2268 EC7F  E6 03       	AND	3
 2269 EC81  C8          	RET	Z
 2270 EC82  3E D5       	LD	A,0D5H		; *.UUU
 2271 EC84  CD DCB2     	CALL	CASS1		; Dateiname aufbereiten
 2272 EC87  21 03EA     	LD	HL,INTPRB	; Druckpuffer=Dateiname
 2273 EC8A  CD DDE4     	CALL	CI		; Eingabe eines Zeichens
 2274 EC8D  E1          	POP	HL
 2275 EC8E  C9          	RET
 2276                   
 2277                   ; BASIC: Linie zeichnen:
 2278                   
 2279 EC8F  01 043E     BLINE:	LD	BC,43EH		; 4 Parameter, UP LINE
 2280 EC92  18 03       	JR	GRAPH
 2281                   
 2282                   ; BASIC: Kreis zeichnen:
 2283                   
 2284 EC94  01 033F     CIRCLE:	LD	BC,33FH		; 3 Parameter, UP CIRCLE
 2285 EC97  C5          GRAPH:	PUSH	BC
 2286 EC98  CD C96C     	CALL	EPRVL4		; Parameter erfassen
 2287 EC9B  C1          	POP	BC
 2288 EC9C  C5          	PUSH	BC
 2289 EC9D  E5          	PUSH	HL
 2290 EC9E  21 B782     	LD	HL,ARG1		; hier ablegen
 2291 ECA1  7B          GRAPH1:	LD	A,E
 2292 ECA2  CD EAF4     	CALL	IRMWR		; Ablage der Parameter
 2293 ECA5  23          	INC	HL
 2294 ECA6  7A          	LD	A,D
 2295 ECA7  CD EAF4     	CALL	IRMWR
 2296 ECAA  23          	INC	HL
 2297 ECAB  05          	DEC	B
 2298 ECAC  CA EA21     	JP	Z,GRAPH2	; alle Parameter erfasst
 2299 ECAF  E3          	EX	(SP),HL
 2300 ECB0  C5          	PUSH	BC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 133
CE48    INC

 2301 ECB1  CD C8D6     	CALL	CPCOMM		; Komma?
 2302 ECB4  CD C96C     	CALL	EPRVL4		; naechsten Parameter
 2303 ECB7  C1          	POP	BC
 2304 ECB8  E3          	EX	(SP),HL
 2305 ECB9  18 E6       	JR	GRAPH1
 2306                   	;
 2307                   ;GRAPH2:	POP	HL
 2308                   ;	CALL	GFARB		; optionaler Parameter (Farbwert)
 2309                   ;	POP	DE		; E=UP-Nr. fuer LINE oder CIRCLE
 2310                   ;	JP	PV5
 2311                   
 2312                   ; BASIC: DEVICE einstellen
 2313                   ;	Aufruf: DEVICE nr, wobei nr=0 fuer TAPE usw.
 2314                   
 2315 ECBB  CD C8BE     BDEV:	CALL	TCHAR1		; Parameter angegeben?
 2316 ECBE  3E FF       	LD	A,0FFH		; ohne Parameter auflisten was es gibt
 2317 ECC0  C4 D421     	CALL	NZ,ARGVL1	; ansonsten Wert holen
 2318 ECC3  E5          	PUSH	HL
 2319 ECC4  CD F06B     	CALL	IRMON		; IRM ein
 2320 ECC7  CD FBD5     	CALL	SETDEV		; und Geraet entsprechend einstellen
 2321 ECCA  DA F8A5     	JP	C,BD2		; Treiber nicht aktiv -> IO-ERROR
 2322 ECCD  3E FE       	LD	A,0FEh
 2323 ECCF  CD FBD5     	CALL	SETDEV		; Name des Treibers anzeigen
 2324 ECD2  CD F4C7     	CALL	CRLF
 2325 ECD5  CD F088     BD1:	CALL	IRMOF		; IRM aus
 2326 ECD8  E1          	POP	HL
 2327 ECD9  C9          	RET
 2328                   
 2329                   ; BASIC: MC-Programm laden
 2330                   ;	Aufruf: BLOAD "name.typ", wobei Name bei DEVICE=TAPE entfallen kann
 2331                   ; PE:	HL	Zeiger auf Kommando
 2332                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2333                   
 2334 ECDA  CD C8BE     BLOAD:	CALL	TCHAR1		; Parameter angegeben?
 2335 ECDD  28 14       	JR	Z,BLOAD2	; ohne Parameter
 2336 ECDF  CD CD3A     	CALL	SNALY
 2337 ECE2  E5          	PUSH	HL		; Kommandozeile
 2338                   ;	LD	A,12		; max. Laenge Dateiname+Typ
 2339 ECE3  CD ED29     	CALL	MASK		; Zeichenkette in DE
 2340 ECE6  EB          	EX	DE,HL		; Dateiname in HL
 2341 ECE7  CD F06B     BLOAD1:	CALL	IRMON
 2342 ECEA  AF          	XOR	A
 2343 ECEB  32 B781     	LD	(ARGN),A	; ARGN=0 (kein Ladeoffset)
 2344 ECEE  CD F6DE     	CALL	LOAD		; UP 10H direkt aufrufen
 2345 ECF1  18 E2       	JR	BD1
 2346                   	;
 2347 ECF3  E5          BLOAD2:	PUSH	HL
 2348 ECF4  CD ED69     	CALL	DEV		; Kassette?
 2349 ECF7  28 EE       	JR	Z,BLOAD1	; ja, das ist OK ohne Name
 2350 ECF9  1E 24       	LD	E,36		; MO-ERROR
 2351 ECFB  C3 C356     	JP	ERROO		; Error anzeigen
 2352                   
 2353                   ; BASIC: DIR anzeigen aktuelles Speichergeraet
 2354                   ;	Aufruf: FILES "maske", wobei Maske optional ist
 2355                   ; PE:	HL	Zeiger auf Kommando
 2356                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2357                   
 2358 ECFE  CD C8BE     FILES:	CALL	TCHAR1		; Parameter angegeben?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 134
CE48    INC

 2359 ED01  28 10       	JR	Z,FILES3	; ohne Parameter
 2360 ED03  CD CD3A     	CALL	SNALY
 2361 ED06  E5          	PUSH	HL		; Kommandozeile
 2362 ED07  CD ED29     	CALL	MASK		; Zeichenkette in DE
 2363 ED0A  CD F06B     FILES2:	CALL	IRMON		; IRM ein
 2364 ED0D  CD E4DD     	CALL	PV7
 2365 ED10  08          	DB	8		; DEVICE-Funktion DIR aufrufen
 2366 ED11  18 C2       	JR	BD1
 2367                   	;
 2368 ED13  E5          FILES3:	PUSH	HL		; Kommandozeile
 2369 ED14  11 E030     	LD	DE,BASON+1	; zeigt auf eine 0
 2370 ED17  18 F1       	JR	FILES2		; gesamtes Verzeichnis anzeigen
 2371                   
 2372                   ; BASIC: Verzeichnis wechseln
 2373                   ;	Aufruf: CD "verzeichnisname"
 2374                   ; PE:	HL	Zeiger auf Kommando
 2375                   ; PA:	HL	Zeiger weiter gerueckt, wieweit abgearbeitet ist
 2376                   
 2377 ED19              CHDIR:	;CALL	TCHAR1		; Parameter angegeben?
 2378 ED19  CD CD3A     	CALL	SNALY
 2379 ED1C  E5          	PUSH	HL		; Kommandozeile
 2380 ED1D  CD ED29     	CALL	MASK		; Zeichenkette "Verzeichnis" in DE bereitstellen
 2381 ED20  CD F06B     	CALL	IRMON		; IRM ein
 2382 ED23  CD E4DD     	CALL	PV7
 2383 ED26  09          	DB	9		; DEVICE-Funktion CD aufrufen
 2384 ED27  18 AC       	JR	BD1
 2385                   
 2386                   ; Zeichenkette "Maske" bzw. "Verzeichnis" in DE bereitstellen
 2387                   ; PE:	HL	Zeiger auf Ende einer Zeichenkette, direkt nach dem " am Ende
 2388                   ;
 2389 ED29  2B          MASK:	DEC	HL		; zurueck auf letztes Zeichen
 2390 ED2A  7E          	LD	A,(HL)
 2391 ED2B  FE 22       	CP	22H		; Anfuehrungszeichen?
 2392 ED2D  28 FA       	JR	Z,MASK		; dann auch noch davor gehen
 2393 ED2F  23          	INC	HL
 2394 ED30  E5          	PUSH	HL
 2395 ED31  CD D33F     	CALL	ASC1		; DE zeigt jetzt auf Beginn der Maske nach dem "
 2396 ED34  E1          	POP	HL
 2397 ED35  AF          	XOR	A		; A=0 und CY=0
 2398 ED36  ED 52       	SBC	HL,DE
 2399 ED38  44          	LD	B,H
 2400 ED39  4D          	LD	C,L		; BC = Laenge der Zeichenkette
 2401 ED3A  EB          	EX	DE,HL		; HL = Beginn der Zeichenkette
 2402 ED3B  11 0362     	LD	DE,0362H	; INPBUF+1	; Eingabepuffer
 2403 ED3E  D5          	PUSH	DE
 2404 ED3F  ED B0       	LDIR
 2405 ED41  12          	LD	(DE),A		; 0 anhaengen
 2406 ED42  D1          	POP	DE		; Maske in EDIT-PUFFER
 2407 ED43  C9          	RET
 2408                   
 2409                   ; Sprung aus CAOS-ROM-C in INIT-Routine des ROM-Moduls (z.B. M052-USB)
 2410                   ; PE:	A	Schaltzustand Modul ein
 2411                   ;	B	Steckplatz
 2412                   
 2413 ED44  57          JROM:	LD	D,A		; Schaltzustand
 2414 ED45  68          	LD	L,B		; Steckplatz
 2415 ED46  E5          	PUSH	HL		; Steckplatz merken zum wieder ausschalten
 2416 ED47  CD F0E6     	CALL	MODUSW		; M052 einschalten (und MODST aktualisieren)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 135
CE48    INC

 2417                   ;	IN	A,(PIOAD)
 2418                   ;	AND	7Fh		; USER-ROM abschalten (wegen Aufruf aus TEMO)
 2419                   ;	OUT	(PIOAD),A
 2420                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 ED4A  DD CB 04    	 DB	0DDh,0CBh,4
    2 ED4D  BF          	 DB	7 SHL 3 OR 10000111b
 2421 ED4E  D3 86       	OUT	(PORT2),A	; CAOS-ROM C aus!
 2422 ED50  45          	LD	B,L		; Steckplatz
 2423 ED51  21 ED58     	LD	HL,JREX		; Rueckkehr hierher
 2424 ED54  E5          	PUSH	HL
 2425 ED55  C3 C020     	JP	0C020h		; Sprung in Modul-ROM -> Treiber initialisieren
 2426                   	;
 2427 ED58  E1          JREX:	POP	HL		; L=Stekplatz des Moduls
 2428 ED59  16 00       	LD	D,0		; Modul AUS
 2429 ED5B  CD F0E6     	CALL	MODUSW		; Modul wieder aus schalten
 2430 ED5E  C3 FB9B     	JP	CON		; Sprung zurueck in CAOS-ROM C
 2431                   ;_____________________________________________________________
 2432                   ;							**40**
 2433                   ; Berechnen der Quadratwurzel
 2434                   ; PE:	HL	16 Bit-Zahl (vorzeichenlos)
 2435                   ; PA:	A	Ergebnis 8 Bit
 2436                   ; VR:	AF,HL,DE
 2437                   
 2438 ED61  CD FB9B     SQR:	CALL	CON
 2439 ED64  C3 D2D5     	JP	SQRC
 2440                   ;
 2441                   ; DEVICE ermitteln:
 2442                   ; PA:	A	DEVICE-Nummer*32
 2443                   ;	Z=1	TAPE
 2444                   ;	CY=0
 2445                   ;
 2446 ED67  26 A9       DEVH:	LD	H,High(DEVTAB)	; (HL)=Sprungadresse
 2447 ED69  DD 7E 08    DEV:	LD	A,(IX+8)	; Device-Nr. in Bit 2-4
 2448 ED6C  07          DEVROT:	RLCA			;	in Bit 3-5
 2449 ED6D  07          	RLCA			;	in Bit 4-6
 2450 ED6E  07          	RLCA			;	in Bit 5-7
 2451 ED6F  E6 E0       	AND	11100000b	; Device-Nr. ausfiltern, Z=1 wenn Device=0
 2452 ED71  C9          	RET
 2453                   
 2454                   ; Initialisierungstabelle fuer M021:
 2455                   
 2456 ED72  03          CENINI:	DB	3
 2457                   
 2458 ED73  92 05       JOYINI:	 DB	92h,5		; PIO-A Steuerwort
 2459 ED75  E0          	  DB	0E0h		; Interruptvektor
 2460 ED76  CF          	  DB	11001111b	; Einzelbit-Steuermodus
 2461 ED77  7F          	  DB	01111111b	; Nur Bit 7 = Ausgabe (Strobe)
 2462 ED78  97          	  DB	10010111b	; Interrupt bei jeder Bitaenderung
 2463 ED79  C0          	  DB	11000000b	; Ueberwache Bits 0..5
 2464                   
 2465 ED7A  93 02       	 DB	93h,2		; PIO-B Steuerwort
 2466 ED7C  CF          	  DB	11001111b	; Bitbetrieb
 2467 ED7D  00          	  DB	00000000b	; alles Ausgaenge
 2468                   
 2469 ED7E  90 01       	 DB	90h,1		; PIO-A Daten
 2470 ED80  80          	  DB	10000000b	; Strobe passiv
 2471                   ;
 2472                   ; ISR fuer CTC2: Tonlaenge
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 136
CE48    INC

 2473                   ;
 2474 ED81  F5          ISRC2:	PUSH	AF
 2475 ED82  E5          	PUSH	HL
 2476 ED83  CD E47E     	CALL	TOFF		; kehrt mit EI zurueck
 2477 ED86  E1          	POP	HL
 2478 ED87  F1          	POP	AF
 2479 ED88  ED 4D       	RETI
 2480                   
 2481                   ; Reaktion auf ShCLR:
 2482                   
 2483 ED8A  F5          HCPGM:	PUSH	AF
 2484 ED8B  DD 7E 04    	LD	A,(IX+4)	; CAOS-C merken
 2485 ED8E  F5          	PUSH	AF
 2486                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 ED8F  DD CB 04    	 DB	0DDh,0CBh,4
    2 ED92  FF          	 DB	7 SHL 3 OR 11000111b
 2487 ED93  D3 86       	OUT	(PORT2),A	; CAOS-C on
 2488 ED95  CD CAA6     	CALL	HCPGMC
 2489 ED98  F1          	POP	AF
 2490 ED99  CD E29F     	CALL	OUT86		; CAOS-C wie vorher
 2491 ED9C  F1          	POP	AF
 2492 ED9D  C9          	RET
 2493                   ;
 2494                   ; Version 0 fuer TAPE- und DISK-Treiber melden
 2495                   ;
 2496 ED9E  AF          VER0:	XOR	A		; Version 0.0
 2497 ED9F  C9          	RET
 2498                   ;_____________________________________________________________
 2499                   ;							**4A**
 2500                   ; Dezimalausgabe des Wertes in HL
 2501                   ; PE:	HL	Zahl
 2502                   ; VR:	AF, HL, BC
 2503                   
 2504 EDA0  D5          HLDEZ:	PUSH	DE		; bei Rekursion: letzten Rest retten
 2505 EDA1  01 FFF6     	LD	BC,-10
 2506 EDA4  11 FFFF     	LD	DE,-1		; Zaehler fuer Ergebnis (Anzahl Sub's)
 2507 EDA7  09          HLDEZ1:	ADD	HL,BC
 2508 EDA8  13          	INC	DE
 2509 EDA9  38 FC       	JR	C,HLDEZ1	; DE = HL/10
 2510 EDAB  01 000A     	LD	BC,10
 2511 EDAE  09          	ADD	HL,BC		; letzten Abzug korrigieren; HL = Rest
 2512 EDAF  EB          	EX	DE,HL		; 10er / Rest tauschen
 2513 EDB0  7C          	LD	A,H
 2514 EDB1  B5          	OR	L		; Zehner = 0 ?
 2515 EDB2  C4 EDA0     	CALL	NZ,HLDEZ	; Rekursion wenn Zehner vorhanden
 2516 EDB5  7B          	LD	A,E
 2517 EDB6  C6 30       	ADD	A,'0'		; Rest -> ASCII in A
 2518 EDB8  CD F3BE     	CALL	OCHR		; Ziffer ausgeben
 2519 EDBB  D1          	POP	DE		; voriger Rest
 2520 EDBC  C9          	RET
 2521                   ;
 2522                   ; Tabelle der ESC-Funktionen:
 2523                   ;
 2524 EDBD  E1D3        ESCTAB:	DW	ESC0		; Tabulatorsprung			ESC'0'
 2525 EDBF  F946        	DW	ESC1		; Anzeige Bild 0	Zugriff Bild 0	ESC'1'
 2526 EDC1  F94B        	DW	ESC2		;	  Bild 1		Bild 1	ESC'2'
 2527 EDC3  F950        	DW	ESC3		;	  Bild 0		Bild 1	ESC'3'
 2528 EDC5  F955        	DW	ESC4		;	  Bild 1		Bild 0	ESC'4'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 137
CE48    INC

 2529 EDC7  F0CF        	DW	ESC5		; MODUL-Anzeige				ESC'5'
 2530 EDC9  F0D7        	DW	ESC6		; SYSTEM-Anzeige			ESC'6'
 2531 EDCB  F994        	DW	ESC7		; Pixel invertieren			ESC'7'
 2532 EDCD  E2CF        	DW	ESC8		; Farbe invertieren			ESC'8'
 2533 EDCF  F99D        	DW	ESC9		; Farbebene ein/aus			ESC'9'
 2534 EDD1  F9A4        	DW	ESCA		; HiRes ein/aus				ESC'A'
 2535 EDD3  F9BA        	DW	ESCB		; HRG ein/aus				ESC'B'
 2536 EDD5  F991        	DW	ESCC		; IBM/CAOS-Zeichensatz			ESC'C'
 2537 EDD7  F0EE        	DW	ESCD		; DEVICE-Umschaltung			ESC'D'
 2538 EDD9  E000        	DW	0E000H		; Soft-Reset				ESC'E'
 2539 EDDB  F000        	DW	0F000H		; Soft-Power-On				ESC'F'
 2540 EDDD  F98E        	DW	ESCG		; Umschaltung 2-Monitor-Betrieb		ESC'G'
 2541 EDDF  F0F6        	DW	ESCH		; Hilfefunktion (Idee aus CAOS 6.0)	ESC'H'
 2542 EDE1              ESCX:
 2543                   
 2544 EDE1  49 4E 49 54 INIT:	DB	'INIT',cr,0	; CAOS 4.8: Autostart-Kommando
 2545 EDE7  49 4E 49 54 UUU:	DB	'INITIAL.UUU',0	; Standard-Dateiname fuer %INIT
 2546                   
 2547                   	ABSFILL	0EDF7h,<ROM-E-Ende>
    7 EDF3  FF FF FF FF 	  DS	0EDF7h - $,0FFh
 2548                   
 2549                   ; High-Byte der Adresse muss konstant sein!
 2550                   ; je 1 Byte fuer Eingabe + Ausgabe pro Kanal
 2551                   
 2552 EDF7  16 24       BUPTAB:	DB	16H, 24H	; INTB, OCHR	Kanel #0 - Konsole
 2553 EDF9  37 38       	DB	37H, 38H	; MBIN, MBOUT	Kanal #1 - Kassette
 2554 EDFB  06 02       	DB	06H, 02H	; USIN1, UOT1	Kanal #2 - Anwenderkanal 2
 2555 EDFD  07 03       	DB	07H, 03H	; USIN2, UOT2	Kanal #3 - Anwenderkanal 3
 2556                   
 2557 EDFF              VERSION:
 2558 EDFF  48          	DB	48H		; CAOS-Version 4.8
  242 EE00              LARGE:
  243         0000      if duenn
  245                   else
  246                   	INCLUDE ZSGROSS.INC	; Zeichensatz Grossbuchstaben Standard
    1                   ;*****************************************
    2                   ;**	CAOS 4.8 Zeichensatz Gross	**
    3                   ;**					**
    4                   ;**	Adresse:  EE00h bis EFFFh	**
    5                   ;**	Codes 20h-5Fh			**
    6                   ;**					**
    7                   ;**	letzte Aenderung: 05.02.2018	**
    8                   ;*****************************************
    9                   
   10 EE00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 000H, 000H	; 20H
   11 EE08  30 78 78 30 	DB	030H, 078H, 078H, 030H, 030H, 000H, 030H, 000H	; 21H !
   12 EE10  EE 66 CC 00 	DB	0EEH, 066H, 0CCH, 000H, 000H, 000H, 000H, 000H	; 22H "
   13 EE18  36 36 FE 6C 	DB	036H, 036H, 0FEH, 06CH, 0FEH, 0D8H, 0D8H, 000H	; 23H #
   14 EE20  30 7C D0 7C 	DB	030H, 07CH, 0D0H, 07CH, 036H, 0FCH, 030H, 000H	; 24H $
   15 EE28  00 C6 CC 18 	DB	000H, 0C6H, 0CCH, 018H, 030H, 066H, 0C6H, 000H	; 25H %
   16 EE30  38 6C 38 76 	DB	038H, 06CH, 038H, 076H, 0DCH, 0CCH, 076H, 000H	; 26H &
   17 EE38  1C 0C 18 00 	DB	01CH, 00CH, 018H, 000H, 000H, 000H, 000H, 000H	; 27H '
   18 EE40  18 30 60 60 	DB	018H, 030H, 060H, 060H, 060H, 030H, 018H, 000H	; 28H (
   19 EE48  60 30 18 18 	DB	060H, 030H, 018H, 018H, 018H, 030H, 060H, 000H	; 29H )
   20 EE50  00 66 3C FF 	DB	000H, 066H, 03CH, 0FFH, 03CH, 066H, 000H, 000H	; 2AH *
   21 EE58  00 30 30 FC 	DB	000H, 030H, 030H, 0FCH, 030H, 030H, 000H, 000H	; 2BH +
   22 EE60  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 01CH, 00CH, 018H	; 2CH ,
   23 EE68  00 00 00 FE 	DB	000H, 000H, 000H, 0FEH, 000H, 000H, 000H, 000H	; 2DH -
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 138
ZSGROSS INC

   24 EE70  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 030H, 030H, 000H	; 2EH .
   25 EE78  06 0C 18 30 	DB	006H, 00CH, 018H, 030H, 060H, 0C0H, 080H, 000H	; 2FH /
   26                   
   27 EE80  7C C6 CE DE 	DB	07CH, 0C6H, 0CEH, 0DEH, 0F6H, 0E6H, 07CH, 000H	; 30H 0
   28 EE88  30 70 30 30 	DB	030H, 070H, 030H, 030H, 030H, 030H, 0FCH, 000H	; 31H 1
   29 EE90  78 CC 0C 38 	DB	078H, 0CCH, 00CH, 038H, 060H, 0CCH, 0FCH, 000H	; 32H 2
   30 EE98  FC 18 30 78 	DB	0FCH, 018H, 030H, 078H, 00CH, 0CCH, 078H, 000H	; 33H 3
   31 EEA0  1C 3C 6C CC 	DB	01CH, 03CH, 06CH, 0CCH, 0FEH, 00CH, 01EH, 000H	; 34H 4
   32 EEA8  FC C0 F8 0C 	DB	0FCH, 0C0H, 0F8H, 00CH, 00CH, 0CCH, 078H, 000H	; 35H 5
   33 EEB0  38 60 C0 F8 	DB	038H, 060H, 0C0H, 0F8H, 0CCH, 0CCH, 078H, 000H	; 36H 6
   34 EEB8  FC CC 0C 18 	DB	0FCH, 0CCH, 00CH, 018H, 030H, 030H, 030H, 000H	; 37H 7
   35 EEC0  78 CC CC 78 	DB	078H, 0CCH, 0CCH, 078H, 0CCH, 0CCH, 078H, 000H	; 38H 8
   36 EEC8  78 CC CC 7C 	DB	078H, 0CCH, 0CCH, 07CH, 00CH, 018H, 070H, 000H	; 39H 9
   37 EED0  00 00 30 30 	DB	000H, 000H, 030H, 030H, 000H, 030H, 030H, 000H	; 3AH :
   38 EED8  00 00 30 30 	DB	000H, 000H, 030H, 030H, 000H, 030H, 030H, 060H	; 3BH ;
   39 EEE0  18 30 60 C0 	DB	018H, 030H, 060H, 0C0H, 060H, 030H, 018H, 000H	; 3CH <
   40 EEE8  00 00 FC 00 	DB	000H, 000H, 0FCH, 000H, 0FCH, 000H, 000H, 000H	; 3DH =
   41 EEF0  60 30 18 0C 	DB	060H, 030H, 018H, 00CH, 018H, 030H, 060H, 000H	; 3EH >
   42 EEF8  78 CC 0C 18 	DB	078H, 0CCH, 00CH, 018H, 030H, 000H, 030H, 000H	; 3FH ?
   43                   
   44 EF00  7C C6 DE D6 	DB	07CH, 0C6H, 0DEH, 0D6H, 0DEH, 0C0H, 078H, 000H	; 40H @
   45 EF08  30 78 CC CC 	DB	030H, 078H, 0CCH, 0CCH, 0FCH, 0CCH, 0CCH, 000H	; 41H A
   46 EF10  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 066H, 066H, 0FCH, 000H	; 42H B
   47 EF18  3C 66 C0 C0 	DB	03CH, 066H, 0C0H, 0C0H, 0C0H, 066H, 03CH, 000H	; 43H C
   48 EF20  F8 6C 66 66 	DB	0F8H, 06CH, 066H, 066H, 066H, 06CH, 0F8H, 000H	; 44H D
   49 EF28  FE 62 68 78 	DB	0FEH, 062H, 068H, 078H, 068H, 062H, 0FEH, 000H	; 45H E
   50 EF30  FE 62 68 78 	DB	0FEH, 062H, 068H, 078H, 068H, 060H, 0F0H, 000H	; 46H F
   51 EF38  3C 66 C0 C0 	DB	03CH, 066H, 0C0H, 0C0H, 0CEH, 066H, 03CH, 000H	; 47H G
   52 EF40  CC CC CC FC 	DB	0CCH, 0CCH, 0CCH, 0FCH, 0CCH, 0CCH, 0CCH, 000H	; 48H H
   53 EF48  78 30 30 30 	DB	078H, 030H, 030H, 030H, 030H, 030H, 078H, 000H	; 49H I
   54 EF50  1E 0C 0C 0C 	DB	01EH, 00CH, 00CH, 00CH, 0CCH, 0CCH, 078H, 000H	; 4AH J
   55 EF58  E6 66 6C 70 	DB	0E6H, 066H, 06CH, 070H, 06CH, 066H, 0E6H, 000H	; 4BH K
   56 EF60  F0 60 60 60 	DB	0F0H, 060H, 060H, 060H, 062H, 066H, 0FEH, 000H	; 4CH L
   57 EF68  C6 EE FE D6 	DB	0C6H, 0EEH, 0FEH, 0D6H, 0C6H, 0C6H, 0C6H, 000H	; 4DH M
   58 EF70  C6 E6 F6 DE 	DB	0C6H, 0E6H, 0F6H, 0DEH, 0CEH, 0C6H, 0C6H, 000H	; 4EH N
   59 EF78  38 6C C6 C6 	DB	038H, 06CH, 0C6H, 0C6H, 0C6H, 06CH, 038H, 000H	; 4FH O
   60                   
   61 EF80  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 060H, 060H, 0F0H, 000H	; 50H P
   62 EF88  78 CC CC CC 	DB	078H, 0CCH, 0CCH, 0CCH, 0DCH, 078H, 01CH, 000H	; 51H Q
   63 EF90  FC 66 66 7C 	DB	0FCH, 066H, 066H, 07CH, 06CH, 066H, 0E6H, 000H	; 52H R
   64 EF98  7C C6 F0 3C 	DB	07CH, 0C6H, 0F0H, 03CH, 00EH, 0C6H, 07CH, 000H	; 53H S
   65 EFA0  FC B4 30 30 	DB	0FCH, 0B4H, 030H, 030H, 030H, 030H, 078H, 000H	; 54H T
   66 EFA8  CC CC CC CC 	DB	0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 0CCH, 078H, 000H	; 55H U
   67 EFB0  CC CC CC 78 	DB	0CCH, 0CCH, 0CCH, 078H, 078H, 030H, 030H, 000H	; 56H V
   68 EFB8  C6 C6 C6 D6 	DB	0C6H, 0C6H, 0C6H, 0D6H, 0FEH, 0EEH, 0C6H, 000H	; 57H W
   69 EFC0  C6 C6 6C 38 	DB	0C6H, 0C6H, 06CH, 038H, 06CH, 0C6H, 0C6H, 000H	; 58H X
   70 EFC8  CC CC CC 78 	DB	0CCH, 0CCH, 0CCH, 078H, 030H, 030H, 078H, 000H	; 59H Y
   71 EFD0  FE C6 8C 18 	DB	0FEH, 0C6H, 08CH, 018H, 032H, 066H, 0FEH, 000H	; 5AH Z
   72 EFD8  FF FF FF FF 	DB	0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH	; 5BH Vollzeichen
   73 EFE0  18 18 18 18 	DB	018H, 018H, 018H, 018H, 018H, 018H, 018H, 000H	; 5CH senkr. Strich
   74 EFE8  00 FE 06 06 	DB	000H, 0FEH, 006H, 006H, 000H, 000H, 000H, 000H	; 5DH Negationszeichen
   75 EFF0  10 38 6C C6 	DB	010H, 038H, 06CH, 0C6H, 000H, 000H, 000H, 000H	; 5EH ^
   76 EFF8  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 000H, 0FFH	; 5FH _
  247                   endif
  248                   	INCLUDE	CF48.INC	; ROM-F (F000-FDFF)
    1                   ;*****************************************
    2                   ;**	CAOS 4.8	ROM F		**
    3                   ;**					**
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 139
CF48    INC

    4                   ;**	Adresse:  F000h bis FDFFh	**
    5                   ;**					**
    6                   ;**	letzte Aenderung: 28.10.2022	**
    7                   ;*****************************************
    8                   
    9                   ;	ORG	0F000H
   10                   				;			  feste Adresse
   11 F000  C3 F153     	JP	PWRON		; >> POWER ON <<		F000
   12 F003  C3 F039     	JP	PV1		; DEFB nr			F003
   13 F006  18 4F       	JR	PV2		; (ARGC)=nr			F006
   14 F008  02          ZEI2:	DB	2	; UOUT1					F008
   15 F009  18 4A       	JR	PV3		; E=nr				F009
   16 F00B  03          ZEI3:	DB	3	; UOUT2					F00B
   17 F00C  C3 E03D     	JP	PV4		; E=nr, IRM e/a			F00C
   18 F00F  C3 F09F     	JP	RCALL		; DEFW offset			F00F
   19 F012  C3 F15A     	JP	BYE		; JUMP-Einsprung		F012
   20 F015  18 16       	JR	PV5		; E=nr, IRM/Stack		F015
   21 F017  04          INTT1:	DB	4	; KBD					F017
   22 F018  C3 F06B     	JP	IRMON		;				F018
   23 F01B  C3 F088     	JP	IRMOF		;				F01B
   24 F01E  18 04       	JR	PV6		; (ARGC)=nr			F01E
   25 F020  00          OUTT1:	DB	0	; CRT					F020
   26 F021  C3 E4DD     	JP	PV7		; DEVICE-Aufruf, DEFB nr.	F021
   27                   				; PV7 ab CAOS 4.7 verfuegbar
   28 F024  C5          PV6:	PUSH	BC
   29 F025  CD F06B     	CALL	IRMON
   30 F028  CD F057     	CALL	PV2
   31 F02B  18 07       	JR	PV51
   32                   
   33 F02D  C5          PV5:	PUSH	BC
   34 F02E  CD F06B     	CALL	IRMON
   35 F031  CD F055     	CALL	PV3
   36 F034  CD F088     PV51:	CALL	IRMOF
   37 F037  C1          	POP	BC
   38 F038  C9          	RET
   39                   
   40 F039  F3          PV1:	DI
   41 F03A  E5          	PUSH	HL
   42 F03B  E1          	POP	HL
   43 F03C  E1          	POP	HL
   44 F03D  23          	INC	HL		; nr uebergehen
   45 F03E  E5          	PUSH	HL
   46 F03F  2B          	DEC	HL		; (HL)=nr
   47 F040  3B          	DEC	SP
   48 F041  3B          	DEC	SP
   49 F042  FB          	EI
   50 F043  F5          	PUSH	AF
   51 F044  D5          	PUSH	DE
   52 F045  5E          	LD	E,(HL)
   53 F046  16 00       PV22:	LD	D,0
   54 F048  2A B7B0     	LD	HL,(SUTAB)
   55 F04B  19          	ADD	HL,DE
   56 F04C  19          	ADD	HL,DE		; HL=Pos. in Tab
   57 F04D  5E          	LD	E,(HL)
   58 F04E  23          	INC	HL
   59 F04F  56          	LD	D,(HL)
   60 F050  EB          	EX	DE,HL
   61 F051  D1          	POP	DE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 140
CF48    INC

   62 F052  F1          	POP	AF
   63 F053  E3          	EX	(SP),HL
   64 F054  C9          	RET			; UP anspringen
   65                   
   66 F055  37          PV3:	SCF			; VR: F
   67                   ;	JR	PV21
   68 F056  ED          	DB	0EDH		; ED A7 = NOP (Trick aus CAOS 3.4 uebernommern)
   69 F057  A7          PV2:	AND	A		; VR: F
   70 F058  E5          PV21:	PUSH	HL
   71 F059  D5          	PUSH	DE
   72 F05A  C5          	PUSH	BC
   73 F05B  E5          	PUSH	HL
   74 F05C  21 E0B4     	LD	HL,POP3		; Returnadresse
   75 F05F  E3          	EX	(SP),HL		; auf Stack legen
   76 F060  E5          	PUSH	HL
   77 F061  F5          	PUSH	AF
   78 F062  D5          	PUSH	DE
   79 F063  38 E1       	JR	C,PV22		; falls PV3
   80 F065  3A B780     	LD	A,(ARGC)	; sonst E
   81 F068  5F          	LD	E,A		; beschaffen
   82 F069  18 DB       	JR	PV22
   83                   ;
   84                   ; IRM ein und Stack auf (SYSP) setzen
   85                   ; aktuellen SP in IY merken
   86                   ; VR:	BC, F
   87                   ;
   88 F06B  C1          IRMON:	POP	BC		; Rueckkehradresse
   89 F06C  FD E5       	PUSH	IY		; Inhalt von IY auf Anwenderstack legen
   90 F06E  FD 21 0000  	LD	IY,0		; SP in IY merken
   91 F072  FD 39       	ADD	IY,SP		; (kein UP veraendert IY waehrend IRM ON!)
   92 F074  F3          	DI
   93 F075  DD 77 0B    	LD	(IX+11),A	; Inhalt von Register A merken
   94 F078  DB 88       	IN	A,(PIOAD)
   95 F07A  F6 24       	OR	00100100b	; IRM+LED ein
   96 F07C  D3 88       	OUT	(PIOAD),A
   97 F07E  ED 7B B7AE  	LD	SP,(SYSP)	; System-SP verwenden
   98 F082  FB          	EI
   99 F083  DD 7E 0B    	LD	A,(IX+11)	; Register A regenerieren
  100 F086  C5          	PUSH	BC
  101 F087  C9          	RET			; wie JP (BC)
  102                   ;
  103                   ; IRM ausschalten und Stack auf IY setzen
  104                   ; VR:	BC
  105                   ;
  106 F088  C1          IRMOF:	POP	BC		; analog IRMON
  107 F089  DD 77 0B    	LD	(IX+11),A	; Inhalt von Register A merken
  108 F08C  DB 88       	IN	A,(PIOAD)
  109 F08E  CB 97       	RES	2,A		; IRM+LED aus
  110 F090  CB AF       	RES	5,A		; (F unveraendert)
  111 F092  F3          	DI
  112 F093  D3 88       	OUT	(PIOAD),A
  113 F095  FD F9       	LD	SP,IY		; gemerkten Anwender-SP regenerieren
  114 F097  FB          	EI
  115 F098  DD 7E 0B    	LD	A,(IX+11)	; Register A regenerieren
  116 F09B  FD E1       	POP	IY		; Inhalt von IY von Anwenderstack holen
  117 F09D  C5          	PUSH	BC
  118 F09E  C9          	RET
  119                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 141
CF48    INC

  120                   ; Relativer UP-Aufruf ohne Registerzerstoerung:
  121                   
  122 F09F  E3          RCALL:	EX	(SP),HL
  123 F0A0  D5          	PUSH	DE
  124 F0A1  5E          	LD	E,(HL)
  125 F0A2  23          	INC	HL
  126 F0A3  56          	LD	D,(HL)		; DE=Offset
  127 F0A4  23          	INC	HL
  128 F0A5  EB          	EX	DE,HL
  129 F0A6  19          	ADD	HL,DE		; addieren
  130 F0A7  E3          	EX	(SP),HL		; Zieladresse
  131 F0A8  EB          	EX	DE,HL		; DE von Stack
  132 F0A9  F3          	DI
  133 F0AA  33          	INC	SP
  134 F0AB  33          	INC	SP
  135 F0AC  E3          	EX	(SP),HL		; HL von Stack
  136 F0AD  3B          	DEC	SP
  137 F0AE  3B          	DEC	SP
  138 F0AF  FB          	EI
  139 F0B0  C9          	RET			; Ziel anspringen
  140                   
  141                   ;BNROST: LD	A,(IX+2)	; Blocknummer
  142 F0B1  CD F3AD     AHOSTR:	CALL	AHEX		; Register A und folgende Zeichenkette
  143                   ;_____________________________________________________________
  144                   ;							**23**
  145                   ; Ausgabe einer Zeichenkette
  146                   ; Zeichektette hinter dem CALL, Ende mit 00h
  147                   ; PE/PA: -
  148                   ; VR:	AF
  149                   
  150 F0B4  E3          OSTR:	EX	(SP),HL
  151 F0B5  CD F8EE     	CALL	ZKOUT		; Zeichenkette ausgeben
  152 F0B8  E3          	EX	(SP),HL
  153 F0B9  C9          	RET
  154                   
  155                   ; Module listen, lesen, schalten:
  156                   
  157 F0BA  7F7F        SWI7F:	DW	7F7FH
  158 F0BC  53 57 49 54 	DB	'SWITCH'
  159 F0C2  01          	DB	1
  160 F0C3  A7          	AND	A		; Argumente?
  161 F0C4  28 06       	JR	Z,MLIST		; nein, Module auflisten
  162 F0C6  01 C34E     	LD	BC,SWIC		; lesen/schalten
  163 F0C9  C3 FB87     	JP	CLROMC		; im ROM-C ausfuehren
  164                   	;
  165 F0CC  CD F0D7     MLIST:	CALL	ESC6		; interne Module listen
  166                   	;
  167 F0CF  CD FB9B     ESC5:	CALL	CON
  168 F0D2  CD C29C     	CALL	MODULC		; externe Module listen
  169 F0D5  18 06       	JR	ESC61
  170                   
  171                   ;SYS7F:	DW	7F7FH		; Dieses Menuewort ist ab CAOS 4.6 nicht
  172                   ;	DB	'SYSTEM'	; mehr erforderlich - macht SWITCH mit!
  173                   ;	DB	11H
  174 F0D7  CD FB9B     ESC6:	CALL	CON
  175 F0DA  CD C1C5     	CALL	SYSTC		; Systemcheck (interne Module 0-5)
  176 F0DD  ED 5B B7A0  ESC61:	LD	DE,(CURSO)	; aktuelle Cursorposition mitnehmen
  177 F0E1  C3 FB8A     MCOFF:	JP	COFF
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 142
CF48    INC

  178                   
  179                   ; Module lesen und Schalten
  180 F0E4  2E 02       MODUL2:	LD	L,2		; 2=USER-ROM
  181 F0E6  3E 02       MODUSW:	LD	A,2		; Modul schalten
  182                   ;_____________________________________________________________
  183                   ;							**26**
  184                   ; Module lesen und Schalten
  185                   ; PE:	A=0 oder 1	Lesen
  186                   ;	A=2 oder >2	Schalten
  187                   ;	L	Steckplatz
  188                   ;	D	Steuerbyte
  189                   ; PA:	H	Modultyp (Strukturbyte)
  190                   ;	D	Modulsteuerbyte
  191                   ; VR:	AF,H,BC
  192                   
  193 F0E8  01 C3B7     MODU:	LD	BC,MODUC
  194 F0EB  C3 FB87     	JP	CLROMC		; im ROM-C ausfuehren
  195                   
  196 F0EE  CD FB9B     ESCD:	CALL	CON
  197 F0F1  CD D646     	CALL	ESCDD		; DEVICE-Umschaltung
  198 F0F4  18 E7       	JR	ESC61
  199                   
  200 F0F6  CD FB9B     ESCH:	CALL	CON
  201 F0F9  CD D9AB     	CALL	HELP		; alle erreichbaren Menueworte auflisten
  202 F0FC  ED 5B B7A0  	LD	DE,(CURSO)	; aktuelle Cursorposition
  203 F100  1E 00       	LD	E,0		; jedoch Spalte 0 setzen
  204 F102  18 DD       	JR	MCOFF
  205                   
  206                   ; Betriebssystem wechseln:
  207                   
  208 F104  7F7F        JUMP7F:	DW	7F7FH
  209 F106  4A 55 4D 50 	DB	'JUMP'
  210 F10A  03          	DB	3
  211 F10B  7D          	LD	A,L		; Steckplatz
  212                   ;_____________________________________________________________
  213                   ;							**27**
  214                   ; Sprung in ein neues Betriebssystem
  215                   ; PE:	A	Modulsteckplatz 8-FF
  216                   ;		oder CAOS-ROM-Ebene 0-7
  217                   
  218         0001      if SYSROM
  219                   ;
  220                   ; 13.06.2021:
  221                   ; JUMP-Erweiterung: Wechsel der 8 CAOS-System-Ebenen
  222                   ; JUMP 0 bis JUMP 7 springt in die verschiedenen Systeme
  223                   ;
  224 F10C  FE 08       JUMP:	CP	8		; externes Modul ab Steckplatz 8?
  225 F10E  DC FB9B     	CALL	C,CON		; bei JUMP 0-7: ROM-C einschalten
  226 F111  DA C652     	JP	C,JUMPC		; und weiter zu JUMP-Erweiterung im ROM-C
  227                   else
  230                   endif
  231 F114  47          	LD	B,A
  232 F115  0E 80       	LD	C,80H
  233 F117  ED 78       	IN	A,(C)
  234 F119  3C          	INC	A		; Kennbyte FF?
  235 F11A  20 13       	JR	NZ,JUM0
  236 F11C  CD F0B4     	CALL	OSTR
  237 F11F  4B 65 69 6E 	DB	'Kein Modul!'
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 143
CF48    INC

  238 F12A  07 0D 0A 00 	DB	7,CR,LF,0
  239 F12E  C9          	RET
  240                   	;
  241 F12F  C5          JUM0:	PUSH	BC
  242 F130  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
  243 F132  06 07       	LD	B,7		; ab Platz 7!
  244 F134  04          JUM1:	INC	B
  245 F135  28 0D       	JR	Z,JUM2		; bis FF
  246 F137  ED 78       	IN	A,(C)
  247 F139  2F          	CPL
  248 F13A  E6 70       	AND	70H		; Speichermodul?
  249 F13C  20 F6       	JR	NZ,JUM1
  250 F13E  ED 79       	OUT	(C),A		; aus
  251 F140  68          	LD	L,B
  252 F141  77          	LD	(HL),A
  253 F142  18 F0       	JR	JUM1
  254                   	;
  255 F144  C1          JUM2:	POP	BC
  256 F145  3E FF       	LD	A,0FFH		; Ausgabe FF (Adresse C000)
  257 F147  68          	LD	L,B
  258 F148  77          	LD	(HL),A		; Eintrag
  259 F149  F3          	DI
  260 F14A  ED 79       	OUT	(C),A		; einschalten
  261 F14C  DB 88       	IN	A,(PIOAD)
  262 F14E  E6 7E       	AND	01111110b	; interne ROMs abschalten
  263 F150  C3 B7B4     	JP	NCAOS		; Sprung ueber IRM
  264                   
  265                   ; Einschalt-Initialisierung:
  266                   
  267 F153  3E E3       PWRON:	LD	A,0E3H		; RAM4 WR einschalten, CAOS-Bank 0
  268 F155  D3 86       	OUT	(PORT2),A	; und CAOS-C ein
  269 F157  C3 C051     	JP	PWRONC		; Programm im ROM-C weiter abarbeiten ...
  270                   ;
  271                   ; Tasten-RESET und JUMP-Einsprung:
  272                   ;
  273 F15A  31 01C4     BYE:	LD	SP,STACK	; System-Stack setzen
  274 F15D  3E E3       	LD	A,0E3H		; RAM4 WR einschalten, CAOS-Bank 0
  275 F15F  D3 86       	OUT	(PORT2),A	; und CAOS-C ein
  276 F161  CD C0A1     	CALL	SYSI		; Systeminitialisierung
  277 F164  CD CA34     PWR4:	CALL	V24INI		; M003 suchen und initialisieren
  278 F167  CD FB8A     	CALL	COFF		; CAOS-C ausschalten (Standard)
  279 F16A  01 0880     	LD	BC,880H		; auf Steckplatz 8
  280 F16D  ED 78       	IN	A,(C)		; ROM-Modul mit Strukturbyte
  281 F16F  3D          	DEC	A		; 01 vorhanden?
  282 F170  20 16       	JR	NZ,PWR6		; nein!
  283 F172  DD CB 08 B6 	RES	6,(IX+8)	; Autostartmodul setzt INIT-Kommando zurueck
  284 F176  3E 41       	LD	A,41H		; 43H bis CAOS 4.6, also mit Schreibfreigabe
  285 F178  ED 79       	OUT	(C),A		; R/O einschalten auf Adresse 4000H
  286 F17A  32 B808     	LD	(MODST+8),A	; Schaltzustand eintragen
  287 F17D  DD 7E 04    	LD	A,(IX+4)
  288 F180  E6 FC       	AND	0FCH		; internen RAM4 ausschalten
  289 F182  CD E29F     	CALL	OUT86		; (IX+4) und PORT2 einstellen
  290 F185  C3 4000     	JP	4000H		; Adresse 4000h im Modul anspringen
  291                   	;
  292 F188  06 FC       PWR6:	LD	B,0FCH
  293 F18A  ED 78       	IN	A,(C)
  294 F18C  FE A7       	CP	0A7H		; Floppy vorhanden?
  295 F18E  20 37       	JR	NZ,PWR7		; nein
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 144
CF48    INC

  296                   ;	OUT	(C),A		; einschalten mit Steuerbyte A7H
  297                   ; Befehl kann entfallen, da die Kopplung fuer die Treibersuche bereits ein ist!
  298 F190  01 B3F3     	LD	BC,UROK		; 0B3F3H
  299 F193  ED 78       	IN	A,(C)		; Betriebsart ermitteln
  300 F195  3D          	DEC	A
  301 F196  28 3B       	JR	Z,PWR8		; 1=CP/M-Betriebsart erkannt
  302 F198  FE 04       	CP	4
  303 F19A  28 37       	JR	Z,PWR8		; 5=CAOS-Betriebsart erkannt
  304 F19C  CD F0B4     	CALL	OSTR
  305 F19F  0C 0A       	DB	0CH,LF		; Ansonsten: Autostart mit JUMP FC
  306 F1A1  41 75 74 6F 	DB	'Autostart Floppy'
  307 F1B1  0D 0A 00    	DB	CR,LF,0
  308 F1B4  06 00       	LD	B,0
  309 F1B6  CD F667     PWR5:	CALL	BRKT		; BRK-Taste gedrueckt?
  310 F1B9  38 18       	JR	C,PWR8		; ja, dann kein Autostart
  311 F1BB  10 F9       	DJNZ	PWR5		; 256-mal abfragen
  312 F1BD  3E 01       	LD	A,1
  313 F1BF  32 B781     	LD	(ARGN),A	; ein Parameter fuer JUMP FC vorgeben
  314 F1C2  3E FC       	LD	A,0FCH
  315 F1C4  CD F10C     	CALL	JUMP		; Startversuch
  316                   ;	JR	PWR8
  317                   
  318                   ; neu ab CAOS 4.8: Autostart INIT (z.B. bei USB)
  319                   
  320 F1C7  CD ED69     PWR7:	CALL	DEV		; aktuelles Device in Bit 2-4
  321 F1CA  3C          	INC	A		; Steckplatz
  322 F1CB  26 A9       	LD	H,High(DevTab)
  323 F1CD  6F          	LD	L,A
  324 F1CE  7E          	LD	A,(HL)		; Steckplatz des aktuellen Device?
  325 F1CF  FE 08       	CP	8		; externes Modul?
  326 F1D1  30 04       	JR	NC,PWR9		; ja
  327 F1D3  DD CB 08 B6 PWR8:	RES	6,(IX+8)	; Autostart (INIT) bei TAPE und DISK unterbinden
  328 F1D7  AF          PWR9:	XOR	A
  329 F1D8  32 B781     	LD	(ARGN),A	; MENU ohne Parameter ausfuehren!
  330 F1DB  18 08       	JR	MEN0
  331                   ;
  332                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  333                   ;
  334                   ; Epilogverwaltung:		(bereits in CAOS 2.5 von Frank Klemm realisiert)
  335                   ; -----------------		HEX/DEZ-Argumenta ab CAOS 4.8
  336                   ; Epiloge 0 ... 1F
  337                   ;
  338                   ; Bit:  4      3      2      1      0
  339                   ;	I      I      I	     I	    \
  340                   ;  0 = hex     -------+-------	   IRM 
  341                   ;  1 = dezimal   Anzahl der
  342                   ;	         Argumente	  on/off
  343                   ;
  344                   ; wenn Epilog 1F -> dann keine Auswer-
  345                   ; tung der Argumente, DE Zeiger auf Args
  346                   ;
  347                   ;*__*__*__*__*__*__*__*__*__*__*__*__*__
  348                   ;
  349                   ; Menue Display
  350                   ;
  351 F1DD  7F7F        	DW	7F7FH
  352 F1DF  4D 45 4E 55 	DB	'MENU'
  353 F1E3  01          	DB	1
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 145
CF48    INC

  354 F1E4  E1          	POP	HL		; Stack clear
  355 F1E5  01 DA75     MEN0:	LD	BC,SHORT	; Kurzform CAOS-Titelzeile mit DEVICE anzeigen
  356 F1E8  CD FB87     	CALL	CLROMC		; im ROM-C ausfuehren
  357                   ;_____________________________________________________________
  358                   ;							**46**
  359                   ; Menue anzeigen und Uebergang zur Kommandoeingabe
  360                   ; PE:	(IX+9)	Prologbyte
  361                   ;	ARGN=1	ARG1 auswerten
  362                   ;	ARG1=0	MENU normal anzeigen
  363                   ;	ARG1=1	versteckte Menueworte mit anzeigen
  364                   ;	ARG1=2	Adressen mit anzeigen
  365                   ;	ARGN=3	versteckte Menueworte und Adressen anzeigen
  366                   ; PA/VR: -
  367                   
  368 F1EB  2A B781     MENU:	LD	HL,(ARGN)
  369 F1EE  1E 00       	LD	E,0		; Parameter zum Testen in E bereithalten
  370 F1F0  2D          	DEC	L		; ARGN=1?
  371 F1F1  20 01       	JR	NZ,MEN1		; nein, E=0 verwenden
  372 F1F3  5C          	LD	E,H		; E=ARG1
  373 F1F4  21 C000     MEN1:	LD	HL,0C000H	; Menuewortsuche immer ab C000H
  374 F1F7  4D          	LD	C,L
  375 F1F8  45          	LD	B,L		; BC=0 (Suchlaenge)
  376 F1F9  CD F4C7     MEN2:	CALL	CRLF
  377 F1FC  3E 02       MEN3:	LD	A,2		; CLLN
  378 F1FE  CD F387     	CALL	OPRCHR		; Prompt ausgeben
  379 F201  CD F667     	CALL	BRKT
  380 F204  38 66       	JR	C,LOOP2		; Break
  381 F206  DD 7E 09    	LD	A,(IX+9)	; Prologbyte
  382 F209  ED B1       MEN4:	CPIR
  383 F20B  E2 F26C     	JP	PO,LOOP2	; ausgesucht
  384 F20E  ED A1       	CPI			; 2mal nacheinander?
  385 F210  E2 F26C     	JP	PO,LOOP2	; ausgesucht
  386 F213  20 F4       	JR	NZ,MEN4		; nicht 2mal
  387 F215  7E          MEN5:	LD	A,(HL)
  388 F216  FE 20       	CP	20h		; Epilog (0..1Fh)?
  389 F218  38 26       	JR	C,MEN8
  390 F21A  CB 43       	bit	0,e		; versteckte Menueworte anzeigen?
  391 F21C  28 06       	jr	z,MEN6		; nein
  392 F21E  FE 7B       	CP	'z'+1		; <= 'z'?
  393 F220  30 DA       	JR	NC,MEN3		; groesser als 'z'
  394 F222  18 10       	jr	MEN7
  395                   	;
  396 F224  FE 30       MEN6:	CP	'0'		; >= '0' und
  397 F226  38 D4       	JR	C,MEN3		; kleiner als '0'
  398 F228  FE 5B       	CP	'Z'+1		; <= 'Z'?
  399 F22A  30 D0       	JR	NC,MEN3		; groesser als 'Z'
  400 F22C  FE 41       	CP	'A'		; >= 'A' oder
  401 F22E  30 04       	JR	NC,MEN7		; groesser als 'A'
  402 F230  FE 3B       	CP	':'+1		; <= ':'?
  403 F232  30 C8       	JR	NC,MEN3		; groesser als ':'
  404 F234  CD F3BE     MEN7:	CALL	OCHR
  405 F237  ED A1       	CPI			; INC HL, DEC BC
  406 F239  EA F215     	JP	PE,MEN5		; BC>0, also weiter
  407 F23C  3E 02       	LD	A,2		; CLLN
  408 F23E  18 29       	JR	LOOP1		; ausgesucht
  409                   	;
  410 F240              MEN8:	;LD	A,(CURSO)	; aktuelle Position
  411                   	;DEC	A		; leere Menuzeile?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 146
CF48    INC

  412                   	;JR	Z,MEN3		; diese unterdruecken
  413 F240  CB 4B       	bit	1,e
  414 F242  28 B5       	jr	z,MEN2		; keine Adressen anzeigen
  415 F244  3A B79E     	ld	a,(winlg)
  416 F247  FE 0F       	cp	15		; Fensterbreite fuer Adressen ausreichend?
  417 F249  38 AE       	jr	c,MEN2		; nein, dann nicht anzeigen!
  418 F24B  3E 0B       	ld	a,11
  419 F24D  32 B7A0     	ld	(curso),a	; Spalte fuer Adressanzeige
  420 F250  23          	inc	hl
  421 F251  CD F39D     	call	hlhx		; Startadresse anzeigen
  422 F254  2B          	dec	hl
  423 F255  18 A2       	JR	MEN2
  424                   ;
  425                   ; 12.12.2020: Der Schutz von BASIC-Programmen wird ab CAOS 4.8 nicht mehr
  426                   ; unterstuetzt. Das heisst, das Programm wird bei BYE nicht mehr geloescht.
  427                   ;
  428 F257              BASBYE:
  429                   ;	LD	A,(DATFLG)	; geschuetzt?
  430                   ;	AND	A
  431                   ;	JR	Z,BASB1
  432                   ;	CALL	IRMOF
  433                   ;	CALL	NEW1		; NEW
  434                   ;	CALL	IRMON
  435                   ;BASB1:
  436 F257  16 00       	LD	D,0
  437 F259  CD F0E4     	CALL	MODUL2		; BASIC-ROM abschalten
  438                   ;	JP	LOOP
  439                   ;_____________________________________________________________
  440                   ;							**12**
  441                   ; Eingabeschleife:
  442                   
  443 F25C  DB 88       LOOP:	IN	A,(PIOAD)
  444 F25E  E6 DF       	AND	11011111b	; LED aus
  445 F260  F6 04       	OR	00000100b	; IRM ein
  446 F262  D3 88       	OUT	(PIOAD),A
  447 F264  CD FB8A     	CALL	COFF
  448 F267  3E 0D       	LD	A,CR		; Zeilenanfang
  449 F269  CD F387     LOOP1:	CALL	OPRCHR		; Prompt ausgeben
  450 F26C  CD F271     LOOP2:	CALL	INPUT
  451 F26F  18 EB       	JR	LOOP
  452                   
  453                   ; Menuekommandoroutine
  454                   
  455 F271  CD F481     INPUT:	CALL	INLIN		; Eingabe
  456 F274  30 0A       	JR	NC,INPT1	; mit Enter abgeschlossen
  457 F276  3E 0B       	LD	A,0BH		; bei BRK
  458 F278  CD E0A8     	CALL	CRT		; Cursor hoch
  459 F27B  3E 02       CRT02:	LD	A,2		; und
  460 F27D  C3 E0A8     	JP	CRT		; Zeile loeschen
  461                   	;
  462 F280  13          INPT1:	INC	DE		; Zeichen nach Prompt
  463 F281  1A          	LD	A,(DE)
  464 F282  E6 DF       	AND	0DFH		; leer?
  465 F284  C8          	RET	Z
  466 F285  3A B802     	LD	A,(MODST+2)	; Schaltzustand USER-ROM
  467 F288  32 B780     	LD	(ARGC),A	; CAOS 4.6: hier uebergeben an USER-Programme
  468 F28B  06 00       	 ld	b,0		; gesamten Speicher durchsuchen
  469 F28D  CD F336     	 call	ms1		; ab C000H
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 147
CF48    INC

  470 F290  38 3A       	JR	C,INPT5		; gefunden
  471 F292  21 B805     	 ld	hl,modst+5
  472 F295  CB 46       	 bit	0,(hl)
  473 F297  20 08       	JR	NZ,INPT2	; CAOS-C war bereits an
  474 F299  CD FB9B     	CALL	CON
  475 F29C  CD F334     	 call	msuch		; durchsuchen im CAOS-ROM-C
  476 F29F  38 2B       	JR	C,INPT5		; gefunden
  477 F2A1  D5          INPT2:	PUSH	DE		; Suchkette
  478 F2A2  16 D1       	LD	D,0D1H		; 1. Ebene (BASIC nicht mit durchsuchen)
  479 F2A4  CD F0E4     INPT3:	CALL	MODUL2		; USER-ROM-C Ebene ein
  480                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 F2A7  DD CB 04    	 DB	0DDh,0CBh,4
    2 F2AA  BF          	 DB	7 SHL 3 OR 10000111b
  481 F2AB  D3 86       	OUT	(PORT2),A	; CAOS-ROM-C aus!
  482 F2AD  EB          	EX	DE,HL
  483 F2AE  E3          	EX	(SP),HL		; DE=Suchkette, (SP)=SWITCH-Ebene
  484 F2AF  EB          	EX	DE,HL
  485 F2B0  CD F334     	 call	msuch		; Menuewort in USER-ROM suchen
  486 F2B3  E3          	 ex	(sp),hl		; (SP)=Ende+1 der gefundenen Kette
  487 F2B4  38 10       	JR	C,INPT4		; gefunden
  488 F2B6  06 10       	LD	B,10H		; Offset zur naechsten Ebene: C1, D1, E1, F1
  489 F2B8  09          	 add	hl,bc		; naechste Ebene berechnen (C ist 0)
  490 F2B9  EB          	 ex	de,hl		; DE=Schaltzustand
  491 F2BA  E3          	 ex	(sp),hl		; (SP)=Suchkette		
  492 F2BB  30 E7       	JR	NC,INPT3	; naechste Ebene
  493 F2BD  ED 5B B77F  	LD	DE,(ARGC-1)	; CAOS 4.6: D = USERC-Schaltzustand vor Suche
  494 F2C1  CD F0E4     	CALL	MODUL2		; USER-ROMC wie zuvor
  495 F2C4  18 2E       	JR	ERR1		; invalid command
  496                   	;
  497 F2C6  21 B805     INPT4:	 ld	hl,modst+5
  498 F2C9  36 00       	 ld	(hl),0		; CAOS-C ausschalten
  499 F2CB  E1          	 pop	hl
  500 F2CC  23          INPT5:	INC	HL		; Epilogbyte uebergehen
  501 F2CD  E5          	PUSH	HL		; Startadresse
  502 F2CE  FE 1F       	CP	1FH		; Textparameter?
  503 F2D0  C8          	RET	Z		; ohne arg zu erfassen!
  504 F2D1  F5          	PUSH	AF		; Epilogbyte
  505 F2D2  0E 10       	LD	C,16		; Zahlenbasis hexadezimal
  506 F2D4  E6 10       	AND	10h		; Dezimal-Argumente?
  507 F2D6  28 02       	JR	Z,INPT6
  508 F2D8  0E 0A       	LD	C,10		; Zahlenbasis dezimal
  509 F2DA  CD F515     INPT6:	CALL	GARGC		; bis zu 10 Argumente erfassen
  510 F2DD  C1          	POP	BC		; B=Epilogbyte
  511 F2DE  38 32       	JR	C,ERR4		; bad args
  512 F2E0  3A B781     	LD	A,(ARGN)	; Anzahl Argumente
  513 F2E3  48          	LD	C,B
  514 F2E4  CB A0       	RES	4,B		; Bit fuer Zahlenbasis ausblenden
  515 F2E6  CB 28       	SRA	B
  516 F2E8  B8          	CP	B
  517 F2E9  38 19       	JR	C,ERR3		; zu wenig arg
  518 F2EB  CB 41       	BIT	0,C
  519 F2ED  CD F5F7     	CALL	LARG		; Arg's laden
  520 F2F0  C0          	RET	NZ		; mit IRM on
  521 F2F1  C3 E043     	JP	SCROFF		; mit IRM off
  522                   
  523 F2F4  CD F0B4     ERR1:	CALL	OSTR
  524 F2F7  4B 6F 6D 6D 	DB	'Kommando?',7,0
  525 F302  18 2C       	JR	ERRCR
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 148
CF48    INC

  526                   	;
  527 F304  CD F0B4     ERR3:	CALL	OSTR
  528 F307  5A 75 20 77 	DB	'Zu wenig',0
  529 F310  18 0F       	JR	ERRA
  530                   	;
  531 F312  CD F0B4     ERR4:	CALL	OSTR
  532 F315  46 65 68 6C 	DB	'Fehlerhafte',0
  533 F321  CD F0B4     ERRA:	CALL	OSTR
  534 F324  20 41 72 67 	DB	' Argumente',7,0
  535 F330  E1          ERRCR:	 pop	hl		; Stack clear
  536 F331  C3 F4C7     	JP	CRLF
  537                   
  538 F334  06 20       MSUCH:	 ld	b,20h		; 2000h Bytes
  539 F336  21 C000     MS1:	LD	HL,0C000H	; Standard-Suchbeginn
  540 F339  4D          ZS0:	LD	C,L		; C=0
  541 F33A  DD 7E 09    	LD	A,(IX+9)	; aktuelles Prologbyte
  542                   ;_____________________________________________________________
  543                   ;							**1D**
  544                   ; Zeichenkette/Menuewort suchen
  545                   ; PE:	A	Prologbyte (bei CAOS: 7FH)
  546                   ;	BC	Laege des Suchbereiches
  547                   ;	DE	Anfang der Vergleichskette (Ende mit 0-20h)
  548                   ;	HL	Anfang des Suchbereichs
  549                   ; PA:	DE	Ende+1 Vergleichskette (wenn gefunden)
  550                   ;	HL	Ende+1 gefundene Kette
  551                   ;	CY=1	Kette gefunden
  552                    ;	 dann  A=Epilogbyte 
  553                    ;	       BC=Anfang der Vergleichskette
  554                    ;	 sonst A=Prologbyte
  555                    ;	       BC=0
  556                    ;	       DE=Anfang der Vergleichskette
  557                   ; VR:	AF,BC,DE,HL
  558                   
  559 F33D  A7          ZSUCH:	 and	a		; CY=0
  560 F33E  ED B1       	CPIR			; (CY wird nicht veraendert)
  561 F340  E0          	RET	PO		; Prolog nicht gefunden
  562 F341  ED A1       	CPI
  563 F343  20 F8       	JR	NZ,ZSUCH	; nur 1x gefunden
  564 F345  D5          	 push	de		; Beginn der Vergleichskette retten
  565 F346  F5          	 push	af		; Prologbyte
  566 F347  1A          ZS1:	LD	A,(DE)		; Zeichen von Vergleichskette
  567 F348  13          	INC	DE
  568 F349  FE 21       	CP	21H
  569 F34B  38 0D       	JR	C,ZS3		; Kettenende bei Vergleichskette erkannt
  570 F34D  CB 6E       	BIT	5,(HL)		; Grossbuchstabe im Speicher?
  571 F34F  CC F53C     	CALL	Z,UPCASE	; dann Zeichen von Vergleichskette upcasen
  572 F352  ED A1       	CPI
  573 F354  28 F1       	JR	Z,ZS1		; stimmt ueberein
  574 F356  F1          ZS2:	 pop	af		; verwendetes Prologbyte restaurieren
  575 F357  D1          	 pop	de		; und wieder zu Beginn der Vergleichskette
  576 F358  18 E3       	JR	ZSUCH		; Suche fortsetzen
  577                   	;
  578 F35A  7E          ZS3:	LD	A,(HL)		; Zeichen aus Speicher weiter testen
  579 F35B  FE 20       	CP	20H		; bis Epilogbyte (0..1Fh) kommt
  580 F35D  38 08       	JR	C,ZS4		; Epilog gefunden
  581                   ;	JR	Z,ZS2		; SPC (war in CAOS 4.3 und 4.4 nicht zugelassen)
  582 F35F  FE 80       	CP	80H
  583 F361  30 F3       	JR	NC,ZS2		; Zeichen ab 80H nicht zugelassen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 149
CF48    INC

  584 F363  23          	INC	HL
  585 F364  0B          	DEC	BC		; Befehl am 11.04.2010 ergaenzt
  586 F365  18 F3       	JR	ZS3
  587                   	;
  588 F367  C1          ZS4:	 pop	bc
  589 F368  C1          	 pop	bc		; Anfang der Vergleichskette
  590 F369  C9          	 ret			; CY ist 1 vom CP 20H
  591                   ;_____________________________________________________________
  592                   ;							**13**
  593                   ; Normalein- und Ausgabe: CRT und KBD
  594                   ; PE:	-
  595                   ; PA:	HL	alter Ausgabezeiger
  596                   ; VR:	HL
  597                   
  598 F36A  CD F37A     NORM:	CALL	NIN		; Normaleingabe
  599                   ;_____________________________________________________________
  600                   ;							**20**
  601                   ; Setzen eines neuen Output Kanals
  602                   
  603 F36D  21 F020     NOUT:	LD	HL,OUTT1
  604                   ;_____________________________________________________________
  605                   ;							**1E**
  606 F370  E5          SOUT:	PUSH	HL
  607 F371  2A B7B9     	LD	HL,(OUTAB)	; bisheriger Zeiger
  608 F374  E3          	EX	(SP),HL
  609 F375  22 B7B9     	LD	(OUTAB),HL	; neuer Zeiger
  610 F378  E1          	POP	HL
  611 F379  C9          	RET
  612                   ;_____________________________________________________________
  613                   ;							**21**
  614                   ; Setzen eines neuen Input Kanals
  615                   
  616 F37A  21 F017     NIN:	LD	HL,INTT1
  617                   ;_____________________________________________________________
  618                   ;							**1F**
  619 F37D  E5          SIN:	PUSH	HL
  620 F37E  2A B7BB     	LD	HL,(INTAB)	; bisheriger Zeiger
  621 F381  E3          	EX	(SP),HL
  622 F382  22 B7BB     	LD	(INTAB),HL	; neuer Zeiger
  623 F385  E1          	POP	HL
  624 F386  C9          	RET
  625                   
  626                   ; Steuerzeichen und Prompt ausgeben
  627                   ; PE: A=Steuerzeichen
  628 F387  CD E0A8     OPRCHR:	CALL	CRT
  629 F38A  3A B7EC     	LD	A,(PROMPT)
  630 F38D  FE 20       	CP	' '
  631 F38F  30 2D       	JR	NC,OCHR
  632 F391  3E 25       	LD	A,'%'		; Standard
  633 F393  18 29       	JR	OCHR		; Prompt
  634                   ;_____________________________________________________________
  635                   ;							**1B**
  636                   ; Zwei 16-Bit-Werte hexadezimal anzeigen und
  637                   ; ein Leerzeichen danach
  638                   ; VR:	AF
  639 F395  CD F398     HLDE:	CALL	HLDE1		; 1x aufrufen, dann reinlaufen
  640 F398  CD F39D     HLDE1:	CALL	HLHX		; HL anzeigen
  641 F39B  EB          	EX	DE,HL		; HL <-> DE tauschen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 150
CF48    INC

  642 F39C  C9          	RET
  643                   ;_____________________________________________________________
  644                   ;							**1A**
  645                   ; 16-Bit-Wert hexadezimal anzeigen und ein Leerzeichen danach
  646                   ; VR:	AF
  647 F39D  7C          HLHX:	LD	A,H
  648 F39E  CD F3AD     	CALL	AHEX
  649 F3A1  7D          ALSPC:	LD	A,L
  650 F3A2  CD F3AD     AHSPC:	CALL	AHEX
  651                   ;_____________________________________________________________
  652                   ;							**2B**
  653                   ; Leerzeichen anzeigen
  654                   ; VR:	AF
  655 F3A5  3E 20       SPACE:	LD	A,' '		; Leerzeichen
  656 F3A7  18 15       	JR	OCHR
  657                   ;_____________________________________________________________
  658                   ;							**2D**
  659                   ; Cursor in Home-Position
  660                   ; VR:	AF
  661 F3A9  3E 10       HOME:	LD	A,10H		; Home-Code
  662 F3AB  18 11       	JR	OCHR
  663                   ;_____________________________________________________________
  664                   ;							**1C**
  665                   ; 8-Bit-Wert hexadezimal anzeigen
  666                   ; VR:	AF
  667 F3AD  F5          AHEX:	PUSH	AF
  668 F3AE  0F          	RRCA			; Tetradentausch
  669 F3AF  0F          	RRCA
  670 F3B0  0F          	RRCA
  671 F3B1  0F          	RRCA
  672 F3B2  CD F3B6     	CALL	AHEX0		; erst aufrufen,
  673 F3B5  F1          	POP	AF		; dann reinlaufen
  674 F3B6  E6 0F       AHEX0:	AND	0FH		; Maske
  675 F3B8  C6 90       	ADD	A,90H		; uebliche
  676 F3BA  27          	DAA			; Routine
  677 F3BB  CE 40       	ADC	A,40H		; fuer die
  678 F3BD  27          	DAA			; Hexausgabe
  679                   ;_____________________________________________________________
  680                   ;							**24**
  681                   ; Ausgabe eines Zeichens ueber def. Kanal
  682                   ; VR:	AF
  683 F3BE  E5          OCHR:	PUSH	HL
  684 F3BF  2A B7B9     	LD	HL,(OUTAB)	; Ausgabekanal
  685 F3C2  D5          INTA1:	PUSH	DE		; siehe auch PV1 (sehr aehnlich)
  686 F3C3  C5          	PUSH	BC
  687 F3C4  5E          	LD	E,(HL)		; UP-Nr. der Routine
  688 F3C5  16 00       	LD	D,0
  689 F3C7  2A B7B0     	LD	HL,(SUTAB)
  690 F3CA  F5          	PUSH	AF
  691 F3CB  19          	ADD	HL,DE
  692 F3CC  19          	ADD	HL,DE
  693 F3CD  F1          	POP	AF
  694 F3CE  5E          	LD	E,(HL)
  695 F3CF  23          	INC	HL
  696 F3D0  56          	LD	D,(HL)		; DE = Adresse der Routine
  697 F3D1  EB          	EX	DE,HL
  698                   	; hier CAOS-C ausschalten
  699 F3D2  CD E1D2     	CALL	JPHL		; Routine aufrufen
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 151
CF48    INC

  700                   	; hier CAOS-C wieder einschalten wie er war
  701 F3D5  C3 E0B4     POP31:	JP	POP3		; auch fuer PV2 bis PV6!
  702                   ;_____________________________________________________________
  703                   ;							**16**
  704                   ; Eingabe eines Zeichens ueber def. Kanal
  705                   ;
  706 F3D8  E5          INTB:	PUSH	HL
  707 F3D9  2A B7BB     	LD	HL,(INTAB)	; Eingabekanal
  708 F3DC  18 E4       	JR	INTA1
  709                   ;_____________________________________________________________
  710                   ;							**04**
  711                   ; Eingabe eines Zeichens mit Cursoreinblendung
  712                   ;
  713 F3DE  E5          KBD:	PUSH	HL
  714 F3DF  D5          	PUSH	DE
  715 F3E0  C5          	PUSH	BC
  716 F3E1  DD CB 08 76 KBD1:	BIT	6,(IX+8)	; F-Taste aktiv?
  717 F3E5  20 60       	JR	NZ,KBD9		; ja
  718 F3E7  1E 00       KBD2:	LD	E,0
  719 F3E9  CD F039     KBD3:	CALL	PV1
  720 F3EC  25          	DB	25h		; CUCP - blinken
  721 F3ED  1C          	INC	E		; e/a-Merker
  722 F3EE  06 0F       	LD	B,15		; F00h mal
  723 F3F0  CD E384     KBD4:	CALL	KBDZ		; abfragen
  724 F3F3  38 07       	JR	C,KBD5
  725 F3F5  0B          	DEC	BC
  726 F3F6  78          	LD	A,B
  727 F3F7  B1          	OR	C
  728 F3F8  20 F6       	JR	NZ,KBD4		; warten,
  729 F3FA  18 ED       	JR	KBD3		; dann Cursor wieder weg usw.
  730                   	;
  731 F3FC  CB 43       KBD5:	BIT	0,E		; gerade ein?
  732 F3FE  28 04       	JR	Z,KBD5a
  733 F400  CD F039     	CALL	PV1		; Cursor wegnehmen
  734 F403  25          	DB	25h		; CUCP
  735 F404  57          KBD5a:	LD	D,A
  736 F405  DD CB 08 6E 	BIT	5,(IX+8)	; Click ein?
  737 F409  C4 E2C2     	CALL	NZ,CLIK		; Click-Ton erzeugen
  738 F40C  7A          	LD	A,D
  739 F40D  21 B7A2     	LD	HL,STBT
  740 F410  CB 66       	BIT	4,(HL)		; ESC aktiv?
  741 F412  28 0D       	JR	Z,KBD6
  742 F414  ED 5B B7A0  	LD	DE,(CURSO)
  743 F418  CD E19D     	CALL	CRT1		; ESC ausfuehren
  744 F41B  ED 53 B7A0  	LD	(CURSO),DE
  745 F41F  18 C6       	JR	KBD2
  746                   	;
  747 F421  FE 1B       KBD6:	CP	ESC
  748 F423  20 04       	JR	NZ,KBD7
  749 F425  CB E6       	SET	4,(HL)		; ESC merken
  750 F427  18 BE       KBD2J:	JR	KBD2
  751                   	;
  752 F429  FE F1       KBD7:	CP	0F1H		; F-Taste?
  753 F42B  38 A8       	JR	C,POP31
  754 F42D  E6 0F       	AND	0FH
  755 F42F  47          	LD	B,A
  756 F430  21 B900     	LD	HL,FTASTE	; 0B900H
  757 F433  7E          KBD8:	LD	A,(HL)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 152
CF48    INC

  758 F434  2C          	INC	L
  759 F435  28 B0       	JR	Z,KBD2		; Speicherende
  760 F437  A7          	AND	A
  761 F438  20 F9       	JR	NZ,KBD8		; Position im Puffer
  762 F43A  10 F7       	DJNZ	KBD8		; auszaehlen
  763 F43C  7D          	LD	A,L
  764 F43D  FE 9C       	CP	9CH
  765 F43F  30 A6       	JR	NC,KBD2		; Speicherende
  766 F441  DD CB 08 F6 	SET	6,(IX+8)	; F-Taste aktiv
  767 F445  18 08       	JR	KBD10
  768                   	;
  769 F447  CD F667     KBD9:	CALL	BRKT		; Abbruch?
  770 F44A  38 1A       	JR	C,KBD12
  771 F44C  2A B7D1     	LD	HL,(FTAST)	; Zeiger auf
  772 F44F  7E          KBD10:	LD	A,(HL)		; naechstes CHR
  773 F450  FE 1B       	CP	ESC
  774 F452  20 0B       	JR	NZ,KBD11
  775 F454  23          	INC	HL
  776 F455  22 B7D1     	LD	(FTAST),HL
  777 F458  21 B7A2     	LD	HL,STBT
  778 F45B  CB E6       	SET	4,(HL)		; ESC merken
  779 F45D  18 82       KBD1J:	JR	KBD1
  780                   	;
  781 F45F  23          KBD11:	INC	HL
  782 F460  22 B7D1     	LD	(FTAST),HL	; Zeiger retten
  783 F463  A7          	AND	A		; NUL-Ende?
  784 F464  20 06       	JR	NZ,KBD13
  785 F466  DD CB 08 B6 KBD12:	RES	6,(IX+8)	; ja - inaktiv
  786 F46A  18 BB       	JR	KBD2J
  787                   	;
  788 F46C  21 B7A2     KBD13:	LD	HL,STBT
  789 F46F  CB 66       	BIT	4,(HL)		; ESC aktiv?
  790 F471  CA F3D5     	JP	Z,POP31
  791 F474  ED 5B B7A0  	LD	DE,(CURSO)
  792 F478  CD E19D     	CALL	CRT1		; ESC ausfuehren
  793 F47B  ED 53 B7A0  	LD	(CURSO),DE
  794 F47F  18 DC       	JR	KBD1J
  795                   ;_____________________________________________________________
  796                   ;							**17**
  797                   ; Eingabe einer Zeile mit Funktion aller Cursortasten,
  798                   ; Abschluss mit <ENTER> oder Abbruch <BRK>
  799                   
  800 F481  CD F3D8     INLIN:	CALL	INTB
  801 F484  CD F3BE     	CALL	OCHR
  802 F487  FE 03       	CP	3		; BRK?
  803 F489  37          	SCF
  804 F48A  28 04       	JR	Z,INLI1
  805 F48C  FE 0D       	CP	CR		; ENTER?
  806 F48E  20 F1       	JR	NZ,INLIN
  807 F490  F5          INLI1:	PUSH	AF
  808 F491  CD F4C7     	CALL	CRLF		; PA: A=0
  809 F494  ED 5B B7A0  	LD	DE,(CURSO)
  810 F498  BA          	CP	D		; Zeile 1 durch PAGE-Mode?
  811 F499  20 04       	JR	NZ,INLI2
  812 F49B  3A B79F     	LD	A,(WINLG+1)	; Anzahl Zeilen
  813 F49E  57          	LD	D,A		; D muss dann in letzte Zeile zeigen
  814 F49F  15          INLI2:	DEC	D		; Zeile drueber
  815 F4A0  E5          	PUSH	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 153
CF48    INC

  816 F4A1  CD E083     	CALL	DABR
  817 F4A4  EB          	EX	DE,HL
  818 F4A5  E1          	POP	HL		; PA: DE
  819 F4A6  F1          	POP	AF		; PA: CY=BRK
  820 F4A7  C9          NOOP:	RET
  821                   ;
  822                   ; Sprung zu einer Adresse mit Registeruebergabe
  823                   ; Syntax: %go ADR [HL [DE [BC [A] ] ] ]
  824                   ;
  825 F4A8  7F7F        GO7F:	DW	7F7FH
  826 F4AA  47 4F 20    	DB	'GO '
  827 F4AD  03          	DB	3		; mindestens 1 Argument erforderlich
  828 F4AE  AF          	XOR	A
  829 F4AF  32 B781     	LD	(ARGN),A
  830                   ; alter Code, 4 Byte lang:
  831                   ;	PUSH	HL		; Adresse auf den Stack
  832                   ;	EX	DE,HL		; ARG2 von DE nach HL
  833                   ;	LD	D,B
  834                   ;	LD	E,C		; ARG3 von BC nach DE
  835                   ; 28.10.2022: neuer Code von ZM.ASM uebernommen, 3 Byte lang
  836                   ; BC(Arg3) => DE(Arg2) => HL(Arg1) => Stack
  837 F4B2  C5          	PUSH	BC		; (SP)=(ARG3)
  838 F4B3  E3          	EX	(SP),HL		; Stack = (ARG1), HL=(ARG3)
  839 F4B4  EB          	EX	DE,HL		; DE = (ARG3), HL=(ARG2)
  840 F4B5  ED 4B B788  	LD	BC,(ARG4)	; BC = (ARG4)
  841 F4B9  3A B78A     	LD	A,(ARG5)	; A = (ARG5)
  842 F4BC  C9          	RET			; JMP (ARG1)
  843                   ;_____________________________________________________________
  844                   ;							**19**
  845                   ; ERROR anzeigen
  846                   
  847 F4BD  CD F0B4     ERRM:	CALL	OSTR
  848 F4C0  45 52 52 4F 	DB	'ERROR',7,0
  849                   ;_____________________________________________________________
  850                   ;							**2C**
  851                   ; Neue Zeile mit CR,LF
  852                   ; PA:	A=0
  853                   ; VR:	AF
  854                   ;
  855 F4C7  CD F0B4     CRLF:	CALL	OSTR
  856 F4CA  0D 0A 00    	DB	CR,LF,0
  857 F4CD  C9          	RET
  858                   ;_____________________________________________________________
  859                   ;							**18**
  860                   ; Erfassung einer eingegebenen Hex-Zahl
  861                   ; PE:	DE	Zeichenkette
  862                   ; PA:	DE	Ende der Zeichenkette
  863                   ;	(NUMNX)	Laenge der Zeichenkette
  864                   ;	(NUMVX)	umgewandelte Zahl
  865                   ;	HL=NUMNX
  866                   ;	CY=1	Fehler
  867                   ; VR:	AF, DE, HL
  868                   ;
  869 F4CE  C5          RHEX:	PUSH	BC		; RHEX darf BC nicht veraendern
  870 F4CF  0E 10       	LD	C,16		; Hexadezimalzahlen
  871 F4D1  CD F4DA     	CALL	RZAHL
  872 F4D4  C1          	POP	BC
  873 F4D5  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 154
CF48    INC

  874                   ;_____________________________________________________________
  875                   ;							**4B**
  876                   ; Erfassung einer eingegebenen Dezimal-Zahl
  877                   ; PE:	DE	Zeichenkette
  878                   ; PA:	DE	Ende der Zeichenkette
  879                   ;	(NUMNX)	Laenge der Zeichenkette
  880                   ;	(NUMVX)	umgewandelte Zahl
  881                   ;	HL=NUMNX
  882                   ;	CY=1	Fehler
  883                   ; VR:	AF, C, DE, HL
  884                   ;
  885 F4D6  0E 0A       RDEZ:	LD	C,10		; Dezimalzahlen
  886 F4D8  1B          	DEC	DE	; (anstelle von JR RZAHL)
  887                   
  888                   ; Erfassung einer eingegebenen Dez- oder Hex-Zahl
  889                   ; PE:	DE	Adresse Zeichenkette (im VRAM)
  890                   ;	C	Zahlenbasis (2..32)
  891                   ; PA:	(NUMNX)	Anzahl der HEX-Zeichen (0-4)
  892                   ;	(NUMVX)	Wert der erfassten Zahl
  893                   ;	HL=NUMNX
  894                   ;	CY=1	Fehler
  895                   ; VR:	AF, C, DE, HL
  896                   ;
  897 F4D9  13          RHX0:	INC	DE
  898 F4DA  1A          RZAHL:	LD	A,(DE)
  899 F4DB  FE 20       	CP	' '		; Trennzeichen
  900 F4DD  28 FA       	JR	Z,RHX0		; uebergehen
  901 F4DF  AF          	XOR	A
  902 F4E0  21 B798     	LD	HL,NUMVX+1
  903 F4E3  77          	LD	(HL),A
  904 F4E4  2B          	DEC	HL		; HL=NUMVX
  905 F4E5  77          	LD	(HL),A
  906 F4E6  2B          	DEC	HL		; HL=NUMNX
  907 F4E7  77          	LD	(HL),A		; alles auf 0 setzen
  908                   ; Erfassen der ASCII-Zeichen
  909 F4E8  1A          RHX1:	LD	A,(DE)
  910 F4E9  E6 DF       	AND	0DFH		; CY=0
  911 F4EB  C8          	RET	Z		; Ende-Dummy oder Space
  912 F4EC  1A          	LD	A,(DE)		;	       aus: 3A..40 41..60 61..80 81..FF
  913 F4ED  D6 30       	SUB	'0'		;	      wird: 0A..10 11..30 31..50 51..CF
  914 F4EF  D8          	RET	C		; kleiner als '0'
  915 F4F0  FE 0A       	CP	10
  916 F4F2  38 06       	JR	C,RHX2		; 0..9
  917 F4F4  D6 11       	SUB	17		; HEX-Korrektur	    F9..FF 00..1F 20..3F 40..BE
  918 F4F6  E6 DF       	AND	11011111b	; klein -> gross    D9..DF 00..1F 00..1F 40..9E
  919 F4F8  C6 0A       	ADD	10		; kleiner als 'A'   E3..E9 0A..29 0A..29 4A..A8
  920 F4FA  B9          RHX2:	CP	C		; > Zahlenbasis?
  921 F4FB  3F          	CCF
  922 F4FC  D8          	RET	C
  923 F4FD  34          	INC	(HL)		; NUMNX erhoehen
  924 F4FE  23          RHX3:	INC	HL
  925 F4FF  D5          	PUSH	DE
  926 F500  56          	LD	D,(HL)	
  927 F501  CD FBA3     	CALL	MULA		;(NUMVX)*Basis + Ziffer
  928 F504  D1          	POP	DE
  929 F505  77          	LD	(HL),A
  930 F506  78          	LD	A,B		; naechste Stelle
  931 F507  CB 45       	BIT	0,L		; HL=NUMVX ?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 155
CF48    INC

  932 F509  20 F3       	JR	NZ,RHX3		; wiederholen
  933 F50B  2B          	DEC	HL
  934 F50C  2B          	DEC	HL		; HL=NUMNX
  935 F50D  ED 44       	NEG			; CY=1 wenn A<>0
  936 F50F  D8          	RET	C		; Fehler: Zahl zu gross
  937 F510  13          	INC	DE		; Zeiger auf naechstes Zeichen
  938 F511  18 D5       	JR	RHX1
  939                   ;_____________________________________________________________
  940                   ;							**22**
  941                   ; Bis zu 10 hexadezimale Argumente erfassen
  942                   ; PE:	DE	Adresse im VRAM
  943                   ; PA:	(ARGN) und (ARG1) bis (ARG10)
  944                   ;	CY=1	Fehler
  945                   ; VR:	AF, BC, DE, HL
  946                   ;
  947 F513  0E 10       GARG:	LD	C,16		; Zahlenbasis = hexadezimal
  948                   ;_____________________________________________________________
  949                   ;							**4C**
  950                   ; Bis zu 10 Argumente erfassen, beliebige Zahlenbasis
  951                   ; PE:	C	Zahlenbasis 10 oder 16
  952                   ;	DE	Adresse im VRAM
  953                   ; PA:	(ARGN) und (ARG1) bis (ARG10)
  954                   ;	CY=1	Fehler
  955                   ; VR:	AF, BC, DE, HL
  956                   ;
  957 F515  AF          GARGC:	XOR	A
  958 F516  32 B781     	LD	(ARGN),A	; (ARGN)=0
  959 F519  CD F4DA     GARG1:	CALL	RZAHL		; Argument erfassen
  960 F51C  D8          	RET	C		; Fehler
  961 F51D  7E          	LD	A,(HL)		; NUMNX lesen
  962 F51E  B7          	OR	A		; Ende erreicht?
  963 F51F  C8          	RET	Z		; fertig
  964 F520  3A B781     	LD	A,(ARGN)
  965 F523  3C          	INC	A		; Argumente mitzaehlen
  966 F524  FE 0B       	CP	11		; 10 Argumente?
  967 F526  3F          	CCF
  968 F527  D8          	RET	C		; zu viele Argumente
  969 F528  32 B781     	LD	(ARGN),A
  970 F52B  87          	ADD	A,A		; ARGN*2
  971 F52C  F6 80       	OR	LOW(ARGC)
  972 F52E  D5          	PUSH	DE
  973 F52F  5F          	LD	E,A
  974 F530  16 B7       	LD	D,HIGH(ARGN)
  975 F532  23          	INC	HL
  976 F533  ED A0       	LDI			; Low(ARGx)
  977 F535  ED A0       	LDI			; High(Argx)
  978 F537  03          	INC	BC
  979 F538  03          	INC	BC		; BC korrigieren
  980 F539  D1          	POP	DE
  981 F53A  18 DD       	JR	GARG1
  982                   
  983                   ; Kleinbuchstaben in A in Grossbuchstaben umwandeln:
  984 F53C  FE 61       UPCASE:	CP	'a'
  985 F53E  D8          	RET	C
  986 F53F  FE 7B       	CP	'z' + 1
  987 F541  D0          	RET	NC
  988 F542  E6 DF       	AND	11011111b
  989 F544  C9          	RET
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 156
CF48    INC

  990                   
  991 F545  DD 36 05 00 KPUFF:	LD	(IX+5),LOW(CASS)
  992 F549  DD 36 06 B7 	LD	(IX+6),HIGH(CASS)
  993 F54D  C9          	RET
  994                   ;_____________________________________________________________
  995                   ;							**43**
  996                   ; E/A-Kanal initialisieren
  997                   ; PE:	HL	Tabelle mit Initialisierungsdaten
  998                   ;		1. Byte: E/A-Adresse
  999                   ;		2. Byte: Anzahl
 1000                   ;		danach die Initialisierungsbytes
 1001                   ; VR:	F, HL
 1002                   
 1003 F54E  C5          INIEA:	PUSH	BC
 1004 F54F  4E          	LD	C,(HL)		; erstes Byte: Portadresse
 1005 F550  23          	INC	HL
 1006 F551  46          	LD	B,(HL)		; zweites Byte: Anzahl
 1007 F552  23          	INC	HL
 1008 F553  ED B3       	OTIR			; ... Bytes
 1009 F555  C1          	POP	BC
 1010 F556  C9          	RET
 1011                   ;
 1012                   ; CAOS-interne Initialisierung meherer E/A-Kanaele ohne DI/EI
 1013                   ; PE:	HL	Initialisierungsdaten mit vorangestelltem Byte fuer Anzahl
 1014                   ; PA:	D=0
 1015                   ; VR:	D, F, HL
 1016                   ;
 1017 F557  56          INIMEX:	LD	D,(HL)		; Anzahl Kanaele
 1018 F558  23          	INC	HL
 1019 F559  CD F54E     INIMX1:	CALL	INIEA
 1020 F55C  15          	DEC	D
 1021 F55D  20 FA       	JR	NZ,INIMX1
 1022 F55F  C9          	RET
 1023                   ;_____________________________________________________________
 1024                   ;							**44**
 1025                   ; Initialisierung mehrerer E/A-Kanaele
 1026                   ; PE:	HL	Tabelle mit Initialisierungsdaten
 1027                   ;	D	Anzahl der Kanaele
 1028                   ; VR:	F, D, HL
 1029                   
 1030 F560  F3          INIME:	DI
 1031 F561  CD F559     	CALL	INIMX1
 1032 F564  FB          	EI
 1033 F565  C9          	RET
 1034                   ;
 1035                   ; Dateiname abfragen
 1036                   ; PA:	HL	Zeiger auf den eingegebenen Namen
 1037                   ;	CY=1	mit BRK abgebrochen
 1038                   ;
 1039 F566  21 0006     NAME:	LD	HL,6
 1040 F569  CD F0B4     NAMHL:	CALL	OSTR
 1041 F56C  4E 61 6D 65 	DB	'Name :',0
 1042 F573  CD F481     	CALL	INLIN		; Dateiname abfragen
 1043 F576  D8          	RET	C		; BRK
 1044 F577  19          	ADD	HL,DE		; Beginn Name
 1045 F578  C9          	RET
 1046                   
 1047 F579  7F7F        SAVE7F:	DW	7F7FH
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 157
CF48    INC

 1048 F57B  53 41 56 45 	DB	'SAVE'
 1049 F57F  05          	DB	5
 1050 F580  CD F566     	CALL	NAME		; Dateiname abfragen
 1051 F583  D8          	RET	C		; mit BRK abgebrochen
 1052                   ;_____________________________________________________________
 1053                   ;							**36**
 1054                   ; Datei speichern
 1055                   ;
 1056                   ; PE:   HL	Dateiname
 1057                   ; PA:   CY=1    Fehler oder BRK
 1058                   ; VR:	AF, BC, DE, HL
 1059                   ;
 1060 F584  CD E4D4     SAVE:	CALL	CLC		; Kassettenpuffer loeschen
 1061                   ;	LD	DE,CASS		; DE wird von CLC uebergeben
 1062 F587  E5          	PUSH	HL		; Dateiname
 1063 F588  01 000C     	LD	BC,12		; 15.06.2019: von 11 auf 12 geaendert
 1064 F58B  ED B0       	LDIR			; Name in Puffer kopieren
 1065 F58D  AF          	XOR	A
 1066 F58E  12          	LD	(DE),A		; Ende-0 anhaengen
 1067 F58F  21 B781     	LD	HL,ARGN		; alle Argumente inklusive ARGN
 1068 F592  1E 10       	LD	E,10H
 1069 F594  0E 15       	LD	C,15H
 1070 F596  ED B0       	LDIR			; in den Puffer kopieren
 1071 F598  CD F545     	CALL	KPUFF		; Standard-Puffer setzen
 1072 F59B  E1          	POP	HL		; Dateiname
 1073 F59C  CD E4DD     	CALL	PV7		; Vorblock ausgeben
 1074 F59F  02          	DB	2		; ISRO
 1075 F5A0  D8          	RET	C		; Fehler, bereits beim initialisieren
 1076 F5A1  2A B784     	LD	HL,(ARG2)	; Endadresse+1
 1077 F5A4  ED 5B B782  	LD	DE,(ARG1)	; Anfangsadresse
 1078 F5A8  A7          	AND	A
 1079 F5A9  ED 52       	SBC	HL,DE		; Anzahl Datenbytes
 1080 F5AB  E5          	push	hl		; Anzahl auf Stack 
 1081 F5AC  2A B782     SAV1:	LD	HL,(ARG1)	; Adresse fuer aktuellen Block
 1082 F5AF  11 B700     	LD	DE,CASS
 1083 F5B2  01 0080     	LD	BC,128
 1084 F5B5  3A B801     	LD	A,(MODST+1)
 1085 F5B8  E6 01       	AND	1
 1086 F5BA  20 0E       	JR	NZ,SAV3		; IRM ein
 1087 F5BC  41          	LD	B,C
 1088 F5BD  CD E043     SAV2:	CALL	SCROFF
 1089 F5C0  7E          	LD	A,(HL)		; vom RAM
 1090 F5C1  CD E04C     	CALL	SCRON
 1091 F5C4  12          	LD	(DE),A		; in den Puffer
 1092 F5C5  23          	INC	HL
 1093 F5C6  13          	INC	DE
 1094 F5C7  10 F4       	DJNZ	SAV2
 1095 F5C9  01          	DB	01H	; LD BC,nn	ueberspringt LDIR = ED B0
 1096                   ;	JR	SAV4
 1097                   	;
 1098 F5CA  ED B0       SAV3:	LDIR			; kopieren
 1099 F5CC  22 B782     SAV4:	LD	(ARG1),HL	; Adresse fuer naechsten Block eintragen
 1100 F5CF  E1          	pop	hl		; Anzahl
 1101 F5D0  CD F63C     	CALL	SUP5		; Blocknummer anzeigen
 1102 F5D3  01 00A0     	LD	BC,160		; kurzer Vorton
 1103 F5D6  38 12       	JR	C,SAV5		; BRK -> Datei schliessen
 1104 F5D8  11 0080     	ld	de,128		; Blocklaenge
 1105 F5DB  ED 52       	sbc	hl,de		; Ende erreicht?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 158
CF48    INC

 1106 F5DD  28 0B       	jr	z,SAV5		; ja, genau das Blockende
 1107 F5DF  3F          	CCF
 1108 F5E0  30 08       	jr	NC,SAV5		; ja, letzter Block mit weniger Bytes
 1109 F5E2  E5          	push	hl		; restliche Anzahl
 1110 F5E3  CD E4DD     	CALL	PV7		; Datenblock ausgeben
 1111 F5E6  00          	DB	0		; MBO
 1112 F5E7  30 C3       	JR	NC,SAV1		; kein Fehler
 1113 F5E9  E1          	pop	hl		; restliche Byte-Anzahl vom Stack nehmen
 1114                   	;
 1115 F5EA  F5          SAV5:   PUSH    AF              ; Fehlerstatus merken
 1116 F5EB  CD E4DD     	CALL	PV7		; Ausgabe Endeblock 0FFH
 1117 F5EE  03          	DB	3		; CSRO
 1118 F5EF  CD E4D4     	CALL	CLC		; CAOS 4.6: Puffer loeschen nicht mehr in CSRO
 1119 F5F2  CD F4C7     	CALL	CRLF		; CAOS 4.6: Zeilenvorschub nicht mehr in CSRO
 1120 F5F5  F1          	POP     AF              ; CY=1 bei Fehler
 1121 F5F6  C9          	RET
 1122                   ;_____________________________________________________________
 1123                   ;							**15**
 1124                   ; Laden der Argumente in Register
 1125                   ; PA:	HL, DE, BC, A mit Daten der Argumente
 1126                   ;
 1127 F5F7  ED 4B B786  LARG:	LD	BC,(ARG3)
 1128 F5FB  ED 5B B784  	LD	DE,(ARG2)
 1129 F5FF  2A B782     	LD	HL,(ARG1)
 1130 F602  3A B781     	LD	A,(ARGN)
 1131 F605  C9          	RET
 1132                   
 1133                   ; Lesen eines Blockes mit Ausschrift Blocknummer bzw. Name
 1134                   ;
 1135                   ; PE:	(IX+3)	zu lesender Block
 1136                   ; PA:	CY=1	BRK gedrueckt nach Lesefehler oder Fehler bei Device nicht TAPE
 1137                   ; VR:	AF,BC	(Block<>1) ( 00>  )
 1138                   ;	AF,BC,HL (Block=1) ( Name )
 1139                   
 1140 F606  DD 34 03    RDBLK:	INC	(IX+3)		; erwarteter Block
 1141 F609  CD E4DD     LUP1:	CALL	PV7
 1142 F60C  01          	DB	1		; MBI
 1143 F60D  30 1C       LUP2:	JR	NC,LUP3		; kein Fehler aufgetreten
 1144                   
 1145 F60F  CD ED69     	CALL	DEV		; Kassette?
 1146 F612  37          	SCF			; Fehlerflag wieder setzen
 1147 F613  C0          	RET	NZ		; Abbruch bei Fehler wenn kein TAPE
 1148                   
 1149                   ; bei Kassette nach Wiederholung fragen:
 1150 F614  CD F643     	CALL	BLERR		; fehlerhaften Block mit ? anzeigen
 1151 F617  CD F4C7     	CALL	CRLF		; neue Zeile
 1152 F61A  DD 7E 03    	LD	A,(IX+3)
 1153 F61D  3D          	DEC	A		; Vorblock mit Nr. 01 erwartet?
 1154 F61E  28 E9       	JR	Z,LUP1		; dann weiter versuchen...
 1155 F620  CD F3DE     	CALL	KBD		; Tastaturabfrage
 1156 F623  FE 03       	CP	3		; BRK?
 1157 F625  37          	SCF
 1158 F626  C8          	RET	Z
 1159 F627  FE 0A       	CP	LF		; CUD? (fehlerhaften Block uebernehmen?)
 1160 F629  20 DE       	JR	NZ,LUP1
 1161 F62B  DD 7E 02    LUP3:	LD	A,(IX+2)	; gelesener Block
 1162 F62E  DD 46 03    	LD	B,(IX+3)	; zu lesender Block
 1163 F631  B8          	CP	B		; richtige Blocknummer?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 159
CF48    INC

 1164 F632  28 1B       	JR	Z,LUP4		; ja
 1165 F634  3C          	INC	A		; Block FF?
 1166 F635  28 1B       	JR	Z,LUP5		; Endeblock immer als richtig werten
 1167 F637  CD F63F     	CALL	BLNOT		; falsche Blocknummer mit * anzeigen
 1168 F63A  18 CD       	JR	LUP1		; weiter versuchen
 1169                   	;
 1170 F63C  AF          SUP5:	XOR	A		; nichts anzeigen nach der Blocknummer
 1171 F63D  18 18       	JR	AHSTR
 1172                   	;
 1173 F63F  3E 2A       BLNOT:	LD	A,'*'		; falsche Blocknummer mit * anzeigen
 1174 F641  18 14       	JR	AHSTR
 1175                   	;
 1176 F643  CD F0B4     BLERR:	CALL	OSTR		; fehlerhaften Block mit ? anzeigen		
 1177 F646  09 09 09 20 	DB	9,9,9,' ',0	; hinter der letzten korrekten Blocknummer
 1178 F64B  3E 3F       	LD	A,'?'		; Pruefsumme fehlerhaft
 1179 F64D  18 08       	JR	AHSTR
 1180                   
 1181 F64F  3D          LUP4:	DEC	A		; Block 01?
 1182 F650  28 1F       	JR	Z,LUP6		; Dateiname anzeigen
 1183 F652  CD F27B     LUP5:	CALL	CRT02		; falls eine fehlerhafte Zeile dabei war
 1184                   ;SUP5:				; Zeile komplett loeschen mit CLLN
 1185 F655  3E 3E       	LD	A,'>'		; korrekte Blocknummer
 1186 F657  F5          AHSTR:	PUSH	AF
 1187 F658  DD 7E 02    	LD	A,(IX+2)	; Blocknummer
 1188 F65B  CD F3AD     	CALL	AHEX		; hexadezimal anzeigen
 1189 F65E  F1          	POP	AF
 1190 F65F  CD F3BE     	CALL	OCHR		; Kennung (>, *, ?) anhaengen
 1191 F662  3E 19       	LD	A,19H
 1192 F664  CD E0A8     	CALL	CRT		; zurueck zum Zeilenanfang
 1193                   ;	JP	BRKT
 1194                   ;_____________________________________________________________
 1195                   ;							**2A**
 1196                   ; Test auf BRK-Anforderung
 1197                   
 1198 F667  CD E379     BRKT:	CALL	KBDS		; Tastaturabfrage
 1199 F66A  D0          	RET	NC		; keine Taste gedrueckt
 1200 F66B  FE 03       	CP	3		; war das die BRK-Taste?
 1201 F66D  37          	SCF			; CY=1
 1202 F66E  C8          	RET	Z		; ja, BRK erkannt
 1203 F66F  A7          	AND	A		; CY=0
 1204 F670  C9          	RET
 1205                   
 1206                   ; Dateiname aus Vorblock anzeigen (fuer TAPELIST und LOAD)
 1207                   ; 15.06.2019: Anzahl von 11 auf 12 geaendert wegen 8.3 im Vorblock
 1208                   ; 02.04.2021: wieder 11 (wegen TAPELIST/BASIC)
 1209                   ; 15.05.2021: 12 bei LOAD und 11 bei TAPELIST als Kompromiss
 1210                   ; 11.09.2021: Register HL wird nicht mehr veraendert
 1211 F671  06 0C       LUP6:	LD	B,12		; Kontrolle/Anzeige 11 gueltige Zeichen
 1212 F673  48          TLNAME:	LD	C,B
 1213 F674  E5          	PUSH	HL
 1214 F675  21 B700     	LD	HL,CASS		; Dateiname in Kassettenpuffer
 1215 F678  7E          LUP7:	LD	A,(HL)		; auf gueltige Zeichen testen
 1216 F679  B7          	OR	A
 1217 F67A  28 10       	JR	Z,LUP8		; 00h ist OK
 1218 F67C  FE 20       	CP	20h
 1219 F67E  38 21       	JR	C,LUP10		; <20h also raus
 1220 F680  FE 7F       	CP	7Fh
 1221 F682  38 08       	JR	C,LUP8		; 20h..7Eh ist OK
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 160
CF48    INC

 1222 F684  FE D3       	CP	0D3h
 1223 F686  38 19       	JR	C,LUP10		; 7Fh..D2h raus
 1224 F688  FE DA       	CP	0DAh		; D3..D5 sind BASIC-Dateitypen,
 1225                   				; D7..D9 sind geschuetzte BASIC-Dateitypen
 1226 F68A  30 15       	JR	NC,LUP10	; >D9h also raus
 1227 F68C  2C          LUP8:	INC	L
 1228 F68D  10 E9       	DJNZ	LUP7
 1229 F68F  68          	LD	L,B		; L=0 wieder zurueck auf Anfang Kassettenpuffer
 1230 F690  41          	LD	B,C		; anzuzeigende Anzahl
 1231 F691  7E          LUP9:	LD	A,(HL)		; aus Kassettenpuffer anzeigen
 1232 F692  E6 7F       	AND	7Fh		; hohe Zeichen fuer BASIC-Dateiname
 1233 F694  23          	INC	HL
 1234                   ;	OR	A		; CY=0 (kein Fehler)
 1235 F695  20 02       	JR	NZ,LUP11
 1236 F697  3E 20       	LD	A,' '		; statt 00 Leerzeichen anzeigen
 1237 F699  CD F3BE     LUP11:	CALL	OCHR		; Dateiname anzeigen
 1238 F69C  10 F3       	DJNZ	LUP9
 1239 F69E  CD F3A5     	CALL	SPACE		; Leerzeichen zwischen Dateiname + Adressen
 1240 F6A1  E1          LUP10:	POP	HL
 1241 F6A2  A7          	AND	A		; kein Fehler
 1242 F6A3  C9          	RET			; (CRT und damit OCHR/SPACE veraendern AF nicht)
 1243                   
 1244 F6A4  CD F0B4     NOMC:	CALL	OSTR
 1245 F6A7  4B 65 69 6E 	DB	'Keine MC-Datei!',CR,LF,0
 1246 F6B9  CD FC22     CLJP:	CALL	CSRI		; Datei schliessen
 1247 F6BC  37          	SCF			; Fehlerflag setzen
 1248 F6BD  C9          	RET
 1249                   
 1250 F6BE  7F7F        VERI7F:	DW	7F7FH
 1251 F6C0  56 45 52 49 	DB	'VERIFY',1
 1252                   ;_____________________________________________________________
 1253                   ;							**11**
 1254                   ; Kassettendatei kontrollieren
 1255                   
 1256 F6C7  CD ED69     VERIF:	CALL	DEV		; Kassette?
 1257 F6CA  C0          	RET	NZ		; nur bei TAPE sinnvoll
 1258 F6CB  DD 77 07    	LD	(IX+7),A	; A=0
 1259 F6CE  18 1D       	JR	LOAD1
 1260                   
 1261 F6D0  7F7F        LOAD7F:	DW	7F7FH
 1262 F6D2  4C 4F 41 44 	DB	'LOAD',1
 1263 F6D7  CD ED69     	CALL	DEV		; Kassette?
 1264 F6DA  C4 F566     	CALL	NZ,NAME		; Dateiname abfragen falls nicht TAPE
 1265 F6DD  D8          	RET	C		; mit BRK abgebrochen
 1266                   ;_____________________________________________________________
 1267                   ;							**10**
 1268                   ; Datei einlesen
 1269                   
 1270 F6DE  DD 36 07 01 LOAD:	LD	(IX+7),1	; Daten lesen
 1271 F6E2  3A B781     	LD	A,(ARGN)
 1272 F6E5  FE 02       	CP	2
 1273 F6E7  38 04       	JR	C,LOAD1		; Autostart?
 1274 F6E9  DD CB 07 CE 	SET	1,(IX+7)	; unterdruecken
 1275 F6ED  CD F545     LOAD1:	CALL	KPUFF		; Standardpuffer setzen
 1276 F6F0  CD E4DD     	CALL	PV7		; HL = Dateiname
 1277 F6F3  04          	DB	4		; ISRI (Vorblock einlesen)
 1278 F6F4  30 05       	JR	NC,LOAD0	; kein Fehler aufgetreten
 1279 F6F6  CD ED69     	CALL	DEV		; Kassette?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 161
CF48    INC

 1280 F6F9  37          	SCF			; Fehlerflag setzen
 1281 F6FA  C0          	RET	NZ		; Abbruch wenn nicht Kassette
 1282 F6FB  CD F60D     LOAD0:	CALL	LUP2		; Blockinhalt auswerten (Name anzeigen usw.)
 1283 F6FE  38 B9       LOAD2:	JR	C,CLJP		; BRK -> CSRI -> Fehler
 1284 F700  DD CB 07 46 	BIT	0,(IX+7)
 1285 F704  28 47       	JR	Z,LOAD5		; Verify
 1286 F706  3A B710     	LD	A,(CASS+10H)	; Anzahl der Argumente beim Abspeichern
 1287 F709  D6 02       	SUB	2		; 0 oder 1 Argument ist falsch
 1288 F70B  FE 09       	CP	9		; MC?
 1289 F70D  30 95       	JR	NC,NOMC		; Fehler: kein gueltiger CAOS-Vorblock
 1290                   ;
 1291                   ; 11.09.2021: ARGN aus Vorblock wird nun um 2 verringert in den Bits 2-4 von
 1292                   ; (IX+7) abgelegt. Das spart das doppelte Laden von (CASS+10H) und vereinfacht
 1293                   ; den Test auf Autostart nach dem Einlesen der Datei
 1294                   ;
 1295 F70F  07          	RLCA			; Anzahl ARG-2
 1296 F710  07          	RLCA			; nach Bits 2..4 rotieren
 1297                   ;
 1298                   ; 12.09.2021: Da (IX+7) bei LOAD mit 1 und bei VERIFY mit 0 initialisiert wird,
 1299                   ; muessen die Bits nicht maskiert werden und die Bits 2..4 koennen direkt
 1300                   ; gesetzt werden mittels OR
 1301                   ;
 1302 F711  DD B6 07    	OR	(IX+7)
 1303                   ;	AND	00011100b	; Bits 0..1 und 5..7 zuruecksetzen
 1304                   ;	XOR	(IX+7)		; a = (a XOR b) XOR b fuer Bits 2..4
 1305 F714  DD 77 07    	LD	(IX+7),A	; in IX+7 merken fuer spaetere Auswertung
 1306 F717  2A B715     	LD	HL,(CASS+15H)	; SADR
 1307 F71A  E5          	PUSH	HL
 1308 F71B  ED 5B B713  	LD	DE,(CASS+13H)	; EADR+1
 1309 F71F  2A B711     	LD	HL,(CASS+11H)	; AADR
 1310 F722  3A B781     	LD	A,(ARGN)
 1311 F725  A7          	AND	A		; Ladeoffset?
 1312 F726  28 11       	JR	Z,LOAD3		; nein
 1313 F728  ED 4B B782  	LD	BC,(ARG1)	; Offset
 1314 F72C  09          	ADD	HL,BC		; Anfangsadresse und Endadresse
 1315 F72D  EB          	EX	DE,HL		; umrechnen
 1316 F72E  09          	ADD	HL,BC
 1317 F72F  EB          	EX	DE,HL
 1318 F730  DD CB 07 66 	BIT	4,(IX+7)	; 4 bis 7 Argumente?
 1319 F734  20 03       	JR	NZ,LOAD3
 1320 F736  E3          	EX	(SP),HL
 1321 F737  09          	ADD	HL,BC		; Startadresse auch umrechnen
 1322 F738  E3          	EX	(SP),HL
 1323 F739  CD F395     LOAD3:	CALL	HLDE		; Anfangsadresse und Endadresse anzeigen
 1324 F73C  3A B710     	LD	A,(CASS+10H)
 1325 F73F  FE 03       	CP	3
 1326 F741  38 05       	JR	C,LOAD4		; keine Startadresse
 1327 F743  E3          	EX	(SP),HL
 1328 F744  CD F39D     	CALL	HLHX		; Startadresse anzeigen
 1329 F747  E3          	EX	(SP),HL
 1330 F748  C1          LOAD4:	POP	BC		; Startadresse merken
 1331 F749  ED 43 B786  	LD	(ARG3),BC
 1332 F74D  CD F4C7     LOAD5:	CALL	CRLF		; Zeilenvorschub nach Dateiname + Adressen
 1333 F750  EB          	EX	DE,HL		; DE = Ladeadresse
 1334                   ; Load-Hauptschleife
 1335 F751  CD F606     LOAD6:	CALL	RDBLK		; 128-Byte-Block einlesen
 1336 F754  38 A8       	JR	C,LOAD2		; BRK -> CSRI -> Fehler melden
 1337 F756  DD CB 07 46 	BIT	0,(IX+7)
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 162
CF48    INC

 1338 F75A  28 26       	JR	Z,LOAD11	; Verify
 1339 F75C  E5          	PUSH	HL		; Endadresse
 1340 F75D  ED 52       	SBC	HL,DE		; noch zu lesende Bytes
 1341 F75F  01 0080     	LD	BC,128		; Blockgroesse 128 Byte
 1342 F762  B7          	OR	A		; CY=0, damit auch EADR<AADR funktioniert!
 1343 F763  ED 42       	SBC	HL,BC		; voller Block?
 1344 F765  09          	ADD	HL,BC
 1345 F766  30 01       	JR	NC,LOAD7	; ja
 1346 F768  4D          	LD	C,L		; restliche Anzahl
 1347 F769  21 B700     LOAD7:	LD	HL,CASS		; Standard-Kassettenpuffer
 1348 F76C  3A B801     	LD	A,(MODST+1)
 1349 F76F  E6 01       	AND	1
 1350 F771  20 16       	JR	NZ,LOAD9	; IRM ist ein
 1351 F773  41          	LD	B,C
 1352 F774  7E          LOAD8:	LD	A,(HL)		; Byteweise aus dem Puffer
 1353 F775  CD E043     	CALL	SCROFF
 1354 F778  12          	LD	(DE),A		; in den RAM kopieren
 1355 F779  23          	INC	HL
 1356 F77A  13          	INC	DE
 1357 F77B  CD E04C     	CALL	SCRON
 1358 F77E  10 F4       	DJNZ	LOAD8
 1359 F780  18 09       	JR	LOAD10
 1360                   ;
 1361                   ; CAOS 4.7:
 1362                   ; Bei VERIFY wird mit Blocknummer FF der Vergleich beendet
 1363                   ;
 1364 F782  DD 34 02    LOAD11:	INC	(IX+2)		; Blocknummer FF?
 1365 F785  28 0A       	JR	Z,LOAD12	; ja, bei VERIFY Einlesen beenden
 1366 F787  18 C8       	JR	LOAD6
 1367                   	;
 1368 F789  ED B0       LOAD9:	LDIR			; gelesenen Block kopieren
 1369 F78B  E1          LOAD10:	POP	HL
 1370 F78C  ED 52       	SBC	HL,DE		; Endadresse erreicht?
 1371 F78E  19          	ADD	HL,DE		; EADR regenerieren (Z-Flag bleibt erhalten)
 1372                   ;
 1373                   ; CAOS 4.6:
 1374                   ; Damit das Einlesen auch bei Diskette funktioniert, muss zusaetzlich oder
 1375                   ; ausschliesslich (?) der Adressvergleich stattfinden! Da hier nur MC-Dateien
 1376                   ; gelesen werden, ist eigentlich keine Abfrage auf Blocknr. FF erforderlich
 1377                   ;
 1378 F78F  20 C0       	JR	NZ,LOAD6
 1379 F791  CD E4D4     LOAD12:	CALL	CLC		; CAOS 4.6: Puffer loeschen nicht mehr in CSRI
 1380 F794  CD F4C7     	CALL	CRLF		; CAOS 4.6: Zeilenvorschub nicht mehr in CSRI
 1381                   	;
 1382 F797  CD E4DD     	CALL	PV7		; Datei schliessen
 1383 F79A  05          	DB	5		; CSRI
 1384 F79B  D8          	RET	C		; Fehler
 1385 F79C  DD 7E 07    	LD	A,(IX+7)
 1386 F79F  E6 03       	AND	3		; Bits 0+1 testen
 1387 F7A1  3D          	DEC	A
 1388 F7A2  C0          	RET	NZ		; kein Start oder Verify
 1389 F7A3  DD 7E 07    	LD	A,(IX+7)
 1390 F7A6  E6 1C       	AND	00011100b	; Bits 2..4 testen (ARGN-2 in Vorblock)
 1391 F7A8  DD 36 07 00 	LD	(IX+7),0	; Befehl fehlte in CAOS 4.3!
 1392 F7AC  C8          	RET	Z		; kein Fehler, kein Autostart bei ARGN=2
 1393 F7AD  2A B786     	LD	HL,(ARG3)	; Startadresse
 1394 F7B0  E9          	JP	(HL)		; anspringen
 1395                   
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 163
CF48    INC

 1396 F7B1  7F7F        	DW	7F7FH
 1397 F7B3  43 4F 4C 4F 	DB	'COLOR'
 1398 F7B8  11          	DB	11H		; Argumente dezimal ab CAOS 4.8
 1399 F7B9  CD FB9B     	CALL	CON		; CAOS ROM-C ein
 1400 F7BC  C3 C583     	JP	COLRC		; dort abarbeiten
 1401                   ;_____________________________________________________________
 1402                   ;							**0F**
 1403 F7BF  CD FB9B     COLR:	CALL	CON
 1404 F7C2  C3 C5A4     	JP	SETCO
 1405                   
 1406 F7C5  7F7F        	DW	7F7FH
 1407 F7C7  44 49 53 50 	DB	'DISPLAY'
 1408 F7CE  03          	DB	3
 1409                   ;_____________________________________________________________
 1410                   ;							**3B**
 1411 F7CF  CD FB9B     DISP:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1412 F7D2  CD C83C     	CALL	DISPC
 1413 F7D5  18 1D       	JR	JCOFF
 1414                   
 1415 F7D7  7F7F        	DW	7F7FH
 1416 F7D9  4D 4F 44 49 	DB	'MODIFY'
 1417 F7DF  03          	DB	3
 1418                   ;_____________________________________________________________
 1419                   ;							**2E**
 1420 F7E0  01 C86D     MODI:	LD	BC,MODIC
 1421 F7E3  18 1A       	JR	JROMC		; im ROM-C ausfuehren
 1422                   ;
 1423                   ;***************************************************************
 1424                   ; Fensterverwaltung
 1425                   ; %WINDOW		aktiviert Fenster 0 in voller Groesse
 1426                   ; %WINDOW nr		aktiviert Fenster nr
 1427                   ; %WINDOW aa bb cc dd e	Fenster definieren
 1428                   ;         |  |  |  |  |
 1429                   ;         |  |  |  |  |_ Fenster-Nr. in (ARG5)
 1430                   ;         |  |  |  |____ Spaltenzahl in (ARG4)
 1431                   ;         |  |  |_______ Spaltenanfang in Register C
 1432                   ;         |  |__________ Zeilenanzahl in Register E
 1433                   ;         |_____________ Zeilenanfang in Register L
 1434                   ;
 1435 F7E5  7F7F        WIND7F:	DW	7F7FH
 1436 F7E7  57 49 4E 44 	DB	'WINDOW'
 1437 F7ED  11          	DB	11H		; Argumente dezimal!
 1438 F7EE  CD FB9B     	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1439 F7F1  CD C5BF     	CALL	WINDC
 1440 F7F4  C3 FB8A     JCOFF:	JP	COFF
 1441                   ;_____________________________________________________________
 1442                   ;							**3C**
 1443                   ; PE:	A	Fensternummer 0..9
 1444                   ;	HL	Fensteranfang
 1445                   ;	DE	Fenstrergroesse
 1446                   ; PA:	CY=1	Fehler
 1447                   ; VR:	AF, BC, DE, HL
 1448                   ;
 1449 F7F7  01 C61F     WININ:	LD	BC,WININC
 1450 F7FA  18 03       	JR	JROMC		; im ROM-C ausfuehren
 1451                   ;_____________________________________________________________
 1452                   ;							**3D**
 1453                   ; PE:	A	Fensternummer 0..9
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 164
CF48    INC

 1454                   ; PA:	CY=1	Fehler
 1455                   ; VR:	AF, BC, DE, HL
 1456                   ;
 1457 F7FC  01 C5EF     WINAK:	LD	BC,WINAKC
 1458 F7FF  C3 FB87     JROMC:	JP	CLROMC		; im ROM-C ausfuehren
 1459                   ;_____________________________________________________________
 1460                   ;
 1461                   ; F-Taste belegen bzw. Belegung auflisten
 1462                   ;
 1463 F802  7F7F        	DW	7F7FH
 1464 F804  4B 45 59    	DB	'KEY'
 1465 F807  01          	DB	1		; Parameter hexadezimal
 1466 F808  FE 01       	CP	1		; Parameter angegeben?
 1467 F80A  30 05       	JR	NC,KEYL		; ja, F-Taste bearbeiten
 1468                   ;_____________________________________________________________
 1469                   ;							**3A**
 1470 F80C  01 C539     KEYLI:	LD	BC,KEYLIC	; Keylist
 1471 F80F  18 EE       	JR	JROMC		; im ROM-C ausfuehren
 1472                   
 1473 F811  7D          KEYL:	LD	A,L		; Nummer
 1474                   ;_____________________________________________________________
 1475                   ;							**39**
 1476 F812  01 C48D     KEY:	LD	BC,KEYC		; Taste belegen
 1477 F815  18 E8       	JR	JROMC		; im ROM-C ausfuehren
 1478                   ;_____________________________________________________________
 1479                   ;							**25**
 1480                   ; Cursor komplementieren
 1481                   ;
 1482 F817  E5          CUCP:	PUSH	HL
 1483 F818  D5          	PUSH	DE
 1484 F819  C5          	PUSH	BC
 1485 F81A  F5          	PUSH	AF
 1486 F81B  CD E055     	CALL	PADR0		; Adresse im VRAM berechnen
 1487 F81E  38 20       	JR	C,CUCP3		; ausserhalb
 1488 F820  E5          	PUSH	HL
 1489 F821  CD E083     	CALL	DABR
 1490 F824  7E          	LD	A,(HL)
 1491 F825  E1          	POP	HL
 1492 F826  A7          	AND	A		; Dummy?
 1493 F827  20 0A       	JR	NZ,CUCP1
 1494 F829  3E 06       	LD	A,6		; vorletzte
 1495 F82B  B5          	OR	L		; Cursorzeile
 1496 F82C  6F          	LD	L,A
 1497 F82D  7E          	LD	A,(HL)
 1498 F82E  EE FE       	XOR	0FEH		; Strichcursor 7 Pixel breit
 1499 F830  77          	LD	(HL),A
 1500 F831  18 0D       	JR	CUCP3
 1501                   	;
 1502 F833  ED 5B B7EE  CUCP1:	LD	DE,(CUMUST)	; Muster
 1503 F837  06 08       	LD	B,8		; Zeichenhoehe
 1504 F839  1A          CUCP2:	LD	A,(DE)
 1505 F83A  AE          	XOR	(HL)		; verknuepfen
 1506 F83B  77          	LD	(HL),A
 1507 F83C  13          	INC	DE
 1508 F83D  2C          	INC	L
 1509 F83E  10 F9       	DJNZ	CUCP2		; 8-mal
 1510 F840  C3 E0B3     CUCP3:	JP	POP4
 1511                   ;_____________________________________________________________
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 165
CF48    INC

 1512                   ;							**30**
 1513                   ; Punkt setzen
 1514                   ; PE:	(HOR)	Horizontalkoordinate
 1515                   ;	(VERT)	Vertikalkoordinate
 1516                   ;	(FARB)	Bildpunktfarbe
 1517                   ; PA:	CY=1	Punkt auaerhalb (Fehler)
 1518                   ; VR:	AF
 1519                   ;
 1520 F843  CD FB9B     PUSE:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1521 F846  CD C7B3     	CALL	PUSEC		; Punkt setzen
 1522 F849  18 06       	JR	COF
 1523                   ;_____________________________________________________________
 1524                   ;							**2F**
 1525                   ; Punkt loeschen
 1526                   ; PE:	(HOR)	Horizontalkoordinate
 1527                   ;	(VERT)	Vertikalkoordinate
 1528                   ;	(FARB)	Bildpunktfarbe
 1529                   ; PA:	CY=1	Punkt auaerhalb (Fehler)
 1530                   ;	Z=1	Punkt war nicht gesetzt
 1531                   ;	A	Farbbyte
 1532                   ; VR:	AF
 1533                   ;
 1534 F84B  CD FB9B     PUDE:	CALL	CON		; CLROMC hier nicht nutzbar (wegen BC)
 1535 F84E  CD C7BE     	CALL	PUDEC		; Punkt loeschen
 1536 F851  C3 FB8A     COF:	JP	COFF
 1537                   ;_____________________________________________________________
 1538                   ;							**3F**
 1539                   ; Kreis zeichnen
 1540                   ; PE:	(ARG1)	X-Koordinate Mittelpunkt
 1541                   ;	(ARG2)	Y-Koordinate Mittelpunkt
 1542                   ;	(ARG3)	Radius
 1543                   ;	(FARB)	Farbe des Kreises
 1544                   ; PA:	-
 1545                   ; VR:	AF, BC, DE, HL, BC', DE', HL'
 1546                   
 1547 F854  01 C6EC     CIRCL:	LD	BC,CIRCLC	; Kreis
 1548 F857  18 A6       	JR	JROMC		; im ROM-C ausfuehren
 1549                   ;_____________________________________________________________
 1550                   ;							**3E**
 1551                   ; Linie zeichnen
 1552                   ; PE:	(ARG1)	X-Koordinate-Anfang
 1553                   ;	(ARG2)	Y-Koordinate-Anfang
 1554                   ;	(ARG3)	X-Koordinate-Ende
 1555                   ;	(ARG4)	Y-Koordinate-Ende
 1556                   ;	(FARB)	Farbe der Linie
 1557                   ; PA:	-
 1558                   ; VR:	AF, BC, DE, HL, AF', BC', DE', HL'
 1559                   
 1560 F859  01 C66F     LINE:	LD	BC,LINEC	; Linie
 1561 F85C  18 A1       	JR	JROMC
 1562                   ;_____________________________________________________________
 1563                   ;							**37**
 1564                   ; Byteweise Eingabe:
 1565                   ; PE:	D	Steuerbyte
 1566                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 1567                   ;	Bit 5,(IX+7) Blocknummernanzeige unterdruecken?
 1568                   ; PA:	A	Datenbyte (nicht bei Close)
 1569                   ;	CY=1	Fehler
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 166
CF48    INC

 1570                   ; VR:	AF, DE, HL
 1571                   ;
 1572 F85E  CD FB9B     MBIN:	CALL	CON		; CAOS-ROM C ein
 1573 F861  CD CDC0     	CALL	MBIC		; Byte einlesen
 1574 F864  18 EB       	JR	COF		; CAOS-ROM C aus
 1575                   ;_____________________________________________________________
 1576                   ;							**38**
 1577                   ; Byteweise Ausgabe:
 1578                   ; PE:	A	Datenbyte
 1579                   ;	D	Steuerbyte
 1580                   ;	HL	Name nur bei INIT (Adresszeiger 11 Byte)
 1581                   ;	Bit 5,(IX+7) Blocknummernanzeige unterdruecken?
 1582                   ; PA:	CY=1	Fehler
 1583                   ; VR:	AF, DE, HL
 1584                   ;
 1585 F866  CD FB9B     MBOUT:	CALL	CON		; CAOS-ROM C ein
 1586 F869  CD CD27     	CALL	MBOC		; Byte ausgeben
 1587 F86C  18 E3       	JR	COF		; CAOS-ROM C aus
 1588                   
 1589                   ; aktuelles Menuewort wieder loeschen (fuer HELP-Funktion)
 1590                   
 1591 F86E  16 0C       CLR12:	LD	D,12		; maximal 12 Zeichen
 1592 F870  3E 1F       CLR12a:	LD	A,1FH		; DEL
 1593 F872  CD F3BE     	CALL	OCHR		; loeschen
 1594 F875  15          	DEC	D
 1595 F876  20 F8       	JR	NZ,CLR12a
 1596 F878  C9          	RET
 1597                   
 1598                   ; BASIC-I/O-Verteiler
 1599                   ; PE:	E	Steuerbyte
 1600                   ;	Bit 0..2 Kanalauswahl
 1601                   ;		00 = Eingabe Kanal 0 = Tastatur
 1602                   ;		01 = Ausgabe Kanal 0 = Bildschirm
 1603                   ;		02 = Eingabe Kanal 1 = Kassette
 1604                   ;		03 = Ausgabe Kanal 1 = Kassette
 1605                   ;		04 = Eingabe Kanal 2 = Anwenderkanal 1
 1606                   ;		05 = Ausgabe Kanal 2 = Anwenderkanal 1
 1607                   ;		06 = Eingabe Kanal 3 = Anwenderkanal 2
 1608                   ;		07 = Ausgabe Kanal 3 = Anwenderkanal 2
 1609                   ;	Bit 3	Init = Datei oeffnen
 1610                   ;	Bit 4	BIT8
 1611                   ;	Bit 5	Ruecksprung zu CAOS (BYE)
 1612                   ;	Bit 6	Close = Datei schliessen
 1613                   ;	Bit 7	Abfrage Tastaturstatus
 1614                   ;	HL	Zeiger, bei Init beginnt Dateiname 2 Byte danach
 1615                   ;	A	Datenbyte bei Ausgabe
 1616                   ; PA:	A	Datenbyte bei Eingabe
 1617                   
 1618 F879  E5          BASPV:	PUSH	HL
 1619 F87A  C5          	PUSH	BC
 1620 F87B  CD F06B     	CALL	IRMON
 1621 F87E  CB 6B       	BIT	5,E
 1622 F880  C2 F257     	JP	NZ,BASBYE	; BYE
 1623 F883  D5          	PUSH	DE		; E = Steuerbyte
 1624 F884  23          	INC	HL
 1625 F885  23          	INC	HL
 1626 F886  CB 7B       	BIT	7,E
 1627 F888  20 56       	JR	NZ,BSA2		; Tastaturstatus
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 167
CF48    INC

 1628 F88A  E5          	PUSH	HL
 1629 F88B  7B          	LD	A,E		; Kanalnummer
 1630 F88C  E6 07       	AND	7		; 0-3
 1631 F88E  21 EDF7     	LD	HL,BUPTAB	; Tabelle der Unterprogramme
 1632 F891  85          	ADD	A,L
 1633 F892  6F          	LD	L,A
 1634 F893  7A          	LD	A,D		; Parameter
 1635 F894  53          	LD	D,E		; Steuerbyte
 1636 F895  5E          	LD	E,(HL)		; UP-Nummer
 1637 F896  E1          	POP	HL		; Dateiname
 1638 F897  CD F055     	CALL	PV3		; Aufruf (UP-Nr. in E)
 1639 F89A  D1          	POP	DE		; E = Steuerbyte
 1640 F89B  57          	LD	D,A		; D = Ausgabeparameter
 1641 F89C  30 0D       	JR	NC,BSA0		; kein Fehler
 1642 F89E  7B          	LD	A,E		; Steuerbyte
 1643 F89F  E6 06       	AND	6		; Kanalgruppe ausfiltern
 1644 F8A1  FE 02       	CP	2		; MBIN/MBOUT?
 1645 F8A3  20 06       	JR	NZ,BSA0		; bei allen anderen Kanaelen CY uninteressant
 1646                   
 1647                   ; Sprung zu BASIC: ?IO ERROR
 1648 F8A5  CD F088     BD2:	CALL	IRMOF		; IRM aus
 1649 F8A8  C3 DC82     	JP	IOERR		; Sprung zu Fehler-Routine in den BASIC-ROM
 1650                   
 1651 F8AB  7B          BSA0:	LD	A,E		; Steuerbyte
 1652 F8AC  E6 4F       	AND	4FH		; Kanalnummer und Close-Bit ausfiltern
 1653 F8AE  EE 43       	XOR	43H		; Close bei Kassettenausgabe?
 1654 F8B0  20 25       	JR	NZ,BSA1
 1655 F8B2  CD ED69     	CALL	DEV		; DEVICE=Kassette?
 1656 F8B5  20 20       	JR	NZ,BSA1		; VERIFY nur bei TAPE ausfuehren
 1657 F8B7  CD F0B4     	CALL	OSTR
 1658 F8BA  56 45 52 49 	DB	'VERIFY ?(Y):',0
 1659 F8C7  CD F3DE     	CALL	KBD
 1660 F8CA  CD E38D     	CALL	CSTBT		; anzeigen, was eingegeben wurde
 1661 F8CD  F5          	PUSH	AF
 1662 F8CE  CD F4C7     	CALL	CRLF		; auf neue Zeile wechseln
 1663 F8D1  F1          	POP	AF
 1664 F8D2  FE 59       	CP	'Y'
 1665 F8D4  CC F6C7     	CALL	Z,VERIF		; bei "Y" VERIFY ausfuehren
 1666 F8D7  7A          BSA1:	LD	A,D		; Ausgabeparameter
 1667 F8D8  CB 9B       	RES	3,E		; Init ruecksetzen
 1668 F8DA  CD F088     	CALL	IRMOF
 1669 F8DD  C1          	POP	BC
 1670 F8DE  E1          	POP	HL
 1671 F8DF  C9          	RET
 1672                   
 1673 F8E0  CD E379     BSA2:	CALL	KBDS		; Tastaturabfrage
 1674 F8E3  D1          	POP	DE
 1675 F8E4  57          	LD	D,A		; Zeichencode in D zurueck geben
 1676 F8E5  30 F0       	JR	NC,BSA1		; keine Taste gedrueckt
 1677 F8E7  CB BB       	RES	7,E		; Rueckmeldung, dass Taste gedrueckt wurde
 1678 F8E9  18 EC       	JR	BSA1
 1679                   
 1680                   
 1681 F8EB  CD F3BE     ZKOUT0:	CALL	OCHR
 1682                   ;_____________________________________________________________
 1683                   ;							**45**
 1684 F8EE  7E          ZKOUT:	LD	A,(HL)
 1685 F8EF  23          	INC	HL
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 168
CF48    INC

 1686 F8F0  A7          	AND	A
 1687 F8F1  20 F8       	JR	NZ,ZKOUT0
 1688 F8F3  C9          	RET
 1689                   ;_____________________________________________________________
 1690                   ;							**35**
 1691                   ; Tonausgabe
 1692                   ;
 1693                   ; (ARG1) => HL	L = Tonhoehe 1 (ZK fuer CTC 0, 0=kein Ton)
 1694                   ;		H = Vorteiler 1 (0, 1)
 1695                   ; (ARG2) => DE	E = Tonhoehe 2 (ZK fuer CTC 1, 0=kein Ton)
 1696                   ;		D = Vorteiler 2 (0, 1)
 1697                   ; (ARG3) => BC	C = Lautstaerke in 2er-Schritten (0 ... 1FH)
 1698                   ;		B = Tondauer in 20ms-Schritten (0 ... FFH)
 1699                   ;		    bzw. 0 = Dauerton)
 1700                   
 1701 F8F4  CD F5F7     TON:	CALL	LARG		; Argumente laden
 1702 F8F7  DD CB 08 4E TON1:	BIT	1,(IX+8)	; noch alter Ton?
 1703 F8FB  20 FA       	JR	NZ,TON1		; warten
 1704                   ; hier Einsprung von Beep und Click:
 1705 F8FD  79          TON2:	LD	A,C		; Lautstaerke
 1706 F8FE  E6 1E       	AND	00011110b	; maskieren (Bit 1-4)
 1707 F900  EE 9F       	XOR	10011111b	; Komplement da nullaktiv
 1708 F902  4F          	LD	C,A
 1709 F903  78          	LD	A,B		; Tondauer
 1710 F904  A7          	AND	A		; 0=Dauerton?
 1711 F905  F3          	DI
 1712 F906  28 0D       	JR	Z,TON3		; ja, keine CTC2 starten
 1713 F908  CB B9       	RES	7,C		; nein, Blinken aus
 1714 F90A  DD CB 08 CE 	SET	1,(IX+8)	; neuer Ton
 1715 F90E  3E C7       	LD	A,11000111b	; EI, Zaehler 50Hz
 1716 F910  D3 8E       	OUT	(CTC2),A	; CTC2
 1717 F912  78          	LD	A,B		; Dauer
 1718 F913  D3 8E       	OUT	(CTC2),A
 1719 F915  DB 89       TON3:	IN	A,(PIOBD)
 1720 F917  E6 60       	AND	01100000b	; RAM8 maskieren
 1721 F919  B1          	OR	C		; Lautstaerke einbauen
 1722 F91A  D3 89       	OUT	(PIOBD),A	; Lautstaerke ausgeben
 1723 F91C  FB          	EI
 1724                   
 1725                   ; 01.05.2021 (nach Idee von Frank Ludwig)
 1726                   ; Kanal 1 wird mit 90 Grad Phasenverschiebung programmiert, damit die
 1727                   ; Tonausgabe bei gleichen Parametern fuer Kanal 0 und 1 besser klingt
 1728                   
 1729 F91D  01 038C     	LD	BC,0300h+CTC0	; B=Steuerbyte "Kanal Reset"
 1730 F920  7D          	LD	A,L		; Tonhoehe 1
 1731 F921  CD F928       	CALL	TON4		; Tonkanal 1 starten (CY ist 0)
 1732 F924  0C          	INC	C		; CTC1
 1733 F925  EB          	EX	DE,HL		; Tonkanal 2 starten
 1734 F926  7D          	LD	A,L		; Tonhoehe 2
 1735 F927  1F          	RRA			; halbe ZK fuer 90Grad Phasenverschiebung
 1736 F928  ED 41       TON4:	OUT	(C),B		; CTC-Kanal anhalten
 1737 F92A  CE 00       	ADC	0		; +CY um ZK=1 zu beruecksichtigen
 1738 F92C  C8          	RET	Z		; kein Ton (ZK=0)
 1739 F92D  CB 3C       	SRL	H		; Bit 0 (Vorteiler) nach CY
 1740 F92F  67          	LD	H,A		; ZK fuer Phasenverschiebung nach H
 1741 F930  3E 28       	LD	A,00101000b	; Steuerbyte "Zeitgeber" vor 3x RRA
 1742 F932  1F          	RRA			;   (ohne Kanal Reset)
 1743 F933  1F          	RRA			; Vorteiler nach Bit 5 rotieren
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 169
CF48    INC

 1744 F934  1F          	RRA
 1745 F935  F3          	DI
 1746 F936  ED 79       	OUT	(C),A		; CTC als Zeitgeber starten
 1747 F938  ED 61       	OUT	(C),H		; bei CTC1 ZK fuer Phasenverschiebung ausgeben		
 1748 F93A  ED 79       	OUT	(C),A		; CTC nochmals mit echter ZK programmieren
 1749 F93C  FB          	EI			; Interrupts wieder ein nach letztem OUT
 1750 F93D  ED 69       	OUT	(C),L		; jetzt volle ZK nach ersten Nulldurchgang
 1751 F93F  C9          	RET
 1752                   
 1753                   ; ESC-Funktionen:
 1754                   
 1755 F940  21 B7A2     ESCPRG:	LD	HL,STBT		; ShSTOP
 1756 F943  CB E6       	SET	4,(HL)		; Kennung, dass ESC-Funktion folgt
 1757 F945  C9          	RET
 1758                   
 1759 F946  01 B200     ESC1:	LD	BC,VRAM0+00H	; 0B200H
 1760 F949  18 0D       	JR	ESCVR
 1761                   
 1762 F94B  01 AD05     ESC2:	LD	BC,VRAM1+05H	; 0AD05H
 1763 F94E  18 08       	JR	ESCVR
 1764                   
 1765 F950  01 AD04     ESC3:	LD	BC,VRAM1+04H	; 0AD04H
 1766 F953  18 03       	JR	ESCVR
 1767                   
 1768 F955  01 B201     ESC4:	LD	BC,VRAM0+01H	; 0B201H
 1769 F958  60          ESCVR:	LD	H,B
 1770 F959  2E 00       	LD	L,0
 1771 F95B  22 B7CB     	LD	(VRAM),HL
 1772                   
 1773                   ; 08.08.2020: Beim Bildwechsel die Fenster- und Cursorposition merken
 1774                   ;	( Idee von Tim Hennig am 25.07.2020 )
 1775                   
 1776 F95E  3A B7A2     	LD	A,(STBT)	; Bit 7 gesetzt, wenn 2 Monitore
 1777 F961  07          	RLCA			; Bit 7 -> CY
 1778 F962  30 1D       	JR	NC,NOBW		; nein, 2 Bilder (KC85/4-Modus)
 1779                   
 1780 F964  DD 7E 01    	LD	A,(IX+1)	; Istzustand
 1781 F967  A9          	XOR	C		; Sollzustand
 1782 F968  CB 57       	BIT	2,A		; Wechsel Bild-Zugriff?
 1783 F96A  28 15       	JR	Z,NOBW		; nein
 1784 F96C  21 B79B     	LD	HL,WINNR	; B79B
 1785 F96F  11 AADD     	LD	DE,WIN2		; Tauschbereich	
 1786 F972  06 0B       	LD	B,CCTL0-WINNR	; 11 Byte (Fensternummer + Fenstervektor)
 1787 F974  1A          SWAP:	LD	A,(DE)
 1788 F975  ED A0       	LDI
 1789 F977  03          	INC	BC		; BC korrigieren
 1790 F978  2B          	DEC	HL
 1791 F979  77          	LD	(HL),A
 1792 F97A  23          	INC	HL
 1793 F97B  10 F7       	DJNZ	SWAP
 1794 F97D  ED 5B B7A0  	LD	DE,(CURSO)	; gespeicherte Cursor-Position
 1795                   
 1796 F981  06 FA       NOBW:	LD	B,0FAH		; Maske
 1797 F983  78          AXO84:	LD	A,B		; AND/XOR/OUT84
 1798                   ;	DI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1799 F984  DD A6 01    	AND	(IX+1)
 1800 F987  A9          	XOR	C
 1801 F988  DD 77 01    OUT84:	LD	(IX+1),A
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 170
CF48    INC

 1802 F98B  D3 84       	OUT	(PORT1),A
 1803                   ;	EI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1804 F98D  C9          	RET
 1805                   ;
 1806                   ; Umschaltung Grafikmode mit ESC-G
 1807                   ;
 1808 F98E  0E 80       ESCG:	LD	C,10000000b	; 2-Monitor-Bit ein/aus
 1809 F990  21          	DB	21H	; LD HL,nn
 1810                   
 1811 F991  0E 20       ESCC:	LD	C,00100000b	; IBM <-> CAOS
 1812 F993  21          	DB	21H	; LD HL,nn
 1813                   
 1814 F994  0E 04       ESC7:	LD	C,00000100b	; Invers-Bit
 1815 F996  21 B7A2     XORSTB:	LD	HL,STBT
 1816 F999  7E          	LD	A,(HL)
 1817 F99A  A9          	XOR	C
 1818 F99B  77          	LD	(HL),A
 1819 F99C  C9          	RET
 1820                   
 1821 F99D              ESC9:	;DI			; Befehl von CAOS 4.3 bis 4.7 zusaetzlich
 1822 F99D  DD 7E 01    	LD	A,(IX+1)	; VR: A
 1823 F9A0  EE 02       	XOR	2
 1824 F9A2  18 E4       	JR	OUT84		; BC unveraendert
 1825                   
 1826 F9A4  21 B7A2     ESCA:	LD	HL,STBT
 1827 F9A7  CB B6       	RES	6,(HL)		; HRG aus
 1828 F9A9  01 FF08     ESCAB:	LD	BC,0FF08h
 1829 F9AC  CD F983     	CALL	AXO84
 1830 F9AF  A1          	AND	C
 1831 F9B0  80          	ADD	A,B		; CY = Bit 3
 1832 F9B1  F3          	DI			; Befehl ab CAOS 4.5 zusaetzlich
 1833 F9B2  DB 89       	IN	A,(PIOBD)
 1834 F9B4  17          	RLA			; als Bit 0 einschieben
 1835 F9B5  0F          	RRCA			; auf Bit 7 rotieren
 1836 F9B6  D3 89       	OUT	(PIOBD),A
 1837 F9B8  FB          	EI			; Befehl ab CAOS 4.5 zusaetzlich
 1838 F9B9  C9          	RET
 1839                   
 1840 F9BA  21 B7A2     ESCB:	LD	HL,STBT
 1841 F9BD  CB F6       	SET	6,(HL)		; HRG ein
 1842 F9BF  18 E8       	JR	ESCAB
 1843                   
 1844                   ; Druckerinitialisierung V.24 oder Centronics:
 1845 F9C1  7F7F        LST7F:	DW	7F7FH
 1846 F9C3  4C 53 54 44 	DB	'LSTDEV'
 1847 F9C9  01          	DB	1
 1848                   ;_____________________________________________________________
 1849                   ;							**47**
 1850                   ; PE:	(ARGN) - Anzahl der Argumente (0 bis 5)
 1851                   ;	(ARG1)	Modulschacht des zu nutzenden Moduls
 1852                   ;	(ARG2)	Kanal des V.24-Moduls (1/2)
 1853                   ;	(ARG3)	USER-Ausgabekanal (2/3)
 1854                   ;	(ARG4)	Reaktion auf SHIFT CLEAR
 1855                   ;	(ARG5)	Druckertyp
 1856                   ; PA:	-
 1857                   ; VR:	AF, BC, DE, HL
 1858                   ;
 1859 F9CA  01 C8E3     V24OUT:	LD	BC,LSTC		; Druckerinitialisierung
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 171
CF48    INC

 1860 F9CD  C3 FB87     	JP	CLROMC		; im ROM-C ausfuehren
 1861                   
 1862                   ; Duplexroutine
 1863                   
 1864 F9D0  7F7F        V24D7F:	DW	7F7FH
 1865 F9D2  56 32 34 44 	DB	'V24DUP'
 1866 F9D8  01          	DB	1
 1867                   ;_____________________________________________________________
 1868                   ;							**48**
 1869                   ; PE:	(ARGN)	Anzahl der Argumente (0 oder 3)
 1870                   ;	(ARG1)	Modulschacht V.24-Moduls (8, C ...)
 1871                   ;	(ARG2)	Kanal des V.24-Moduls (1/2)
 1872                   ;	(ARG3)	USER-Aus/Eingabekanal (2/3)
 1873                   ; PA:	-
 1874                   ; VR:	AF, BC, DE, HL
 1875                   ;
 1876 F9D9  01 C9C4     V24DUP:	LD	BC,V24DC	; Duplex-Initialisierung
 1877 F9DC  CD FB87     	CALL	CLROMC		; im ROM-C ausfuehren
 1878 F9DF  DC F4BD     	CALL	C,ERRM		; Fehler
 1879 F9E2  C9          	RET
 1880                   
 1881                   ; Druckroutine mit Protokoll
 1882                   
 1883 F9E3  CD E0A8     ECHO:	CALL	CRT		; Zeichen auf Bildschirm anzeigen
 1884 F9E6  DD CB 04 7E PRINT:	BIT	7,(IX+4)	; CAOS-C bereits ein?
 1885 F9EA  C2 CA56     	JP	NZ,PRINTC	; direkt zur Druckausgabe
 1886 F9ED  C5          	PUSH	BC
 1887 F9EE  01 CA56     	LD	BC,PRINTC	; Druckroutine
 1888 F9F1  CD FB87     	CALL	CLROMC		; im ROM-C ausfuehren
 1889 F9F4  C1          	POP	BC
 1890 F9F5  C9          	RET
 1891                   
 1892                   ; Druckroutine fuer M001:			17 Byte
 1893                   ;
 1894                   ; PE:	A	Zeichen
 1895                   ; VR:	-
 1896                   
 1897 F9F6  C5          M001PR:	PUSH	BC
 1898 F9F7  F5          	PUSH	AF
 1899 F9F8  0E 05       	LD	C,05h		; M001 PIO Port B (Steuersignale)
 1900 F9FA  ED 40       CBUSY1:	IN	B,(C)
 1901 F9FC  CB 50       	BIT	2,B		; BUSY?
 1902 F9FE  20 FA       	JR	NZ,CBUSY1
 1903 FA00  06 01       	LD	B,00000001b	; Bit 0 = Strobe
 1904 FA02  F3          	DI			; DI wegen Joysticktreiber
 1905 FA03  D3 04       	OUT	(04h),A		; M001 PIO Port A (Daten)
 1906 FA05  18 0F       	JR	CSTROB
 1907                    
 1908                   ; Druckroutine fuer M021:
 1909                   ;
 1910                   ; PE:	A	Zeichen
 1911                   ; VR:	-
 1912                   
 1913 FA07  C5          M021PR:	PUSH	BC
 1914 FA08  F5          	PUSH	AF
 1915 FA09  0E 90       	LD	C,90h		; M021 PIO Port A (Steuersignale)
 1916 FA0B  ED 40       CBUSY2:	IN	B,(C)
 1917 FA0D  CB 70       	BIT	6,B		; BUSY?
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 172
CF48    INC

 1918 FA0F  20 FA       	JR	NZ,CBUSY2
 1919 FA11  06 80       	LD	B,10000000b	; Bit 7 = Strobe
 1920 FA13  F3          	DI			; DI wegen Joysticktreiber
 1921 FA14  D3 91       	OUT	(91h),A		; M021 PIO Port B (Daten)
 1922 FA16  AF          CSTROB:	XOR	A		; Strobe-Impuls aktiv
 1923 FA17  ED 79       	OUT	(C),A		; war vorher ED 71 = OUT (C),0
 1924 FA19  FB          	EI			; (erst nach naechstem Befehl)
 1925 FA1A  ED 41       	OUT	(C),B		; Strobe-Impuls passiv
 1926 FA1C  F1          	POP	AF
 1927 FA1D  C1          	POP	BC
 1928 FA1E  C9          	RET
 1929                   
 1930                   ; Druckroutine fuer V.24:
 1931                   ;
 1932                   ; PE:	A	Zeichen
 1933                   ; VR:	-
 1934                   
 1935 FA1F  C5          V24PR:	PUSH	BC
 1936 FA20  F5          	PUSH	AF
 1937 FA21  CD FA76     	CALL	LCSO		; SIO-Offset fuer V24OUT ermitteln
 1938 FA24  C6 0A       V24PR0:	ADD	A,0Ah		; SIO-Steuerport
 1939 FA26  4F          	LD	C,A
 1940 FA27  ED 78       V24PR1:	IN	A,(C)
 1941 FA29  E6 04       	AND	00000100b	; bereit?
 1942 FA2B  28 FA       	JR	Z,V24PR1	; nein, warten
 1943                   	;
 1944 FA2D  0D          V24PR2:	DEC	C
 1945 FA2E  0D          	DEC	C		; SIO-Datenport
 1946 FA2F  F1          	POP	AF
 1947 FA30  ED 79       	OUT	(C),A		; Ausgabe
 1948 FA32  C1          	POP	BC
 1949 FA33  C9          	RET
 1950                   
 1951                   ; Ausgabe V.24-Duplex:
 1952                   ;
 1953                   ; PE:	A	Zeichen
 1954                   ; VR:	-
 1955                   ;
 1956 FA34  C5          V24OT:	PUSH	BC
 1957 FA35  F5          	PUSH	AF
 1958 FA36  CD FA7E     	CALL	LCSOD		; SIO-Offset fuer V24DUP ermitteln
 1959 FA39  18 E9       	JR	V24PR0
 1960                   
 1961                   ; Eingabe V.24-Duplex (Interrupt):
 1962                   ;
 1963                   ; PA:	A	Zeichen
 1964                   ;	CY	Status (1 = BRK, 0 = Zeichen gueltig)
 1965                   ; VR:	AF
 1966                   ;
 1967 FA3B  3E EE       V24I:	LD	A,11101110b	; Steuerbyte fuer Interrupt-Betrieb
 1968 FA3D  18 03       	JR	V24IN0
 1969                   
 1970                   ; Eingabe V.24-Duplex (Polling):
 1971                   ;
 1972                   ; PA:	A	Zeichen
 1973                   ;	CY	Status (1 = BRK, 0 = Zeichen gueltig)
 1974                   ; VR:	AF
 1975                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 173
CF48    INC

 1976 FA3F  3A B7E8     V24IN:	LD	A,(HCPZ2)
 1977 FA42  C5          V24IN0:	PUSH	BC
 1978 FA43  D5          	PUSH	DE
 1979 FA44  57          	LD	D,A		; Steuerbyte
 1980 FA45  E6 04       	AND	00000100b	; Kanal A oder B?
 1981 FA47  0F          	RRCA
 1982 FA48  0F          	RRCA
 1983 FA49  C6 0A       	ADD	A,0Ah		; SIO-Steuerport
 1984 FA4B  4F          	LD	C,A
 1985 FA4C  3E 68       	LD	A,01101000b	; Sendeeinstellungen
 1986 FA4E  A2          	AND	D
 1987 FA4F  5F          	LD	E,A
 1988 FA50  ED 78       V24IN1:	IN	A,(C)
 1989 FA52  E6 01       	AND	00000001b	; CY=0, Daten abholbereit?
 1990 FA54  3E 05       	LD	A,5		; WR5 auswaehlen
 1991 FA56  F3          	DI			; Interrupts waehrend I/O-Sequenz sperren
 1992 FA57  ED 79       	OUT	(C),A
 1993 FA59  20 0B       	JR	NZ,V24IN2
 1994 FA5B  3E 82       	LD	A,10000010b	; DTR+RTS ein
 1995 FA5D  B3          	OR	E
 1996 FA5E  ED 79       	OUT	(C),A		; Senderfreigabe
 1997 FA60  FB          	EI
 1998 FA61  CD F667     	CALL	BRKT
 1999 FA64  30 EA       	JR	NC,V24IN1
 2000 FA66  ED 59       V24IN2:	OUT	(C),E		; DTR+RTS aus: Sender sperren
 2001 FA68  FB          	EI
 2002 FA69  38 08       	JR	C,V24IN3
 2003 FA6B  0D          	DEC	C		; SIO-Datenport auswaehlen
 2004 FA6C  0D          	DEC	C
 2005 FA6D  ED 40       	IN	B,(C)
 2006 FA6F  3E 7F       	LD	A,01111111b	; Maske fuer 7 Bit
 2007 FA71  B2          	OR	D
 2008 FA72  A0          	AND	B		; maskieren, CY=0
 2009 FA73  D1          V24IN3:	POP	DE
 2010 FA74  C1          	POP	BC
 2011 FA75  C9          	RET
 2012                   
 2013                   ; SIO-Offset fuer V24OUT
 2014                   ; PA: A (SIO-Offset)
 2015                   ; VR: AF
 2016 FA76  3A B7E1     LCSO:	LD	A,(HCPZ)
 2017 FA79  E6 04       LCSO1:	AND	00000100b	; Kanal A oder B?
 2018 FA7B  0F          	RRCA
 2019 FA7C  0F          	RRCA
 2020 FA7D  C9          	RET
 2021                   
 2022                   ; SIO-Offset fuer V24DUP
 2023 FA7E  3A B7E8     LCSOD:	LD	A,(HCPZ2)
 2024 FA81  18 F6       	JR	LCSO1
 2025                   ;
 2026                   ; ISR SIO B (Empfangsinterrupt)
 2027                   ; fuer MC-Load, MC-Start, Umschaltung auf Fremdtastatur
 2028                   ;
 2029 FA83  E5          ISRSB:	PUSH	HL
 2030 FA84  D5          	PUSH	DE
 2031 FA85  C5          	PUSH	BC
 2032 FA86  F5          	PUSH	AF
 2033 FA87  21 A800     	LD	HL,V24PL	; Steckplatz M003
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 174
CF48    INC

 2034 FA8A  CD E39A     	CALL	IRMGET		; aus IRM lesen (Rueckkehr mit EI)
 2035 FA8D  47          	LD	B,A		; Steckplatz M003 holen
 2036 FA8E  0E 80       	LD	C,80h
 2037 FA90  3E 01       	LD	A,1
 2038 FA92  ED 79       	OUT	(C),A		; Modul einschalten
 2039 FA94  D9          	EXX			; auf Zweitregistersatz wechseln
 2040 FA95  D5          	 PUSH	DE		; DE' sichern
 2041 FA96  C5          	 PUSH	BC		; BC' sichern
 2042 FA97  DB 88       	 IN	A,(PIOAD)
 2043 FA99  47          	 LD	B,A		; Schaltzustand IRM in Register B' merken
 2044 FA9A  DD 4E 04    	 LD	C,(IX+4)	; Schaltzustand CAOS-C  in Reg. C' merken
 2045                   	 SETIXA	7,4		; SET 7,(IX+4),A
    1 FA9D  DD CB 04    	 DB	0DDh,0CBh,4
    2 FAA0  FF          	 DB	7 SHL 3 OR 11000111b
 2046 FAA1  D3 86       	 OUT	(PORT2),A	; CAOS-C einschalten
 2047 FAA3  D9          	EXX
 2048 FAA4  21 D854     	LD	HL,V24POL
 2049 FAA7  F3          	DI
 2050 FAA8  DB 09       	IN	A,(9)		; empfangenes Zeichen von SIO abholen
 2051 FAAA  CD F54E     	CALL	INIEA		; DTR off
 2052 FAAD  CD E596     	CALL	IRET		; EI; RETI
 2053                   
 2054 FAB0  FE 0D       	CP	CR		; Fremdtastatur?
 2055 FAB2  28 2B       	JR	Z,ISB2
 2056 FAB4  FE 1B       	CP	ESC		; MC-Programm?
 2057 FAB6  20 0A       	JR	NZ,ISB1
 2058                   
 2059 FAB8  CD FA3B     	CALL	V24I		; Folgezeichen nach ESC abholen
 2060 FABB  D6 54       	SUB	'T'		; ESC-T ?
 2061 FABD  28 2C       	JR	Z,ISB4		; -> MC laden
 2062 FABF  3D          	DEC	A		; ESC-U ?
 2063 FAC0  28 72       	JR	Z,ISB6		; -> MC starten
 2064                   
 2065 FAC2  26 B8       ISB1:	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
 2066 FAC4  68          	LD	L,B		; Steckplatz
 2067 FAC5  CD E39A     	CALL	IRMGET		; Schaltzustand vor ISR ermitteln
 2068 FAC8  21 D847     	LD	HL,V24INT	; SIO Kanal B wieder auf Interrupt einstellen
 2069 FACB  0E 80       	LD	C,80h
 2070 FACD  F3          	DI
 2071 FACE  CD F54E     	CALL	INIEA		; initialisieren
 2072 FAD1  ED 79       	OUT	(C),A		; M003-Schaltzustand wiederherstellen
 2073 FAD3  FB          	EI
 2074 FAD4  D9          	EXX
 2075 FAD5  79          	 LD	A,C
 2076 FAD6  CD E29F     	 CALL	OUT86		; CAOS-C wie vor Interrupt
 2077 FAD9  C1          	 POP	BC		; BC' regenerieren
 2078 FADA  D1          	 POP	DE		; DE' regenerieren
 2079 FADB  D9          	EXX
 2080 FADC  C3 E0B3     	JP	POP4		; POP	AF,BC,DE,HL   RET
 2081                   
 2082 FADF  F3          ISB2:	DI
 2083 FAE0  DD 36 F2 AB 	LD	(IX-14),LOW(ISRT)	; neue Tastatur-ISR fuer SIO-B in
 2084 FAE4  DD 36 F3 E3 	LD	(IX-13),HIGH(ISRT)	; Interrupttabelle 01E2H+01E3H
 2085 FAE8  FB          	EI
 2086 FAE9  18 D7       	JR	ISB1
 2087                   ;
 2088                   ; MC laden (ESC-T, Adresse, Anzahl, Daten):
 2089                   ;
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 175
CF48    INC

 2090 FAEB  21 B801     ISB4:	LD	HL,MODST+1	; IRM = internes Modul 1
 2091 FAEE  CD E39A     	CALL	IRMGET		; Modulsteuerwort holen
 2092 FAF1  E6 01       	AND	1
 2093 FAF3  07          	RLCA			; auf Bit 2 rotieren
 2094 FAF4  07          	RLCA
 2095 FAF5  D9          	EXX			; auf Zweitregistersatz wechseln
 2096 FAF6  57          	 LD	D,A
 2097 FAF7  3E 7B       	 LD	A,01111011b	; USER-C aus
 2098 FAF9  A0          	 AND	B		; gemerkte Schaltzustaende
 2099 FAFA  B2          	 OR	D		; gewuenschter IRM-Schaltzustand
 2100 FAFB  57          	 LD	D,A
 2101 FAFC  D9          	EXX
 2102                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FAFD  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB00  BF          	 DB	7 SHL 3 OR 10000111b
 2103 FB01  D3 86       	OUT	(PORT2),A	; CAOS-C ausschalten
 2104 FB03  CD FA3B     	CALL	V24I
 2105 FB06  6F          	LD	L,A		; HL = Adresse
 2106 FB07  CD FA3B     	CALL	V24I
 2107 FB0A  67          	LD	H,A
 2108 FB0B  CD FA3B     	CALL	V24I
 2109 FB0E  5F          	LD	E,A		; DE = Anzahl Bytes
 2110 FB0F  CD FA3B     	CALL	V24I
 2111 FB12  57          	LD	D,A
 2112 FB13  CD FA3B     ISB5:	CALL	V24I
 2113 FB16  38 14       	JR	C,ISB8		; Break
 2114 FB18  4F          	LD	C,A		; C = Datenbyte
 2115 FB19  D9          	EXX
 2116 FB1A  7A          	 LD	A,D		; logischer IRM-Schaltzustand
 2117 FB1B  D9          	EXX
 2118 FB1C  F3          	DI
 2119 FB1D  D3 88       	OUT	(PIOAD),A	; USER-C aus und IRM schalten
 2120 FB1F  71          	LD	(HL),C		; Daten in Speicher poken
 2121 FB20  D9          	EXX
 2122 FB21  78          	 LD	A,B		; gemerkter IRM-Schaltzustand
 2123 FB22  D3 88       	 OUT	(PIOAD),A	; USER-C und IRM wiederherstellen
 2124 FB24  FB          	 EI
 2125 FB25  D9          	EXX
 2126 FB26  23          	INC	HL
 2127 FB27  1B          	DEC	DE		; Zaehler verringern
 2128 FB28  7B          	LD	A,E
 2129 FB29  B2          	OR	D		; bis Anzahl=0
 2130 FB2A  20 E7       	JR	NZ,ISB5
 2131 FB2C              ISB8:	SETIXA	7,4		; SET 7,(IX+4),A
    1 FB2C  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB2F  FF          	 DB	7 SHL 3 OR 11000111b
 2132 FB30  D3 86       	OUT	(PORT2),A	; CAOS-C einschalten
 2133 FB32  18 8E       	JR	ISB1
 2134                   ;
 2135                   ; MC starten (ESC-U, Adresse):
 2136                   ;
 2137 FB34  CD FA3B     ISB6:	CALL	V24I
 2138 FB37  5F          	LD	E,A		; DE = Startadresse
 2139 FB38  CD FA3B     	CALL	V24I
 2140 FB3B  57          	LD	D,A
 2141 FB3C  21 D847     	LD	HL,V24INT	; SIO Kanal B wieder auf Interrupt einstellen
 2142 FB3F  D9          	EXX
 2143 FB40  78          	 LD	A,B		; gemerkter IRM-Schaltzustand
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 176
CF48    INC

 2144 FB41  D9          	EXX
 2145 FB42  F6 04       	OR	00000100b	; IRM einschalten
 2146 FB44  F3          	DI
 2147 FB45  CD F54E     	CALL	INIEA		; uminitialisieren
 2148 FB48  D3 88       	OUT	(PIOAD),A	; IRM schalten
 2149                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FB4A  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB4D  BF          	 DB	7 SHL 3 OR 10000111b
 2150 FB4E  D3 86       	OUT	(PORT2),A	; CAOS-C ausschalten
 2151 FB50  ED 7B B7AE  	LD	SP,(SYSP)
 2152 FB54  26 B8       	LD	H,HIGH(MODST)	; Modulsteuerbytespeicher
 2153 FB56  68          	LD	L,B		; Steckplatz
 2154 FB57  7E          	LD	A,(HL)		; M003-Schaltzustand vor ISR ermitteln
 2155 FB58  ED 79       	OUT	(C),A		; und wiederherstellen
 2156 FB5A  FB          	EI
 2157 FB5B  21 F25C     	LD	HL,LOOP		; Rueckkehradresse nach Programmaufruf
 2158 FB5E  E5          	PUSH	HL
 2159 FB5F  EB          	EX	DE,HL
 2160 FB60  E9          	JP	(HL)		; Programm jetzt starten
 2161                   
 2162                   ; fuer MODIC, FLOAD
 2163 FB61  CD FB8A     LDMAE:	CALL	COFF
 2164 FB64  F5          	PUSH	AF
 2165 FB65  3A B801     	LD	A,(MODST+1)
 2166 FB68  E6 01       	AND	1		; IRM off?
 2167 FB6A  CC E043     	CALL	Z,SCROFF	; IRM aus falls erforderlich
 2168 FB6D  F1          	POP	AF
 2169 FB6E  77          	LD	(HL),A		; Byte eintragen
 2170 FB6F  18 0C       	JR	JCON
 2171                   
 2172                   ; Datenbyte holen (fuer DISPC, MODIC, FSAVE, view)
 2173 FB71  CD FB8A     LDAME:	CALL	COFF		; CAOS-C aus
 2174 FB74  3A B801     	LD	A,(MODST+1)
 2175 FB77  E6 01       	AND	1		; IRM aus?
 2176 FB79  CC E043     	CALL	Z,SCROFF	; IRM aus falls erforderlich
 2177 FB7C  7E          	LD	A,(HL)		; Byte holen
 2178 FB7D  CD E04C     JCON:	CALL	SCRON		; IRM wieder ein
 2179 FB80  18 19       	JR	CON
 2180                   ;_____________________________________________________________
 2181                   ;							**31**
 2182                   ; CAOS-Arbeitsbereich verlagern
 2183                   ; PE:	A	HW-Teil der IX-Arbeitszellen
 2184                   
 2185 FB82  01 C17B     SIXD:	LD	BC,SIXC
 2186 FB85  18 00       	JR	CLROMC		; UP im CAOS-ROM C aufrufen
 2187                   ;-------------------------------------------------------------
 2188                   ; Aufruf eines UP im CAOS-ROMC
 2189                   ;  mit Einschalten des ROMC beim Aufruf
 2190                   ;  und ausschalten falls erforderlich beim Ruecksprung
 2191                   ; PE: BC=Adresse des UP im CAOS-ROMC
 2192                   
 2193                   ;CALLC:	EX	(SP),HL		; HL = Adresse der Routine
 2194                   ;	LD	C,(HL)
 2195                   ;	INC	HL		; PTR+1
 2196                   ;	LD	B,(HL)		; BC = CALL-Adresse
 2197                   ;	INC	HL		; PTR+2
 2198                   ;	EX	(SP),HL		; CALL-Adresse auf Stack	 HL  >ADR<
 2199 FB87  CD FB9A     CLROMC:	CALL	CONBC
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 177
CF48    INC

 2200                   ;
 2201                   ; CAOS-ROM-C ausschalten falls erforderlich:
 2202                   ; VR:	-
 2203                   ;
 2204 FB8A  F5          COFF:	PUSH	AF
 2205 FB8B  3A B805     	LD	A,(MODST+5)	; Schaltzustand Moduladresse 5
 2206 FB8E  E6 01       	AND	1
 2207 FB90  20 06       	JR	NZ,CNSW		; bleibt ein!
 2208                   	RESIXA	7,4		; RES 7,(IX+4),A
    1 FB92  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB95  BF          	 DB	7 SHL 3 OR 10000111b
 2209 FB96  D3 86       CSW:	OUT	(PORT2),A
 2210 FB98  F1          CNSW:	POP	AF
 2211 FB99  C9          	RET
 2212                   ;
 2213                   ; CAOS-ROM-C einschalten:
 2214                   ;
 2215 FB9A  C5          CONBC:	PUSH	BC              ; Sprung in das durch BC adressierte UP
 2216 FB9B  F5          CON:	PUSH	AF
 2217                   	SETIXA	7,4		; SET 7,(IX+4),A
    1 FB9C  DD CB 04    	 DB	0DDh,0CBh,4
    2 FB9F  FF          	 DB	7 SHL 3 OR 11000111b
 2218 FBA0  18 F4       	JR	CSW
 2219                   ;_____________________________________________________________
 2220                   ;							**41**
 2221                   ; Berechnung des Produktes zweier 8-Bit-Zahlen
 2222                   ; PE:	D, C	Faktoren (8 Bit)
 2223                   ; PA:	BA	Produkt (16 Bit)
 2224                   ; VR:	AF,DE,B
 2225                   
 2226                   ; Multiplikation BA=C*D	
 2227 FBA2  AF          MULT:	XOR	A		; Startwert 0
 2228                   
 2229                   ; MULCA: BA=D*C+A 
 2230 FBA3  06 08       MULA:	LD	B,8		; 8 Bit Multiplikation/Rotation
 2231 FBA5  CB 1A       	RR	D
 2232 FBA7  30 01       MUL1:	JR	NC,MUL2		; Bit nicht gesetzt
 2233 FBA9  81          	ADD	A,C		; aufaddieren
 2234 FBAA  1F          MUL2:	RRA
 2235 FBAB  CB 1A       	RR	D		; jetzt 16 Bit rotieren
 2236 FBAD  10 F8       	DJNZ	MUL1		; und weiter addieren
 2237 FBAF  47          	LD	B,A		; Ergebnis in
 2238 FBB0  7A          	LD	A,D		; BA
 2239 FBB1  C9          	RET
 2240                   ;
 2241                   ; CAOS 4.6 - Geraeteumschaltung und Anzeige
 2242                   ; %DEVICE	Auflisten der installierten Treiber
 2243                   ; %DEVICE n	Umschaltung Geraet n (0..7)
 2244                   ;
 2245 FBB2  7F7F        	DW	7F7Fh
 2246 FBB4  44 45 56 49 	DB	'DEVICE',1
 2247 FBBB  A7          	AND	A		; Parameter angegeben?
 2248 FBBC  28 15       	JR	Z,DRLIST	; nein, Treiber auflisten
 2249 FBBE  7D          	LD	A,L
 2250 FBBF  FE 08       	CP	8
 2251 FBC1  D2 F4BD     	JP	NC,ERRM		; n>8
 2252 FBC4  CD FBD5     	CALL	SETDEV		; Treiber einstellen
 2253 FBC7  DA F4BD     	JP	C,ERRM		; Treiber nicht aktiv
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 178
CF48    INC

 2254 FBCA  CD FBD0     	CALL	DEVANZ		; Ergebnis anzeigen
 2255 FBCD  C3 F4C7     	JP	CRLF
 2256                   
 2257                   ; Geraetecode in Bits 2-4 (IX+8) eintragen und Treiberadressen in SUTAB kopieren
 2258                   ; PE:	A	Geraetecode 0...7
 2259                   ;		0 = Kassette - Standard
 2260                   ;		1 = Diskette - D004/D008
 2261                   ;		2 = USB (M052)
 2262                   ;		3 = Netzwerk (M052)
 2263                   ;		4-7 noch nicht benutzt
 2264                   ;		8-FE	Name des aktuellen Treibers anzeigen
 2265                   ;		FF	alle Treiber auflisten
 2266                   ; PA:	CY=1	ausgewaehlter Treiber nicht aktiv
 2267                   ;	IX+8	Bit 2-4 entsprechend Treibernummer gesetzt
 2268                   ; VR:	AF,BC,DE,HL
 2269                   
 2270 FBD0  3E FE       DEVANZ:	LD	A,0FEh		; aktuellen Treiber anzeigen
 2271 FBD2  21          	db	21h
 2272 FBD3  3E FF       DRLIST:	LD	A,0FFh		; Treiber auflisten
 2273                   ;_____________________________________________________________
 2274                   ;							**49**
 2275                   ; Geraetetreiber auswaehlen, abfragen oder anzeigen
 2276                   ; PE:	A 	0..7	- Auswahl Geraetetreiber Nr. 0-7
 2277                   ;		8	- aktuellen Treiber abfragen
 2278                   ;		9-FEH	- aktuellen Treibername anzeigen
 2279                   ;		FFH	- Auflisten aller Treiber
 2280                   ; PA:	CY=1	ausgewhlter Treiber nicht aktiv
 2281                   ;	bei CY=0	HL = Zeiger auf Treibername
 2282                   ;			Z=1 - Kassettentreiber
 2283                   ; VR:	AF,BC,DE,HL
 2284                   
 2285 FBD5  01 D5DB     SETDEV:	LD	BC,SET_DD	; Routine im ROM C/D aufrufen
 2286 FBD8  18 AD       	JR	CLROMC		; im ROM-C ausfuehren
 2287                   
 2288                   ; Verzeichnis anzeigen:
 2289                   
 2290 FBDA  7F7F        	DW	7F7FH
 2291 FBDC  44 49 52 20 	DB	'DIR '
 2292 FBE0  1F          	DB	1FH		; Textargument zulaessig (Maske in DE)
 2293 FBE1  CD E4DD     	CALL	PV7
 2294 FBE4  08          	DB	8
 2295 FBE5  C9          	RET
 2296                   
 2297                   ; Laufwerk wechseln:
 2298                   
 2299 FBE6  7F7F        	DW	7F7FH
 2300 FBE8  43 44 20    	DB	'CD '		; ersetzt bisheriges Menuewort DRIVE
 2301 FBEB  1F          	DB	1FH		; Textargument zulaessig (Verzeichnis)
 2302 FBEC  CD E4DD     	CALL	PV7
 2303 FBEF  09          	DB	9
 2304 FBF0  C9          	RET
 2305                   
 2306                   ; Datei loeschen:
 2307                   
 2308 FBF1  7F7F        	DW	7F7FH
 2309 FBF3  45 52 41 20 	DB	'ERA '
 2310 FBF7  1F          	DB	1FH		; Textargument zulaessig (Dateiname)
 2311 FBF8  CD E4DD     	CALL	PV7
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 179
CF48    INC

 2312 FBFB  0A          	DB	10
 2313 FBFC  C9          	RET
 2314                   
 2315                   ; Datei umbenennen:
 2316                   
 2317 FBFD  7F7F        	DW	7F7FH
 2318 FBFF  52 45 4E 20 	DB	'REN '
 2319 FC03  1F          	DB	1FH		; Textargument zulaessig (2 Dateinamen)
 2320 FC04  CD E4DD     	CALL	PV7
 2321 FC07  0B          	DB	11
 2322 FC08  C9          	RET
 2323                   
 2324                   ; ********	DEVICE-Routinen mit Modulschaltung aufrufen	********
 2325                   ;_____________________________________________________________
 2326                   ;							**01**
 2327                   ; Einen Block ausgeben:
 2328                   ; PE:	BC	Laenge Vorton
 2329                   ;	(IX+2)	Block-Nr. -1
 2330                   ; PA:	DE=HL	Pufferende + 1
 2331                   ;	(IX+2)	Block-Nr.
 2332                   ; VR:	AF,BC,DE,HL
 2333                   
 2334 FC09  CD E4DD     MBO:	CALL	PV7
 2335 FC0C  00          	DB	0
 2336 FC0D  C9          	RET
 2337                   ;_____________________________________________________________
 2338                   ;							**05**
 2339                   ; Einen Block einlesen:
 2340                   ; PE:	IX+5/6	Pufferadresse
 2341                   ; PA:	CY=1	Fehler
 2342                   ; VR:	AF,BC
 2343                   
 2344 FC0E  CD E4DD     MBI:	CALL	PV7
 2345 FC11  01          	DB	1
 2346 FC12  C9          	RET
 2347                   ;_____________________________________________________________
 2348                   ;							**08**
 2349                   ; Initialisierung Bandausgabe / Datei zum Schreiben oeffnen:
 2350                   ; PE:	Kassettenpuffer mit Daten des Vorblocks
 2351                   ;	HL	Dateiname
 2352                   ; PA:	CY=1	Fehler
 2353                   ; VR:	AF,BC,DE,HL
 2354                   
 2355 FC13  CD E4DD     ISRO:	CALL	PV7
 2356 FC16  02          	DB	2
 2357 FC17  C9          	RET
 2358                   ;_____________________________________________________________
 2359                   ;							**09**
 2360                   ; Abschluss Bandausgabe / Dateiausgabe schliessen:
 2361                   ; PE:	BC	Laenge Vorton
 2362                   ; PA:	CY=1	Fehler
 2363                   ; VR:	AF,BC,DE,HL
 2364                   
 2365 FC18  CD E4DD     CSRO:	CALL	PV7
 2366 FC1B  03          	DB	3
 2367 FC1C  C9          	RET
 2368                   ;_____________________________________________________________
 2369                   ;							**0A**
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 180
CF48    INC

 2370                   ; Initialisierung Bandeingabe:
 2371                   ; (Datei zum Lesen oeffnen)
 2372                   ; PE:	HL	Dateiname
 2373                   ; PA:	CY=1	Fehler
 2374                   ; VR:	AF,BC
 2375                   
 2376 FC1D  CD E4DD     ISRI:	CALL	PV7
 2377 FC20  04          	DB	4
 2378 FC21  C9          	RET
 2379                   ;_____________________________________________________________
 2380                   ;							**0B**
 2381                   ; Abschluss Bandeingabe / Dateieingabe schliessen:
 2382                   ; PA:	CY=1	Fehler
 2383                   
 2384 FC22  CD E4DD     CSRI:	CALL	PV7
 2385 FC25  05          	DB	5
 2386 FC26  C9          	RET
 2387                   ;_____________________________________________________________
 2388                   ;							**14**
 2389                   ; Warteschleife ohne Interrupt
 2390                   ; PE:	A	Zeitwert t = (A) * 6 ms
 2391                   ; PA:	-
 2392                   ; VR:	AF, B
 2393                   
 2394 FC27  47          WAIT:	LD	B,A
 2395 FC28  AF          	XOR	A
 2396 FC29  CD E2BC     WAIT1:	CALL	WTUP		; 6ms-Zeitschleife
 2397 FC2C  10 FB       	DJNZ	WAIT1
 2398 FC2E  C9          	RET
 2399                   ;
 2400                   ; Tastaturcodetabelle:
 2401                   ;				 Taste		Scancode:
 2402 FC2F  57 77       KTAB:	DB	'Ww'		;		00 01
 2403 FC31  41 61       	DB	'Aa'		;		02 03
 2404 FC33  32 22       	DB	'2"'		;		04 05
 2405 FC35  08 19       	DB	8,19H		; CUL		06 07
 2406 FC37  10 0C       	DB	10H,0CH		; HOME		08 09
 2407 FC39  2D 3D       	DB	'-='		;		0A 0B
 2408 FC3B  F2 F8       	DB	0F2H,0F8H	; F2		0C 0D
 2409 FC3D  59 79       	DB	'Yy'		;		0E 0F	
 2410 FC3F  45 65       	DB	'Ee'		;		10 11
 2411 FC41  53 73       	DB	'Ss'		;		12 13
 2412 FC43  33 23       	DB	'3#'		;		14 15
 2413 FC45  5E 5D       	DB	'^]'		;		16 17
 2414 FC47  01 0F       	DB	1,0FH		; CLR		18 19
 2415 FC49  3A 2A       	DB	':*'		;		1A 1B
 2416 FC4B  F3 F9       	DB	0F3H,0F9H	; F3		1C 1D
 2417 FC4D  58 78       	DB	'Xx'		;		1E 1F
 2418 FC4F  54 74       	DB	'Tt'		;		20 21
 2419 FC51  46 66       	DB	'Ff'		;		22 23
 2420 FC53  35 25       	DB	'5%'		;		24 25
 2421 FC55  50 70       	DB	'Pp'		;		26 27
 2422 FC57  1F 02       	DB	1FH,2		; DEL		28 29
 2423 FC59  30 40       	DB	'0',40H		;		2A 2B
 2424 FC5B  F5 FB       	DB	0F5H,0FBH	; F5		2C 2D
 2425 FC5D  56 76       	DB	'Vv'		;		2E 2F
 2426 FC5F  55 75       	DB	'Uu'		;		30 31
 2427 FC61  48 68       	DB	'Hh'		;		32 33
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 181
CF48    INC

 2428 FC63  37 27       	DB	'7',27H		; 7 / Apostroph	34 35
 2429 FC65  4F 6F       	DB	'Oo'		;		36 37
 2430 FC67  1A 14       	DB	1AH,14H		; INS		38 39
 2431 FC69  39 29       	DB	'9)'		;		3A 3B
 2432 FC6B  03 04       	DB	3,4		; BRK		3C 3D
 2433 FC6D  4E 6E       	DB	'Nn'		;		3E 3F
 2434 FC6F  49 69       	DB	'Ii'		;		40 41
 2435 FC71  4A 6A       	DB	'Jj'		;		42 43
 2436 FC73  38 28       	DB	'8('		;		44 45
 2437 FC75  20 5B       	DB	' ['		; SPC		46 47
 2438 FC77  4B 6B       	DB	'Kk'		;		48 49
 2439 FC79  2C 3C       	DB	',<'		;		4A 4B
 2440 FC7B  13 1B       	DB	13H,ESC		; STOP		4C 4D
 2441 FC7D  4D 6D       	DB	'Mm'		;		4E 4F
 2442 FC7F  5A 7A       	DB	'Zz'		;		50 51
 2443 FC81  47 67       	DB	'Gg'		;		52 53
 2444 FC83  36 26       	DB	'6&'		;		54 55
 2445 FC85  1C 1D       	DB	1CH,1DH		; LIST/RUN	56 57
 2446 FC87  4C 6C       	DB	'Ll'		;		58 59
 2447 FC89  2E 3E       	DB	'.>'		;		5A 5B
 2448 FC8B  F6 FC       	DB	0F6H,0FCH	; F6		5C 5D
 2449 FC8D  42 62       	DB	'Bb'		;		5E 5F
 2450 FC8F  52 72       	DB	'Rr'		;		60 61
 2451 FC91  44 64       	DB	'Dd'		;		62 63
 2452 FC93  34 24       	DB	'4$'		;		64 65
 2453 FC95  5F 5C       	DB	'_\'		;		66 67
 2454 FC97  2B 3B       	DB	'+;'		;		68 69
 2455 FC99  2F 3F       	DB	'/?'		;		6A 6B
 2456 FC9B  F4 FA       	DB	0F4H,0FAH	; F4		6C 6D
 2457 FC9D  43 63       	DB	'Cc'		;		6E 6F
 2458 FC9F  51 71       	DB	'Qq'		;		70 71
 2459 FCA1  16 05       	DB	16H,5		; CAPS		72 73
 2460 FCA3  31 21       	DB	'1!'		;		74 75
 2461 FCA5  0A 12       	DB	LF,12H		; CUD		76 77
 2462 FCA7  0B 11       	DB	0BH,11H		; CUU		78 79
 2463 FCA9  09 18       	DB	9,18H		; CUR		7A 7B
 2464 FCAB  F1 F7       	DB	0F1H,0F7H	; F1		7C 7D
 2465 FCAD  0D 0E       	DB	CR,0EH		; ENTER		7E 7F
 2466                   ;
 2467                   ; Steuercodetabelle:
 2468                   ;
 2469 FCAF  F4A7        CRTTAB:	DW	NOOP	; 00
 2470 FCB1  E21A        	DW	CLR	; 01
 2471 FCB3  E291        	DW	CLLN	; 02
 2472 FCB5  F4A7        	DW	NOOP	; 03=BRK
 2473 FCB7  F4A7        	DW	NOOP	; 04=Sh-BRK
 2474 FCB9  E1D3        	DW	ESC0	; 05=TAB
 2475 FCBB  F4A7        	DW	NOOP	; 06 (bei CAOS 3.3 invers)
 2476 FCBD  E2A5        	DW	BEEP	; 07
 2477 FCBF  E1F9        	DW	CUL	; 08
 2478 FCC1  E1E2        	DW	CUR	; 09
 2479 FCC3  E1EB        	DW	CUD	; 0A
 2480 FCC5  E209        	DW	CUU	; 0B
 2481 FCC7  E26F        	DW	CLS	; 0C
 2482 FCC9  E27F        	DW	CBL	; 0D=Enter
 2483 FCCB  F4A7        	DW	NOOP	; 0E=Sh-Enter
 2484 FCCD  E1F5        	DW	HCOPY	; 0F
 2485 FCCF  E27D        	DW	HOMEPG	; 10
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 182
CF48    INC

 2486 FCD1  E20E        	DW	PAGEM	; 11
 2487 FCD3  E215        	DW	SCROL	; 12
 2488 FCD5  F4A7        	DW	NOOP	; 13=STOP
 2489 FCD7  E2E9        	DW	CLICK	; 14
 2490 FCD9  F4A7        	DW	NOOP	; 15
 2491 FCDB  F4A7        	DW	NOOP	; 16=CAPS
 2492 FCDD  F4A7        	DW	NOOP	; 17
 2493 FCDF  E203        	DW	CEL	; 18
 2494 FCE1  E27F        	DW	CBL	; 19
 2495 FCE3  E250        	DW	INS	; 1A
 2496 FCE5  F940        	DW	ESCPRG	; 1B
 2497 FCE7  F4A7        	DW	NOOP	; 1C=LIST
 2498 FCE9  F4A7        	DW	NOOP	; 1D=RUN
 2499 FCEB  E1E9        	DW	NL	; 1E=CONT
 2500 FCED  E21D        	DW	DEL	; 1F
 2501                   ;
 2502                   ; BASIC-Token	(Bit 7 im 1. Byte gesetzt!)
 2503                   ;
 2504 FCEF              TOKTAB:	TOKEN	INKEY$		; D5
    1 FCEF  C9          	  DB	'I' + Y
    1 FCF0  4E          	  DB	'N' + Y
    1 FCF1  4B          	  DB	'K' + Y
    1 FCF2  45          	  DB	'E' + Y
    1 FCF3  59          	  DB	'Y' + Y
    1 FCF4  24          	  DB	'$' + Y
 2505                   	TOKEN	JOYST		; D6
    1 FCF5  CA          	  DB	'J' + Y
    1 FCF6  4F          	  DB	'O' + Y
    1 FCF7  59          	  DB	'Y' + Y
    1 FCF8  53          	  DB	'S' + Y
    1 FCF9  54          	  DB	'T' + Y
 2506                   	TOKEN	STRING$		; D7
    1 FCFA  D3          	  DB	'S' + Y
    1 FCFB  54          	  DB	'T' + Y
    1 FCFC  52          	  DB	'R' + Y
    1 FCFD  49          	  DB	'I' + Y
    1 FCFE  4E          	  DB	'N' + Y
    1 FCFF  47          	  DB	'G' + Y
    1 FD00  24          	  DB	'$' + Y
 2507                   	TOKEN	INSTR		; D8
    1 FD01  C9          	  DB	'I' + Y
    1 FD02  4E          	  DB	'N' + Y
    1 FD03  53          	  DB	'S' + Y
    1 FD04  54          	  DB	'T' + Y
    1 FD05  52          	  DB	'R' + Y
 2508                   	TOKEN	RENUMBER	; D9
    1 FD06  D2          	  DB	'R' + Y
    1 FD07  45          	  DB	'E' + Y
    1 FD08  4E          	  DB	'N' + Y
    1 FD09  55          	  DB	'U' + Y
    1 FD0A  4D          	  DB	'M' + Y
    1 FD0B  42          	  DB	'B' + Y
    1 FD0C  45          	  DB	'E' + Y
    1 FD0D  52          	  DB	'R' + Y
 2509                   	TOKEN	DELETE		; DA
    1 FD0E  C4          	  DB	'D' + Y
    1 FD0F  45          	  DB	'E' + Y
    1 FD10  4C          	  DB	'L' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 183
CF48    INC

    1 FD11  45          	  DB	'E' + Y
    1 FD12  54          	  DB	'T' + Y
    1 FD13  45          	  DB	'E' + Y
 2510                   	TOKEN	PAUSE		; DB
    1 FD14  D0          	  DB	'P' + Y
    1 FD15  41          	  DB	'A' + Y
    1 FD16  55          	  DB	'U' + Y
    1 FD17  53          	  DB	'S' + Y
    1 FD18  45          	  DB	'E' + Y
 2511                   	TOKEN	BEEP		; DC
    1 FD19  C2          	  DB	'B' + Y
    1 FD1A  45          	  DB	'E' + Y
    1 FD1B  45          	  DB	'E' + Y
    1 FD1C  50          	  DB	'P' + Y
 2512                   	TOKEN	WINDOW		; DD
    1 FD1D  D7          	  DB	'W' + Y
    1 FD1E  49          	  DB	'I' + Y
    1 FD1F  4E          	  DB	'N' + Y
    1 FD20  44          	  DB	'D' + Y
    1 FD21  4F          	  DB	'O' + Y
    1 FD22  57          	  DB	'W' + Y
 2513                   	TOKEN	BORDER		; DE
    1 FD23  C2          	  DB	'B' + Y
    1 FD24  4F          	  DB	'O' + Y
    1 FD25  52          	  DB	'R' + Y
    1 FD26  44          	  DB	'D' + Y
    1 FD27  45          	  DB	'E' + Y
    1 FD28  52          	  DB	'R' + Y
 2514                   	TOKEN	INK		; DF
    1 FD29  C9          	  DB	'I' + Y
    1 FD2A  4E          	  DB	'N' + Y
    1 FD2B  4B          	  DB	'K' + Y
 2515                   	TOKEN	PAPER		; E0
    1 FD2C  D0          	  DB	'P' + Y
    1 FD2D  41          	  DB	'A' + Y
    1 FD2E  50          	  DB	'P' + Y
    1 FD2F  45          	  DB	'E' + Y
    1 FD30  52          	  DB	'R' + Y
 2516                   	TOKEN	AT		; E1
    1 FD31  C1          	  DB	'A' + Y
    1 FD32  54          	  DB	'T' + Y
 2517                   	TOKEN	COLOR		; E2
    1 FD33  C3          	  DB	'C' + Y
    1 FD34  4F          	  DB	'O' + Y
    1 FD35  4C          	  DB	'L' + Y
    1 FD36  4F          	  DB	'O' + Y
    1 FD37  52          	  DB	'R' + Y
 2518                   	TOKEN	SOUND		; E3
    1 FD38  D3          	  DB	'S' + Y
    1 FD39  4F          	  DB	'O' + Y
    1 FD3A  55          	  DB	'U' + Y
    1 FD3B  4E          	  DB	'N' + Y
    1 FD3C  44          	  DB	'D' + Y
 2519                   	TOKEN	PSET		; E4
    1 FD3D  D0          	  DB	'P' + Y
    1 FD3E  53          	  DB	'S' + Y
    1 FD3F  45          	  DB	'E' + Y
    1 FD40  54          	  DB	'T' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 184
CF48    INC

 2520                   	TOKEN	PRESET		; E5
    1 FD41  D0          	  DB	'P' + Y
    1 FD42  52          	  DB	'R' + Y
    1 FD43  45          	  DB	'E' + Y
    1 FD44  53          	  DB	'S' + Y
    1 FD45  45          	  DB	'E' + Y
    1 FD46  54          	  DB	'T' + Y
 2521                   	TOKEN	BLOAD		; E6
    1 FD47  C2          	  DB	'B' + Y
    1 FD48  4C          	  DB	'L' + Y
    1 FD49  4F          	  DB	'O' + Y
    1 FD4A  41          	  DB	'A' + Y
    1 FD4B  44          	  DB	'D' + Y
 2522                   	TOKEN	VPEEK		; E7
    1 FD4C  D6          	  DB	'V' + Y
    1 FD4D  50          	  DB	'P' + Y
    1 FD4E  45          	  DB	'E' + Y
    1 FD4F  45          	  DB	'E' + Y
    1 FD50  4B          	  DB	'K' + Y
 2523                   	TOKEN	VPOKE		; E8
    1 FD51  D6          	  DB	'V' + Y
    1 FD52  50          	  DB	'P' + Y
    1 FD53  4F          	  DB	'O' + Y
    1 FD54  4B          	  DB	'K' + Y
    1 FD55  45          	  DB	'E' + Y
 2524                   	TOKEN	LOCATE		; E9
    1 FD56  CC          	  DB	'L' + Y
    1 FD57  4F          	  DB	'O' + Y
    1 FD58  43          	  DB	'C' + Y
    1 FD59  41          	  DB	'A' + Y
    1 FD5A  54          	  DB	'T' + Y
    1 FD5B  45          	  DB	'E' + Y
 2525                   	TOKEN	KEYLIST		; EA
    1 FD5C  CB          	  DB	'K' + Y
    1 FD5D  45          	  DB	'E' + Y
    1 FD5E  59          	  DB	'Y' + Y
    1 FD5F  4C          	  DB	'L' + Y
    1 FD60  49          	  DB	'I' + Y
    1 FD61  53          	  DB	'S' + Y
    1 FD62  54          	  DB	'T' + Y
 2526                   	TOKEN	KEY		; EB
    1 FD63  CB          	  DB	'K' + Y
    1 FD64  45          	  DB	'E' + Y
    1 FD65  59          	  DB	'Y' + Y
 2527                   	TOKEN	SWITCH		; EC
    1 FD66  D3          	  DB	'S' + Y
    1 FD67  57          	  DB	'W' + Y
    1 FD68  49          	  DB	'I' + Y
    1 FD69  54          	  DB	'T' + Y
    1 FD6A  43          	  DB	'C' + Y
    1 FD6B  48          	  DB	'H' + Y
 2528                   	TOKEN	PTEST		; ED
    1 FD6C  D0          	  DB	'P' + Y
    1 FD6D  54          	  DB	'T' + Y
    1 FD6E  45          	  DB	'E' + Y
    1 FD6F  53          	  DB	'S' + Y
    1 FD70  54          	  DB	'T' + Y
 2529                   	TOKEN	CLOSE		; EE
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 185
CF48    INC

    1 FD71  C3          	  DB	'C' + Y
    1 FD72  4C          	  DB	'L' + Y
    1 FD73  4F          	  DB	'O' + Y
    1 FD74  53          	  DB	'S' + Y
    1 FD75  45          	  DB	'E' + Y
 2530                   	TOKEN	OPEN		; EF
    1 FD76  CF          	  DB	'O' + Y
    1 FD77  50          	  DB	'P' + Y
    1 FD78  45          	  DB	'E' + Y
    1 FD79  4E          	  DB	'N' + Y
 2531                   	TOKEN	RANDOMIZE	; F0
    1 FD7A  D2          	  DB	'R' + Y
    1 FD7B  41          	  DB	'A' + Y
    1 FD7C  4E          	  DB	'N' + Y
    1 FD7D  44          	  DB	'D' + Y
    1 FD7E  4F          	  DB	'O' + Y
    1 FD7F  4D          	  DB	'M' + Y
    1 FD80  49          	  DB	'I' + Y
    1 FD81  5A          	  DB	'Z' + Y
    1 FD82  45          	  DB	'E' + Y
 2532                   	TOKEN	VGET$		; F1
    1 FD83  D6          	  DB	'V' + Y
    1 FD84  47          	  DB	'G' + Y
    1 FD85  45          	  DB	'E' + Y
    1 FD86  54          	  DB	'T' + Y
    1 FD87  24          	  DB	'$' + Y
 2533                   	TOKEN	LINE		; F2
    1 FD88  CC          	  DB	'L' + Y
    1 FD89  49          	  DB	'I' + Y
    1 FD8A  4E          	  DB	'N' + Y
    1 FD8B  45          	  DB	'E' + Y
 2534                   	TOKEN	CIRCLE		; F3
    1 FD8C  C3          	  DB	'C' + Y
    1 FD8D  49          	  DB	'I' + Y
    1 FD8E  52          	  DB	'R' + Y
    1 FD8F  43          	  DB	'C' + Y
    1 FD90  4C          	  DB	'L' + Y
    1 FD91  45          	  DB	'E' + Y
 2535                   	TOKEN	CSRLIN		; F4 bis hierher in CAOS 3.1 bis 4.4
    1 FD92  C3          	  DB	'C' + Y
    1 FD93  53          	  DB	'S' + Y
    1 FD94  52          	  DB	'R' + Y
    1 FD95  4C          	  DB	'L' + Y
    1 FD96  49          	  DB	'I' + Y
    1 FD97  4E          	  DB	'N' + Y
 2536                   	TOKEN	DEVICE		; F5 (DRIVE in CAOS 4.5, 4.6 und HCBASIC.COM)
    1 FD98  C4          	  DB	'D' + Y
    1 FD99  45          	  DB	'E' + Y
    1 FD9A  56          	  DB	'V' + Y
    1 FD9B  49          	  DB	'I' + Y
    1 FD9C  43          	  DB	'C' + Y
    1 FD9D  45          	  DB	'E' + Y
 2537                   	TOKEN	FILES		; F6
    1 FD9E  C6          	  DB	'F' + Y
    1 FD9F  49          	  DB	'I' + Y
    1 FDA0  4C          	  DB	'L' + Y
    1 FDA1  45          	  DB	'E' + Y
    1 FDA2  53          	  DB	'S' + Y
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 186
CF48    INC

 2538                   	TOKEN	CHDIR		; F7 bis hierher in CAOS 4.7
    1 FDA3  C3          	  DB	'C' + Y
    1 FDA4  48          	  DB	'H' + Y
    1 FDA5  44          	  DB	'D' + Y
    1 FDA6  49          	  DB	'I' + Y
    1 FDA7  52          	  DB	'R' + Y
 2539 FDA8  80          	DB	80H		; Ende-Kennung
 2540                   ;
 2541                   ; zugehoerige Sprungtabelle fuer BASIC-Token
 2542                   ;
 2543 FDA9  E9AF        TOKJP:	DW	INKEY		; D5
 2544 FDAB  EC26        	DW	JOYST		; D6
 2545 FDAD  E626        	DW	STRING		; D7
 2546 FDAF  EA77        	DW	INSTR		; D8
 2547 FDB1  E685        TADR5:	DW	RENUM		; D9
 2548 FDB3  E864        	DW	DELETE		; DA
 2549 FDB5  E888        	DW	PAUSE		; DB
 2550 FDB7  E8B8        	DW	BBEEP		; DC
 2551 FDB9  E8D3        	DW	WINDOW		; DD
 2552 FDBB  D421        	DW	ARGVL1		; DE (BORDER)
 2553 FDBD  E9CD        	DW	INK		; DF
 2554 FDBF  E9EE        	DW	PAPER		; E0
 2555 FDC1  C348        	DW	SNER		; E1 (Funktion AT)
 2556 FDC3  E9DF        	DW	BCOLOR		; E2
 2557 FDC5  EA3D        	DW	SOUND		; E3
 2558 FDC7  EA05        	DW	PSET		; E4
 2559 FDC9  EA02        	DW	PRESET		; E5
 2560 FDCB  ECDA        	DW	BLOAD		; E6
 2561 FDCD  C348        	DW	SNER		; E7 (Funktion VPEEK)
 2562 FDCF  E90E        	DW	VPOKE		; E8
 2563 FDD1  E97E        	DW	LOCATE		; E9
 2564 FDD3  EAEC        	DW	KEYLIST		; EA
 2565 FDD5  EAE1        	DW	BKEY		; EB
 2566 FDD7  EAF8        	DW	SWITCH		; EC
 2567 FDD9  C348        	DW	SNER		; ED (Funktion PTEST)
 2568 FDDB  EBEE        	DW	CLOSE		; EE
 2569 FDDD  EC5A        	DW	OPEN		; EF
 2570 FDDF  EC4F        	DW	RANDOM		; F0
 2571 FDE1  C348        	DW	SNER		; F1 (Funktion VGET)
 2572 FDE3  EC8F        	DW	BLINE		; F2
 2573 FDE5  EC94        	DW	CIRCLE		; F3
 2574 FDE7  C348        	DW	SNER		; F4 (Funktion CSRLIN)
 2575 FDE9  ECBB        	DW	BDEV		; F5 Speichergeraet einstellen
 2576 FDEB  ECFE        	DW	FILES		; F6 Verzeichnis anzeigen
 2577 FDED  ED19        	DW	CHDIR		; F7 Verzeichnis wechseln
 2578 FDEF              TOKJPE:				; F8-FF noch frei
 2579                   
 2580                   	ABSFILL	0FDF8h,<ROM-F-Ende>
    7 FDEF  FF FF FF FF 	  DS	0FDF8h - $,0FFh
 2581                   
 2582                   ; Adresse FDF8h fest - wird von anderen Programmen (z.B. TEMO) mit genutzt!
 2583                   
 2584 FDF8  80 40 20 10 BITTAB:	DB	80H,40H,20H,10H,8,4,2,1
  249 FE00              SMALL:
  250         0000      if duenn
  252                   else
  253                   	INCLUDE	ZSKLEIN.INC	; Zeichensatz Kleinbuchstaben Standard
    1                   ;*****************************************
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 187
ZSKLEIN INC

    2                   ;**	CAOS 4.8 Zeichensatz Klein	**
    3                   ;**					**
    4                   ;**	Adresse:  FE00h bis FFFFh	**
    5                   ;**	Codes 00h-1Fh und 60h-7Fh	**
    6                   ;**					**
    7                   ;**	letzte Aenderung: 28.05.2021	**
    8                   ;*****************************************
    9                   
   10 FE00  00 00 00 00 	DB	000H, 000H, 000H, 000H, 000H, 000H, 082H, 0FEH	; 00H Dummy
   11 FE08  00 00 22 72 	DB	000H, 000H, 022H, 072H, 022H, 03EH, 000H, 000H	; 01H Backspace
   12 FE10  00 32 62 FE 	DB	000H, 032H, 062H, 0FEH, 062H, 032H, 000H, 000H	; 02H Zeile loeschen
   13 FE18  7E 81 B9 A5 	DB	07EH, 081H, 0B9H, 0A5H, 0B9H, 0A5H, 0B9H, 081H	; 03H Break
   14 FE20  55 FF 55 FF 	DB	055H, 0FFH, 055H, 0FFH, 055H, 0FFH, 055H, 0FFH	; 04H
   15 FE28  AA AA AA AA 	DB	0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH, 0AAH	; 05H
   16 FE30  FF 00 FF 00 	DB	0FFH, 000H, 0FFH, 000H, 0FFH, 000H, 0FFH, 000H	; 06H
   17 FE38  00 00 3C 42 	DB	000H, 000H, 03CH, 042H, 042H, 07EH, 000H, 000H	; 07H Beep
   18 FE40  00 30 60 FE 	DB	000H, 030H, 060H, 0FEH, 060H, 030H, 000H, 000H	; 08H Cursor links
   19 FE48  00 18 0C FE 	DB	000H, 018H, 00CH, 0FEH, 00CH, 018H, 000H, 000H	; 09H Cursor rechts
   20 FE50  10 10 10 54 	DB	010H, 010H, 010H, 054H, 07CH, 038H, 010H, 000H	; 0AH Cursor unten
   21 FE58  10 38 7C 54 	DB	010H, 038H, 07CH, 054H, 010H, 010H, 010H, 000H	; 0BH Cursor oben
   22 FE60  70 60 50 10 	DB	070H, 060H, 050H, 010H, 010H, 010H, 07CH, 000H	; 0CH Bildschirm loeschen
   23 FE68  00 02 1A 32 	DB	000H, 002H, 01AH, 032H, 07EH, 030H, 018H, 000H	; 0DH Enter
   24 FE70  AA 55 AA 55 	DB	0AAH, 055H, 0AAH, 055H, 0AAH, 055H, 0AAH, 055H	; 0EH
   25 FE78  3E 7C 7C 3E 	DB	03EH, 07CH, 07CH, 03EH, 03EH, 07CH, 0F8H, 0F8H	; 0FH Hardcopy
   26                   
   27 FE80  38 30 28 04 	DB	038H, 030H, 028H, 004H, 004H, 004H, 004H, 000H	; 10H Cursor Home
   28 FE88  FE 10 38 7C 	DB	0FEH, 010H, 038H, 07CH, 054H, 010H, 010H, 000H	; 11H Page-Modus
   29 FE90  10 10 54 7C 	DB	010H, 010H, 054H, 07CH, 038H, 010H, 0FEH, 000H	; 12H Scroll-Modus
   30 FE98  7E 81 9D A1 	DB	07EH, 081H, 09DH, 0A1H, 099H, 085H, 0B9H, 081H	; 13H Stop
   31 FEA0  00 3C 42 5A 	DB	000H, 03CH, 042H, 05AH, 05AH, 042H, 03CH, 000H	; 14H Tastenclick
   32 FEA8  88 44 22 11 	DB	088H, 044H, 022H, 011H, 088H, 044H, 022H, 011H	; 15H
   33 FEB0  00 FE 44 E4 	DB	000H, 0FEH, 044H, 0E4H, 04EH, 044H, 0FEH, 000H	; 16H Shift-Lock
   34 FEB8  11 22 44 88 	DB	011H, 022H, 044H, 088H, 011H, 022H, 044H, 088H	; 17H
   35 FEC0  02 32 1A FE 	DB	002H, 032H, 01AH, 0FEH, 01AH, 032H, 002H, 000H	; 18H Cursor an Zeilenende
   36 FEC8  80 98 B0 FE 	DB	080H, 098H, 0B0H, 0FEH, 0B0H, 098H, 080H, 000H	; 19H Cursor an Zeilenanfang
   37 FED0  00 08 7C 06 	DB	000H, 008H, 07CH, 006H, 07CH, 008H, 000H, 000H	; 1AH INS
   38 FED8  CC CC 33 33 	DB	0CCH, 0CCH, 033H, 033H, 0CCH, 0CCH, 033H, 033H	; 1BH ESC
   39 FEE0  7E 81 A1 A1 	DB	07EH, 081H, 0A1H, 0A1H, 0A1H, 0A1H, 0BDH, 081H	; 1CH List
   40 FEE8  7E 81 B9 A5 	DB	07EH, 081H, 0B9H, 0A5H, 0B9H, 0A5H, 0A5H, 081H	; 1DH Run
   41 FEF0  7E 81 99 A5 	DB	07EH, 081H, 099H, 0A5H, 0A1H, 0A5H, 099H, 081H	; 1EH Cont
   42 FEF8  00 10 3E 60 	DB	000H, 010H, 03EH, 060H, 03EH, 010H, 000H, 000H	; 1FH DEL
   43                   
   44 FF00  3C 42 99 A1 	DB	03CH, 042H, 099H, 0A1H, 0A1H, 099H, 042H, 03CH	; 60H (c)
   45 FF08  00 00 78 0C 	DB	000H, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 61H a
   46 FF10  E0 60 7C 66 	DB	0E0H, 060H, 07CH, 066H, 066H, 066H, 0DCH, 000H	; 62H b
   47 FF18  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0C0H, 0CCH, 078H, 000H	; 63H c
   48 FF20  1C 0C 7C CC 	DB	01CH, 00CH, 07CH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 64H d
   49 FF28  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0FCH, 0C0H, 078H, 000H	; 65H e
   50 FF30  38 6C 60 F0 	DB	038H, 06CH, 060H, 0F0H, 060H, 060H, 0F0H, 000H	; 66H f
   51 FF38  00 00 76 CC 	DB	000H, 000H, 076H, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 67H g
   52 FF40  E0 60 6C 76 	DB	0E0H, 060H, 06CH, 076H, 066H, 066H, 0E6H, 000H	; 68H h
   53 FF48  30 00 70 30 	DB	030H, 000H, 070H, 030H, 030H, 030H, 0FCH, 000H	; 69H i
   54 FF50  0C 00 1C 0C 	DB	00CH, 000H, 01CH, 00CH, 00CH, 0CCH, 0CCH, 078H	; 6AH j
   55 FF58  E0 60 66 6C 	DB	0E0H, 060H, 066H, 06CH, 078H, 06CH, 0E6H, 000H	; 6BH k
   56 FF60  70 30 30 30 	DB	070H, 030H, 030H, 030H, 030H, 030H, 0FCH, 000H	; 6CH l
   57 FF68  00 00 CC FE 	DB	000H, 000H, 0CCH, 0FEH, 0FEH, 0D6H, 0C6H, 000H	; 6DH m
   58 FF70  00 00 F8 CC 	DB	000H, 000H, 0F8H, 0CCH, 0CCH, 0CCH, 0CCH, 000H	; 6EH n
   59 FF78  00 00 78 CC 	DB	000H, 000H, 078H, 0CCH, 0CCH, 0CCH, 078H, 000H	; 6FH o
SLR180 SuperFast Relocating Macro Assembler     			    SLR180 1.31 Page 188
ZSKLEIN INC

   60                   
   61 FF80  00 00 DC 66 	DB	000H, 000H, 0DCH, 066H, 066H, 07CH, 060H, 0F0H	; 70H p
   62 FF88  00 00 76 CC 	DB	000H, 000H, 076H, 0CCH, 0CCH, 07CH, 00CH, 01EH	; 71H q
   63 FF90  00 00 DC 76 	DB	000H, 000H, 0DCH, 076H, 066H, 060H, 0F0H, 000H	; 72H r
   64 FF98  00 00 7C C0 	DB	000H, 000H, 07CH, 0C0H, 078H, 00CH, 0F8H, 000H	; 73H s
   65 FFA0  10 30 7C 30 	DB	010H, 030H, 07CH, 030H, 030H, 034H, 018H, 000H	; 74H t
   66 FFA8  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 75H u
   67 FFB0  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 078H, 030H, 000H	; 76H v
   68 FFB8  00 00 C6 D6 	DB	000H, 000H, 0C6H, 0D6H, 0FEH, 0FEH, 06CH, 000H	; 77H w
   69 FFC0  00 00 C6 6C 	DB	000H, 000H, 0C6H, 06CH, 038H, 06CH, 0C6H, 000H	; 78H x
   70 FFC8  00 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 07CH, 00CH, 0F8H	; 79H y
   71 FFD0  00 00 FC 98 	DB	000H, 000H, 0FCH, 098H, 030H, 064H, 0FCH, 000H	; 7AH z
   72 FFD8  6C 00 78 0C 	DB	06CH, 000H, 078H, 00CH, 07CH, 0CCH, 076H, 000H	; 7BH ae
   73 FFE0  CC 00 78 CC 	DB	0CCH, 000H, 078H, 0CCH, 0CCH, 0CCH, 078H, 000H	; 7CH oe
   74 FFE8  CC 00 CC CC 	DB	0CCH, 000H, 0CCH, 0CCH, 0CCH, 0CCH, 076H, 000H	; 7DH ue
   75 FFF0  3C 66 66 6C 	DB	03CH, 066H, 066H, 06CH, 066H, 066H, 06CH, 0F0H	; 7EH sz
   76 FFF8  FF 81 81 81 	DB	0FFH, 081H, 081H, 081H, 081H, 081H, 081H, 0FFH	; 7FH
  254                   endif
  255                   	.DEPHASE
  256                   
    2                   	END
 0 Error(s) Detected.
 16512 Absolute Bytes. 1303 Symbols Detected.
0 00 CC CC 	DB	000H, 000H, 0CCH, 0CCH, 0CCH, 078H, 030H, 000H	; 76H v
   68 FFB8  00 00 C6 